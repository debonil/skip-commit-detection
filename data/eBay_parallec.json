[
    {
        "sha": "1b4f1628f34fedfb06b24c33a5372d64d3df0952",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6MWI0ZjE2MjhmMzRmZWRmYjA2YjI0YzMzYTUzNzJkNjRkM2RmMDk1Mg==",
        "commit": {
            "author": {
                "name": "FanYang",
                "email": "yangfan@belync.com",
                "date": "2018-01-14T05:54:27Z"
            },
            "committer": {
                "name": "Yuanteng (Jeff) Pei",
                "email": "jpei@linkedin.com",
                "date": "2018-01-14T20:37:00Z"
            },
            "message": "Support adding encoding for the HTTP Post data",
            "tree": {
                "sha": "c0e930f80e6806c4f004678a0720a403b0c17e52",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/c0e930f80e6806c4f004678a0720a403b0c17e52"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/1b4f1628f34fedfb06b24c33a5372d64d3df0952",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/1b4f1628f34fedfb06b24c33a5372d64d3df0952",
        "html_url": "https://github.com/eBay/parallec/commit/1b4f1628f34fedfb06b24c33a5372d64d3df0952",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/1b4f1628f34fedfb06b24c33a5372d64d3df0952/comments",
        "author": null,
        "committer": {
            "login": "jeffpeiyt",
            "id": 2048895,
            "node_id": "MDQ6VXNlcjIwNDg4OTU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2048895?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jeffpeiyt",
            "html_url": "https://github.com/jeffpeiyt",
            "followers_url": "https://api.github.com/users/jeffpeiyt/followers",
            "following_url": "https://api.github.com/users/jeffpeiyt/following{/other_user}",
            "gists_url": "https://api.github.com/users/jeffpeiyt/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jeffpeiyt/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jeffpeiyt/subscriptions",
            "organizations_url": "https://api.github.com/users/jeffpeiyt/orgs",
            "repos_url": "https://api.github.com/users/jeffpeiyt/repos",
            "events_url": "https://api.github.com/users/jeffpeiyt/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jeffpeiyt/received_events",
            "type": "User",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "ec7df7d73da7efdb3306cf7d7117f7388c4812dc",
                "url": "https://api.github.com/repos/eBay/parallec/commits/ec7df7d73da7efdb3306cf7d7117f7388c4812dc",
                "html_url": "https://github.com/eBay/parallec/commit/ec7df7d73da7efdb3306cf7d7117f7388c4812dc"
            }
        ],
        "stats": {
            "total": 7,
            "additions": 7,
            "deletions": 0
        },
        "files": [
            {
                "sha": "0fb7a2fbe342be5d1e57ce830a91d6145c9bec71",
                "filename": "src/main/java/io/parallec/core/actor/HttpWorker.java",
                "status": "modified",
                "additions": 7,
                "deletions": 0,
                "changes": 7,
                "blob_url": "https://github.com/eBay/parallec/blob/1b4f1628f34fedfb06b24c33a5372d64d3df0952/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FHttpWorker.java",
                "raw_url": "https://github.com/eBay/parallec/raw/1b4f1628f34fedfb06b24c33a5372d64d3df0952/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FHttpWorker.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FHttpWorker.java?ref=1b4f1628f34fedfb06b24c33a5372d64d3df0952",
                "patch": "@@ -179,6 +179,13 @@ public BoundRequestBuilder createRequest()\n             PcHttpUtils.addHeaders(builder, this.httpHeaderMap);\n             if (!Strings.isNullOrEmpty(postData)) {\n                 builder.setBody(postData);\n+                String charset = \"\";\n+                if (null!=this.httpHeaderMap) {\n+                    charset = this.httpHeaderMap.get(\"charset\");\n+                }\n+                if(!Strings.isNullOrEmpty(charset)) {\n+                    builder.setBodyEncoding(charset);\n+                }\n             }\n \n         } catch (Exception t) {"
            }
        ]
    },
    {
        "sha": "ec7df7d73da7efdb3306cf7d7117f7388c4812dc",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6ZWM3ZGY3ZDczZGE3ZWZkYjMzMDZjZjdkNzExN2Y3Mzg4YzQ4MTJkYw==",
        "commit": {
            "author": {
                "name": "kwangin",
                "email": "inylove82@gmail.com",
                "date": "2017-10-07T08:14:56Z"
            },
            "committer": {
                "name": "Yuanteng (Jeff) Pei",
                "email": "jpei@linkedin.com",
                "date": "2017-10-16T00:29:57Z"
            },
            "message": "Update gitignore for IntelliJ",
            "tree": {
                "sha": "f36b6952123e27d1c138bd991d8af0d60d9b89eb",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/f36b6952123e27d1c138bd991d8af0d60d9b89eb"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/ec7df7d73da7efdb3306cf7d7117f7388c4812dc",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/ec7df7d73da7efdb3306cf7d7117f7388c4812dc",
        "html_url": "https://github.com/eBay/parallec/commit/ec7df7d73da7efdb3306cf7d7117f7388c4812dc",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/ec7df7d73da7efdb3306cf7d7117f7388c4812dc/comments",
        "author": {
            "login": "kination",
            "id": 1720209,
            "node_id": "MDQ6VXNlcjE3MjAyMDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1720209?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kination",
            "html_url": "https://github.com/kination",
            "followers_url": "https://api.github.com/users/kination/followers",
            "following_url": "https://api.github.com/users/kination/following{/other_user}",
            "gists_url": "https://api.github.com/users/kination/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kination/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kination/subscriptions",
            "organizations_url": "https://api.github.com/users/kination/orgs",
            "repos_url": "https://api.github.com/users/kination/repos",
            "events_url": "https://api.github.com/users/kination/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kination/received_events",
            "type": "User",
            "site_admin": false
        },
        "committer": {
            "login": "jeffpeiyt",
            "id": 2048895,
            "node_id": "MDQ6VXNlcjIwNDg4OTU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2048895?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jeffpeiyt",
            "html_url": "https://github.com/jeffpeiyt",
            "followers_url": "https://api.github.com/users/jeffpeiyt/followers",
            "following_url": "https://api.github.com/users/jeffpeiyt/following{/other_user}",
            "gists_url": "https://api.github.com/users/jeffpeiyt/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jeffpeiyt/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jeffpeiyt/subscriptions",
            "organizations_url": "https://api.github.com/users/jeffpeiyt/orgs",
            "repos_url": "https://api.github.com/users/jeffpeiyt/repos",
            "events_url": "https://api.github.com/users/jeffpeiyt/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jeffpeiyt/received_events",
            "type": "User",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "19d97a127c96b1f5be8668d934784e6084a1d7ea",
                "url": "https://api.github.com/repos/eBay/parallec/commits/19d97a127c96b1f5be8668d934784e6084a1d7ea",
                "html_url": "https://github.com/eBay/parallec/commit/19d97a127c96b1f5be8668d934784e6084a1d7ea"
            }
        ],
        "stats": {
            "total": 3,
            "additions": 3,
            "deletions": 0
        },
        "files": [
            {
                "sha": "7545791cc95a1470eed07e894356a6df705bef6e",
                "filename": ".gitignore",
                "status": "modified",
                "additions": 3,
                "deletions": 0,
                "changes": 3,
                "blob_url": "https://github.com/eBay/parallec/blob/ec7df7d73da7efdb3306cf7d7117f7388c4812dc/.gitignore",
                "raw_url": "https://github.com/eBay/parallec/raw/ec7df7d73da7efdb3306cf7d7117f7388c4812dc/.gitignore",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/.gitignore?ref=ec7df7d73da7efdb3306cf7d7117f7388c4812dc",
                "patch": "@@ -37,6 +37,9 @@ userdata/tasklogs/*\n #mkdown\n .*.md.html\n \n+#IDE\n+/.idea/\n+\n /.settings/\n .classpath\n .project"
            }
        ]
    },
    {
        "sha": "19d97a127c96b1f5be8668d934784e6084a1d7ea",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6MTlkOTdhMTI3Yzk2YjFmNWJlODY2OGQ5MzQ3ODRlNjA4NGExZDdlYQ==",
        "commit": {
            "author": {
                "name": "kwangin",
                "email": "inylove82@gmail.com",
                "date": "2017-10-07T08:14:40Z"
            },
            "committer": {
                "name": "Yuanteng (Jeff) Pei",
                "email": "jpei@linkedin.com",
                "date": "2017-10-16T00:29:57Z"
            },
            "message": "Update import info in README example",
            "tree": {
                "sha": "4a709e235ab08fac8e49053442b85c312c4911db",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/4a709e235ab08fac8e49053442b85c312c4911db"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/19d97a127c96b1f5be8668d934784e6084a1d7ea",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/19d97a127c96b1f5be8668d934784e6084a1d7ea",
        "html_url": "https://github.com/eBay/parallec/commit/19d97a127c96b1f5be8668d934784e6084a1d7ea",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/19d97a127c96b1f5be8668d934784e6084a1d7ea/comments",
        "author": {
            "login": "kination",
            "id": 1720209,
            "node_id": "MDQ6VXNlcjE3MjAyMDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1720209?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kination",
            "html_url": "https://github.com/kination",
            "followers_url": "https://api.github.com/users/kination/followers",
            "following_url": "https://api.github.com/users/kination/following{/other_user}",
            "gists_url": "https://api.github.com/users/kination/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kination/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kination/subscriptions",
            "organizations_url": "https://api.github.com/users/kination/orgs",
            "repos_url": "https://api.github.com/users/kination/repos",
            "events_url": "https://api.github.com/users/kination/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kination/received_events",
            "type": "User",
            "site_admin": false
        },
        "committer": {
            "login": "jeffpeiyt",
            "id": 2048895,
            "node_id": "MDQ6VXNlcjIwNDg4OTU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2048895?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jeffpeiyt",
            "html_url": "https://github.com/jeffpeiyt",
            "followers_url": "https://api.github.com/users/jeffpeiyt/followers",
            "following_url": "https://api.github.com/users/jeffpeiyt/following{/other_user}",
            "gists_url": "https://api.github.com/users/jeffpeiyt/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jeffpeiyt/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jeffpeiyt/subscriptions",
            "organizations_url": "https://api.github.com/users/jeffpeiyt/orgs",
            "repos_url": "https://api.github.com/users/jeffpeiyt/repos",
            "events_url": "https://api.github.com/users/jeffpeiyt/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jeffpeiyt/received_events",
            "type": "User",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "70b6b2d247c712b8adc876b63522eb6ad4cdf07e",
                "url": "https://api.github.com/repos/eBay/parallec/commits/70b6b2d247c712b8adc876b63522eb6ad4cdf07e",
                "html_url": "https://github.com/eBay/parallec/commit/70b6b2d247c712b8adc876b63522eb6ad4cdf07e"
            }
        ],
        "stats": {
            "total": 5,
            "additions": 5,
            "deletions": 0
        },
        "files": [
            {
                "sha": "b4f73b0b2890f7686639d937c05e8a4967adb2b9",
                "filename": "README.md",
                "status": "modified",
                "additions": 5,
                "deletions": 0,
                "changes": 5,
                "blob_url": "https://github.com/eBay/parallec/blob/19d97a127c96b1f5be8668d934784e6084a1d7ea/README.md",
                "raw_url": "https://github.com/eBay/parallec/raw/19d97a127c96b1f5be8668d934784e6084a1d7ea/README.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/README.md?ref=19d97a127c96b1f5be8668d934784e6084a1d7ea",
                "patch": "@@ -76,6 +76,10 @@ pc.prepareHttpGet(\"\").setTargetHostsFromString(\"www.google.com www.ebay.com www.\n Now that you have learned the basics, check out how easy to pass an elastic search client using the convenient **response context** to aggregate data anywhere you like. You can also pass a hash map to the `responseContext`, save the processed results to the map during `onCompleted`, and use the map outside for further work. \n \n ```java\n+...\n+import org.elasticsearch.client.Client;\n+import static org.elasticsearch.node.NodeBuilder.*;\n+\n ParallelClient pc = new ParallelClient();\n org.elasticsearch.node.Node node = nodeBuilder().node(); //elastic client initialize\n HashMap<String, Object> responseContext = new HashMap<String, Object>();\n@@ -213,6 +217,7 @@ We conducted remote task execution API on 3,000 servers with response aggregated\n With another faster API, calls to 8,000 servers in the same datacenter with response aggregated in memory in 12 seconds. \n \n ##### Ping\n+\n Parallec 2.2 seconds vs FPing 4.5 seconds on 1500 servers. Parallec is 2x the speed of [FPing](http://fping.org/) (after best-effort tuning : -i 1 -r 0 v3.12)  of pinging 1500 servers while getting the same ping results.  Parallec pings 8000 servers within 11.1 seconds with breeze.\n \n As usual, don't rely on these numbers and perform your own benchmarks."
            }
        ]
    },
    {
        "sha": "70b6b2d247c712b8adc876b63522eb6ad4cdf07e",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6NzBiNmIyZDI0N2M3MTJiOGFkYzg3NmI2MzUyMmViNmFkNGNkZjA3ZQ==",
        "commit": {
            "author": {
                "name": "Jeff Pei",
                "email": "jpei@linkedin.com",
                "date": "2017-10-16T00:21:23Z"
            },
            "committer": {
                "name": "Jeff Pei",
                "email": "jpei@linkedin.com",
                "date": "2017-10-16T00:21:23Z"
            },
            "message": "fix none unicode content type parsing and test",
            "tree": {
                "sha": "7c14151811ed124c2b2f327ea511b8b2ebfbd204",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/7c14151811ed124c2b2f327ea511b8b2ebfbd204"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/70b6b2d247c712b8adc876b63522eb6ad4cdf07e",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/70b6b2d247c712b8adc876b63522eb6ad4cdf07e",
        "html_url": "https://github.com/eBay/parallec/commit/70b6b2d247c712b8adc876b63522eb6ad4cdf07e",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/70b6b2d247c712b8adc876b63522eb6ad4cdf07e/comments",
        "author": {
            "login": "jeffpeiyt",
            "id": 2048895,
            "node_id": "MDQ6VXNlcjIwNDg4OTU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2048895?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jeffpeiyt",
            "html_url": "https://github.com/jeffpeiyt",
            "followers_url": "https://api.github.com/users/jeffpeiyt/followers",
            "following_url": "https://api.github.com/users/jeffpeiyt/following{/other_user}",
            "gists_url": "https://api.github.com/users/jeffpeiyt/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jeffpeiyt/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jeffpeiyt/subscriptions",
            "organizations_url": "https://api.github.com/users/jeffpeiyt/orgs",
            "repos_url": "https://api.github.com/users/jeffpeiyt/repos",
            "events_url": "https://api.github.com/users/jeffpeiyt/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jeffpeiyt/received_events",
            "type": "User",
            "site_admin": false
        },
        "committer": {
            "login": "jeffpeiyt",
            "id": 2048895,
            "node_id": "MDQ6VXNlcjIwNDg4OTU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2048895?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jeffpeiyt",
            "html_url": "https://github.com/jeffpeiyt",
            "followers_url": "https://api.github.com/users/jeffpeiyt/followers",
            "following_url": "https://api.github.com/users/jeffpeiyt/following{/other_user}",
            "gists_url": "https://api.github.com/users/jeffpeiyt/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jeffpeiyt/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jeffpeiyt/subscriptions",
            "organizations_url": "https://api.github.com/users/jeffpeiyt/orgs",
            "repos_url": "https://api.github.com/users/jeffpeiyt/repos",
            "events_url": "https://api.github.com/users/jeffpeiyt/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jeffpeiyt/received_events",
            "type": "User",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "9d1880d8155698d2141e5961d17a34ba11d3cd1c",
                "url": "https://api.github.com/repos/eBay/parallec/commits/9d1880d8155698d2141e5961d17a34ba11d3cd1c",
                "html_url": "https://github.com/eBay/parallec/commit/9d1880d8155698d2141e5961d17a34ba11d3cd1c"
            }
        ],
        "stats": {
            "total": 36,
            "additions": 24,
            "deletions": 12
        },
        "files": [
            {
                "sha": "5d05f5327deecf7cdd6898ca6c6361b5b385d804",
                "filename": "src/main/java/io/parallec/core/actor/HttpWorker.java",
                "status": "modified",
                "additions": 7,
                "deletions": 1,
                "changes": 8,
                "blob_url": "https://github.com/eBay/parallec/blob/70b6b2d247c712b8adc876b63522eb6ad4cdf07e/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FHttpWorker.java",
                "raw_url": "https://github.com/eBay/parallec/raw/70b6b2d247c712b8adc876b63522eb6ad4cdf07e/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FHttpWorker.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FHttpWorker.java?ref=70b6b2d247c712b8adc876b63522eb6ad4cdf07e",
                "patch": "@@ -368,6 +368,7 @@ public ResponseOnSingeRequest onComplete(Response response) {\n \n         cancelCancellable();\n         try {\n+            \n             Map<String, List<String>> responseHeaders = null;\n             if (responseHeaderMeta != null) {\n                 responseHeaders = new LinkedHashMap<String, List<String>>();\n@@ -388,9 +389,14 @@ public ResponseOnSingeRequest onComplete(Response response) {\n \n             int statusCodeInt = response.getStatusCode();\n             String statusCode = statusCodeInt + \" \" + response.getStatusText();\n-            String charset = ParallecGlobalConfig.httpResponseBodyCharsetUsesResponseContentType ? \n+            String charset = ParallecGlobalConfig.httpResponseBodyCharsetUsesResponseContentType &&\n+                    response.getContentType()!=null ? \n                     AsyncHttpProviderUtils.parseCharset(response.getContentType())\n                     : ParallecGlobalConfig.httpResponseBodyDefaultCharset;\n+            if(charset == null){\n+                getLogger().error(\"charset is not provided from response content type. Use default\");\n+                charset = ParallecGlobalConfig.httpResponseBodyDefaultCharset; \n+            }\n             reply(response.getResponseBody(charset), false, null, null, statusCode,\n                     statusCodeInt, responseHeaders);\n         } catch (IOException e) {"
            },
            {
                "sha": "ea742f3604bb23e45a79c94b1cfcaf64e01125e1",
                "filename": "src/test/java/io/parallec/core/main/http/ParallelClientHttpBasicMoreOptionsTest.java",
                "status": "modified",
                "additions": 17,
                "deletions": 11,
                "changes": 28,
                "blob_url": "https://github.com/eBay/parallec/blob/70b6b2d247c712b8adc876b63522eb6ad4cdf07e/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2FParallelClientHttpBasicMoreOptionsTest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/70b6b2d247c712b8adc876b63522eb6ad4cdf07e/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2FParallelClientHttpBasicMoreOptionsTest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2FParallelClientHttpBasicMoreOptionsTest.java?ref=70b6b2d247c712b8adc876b63522eb6ad4cdf07e",
                "patch": "@@ -16,6 +16,7 @@\n import io.parallec.core.ParallecResponseHandler;\n import io.parallec.core.ParallelClient;\n import io.parallec.core.ParallelTask;\n+import io.parallec.core.RequestProtocol;\n import io.parallec.core.ResponseOnSingleTask;\n import io.parallec.core.TestBase;\n import io.parallec.core.config.ParallecGlobalConfig;\n@@ -119,17 +120,22 @@ public void onCompleted(ResponseOnSingleTask res, Map<String, Object> responseCo\n     public void hitNoneUnicodeWebsite() {\n         ParallecGlobalConfig.httpResponseBodyCharsetUsesResponseContentType = true;\n         Map<String, Object> responseContext = new HashMap<String, Object>();\n-        pc.prepareHttpGet(\"\").setResponseContext(responseContext).setTargetHostsFromString(\"www.rakuten.co.jp\")\n-                .setSaveResponseToTask(true).setAutoSaveLogToLocal(true).setEnableCapacityAwareTaskScheduler(true)\n-                .execute(new ParallecResponseHandler() {\n-\n-                    @Override\n-                    public void onCompleted(ResponseOnSingleTask res, Map<String, Object> responseContext) {\n-                        responseContext.put(\"content\", res.getResponseContent());\n-                        logger.info(res.getResponseContent());\n-                    }\n-                });\n-\n+        pc.prepareHttpGet(\"/\")\n+        .setResponseContext(responseContext)\n+        .setProtocol(RequestProtocol.HTTPS)\n+        .setHttpPort(443)\n+        .setTargetHostsFromString(\"www.rakuten.co.jp\")\n+        .setSaveResponseToTask(true)\n+        .setAutoSaveLogToLocal(true)\n+        .setEnableCapacityAwareTaskScheduler(true)\n+        .execute(new ParallecResponseHandler() {\n+            @Override\n+            public void onCompleted(ResponseOnSingleTask res, Map<String, Object> responseContext) {\n+                responseContext.put(\"content\", res.getResponseContent());\n+                logger.info(\"resultTest:getStatusCode \" + res.getStatusCode());\n+            }\n+        });\n+        System.out.println(responseContext.get(\"content\"));\n         Asserts.check(responseContext.get(\"content\").toString().contains(\"楽天\"),\n                 \" Fail to get response from none unicode sites\");\n         ParallecGlobalConfig.httpResponseBodyCharsetUsesResponseContentType = false;"
            }
        ]
    },
    {
        "sha": "9d1880d8155698d2141e5961d17a34ba11d3cd1c",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6OWQxODgwZDgxNTU2OThkMjE0MWU1OTYxZDE3YTM0YmExMWQzY2QxYw==",
        "commit": {
            "author": {
                "name": "Jeff Pei",
                "email": "jpei@linkedin.com",
                "date": "2017-10-15T19:14:30Z"
            },
            "committer": {
                "name": "Jeff Pei",
                "email": "jpei@linkedin.com",
                "date": "2017-10-15T19:14:30Z"
            },
            "message": "update travis ci config",
            "tree": {
                "sha": "329236a8a8b8bf6baa25f51a2a58e306b341ff55",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/329236a8a8b8bf6baa25f51a2a58e306b341ff55"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/9d1880d8155698d2141e5961d17a34ba11d3cd1c",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/9d1880d8155698d2141e5961d17a34ba11d3cd1c",
        "html_url": "https://github.com/eBay/parallec/commit/9d1880d8155698d2141e5961d17a34ba11d3cd1c",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/9d1880d8155698d2141e5961d17a34ba11d3cd1c/comments",
        "author": {
            "login": "jeffpeiyt",
            "id": 2048895,
            "node_id": "MDQ6VXNlcjIwNDg4OTU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2048895?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jeffpeiyt",
            "html_url": "https://github.com/jeffpeiyt",
            "followers_url": "https://api.github.com/users/jeffpeiyt/followers",
            "following_url": "https://api.github.com/users/jeffpeiyt/following{/other_user}",
            "gists_url": "https://api.github.com/users/jeffpeiyt/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jeffpeiyt/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jeffpeiyt/subscriptions",
            "organizations_url": "https://api.github.com/users/jeffpeiyt/orgs",
            "repos_url": "https://api.github.com/users/jeffpeiyt/repos",
            "events_url": "https://api.github.com/users/jeffpeiyt/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jeffpeiyt/received_events",
            "type": "User",
            "site_admin": false
        },
        "committer": {
            "login": "jeffpeiyt",
            "id": 2048895,
            "node_id": "MDQ6VXNlcjIwNDg4OTU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2048895?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jeffpeiyt",
            "html_url": "https://github.com/jeffpeiyt",
            "followers_url": "https://api.github.com/users/jeffpeiyt/followers",
            "following_url": "https://api.github.com/users/jeffpeiyt/following{/other_user}",
            "gists_url": "https://api.github.com/users/jeffpeiyt/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jeffpeiyt/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jeffpeiyt/subscriptions",
            "organizations_url": "https://api.github.com/users/jeffpeiyt/orgs",
            "repos_url": "https://api.github.com/users/jeffpeiyt/repos",
            "events_url": "https://api.github.com/users/jeffpeiyt/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jeffpeiyt/received_events",
            "type": "User",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "85052a3e46c7492d854b79d29b90e256c6a6d728",
                "url": "https://api.github.com/repos/eBay/parallec/commits/85052a3e46c7492d854b79d29b90e256c6a6d728",
                "html_url": "https://github.com/eBay/parallec/commit/85052a3e46c7492d854b79d29b90e256c6a6d728"
            }
        ],
        "stats": {
            "total": 2,
            "additions": 1,
            "deletions": 1
        },
        "files": [
            {
                "sha": "e5131b34bbc9fe793e51cab945fa66bc90e2e05b",
                "filename": ".travis.yml",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/9d1880d8155698d2141e5961d17a34ba11d3cd1c/.travis.yml",
                "raw_url": "https://github.com/eBay/parallec/raw/9d1880d8155698d2141e5961d17a34ba11d3cd1c/.travis.yml",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/.travis.yml?ref=9d1880d8155698d2141e5961d17a34ba11d3cd1c",
                "patch": "@@ -1,7 +1,7 @@\n language: java\n sudo: true\n jdk:\n-  - oraclejdk7\n+  - openjdk7\n \n before_install:\n   - sudo apt-get install iputils-ping"
            }
        ]
    },
    {
        "sha": "85052a3e46c7492d854b79d29b90e256c6a6d728",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6ODUwNTJhM2U0NmM3NDkyZDg1NGI3OWQyOWI5MGUyNTZjNmE2ZDcyOA==",
        "commit": {
            "author": {
                "name": "kwangin",
                "email": "inylove82@gmail.com",
                "date": "2017-07-09T06:31:43Z"
            },
            "committer": {
                "name": "Yuanteng (Jeff) Pei",
                "email": "jpei@linkedin.com",
                "date": "2017-07-09T22:09:08Z"
            },
            "message": "Update initiation\n- Remove getInstance because no parameter is receiving return value from this\n- Wrap duplicated part",
            "tree": {
                "sha": "e7861cdf173255a65eca98c12416628a60609eae",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/e7861cdf173255a65eca98c12416628a60609eae"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/85052a3e46c7492d854b79d29b90e256c6a6d728",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/85052a3e46c7492d854b79d29b90e256c6a6d728",
        "html_url": "https://github.com/eBay/parallec/commit/85052a3e46c7492d854b79d29b90e256c6a6d728",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/85052a3e46c7492d854b79d29b90e256c6a6d728/comments",
        "author": {
            "login": "kination",
            "id": 1720209,
            "node_id": "MDQ6VXNlcjE3MjAyMDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1720209?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kination",
            "html_url": "https://github.com/kination",
            "followers_url": "https://api.github.com/users/kination/followers",
            "following_url": "https://api.github.com/users/kination/following{/other_user}",
            "gists_url": "https://api.github.com/users/kination/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kination/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kination/subscriptions",
            "organizations_url": "https://api.github.com/users/kination/orgs",
            "repos_url": "https://api.github.com/users/kination/repos",
            "events_url": "https://api.github.com/users/kination/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kination/received_events",
            "type": "User",
            "site_admin": false
        },
        "committer": {
            "login": "jeffpeiyt",
            "id": 2048895,
            "node_id": "MDQ6VXNlcjIwNDg4OTU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2048895?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jeffpeiyt",
            "html_url": "https://github.com/jeffpeiyt",
            "followers_url": "https://api.github.com/users/jeffpeiyt/followers",
            "following_url": "https://api.github.com/users/jeffpeiyt/following{/other_user}",
            "gists_url": "https://api.github.com/users/jeffpeiyt/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jeffpeiyt/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jeffpeiyt/subscriptions",
            "organizations_url": "https://api.github.com/users/jeffpeiyt/orgs",
            "repos_url": "https://api.github.com/users/jeffpeiyt/repos",
            "events_url": "https://api.github.com/users/jeffpeiyt/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jeffpeiyt/received_events",
            "type": "User",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "5937b2c080acdfba14e1ddc3f009c99fa169260c",
                "url": "https://api.github.com/repos/eBay/parallec/commits/5937b2c080acdfba14e1ddc3f009c99fa169260c",
                "html_url": "https://github.com/eBay/parallec/commit/5937b2c080acdfba14e1ddc3f009c99fa169260c"
            }
        ],
        "stats": {
            "total": 5,
            "additions": 2,
            "deletions": 3
        },
        "files": [
            {
                "sha": "9a755bdf8257fbe2ba108c0e21337f24651f190f",
                "filename": "src/main/java/io/parallec/core/ParallelClient.java",
                "status": "modified",
                "additions": 2,
                "deletions": 3,
                "changes": 5,
                "blob_url": "https://github.com/eBay/parallec/blob/85052a3e46c7492d854b79d29b90e256c6a6d728/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FParallelClient.java",
                "raw_url": "https://github.com/eBay/parallec/raw/85052a3e46c7492d854b79d29b90e256c6a6d728/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FParallelClient.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FParallelClient.java?ref=85052a3e46c7492d854b79d29b90e256c6a6d728",
                "patch": "@@ -114,7 +114,6 @@ public void initialize() {\n             ActorConfig.createAndGetActorSystem();\n             httpClientStore.init();\n             tcpSshPingResourceStore.init();\n-            ParallelTaskManager.getInstance();\n             isClosed.set(false);\n             logger.info(\"Parallel Client Resources has been initialized.\");\n         } else {\n@@ -139,8 +138,8 @@ public void releaseExternalResources() {\n             ActorConfig.shutDownActorSystemForce();\n             httpClientStore.shutdown();\n             tcpSshPingResourceStore.shutdown();\n-            taskManager.cleanWaitTaskQueue();\n-            taskManager.cleanInprogressJobMap();\n+            cleanWaitTaskQueue();\n+            cleanInprogressJobMap();\n             isClosed.set(true);\n             logger.info(\"Have released all ParallelClient resources \"\n                     + \"(actor system + async+sync http client + task queue)\""
            }
        ]
    },
    {
        "sha": "5937b2c080acdfba14e1ddc3f009c99fa169260c",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6NTkzN2IyYzA4MGFjZGZiYTE0ZTFkZGMzZjAwOWM5OWZhMTY5MjYwYw==",
        "commit": {
            "author": {
                "name": "Yuanteng (Jeff) Pei",
                "email": "jpei@linkedin.com",
                "date": "2017-06-24T06:05:45Z"
            },
            "committer": {
                "name": "Yuanteng (Jeff) Pei",
                "email": "jpei@linkedin.com",
                "date": "2017-06-24T06:05:45Z"
            },
            "message": "release 0.10.6",
            "tree": {
                "sha": "aab5dcad6719acf763d3c3f0d7d48bd4b59c5b68",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/aab5dcad6719acf763d3c3f0d7d48bd4b59c5b68"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/5937b2c080acdfba14e1ddc3f009c99fa169260c",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/5937b2c080acdfba14e1ddc3f009c99fa169260c",
        "html_url": "https://github.com/eBay/parallec/commit/5937b2c080acdfba14e1ddc3f009c99fa169260c",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/5937b2c080acdfba14e1ddc3f009c99fa169260c/comments",
        "author": {
            "login": "jeffpeiyt",
            "id": 2048895,
            "node_id": "MDQ6VXNlcjIwNDg4OTU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2048895?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jeffpeiyt",
            "html_url": "https://github.com/jeffpeiyt",
            "followers_url": "https://api.github.com/users/jeffpeiyt/followers",
            "following_url": "https://api.github.com/users/jeffpeiyt/following{/other_user}",
            "gists_url": "https://api.github.com/users/jeffpeiyt/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jeffpeiyt/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jeffpeiyt/subscriptions",
            "organizations_url": "https://api.github.com/users/jeffpeiyt/orgs",
            "repos_url": "https://api.github.com/users/jeffpeiyt/repos",
            "events_url": "https://api.github.com/users/jeffpeiyt/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jeffpeiyt/received_events",
            "type": "User",
            "site_admin": false
        },
        "committer": {
            "login": "jeffpeiyt",
            "id": 2048895,
            "node_id": "MDQ6VXNlcjIwNDg4OTU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2048895?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jeffpeiyt",
            "html_url": "https://github.com/jeffpeiyt",
            "followers_url": "https://api.github.com/users/jeffpeiyt/followers",
            "following_url": "https://api.github.com/users/jeffpeiyt/following{/other_user}",
            "gists_url": "https://api.github.com/users/jeffpeiyt/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jeffpeiyt/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jeffpeiyt/subscriptions",
            "organizations_url": "https://api.github.com/users/jeffpeiyt/orgs",
            "repos_url": "https://api.github.com/users/jeffpeiyt/repos",
            "events_url": "https://api.github.com/users/jeffpeiyt/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jeffpeiyt/received_events",
            "type": "User",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "930fc4d897cd4cc414799af917b9dafb8ccaf70a",
                "url": "https://api.github.com/repos/eBay/parallec/commits/930fc4d897cd4cc414799af917b9dafb8ccaf70a",
                "html_url": "https://github.com/eBay/parallec/commit/930fc4d897cd4cc414799af917b9dafb8ccaf70a"
            }
        ],
        "stats": {
            "total": 9,
            "additions": 5,
            "deletions": 4
        },
        "files": [
            {
                "sha": "1abbd3ec7519232c0a5ec2a0137c3967fd000f61",
                "filename": "README.md",
                "status": "modified",
                "additions": 4,
                "deletions": 3,
                "changes": 7,
                "blob_url": "https://github.com/eBay/parallec/blob/5937b2c080acdfba14e1ddc3f009c99fa169260c/README.md",
                "raw_url": "https://github.com/eBay/parallec/raw/5937b2c080acdfba14e1ddc3f009c99fa169260c/README.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/README.md?ref=5937b2c080acdfba14e1ddc3f009c99fa169260c",
                "patch": "@@ -4,7 +4,7 @@\n ![build status](https://img.shields.io/badge/build-info=>-green.svg) [![Build Status](https://travis-ci.org/eBay/parallec.svg?branch=master)](https://travis-ci.org/eBay/parallec) [![Coverage Status](https://img.shields.io/codecov/c/github/eBay/parallec.svg)](https://codecov.io/github/eBay/parallec) [![Apache V2.0 License](http://www.parallec.io/images/apache2.svg) ](https://github.com/eBay/parallec/blob/master/LICENSE)\n \n \n-![latest 0.10.x](http://img.shields.io/badge/latest_stable-0.10.x=>-green.svg) [ ![latest beta  maven central](https://maven-badges.herokuapp.com/maven-central/io.parallec/parallec-core/badge.svg?style=flat)](http://search.maven.org/#artifactdetails|io.parallec|parallec-core|0.10.5|) [![Gitter](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/eBay/parallec?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge)\n+![latest 0.10.x](http://img.shields.io/badge/latest_stable-0.10.x=>-green.svg) [ ![latest beta  maven central](https://maven-badges.herokuapp.com/maven-central/io.parallec/parallec-core/badge.svg?style=flat)](http://search.maven.org/#artifactdetails|io.parallec|parallec-core|0.10.6|) [![Gitter](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/eBay/parallec?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge)\n \n [![Javadoc](http://www.parallec.io/images/parallec-javadoc-blue.svg)](http://www.parallec.io/javadoc/index.html?io/parallec/core/ParallelClient.html) [![Documentation](http://www.parallec.io/images/parallec-documentation-red.svg)](http://www.parallec.io/docs/) [![Samples](http://www.parallec.io/images/parallec-samples-brightgreen.svg)](https://github.com/eBay/parallec-samples) [![Chinese](http://www.parallec.io/images/parallec-cnbrief-blue.svg)](https://github.com/eBay/parallec/blob/master/README-brief-cn.md) \n \n@@ -42,14 +42,14 @@ Donwload [the latest JAR](https://search.maven.org/remote_content?g=io.parallec&\n <dependency>\n \t<groupId>io.parallec</groupId>\n \t<artifactId>parallec-core</artifactId>\n-\t<version>0.10.5</version>\n+\t<version>0.10.6</version>\n </dependency>\n ```\n Snapshots of the development version are available in [Sonatype's `snapshots` repository](https://oss.sonatype.org/content/repositories/snapshots/io/parallec/parallec-core/).\n \n or Gradle:\n ```xml\n-compile 'io.parallec:parallec-core:0.10.5'\n+compile 'io.parallec:parallec-core:0.10.6'\n ```\n \n \n@@ -114,6 +114,7 @@ pc.prepareHttpGet(\"/userdata/sample_weather_$ZIP.txt\")\n \n ### What's New\n \n+* 06/2017 Add dynamic response encoding according to response content type.\n * 09/2016 Add option to save response headers in HTTP [#24](https://github.com/eBay/parallec/issues/24).\n * 08/2016 Support Parallel async UDP (via Netty) [#41](https://github.com/eBay/parallec/issues/41).\n * 07/2016 Support replacing different ports in different requests. "
            },
            {
                "sha": "c633678af819c478716669d9dab6520ad0320ede",
                "filename": "pom.xml",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/5937b2c080acdfba14e1ddc3f009c99fa169260c/pom.xml",
                "raw_url": "https://github.com/eBay/parallec/raw/5937b2c080acdfba14e1ddc3f009c99fa169260c/pom.xml",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/pom.xml?ref=5937b2c080acdfba14e1ddc3f009c99fa169260c",
                "patch": "@@ -4,7 +4,7 @@\n \t<modelVersion>4.0.0</modelVersion>\n \t<groupId>io.parallec</groupId>\n \t<artifactId>parallec-core</artifactId>\n-\t<version>0.10.5</version>\n+\t<version>0.10.6</version>\n \t<packaging>jar</packaging>\n \t<name>io.parallec:parallec-core</name>\n \t<url>https://github.com/eBay/parallec</url>"
            }
        ]
    },
    {
        "sha": "930fc4d897cd4cc414799af917b9dafb8ccaf70a",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6OTMwZmM0ZDg5N2NkNGNjNDE0Nzk5YWY5MTdiOWRhZmI4Y2NhZjcwYQ==",
        "commit": {
            "author": {
                "name": "Yuanteng (Jeff) Pei",
                "email": "jpei@linkedin.com",
                "date": "2017-06-24T05:52:25Z"
            },
            "committer": {
                "name": "Yuanteng (Jeff) Pei",
                "email": "jpei@linkedin.com",
                "date": "2017-06-24T05:52:25Z"
            },
            "message": "#46 response body encoding",
            "tree": {
                "sha": "23bafd8799b0375b2b2297f74d49d5579a3b9c88",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/23bafd8799b0375b2b2297f74d49d5579a3b9c88"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/930fc4d897cd4cc414799af917b9dafb8ccaf70a",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/930fc4d897cd4cc414799af917b9dafb8ccaf70a",
        "html_url": "https://github.com/eBay/parallec/commit/930fc4d897cd4cc414799af917b9dafb8ccaf70a",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/930fc4d897cd4cc414799af917b9dafb8ccaf70a/comments",
        "author": {
            "login": "jeffpeiyt",
            "id": 2048895,
            "node_id": "MDQ6VXNlcjIwNDg4OTU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2048895?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jeffpeiyt",
            "html_url": "https://github.com/jeffpeiyt",
            "followers_url": "https://api.github.com/users/jeffpeiyt/followers",
            "following_url": "https://api.github.com/users/jeffpeiyt/following{/other_user}",
            "gists_url": "https://api.github.com/users/jeffpeiyt/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jeffpeiyt/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jeffpeiyt/subscriptions",
            "organizations_url": "https://api.github.com/users/jeffpeiyt/orgs",
            "repos_url": "https://api.github.com/users/jeffpeiyt/repos",
            "events_url": "https://api.github.com/users/jeffpeiyt/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jeffpeiyt/received_events",
            "type": "User",
            "site_admin": false
        },
        "committer": {
            "login": "jeffpeiyt",
            "id": 2048895,
            "node_id": "MDQ6VXNlcjIwNDg4OTU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2048895?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jeffpeiyt",
            "html_url": "https://github.com/jeffpeiyt",
            "followers_url": "https://api.github.com/users/jeffpeiyt/followers",
            "following_url": "https://api.github.com/users/jeffpeiyt/following{/other_user}",
            "gists_url": "https://api.github.com/users/jeffpeiyt/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jeffpeiyt/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jeffpeiyt/subscriptions",
            "organizations_url": "https://api.github.com/users/jeffpeiyt/orgs",
            "repos_url": "https://api.github.com/users/jeffpeiyt/repos",
            "events_url": "https://api.github.com/users/jeffpeiyt/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jeffpeiyt/received_events",
            "type": "User",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "407e3e86aa97b35e17286e41895cb9a2c2f92d9f",
                "url": "https://api.github.com/repos/eBay/parallec/commits/407e3e86aa97b35e17286e41895cb9a2c2f92d9f",
                "html_url": "https://github.com/eBay/parallec/commit/407e3e86aa97b35e17286e41895cb9a2c2f92d9f"
            }
        ],
        "stats": {
            "total": 73,
            "additions": 53,
            "deletions": 20
        },
        "files": [
            {
                "sha": "700b1ccf18a0494f72efed920a4e3514260f1b01",
                "filename": "CHANGELOG.md",
                "status": "modified",
                "additions": 5,
                "deletions": 0,
                "changes": 5,
                "blob_url": "https://github.com/eBay/parallec/blob/930fc4d897cd4cc414799af917b9dafb8ccaf70a/CHANGELOG.md",
                "raw_url": "https://github.com/eBay/parallec/raw/930fc4d897cd4cc414799af917b9dafb8ccaf70a/CHANGELOG.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/CHANGELOG.md?ref=930fc4d897cd4cc414799af917b9dafb8ccaf70a",
                "patch": "@@ -1,6 +1,11 @@\n Parallec Change Log\n ==========\n \n+## Version 0.10.6\n+\n+_2017-06-23_\n+\n+* Pull [#46](https://github.com/eBay/parallec/issues/46).  Enable http response body charset encoding to be a static value of \"UTF-8\" from `ParallecGlobalConfig.httpResponseBodyDefaultCharset`; or dynamically derived from the response header's content type. User may overwrite the static value when overloading the config. \n \n ## Version 0.10.5\n "
            },
            {
                "sha": "fa1631470f403bd6042962d956489cad1bcb2169",
                "filename": "src/main/java/io/parallec/core/actor/HttpWorker.java",
                "status": "modified",
                "additions": 6,
                "deletions": 2,
                "changes": 8,
                "blob_url": "https://github.com/eBay/parallec/blob/930fc4d897cd4cc414799af917b9dafb8ccaf70a/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FHttpWorker.java",
                "raw_url": "https://github.com/eBay/parallec/raw/930fc4d897cd4cc414799af917b9dafb8ccaf70a/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FHttpWorker.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FHttpWorker.java?ref=930fc4d897cd4cc414799af917b9dafb8ccaf70a",
                "patch": "@@ -15,6 +15,7 @@\n import io.parallec.core.actor.message.ResponseOnSingeRequest;\n import io.parallec.core.actor.message.type.RequestWorkerMsgType;\n import io.parallec.core.bean.ResponseHeaderMeta;\n+import io.parallec.core.config.ParallecGlobalConfig;\n import io.parallec.core.exception.ActorMessageTypeInvalidException;\n import io.parallec.core.exception.HttpRequestCreateException;\n import io.parallec.core.resources.HttpMethod;\n@@ -48,6 +49,7 @@\n import com.ning.http.client.AsyncHttpClient.BoundRequestBuilder;\n import com.ning.http.client.ListenableFuture;\n import com.ning.http.client.Response;\n+import com.ning.http.util.AsyncHttpProviderUtils;\n \n // TODO: Auto-generated Javadoc\n /**\n@@ -386,8 +388,10 @@ public ResponseOnSingeRequest onComplete(Response response) {\n \n             int statusCodeInt = response.getStatusCode();\n             String statusCode = statusCodeInt + \" \" + response.getStatusText();\n-\n-            reply(response.getResponseBody(), false, null, null, statusCode,\n+            String charset = ParallecGlobalConfig.httpResponseBodyCharsetUsesResponseContentType ? \n+                    AsyncHttpProviderUtils.parseCharset(response.getContentType())\n+                    : ParallecGlobalConfig.httpResponseBodyDefaultCharset;\n+            reply(response.getResponseBody(charset), false, null, null, statusCode,\n                     statusCodeInt, responseHeaders);\n         } catch (IOException e) {\n             getLogger().error(\"fail response.getResponseBody \" + e);"
            },
            {
                "sha": "901f1ce42aa127c5e81923a9a161cda81a312515",
                "filename": "src/main/java/io/parallec/core/config/ParallecGlobalConfig.java",
                "status": "modified",
                "additions": 5,
                "deletions": 0,
                "changes": 5,
                "blob_url": "https://github.com/eBay/parallec/blob/930fc4d897cd4cc414799af917b9dafb8ccaf70a/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fconfig%2FParallecGlobalConfig.java",
                "raw_url": "https://github.com/eBay/parallec/raw/930fc4d897cd4cc414799af917b9dafb8ccaf70a/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fconfig%2FParallecGlobalConfig.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fconfig%2FParallecGlobalConfig.java?ref=930fc4d897cd4cc414799af917b9dafb8ccaf70a",
                "patch": "@@ -113,4 +113,9 @@ public class ParallecGlobalConfig {\n     \n     /** The url connection read timeout millis. Used when load target host from URL/CMS*/\n     public static int urlConnectionReadTimeoutMillis = 15000;\n+    \n+    /** The default charset when getting the response body for http*/\n+    public static String httpResponseBodyDefaultCharset = \"UTF-8\";\n+    /** Whether to derive the http response body charset from response header of content type field*/\n+    public static boolean httpResponseBodyCharsetUsesResponseContentType = false;\n }"
            },
            {
                "sha": "1b97102976f64ebb6581a6a8b0209aec4ad98b2a",
                "filename": "src/test/java/io/parallec/core/main/http/ParallelClientHttpBasicMoreOptionsTest.java",
                "status": "modified",
                "additions": 35,
                "deletions": 17,
                "changes": 52,
                "blob_url": "https://github.com/eBay/parallec/blob/930fc4d897cd4cc414799af917b9dafb8ccaf70a/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2FParallelClientHttpBasicMoreOptionsTest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/930fc4d897cd4cc414799af917b9dafb8ccaf70a/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2FParallelClientHttpBasicMoreOptionsTest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2FParallelClientHttpBasicMoreOptionsTest.java?ref=930fc4d897cd4cc414799af917b9dafb8ccaf70a",
                "patch": "@@ -18,6 +18,7 @@\n import io.parallec.core.ParallelTask;\n import io.parallec.core.ResponseOnSingleTask;\n import io.parallec.core.TestBase;\n+import io.parallec.core.config.ParallecGlobalConfig;\n \n import java.util.HashMap;\n import java.util.Map;\n@@ -70,35 +71,27 @@ public static void shutdown() throws Exception {\n     @Test\n     public void hitWebsitesMinSync() {\n         Map<String, Object> responseContext = new HashMap<String, Object>();\n-        ParallelTask task = pc\n-                .prepareHttpGet(\"/validateInternals.html\")\n-                .setConcurrency(1700)\n+        ParallelTask task = pc.prepareHttpGet(\"/validateInternals.html\").setConcurrency(1700)\n                 .setResponseContext(responseContext)\n-                .setTargetHostsFromString(\n-                        \"www.parallec.io www.jeffpei.com www.restcommander.com\")\n+                .setTargetHostsFromString(\"www.parallec.io www.jeffpei.com www.restcommander.com\")\n \n-                .setSaveResponseToTask(true).setAutoSaveLogToLocal(true)\n-                .setEnableCapacityAwareTaskScheduler(true)\n+                .setSaveResponseToTask(true).setAutoSaveLogToLocal(true).setEnableCapacityAwareTaskScheduler(true)\n                 // .setSaveResponseToTask(true)\n \n                 .execute(new ParallecResponseHandler() {\n \n                     @Override\n-                    public void onCompleted(ResponseOnSingleTask res,\n-                            Map<String, Object> responseContext) {\n-                        String cpu = new FilterRegex(\n-                                \".*<td>CPU-Usage-Percent</td>\\\\s*<td>(.*?)</td>.*\")\n+                    public void onCompleted(ResponseOnSingleTask res, Map<String, Object> responseContext) {\n+                        String cpu = new FilterRegex(\".*<td>CPU-Usage-Percent</td>\\\\s*<td>(.*?)</td>.*\")\n                                 .filter(res.getResponseContent());\n-                        String memory = new FilterRegex(\n-                                \".*<td>Memory-Used-KB</td>\\\\s*<td>(.*?)</td>.*\")\n+                        String memory = new FilterRegex(\".*<td>Memory-Used-KB</td>\\\\s*<td>(.*?)</td>.*\")\n                                 .filter(res.getResponseContent());\n \n                         Map<String, Object> metricMap = new HashMap<String, Object>();\n                         metricMap.put(\"CpuUsage\", cpu);\n                         metricMap.put(\"MemoryUsage\", memory);\n \n-                        logger.info(\"cpu:\" + cpu + \" memory: \" + memory\n-                                + \" host: \" + res.getHost());\n+                        logger.info(\"cpu:\" + cpu + \" memory: \" + memory + \" host: \" + res.getHost());\n                         responseContext.put(res.getHost(), cpu);\n \n                         logger.info(res.toString());\n@@ -109,12 +102,37 @@ public void onCompleted(ResponseOnSingleTask res,\n         for (Object o : responseContext.values()) {\n \n             Double cpuDouble = Double.parseDouble((String) o);\n-            Asserts.check(cpuDouble <= 100.0 && cpuDouble >= 0.0,\n-                    \" Fail to extract cpu values\");\n+            Asserts.check(cpuDouble <= 100.0 && cpuDouble >= 0.0, \" Fail to extract cpu values\");\n         }\n \n         logger.info(\"Task Pretty Print: \\n{}\", task.prettyPrintInfo());\n         logger.info(\"Aggregated results: \\n{}\", task.getAggregatedResultHumanStr());\n     }\n \n+    /**\n+     * Test hitting none unicode websites assuming www.rakuten.co.jp still uses\n+     * the following none unicode encoding. If www.rakuten.co.jp changes the\n+     * encoding to utf-8, this test may still pass but not serve the purpose.\n+     * Content-Type: text/html; charset=EUC-JP\n+     */\n+    @Test\n+    public void hitNoneUnicodeWebsite() {\n+        ParallecGlobalConfig.httpResponseBodyCharsetUsesResponseContentType = true;\n+        Map<String, Object> responseContext = new HashMap<String, Object>();\n+        pc.prepareHttpGet(\"\").setResponseContext(responseContext).setTargetHostsFromString(\"www.rakuten.co.jp\")\n+                .setSaveResponseToTask(true).setAutoSaveLogToLocal(true).setEnableCapacityAwareTaskScheduler(true)\n+                .execute(new ParallecResponseHandler() {\n+\n+                    @Override\n+                    public void onCompleted(ResponseOnSingleTask res, Map<String, Object> responseContext) {\n+                        responseContext.put(\"content\", res.getResponseContent());\n+                        logger.info(res.getResponseContent());\n+                    }\n+                });\n+\n+        Asserts.check(responseContext.get(\"content\").toString().contains(\"楽天\"),\n+                \" Fail to get response from none unicode sites\");\n+        ParallecGlobalConfig.httpResponseBodyCharsetUsesResponseContentType = false;\n+\n+    }\n }"
            },
            {
                "sha": "e8b88daf4c6a08f297627ce50ef5dbbfb10b3030",
                "filename": "src/test/java/io/parallec/core/pojo/ParallecPojoStrTest.java",
                "status": "modified",
                "additions": 2,
                "deletions": 1,
                "changes": 3,
                "blob_url": "https://github.com/eBay/parallec/blob/930fc4d897cd4cc414799af917b9dafb8ccaf70a/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fpojo%2FParallecPojoStrTest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/930fc4d897cd4cc414799af917b9dafb8ccaf70a/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fpojo%2FParallecPojoStrTest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fpojo%2FParallecPojoStrTest.java?ref=930fc4d897cd4cc414799af917b9dafb8ccaf70a",
                "patch": "@@ -14,6 +14,7 @@\n import io.parallec.core.bean.StrStrMap;\n import io.parallec.core.bean.tcp.TcpMeta;\n import io.parallec.core.bean.udp.UdpMeta;\n+import io.parallec.core.config.ParallecGlobalConfig;\n import io.parallec.core.exception.HttpRequestCreateException;\n import io.parallec.core.exception.ParallelTaskInvalidException;\n import io.parallec.core.monitor.MonitorProvider;\n@@ -41,7 +42,7 @@ public class ParallecPojoStrTest extends TestBase {\n \n     @Test\n     public void testMetaValidationToString() {\n-\n+    \tParallecGlobalConfig.httpResponseBodyDefaultCharset=\"UTF-8\";\n         PollerData pollerData = new PollerData();\n         logger.info(pollerData.toString());\n "
            }
        ]
    },
    {
        "sha": "407e3e86aa97b35e17286e41895cb9a2c2f92d9f",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6NDA3ZTNlODZhYTk3YjM1ZTE3Mjg2ZTQxODk1Y2I5YTJjMmY5MmQ5Zg==",
        "commit": {
            "author": {
                "name": "Yuanteng (Jeff) Pei",
                "email": "jpei@linkedin.com",
                "date": "2017-06-19T01:23:24Z"
            },
            "committer": {
                "name": "Yuanteng (Jeff) Pei",
                "email": "jpei@linkedin.com",
                "date": "2017-06-19T01:23:24Z"
            },
            "message": "release 0.10.5. Update contributors",
            "tree": {
                "sha": "59e3948023bf9687577b7e94847fd1f6cdbbe46f",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/59e3948023bf9687577b7e94847fd1f6cdbbe46f"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/407e3e86aa97b35e17286e41895cb9a2c2f92d9f",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/407e3e86aa97b35e17286e41895cb9a2c2f92d9f",
        "html_url": "https://github.com/eBay/parallec/commit/407e3e86aa97b35e17286e41895cb9a2c2f92d9f",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/407e3e86aa97b35e17286e41895cb9a2c2f92d9f/comments",
        "author": {
            "login": "jeffpeiyt",
            "id": 2048895,
            "node_id": "MDQ6VXNlcjIwNDg4OTU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2048895?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jeffpeiyt",
            "html_url": "https://github.com/jeffpeiyt",
            "followers_url": "https://api.github.com/users/jeffpeiyt/followers",
            "following_url": "https://api.github.com/users/jeffpeiyt/following{/other_user}",
            "gists_url": "https://api.github.com/users/jeffpeiyt/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jeffpeiyt/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jeffpeiyt/subscriptions",
            "organizations_url": "https://api.github.com/users/jeffpeiyt/orgs",
            "repos_url": "https://api.github.com/users/jeffpeiyt/repos",
            "events_url": "https://api.github.com/users/jeffpeiyt/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jeffpeiyt/received_events",
            "type": "User",
            "site_admin": false
        },
        "committer": {
            "login": "jeffpeiyt",
            "id": 2048895,
            "node_id": "MDQ6VXNlcjIwNDg4OTU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2048895?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jeffpeiyt",
            "html_url": "https://github.com/jeffpeiyt",
            "followers_url": "https://api.github.com/users/jeffpeiyt/followers",
            "following_url": "https://api.github.com/users/jeffpeiyt/following{/other_user}",
            "gists_url": "https://api.github.com/users/jeffpeiyt/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jeffpeiyt/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jeffpeiyt/subscriptions",
            "organizations_url": "https://api.github.com/users/jeffpeiyt/orgs",
            "repos_url": "https://api.github.com/users/jeffpeiyt/repos",
            "events_url": "https://api.github.com/users/jeffpeiyt/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jeffpeiyt/received_events",
            "type": "User",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "baf5ac1e61990483cd54a0aff594d7a4b1d84162",
                "url": "https://api.github.com/repos/eBay/parallec/commits/baf5ac1e61990483cd54a0aff594d7a4b1d84162",
                "html_url": "https://github.com/eBay/parallec/commit/baf5ac1e61990483cd54a0aff594d7a4b1d84162"
            }
        ],
        "stats": {
            "total": 24,
            "additions": 17,
            "deletions": 7
        },
        "files": [
            {
                "sha": "ef194b6429cfa027cc136b30a42689a5cc4434cb",
                "filename": "AUTHORS.txt",
                "status": "modified",
                "additions": 3,
                "deletions": 1,
                "changes": 4,
                "blob_url": "https://github.com/eBay/parallec/blob/407e3e86aa97b35e17286e41895cb9a2c2f92d9f/AUTHORS.txt",
                "raw_url": "https://github.com/eBay/parallec/raw/407e3e86aa97b35e17286e41895cb9a2c2f92d9f/AUTHORS.txt",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/AUTHORS.txt?ref=407e3e86aa97b35e17286e41895cb9a2c2f92d9f",
                "patch": "@@ -12,4 +12,6 @@ Contributors:\n - Lukasz Kryger  http://stackoverflow.com/users/1240557/kryger\n - billzwu https://github.com/billzwu\n - faisal-hameed https://github.com/faisal-hameed\n-- fivesmallq https://github.com/fivesmallq\n\\ No newline at end of file\n+- fivesmallq https://github.com/fivesmallq\n+- bryant1410 https://github.com/bryant1410\n+- djKooks https://github.com/djKooks\n\\ No newline at end of file"
            },
            {
                "sha": "bd7fe0d1e856c608374a2cfb198cda78b2dc189b",
                "filename": "CHANGELOG.md",
                "status": "modified",
                "additions": 7,
                "deletions": 0,
                "changes": 7,
                "blob_url": "https://github.com/eBay/parallec/blob/407e3e86aa97b35e17286e41895cb9a2c2f92d9f/CHANGELOG.md",
                "raw_url": "https://github.com/eBay/parallec/raw/407e3e86aa97b35e17286e41895cb9a2c2f92d9f/CHANGELOG.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/CHANGELOG.md?ref=407e3e86aa97b35e17286e41895cb9a2c2f92d9f",
                "patch": "@@ -2,6 +2,13 @@ Parallec Change Log\n ==========\n \n \n+## Version 0.10.5\n+\n+_2017-06-18_\n+\n+* Pull [#60](https://github.com/eBay/parallec/pull/60).  Fix the param setup issue in reinitializing ParallelClient, thanks to [djKooks](https://github.com/djKooks).\n+\n+\n ## Version 0.10.4\n \n _2017-01-29_"
            },
            {
                "sha": "ffa548ec5f9f58f2837637d999e27c6095280312",
                "filename": "README.md",
                "status": "modified",
                "additions": 6,
                "deletions": 5,
                "changes": 11,
                "blob_url": "https://github.com/eBay/parallec/blob/407e3e86aa97b35e17286e41895cb9a2c2f92d9f/README.md",
                "raw_url": "https://github.com/eBay/parallec/raw/407e3e86aa97b35e17286e41895cb9a2c2f92d9f/README.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/README.md?ref=407e3e86aa97b35e17286e41895cb9a2c2f92d9f",
                "patch": "@@ -4,7 +4,7 @@\n ![build status](https://img.shields.io/badge/build-info=>-green.svg) [![Build Status](https://travis-ci.org/eBay/parallec.svg?branch=master)](https://travis-ci.org/eBay/parallec) [![Coverage Status](https://img.shields.io/codecov/c/github/eBay/parallec.svg)](https://codecov.io/github/eBay/parallec) [![Apache V2.0 License](http://www.parallec.io/images/apache2.svg) ](https://github.com/eBay/parallec/blob/master/LICENSE)\n \n \n-![latest 0.10.x](http://img.shields.io/badge/latest_stable-0.10.x=>-green.svg) [ ![latest beta  maven central](https://maven-badges.herokuapp.com/maven-central/io.parallec/parallec-core/badge.svg?style=flat)](http://search.maven.org/#artifactdetails|io.parallec|parallec-core|0.10.4|) [![Gitter](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/eBay/parallec?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge)\n+![latest 0.10.x](http://img.shields.io/badge/latest_stable-0.10.x=>-green.svg) [ ![latest beta  maven central](https://maven-badges.herokuapp.com/maven-central/io.parallec/parallec-core/badge.svg?style=flat)](http://search.maven.org/#artifactdetails|io.parallec|parallec-core|0.10.5|) [![Gitter](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/eBay/parallec?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge)\n \n [![Javadoc](http://www.parallec.io/images/parallec-javadoc-blue.svg)](http://www.parallec.io/javadoc/index.html?io/parallec/core/ParallelClient.html) [![Documentation](http://www.parallec.io/images/parallec-documentation-red.svg)](http://www.parallec.io/docs/) [![Samples](http://www.parallec.io/images/parallec-samples-brightgreen.svg)](https://github.com/eBay/parallec-samples) [![Chinese](http://www.parallec.io/images/parallec-cnbrief-blue.svg)](https://github.com/eBay/parallec/blob/master/README-brief-cn.md) \n \n@@ -42,14 +42,14 @@ Donwload [the latest JAR](https://search.maven.org/remote_content?g=io.parallec&\n <dependency>\n \t<groupId>io.parallec</groupId>\n \t<artifactId>parallec-core</artifactId>\n-\t<version>0.10.4</version>\n+\t<version>0.10.5</version>\n </dependency>\n ```\n Snapshots of the development version are available in [Sonatype's `snapshots` repository](https://oss.sonatype.org/content/repositories/snapshots/io/parallec/parallec-core/).\n \n or Gradle:\n ```xml\n-compile 'io.parallec:parallec-core:0.10.4'\n+compile 'io.parallec:parallec-core:0.10.5'\n ```\n \n \n@@ -267,7 +267,8 @@ We deeply thank all contributors for their effort.\n - [billzwu](https://github.com/billzwu)\n - [faisal-hameed](https://github.com/faisal-hameed)\n - [fivesmallq](https://github.com/fivesmallq)\n-\n+- [bryant1410](https://github.com/bryant1410)\n+- [djKooks](https://github.com/djKooks)\n \n ## Authors\n \n@@ -293,5 +294,5 @@ Any helpful feedback is more than welcome. This includes feature requests, bug r\n \n Code licensed under Apache License v2.0\n \n-© 2015-2016 eBay Software Foundation\n+© 2015-2017 eBay Software Foundation\n "
            },
            {
                "sha": "800db7c7b9828f027b3babfd8773ac60490e68ae",
                "filename": "pom.xml",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/407e3e86aa97b35e17286e41895cb9a2c2f92d9f/pom.xml",
                "raw_url": "https://github.com/eBay/parallec/raw/407e3e86aa97b35e17286e41895cb9a2c2f92d9f/pom.xml",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/pom.xml?ref=407e3e86aa97b35e17286e41895cb9a2c2f92d9f",
                "patch": "@@ -4,7 +4,7 @@\n \t<modelVersion>4.0.0</modelVersion>\n \t<groupId>io.parallec</groupId>\n \t<artifactId>parallec-core</artifactId>\n-\t<version>0.10.4</version>\n+\t<version>0.10.5</version>\n \t<packaging>jar</packaging>\n \t<name>io.parallec:parallec-core</name>\n \t<url>https://github.com/eBay/parallec</url>"
            }
        ]
    },
    {
        "sha": "baf5ac1e61990483cd54a0aff594d7a4b1d84162",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6YmFmNWFjMWU2MTk5MDQ4M2NkNTRhMGFmZjU5NGQ3YTRiMWQ4NDE2Mg==",
        "commit": {
            "author": {
                "name": "Yuanteng (Jeff) Pei",
                "email": "jeffpeiyt@users.noreply.github.com",
                "date": "2017-06-18T15:11:31Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2017-06-18T15:11:31Z"
            },
            "message": "Merge pull request #60 from djKooks/param-fix\n\nParam setup bug in ParallelClient",
            "tree": {
                "sha": "aea60f19af694933ec7a52d035040d34282d154f",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/aea60f19af694933ec7a52d035040d34282d154f"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/baf5ac1e61990483cd54a0aff594d7a4b1d84162",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/baf5ac1e61990483cd54a0aff594d7a4b1d84162",
        "html_url": "https://github.com/eBay/parallec/commit/baf5ac1e61990483cd54a0aff594d7a4b1d84162",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/baf5ac1e61990483cd54a0aff594d7a4b1d84162/comments",
        "author": {
            "login": "jeffpeiyt",
            "id": 2048895,
            "node_id": "MDQ6VXNlcjIwNDg4OTU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2048895?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jeffpeiyt",
            "html_url": "https://github.com/jeffpeiyt",
            "followers_url": "https://api.github.com/users/jeffpeiyt/followers",
            "following_url": "https://api.github.com/users/jeffpeiyt/following{/other_user}",
            "gists_url": "https://api.github.com/users/jeffpeiyt/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jeffpeiyt/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jeffpeiyt/subscriptions",
            "organizations_url": "https://api.github.com/users/jeffpeiyt/orgs",
            "repos_url": "https://api.github.com/users/jeffpeiyt/repos",
            "events_url": "https://api.github.com/users/jeffpeiyt/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jeffpeiyt/received_events",
            "type": "User",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "7df7544e70385dff1e024c4db86aa9c6a9e2b756",
                "url": "https://api.github.com/repos/eBay/parallec/commits/7df7544e70385dff1e024c4db86aa9c6a9e2b756",
                "html_url": "https://github.com/eBay/parallec/commit/7df7544e70385dff1e024c4db86aa9c6a9e2b756"
            },
            {
                "sha": "b9445cdd4ec3508496bebe3839c013546b40cbff",
                "url": "https://api.github.com/repos/eBay/parallec/commits/b9445cdd4ec3508496bebe3839c013546b40cbff",
                "html_url": "https://github.com/eBay/parallec/commit/b9445cdd4ec3508496bebe3839c013546b40cbff"
            }
        ],
        "stats": {
            "total": 8,
            "additions": 3,
            "deletions": 5
        },
        "files": [
            {
                "sha": "12e390da37ca8434861865684d5d93c3100476d1",
                "filename": "src/main/java/io/parallec/core/ParallelClient.java",
                "status": "modified",
                "additions": 3,
                "deletions": 5,
                "changes": 8,
                "blob_url": "https://github.com/eBay/parallec/blob/baf5ac1e61990483cd54a0aff594d7a4b1d84162/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FParallelClient.java",
                "raw_url": "https://github.com/eBay/parallec/raw/baf5ac1e61990483cd54a0aff594d7a4b1d84162/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FParallelClient.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FParallelClient.java?ref=baf5ac1e61990483cd54a0aff594d7a4b1d84162",
                "patch": "@@ -12,20 +12,18 @@\n  */\n package io.parallec.core;\n \n+import com.ning.http.client.AsyncHttpClient;\n import io.parallec.core.actor.ActorConfig;\n import io.parallec.core.monitor.MonitorProvider;\n import io.parallec.core.resources.HttpClientStore;\n import io.parallec.core.resources.HttpClientType;\n import io.parallec.core.resources.HttpMethod;\n import io.parallec.core.resources.TcpUdpSshPingResourceStore;\n import io.parallec.core.task.ParallelTaskManager;\n-\n-import java.util.concurrent.atomic.AtomicBoolean;\n-\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n-import com.ning.http.client.AsyncHttpClient;\n+import java.util.concurrent.atomic.AtomicBoolean;\n \n /**\n  * \n@@ -170,7 +168,7 @@ public void reinitIfClosed() {\n             } catch (InterruptedException e) {\n                 logger.error(\"error reinit httpClientStore\", e);\n             }\n-            isClosed.set(true);\n+            isClosed.set(false);\n             logger.info(\"Parallel Client Resources has been reinitialized.\");\n         } else {\n             logger.debug(\"NO OP. Resource was not released.\");"
            }
        ]
    },
    {
        "sha": "b9445cdd4ec3508496bebe3839c013546b40cbff",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6Yjk0NDVjZGQ0ZWMzNTA4NDk2YmViZTM4MzljMDEzNTQ2YjQwY2JmZg==",
        "commit": {
            "author": {
                "name": "kwangin",
                "email": "inylove82@gmail.com",
                "date": "2017-06-18T13:46:20Z"
            },
            "committer": {
                "name": "kwangin",
                "email": "inylove82@gmail.com",
                "date": "2017-06-18T13:46:20Z"
            },
            "message": "Param setup bug in ParallelClient",
            "tree": {
                "sha": "aea60f19af694933ec7a52d035040d34282d154f",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/aea60f19af694933ec7a52d035040d34282d154f"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/b9445cdd4ec3508496bebe3839c013546b40cbff",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/b9445cdd4ec3508496bebe3839c013546b40cbff",
        "html_url": "https://github.com/eBay/parallec/commit/b9445cdd4ec3508496bebe3839c013546b40cbff",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/b9445cdd4ec3508496bebe3839c013546b40cbff/comments",
        "author": {
            "login": "kination",
            "id": 1720209,
            "node_id": "MDQ6VXNlcjE3MjAyMDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1720209?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kination",
            "html_url": "https://github.com/kination",
            "followers_url": "https://api.github.com/users/kination/followers",
            "following_url": "https://api.github.com/users/kination/following{/other_user}",
            "gists_url": "https://api.github.com/users/kination/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kination/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kination/subscriptions",
            "organizations_url": "https://api.github.com/users/kination/orgs",
            "repos_url": "https://api.github.com/users/kination/repos",
            "events_url": "https://api.github.com/users/kination/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kination/received_events",
            "type": "User",
            "site_admin": false
        },
        "committer": {
            "login": "kination",
            "id": 1720209,
            "node_id": "MDQ6VXNlcjE3MjAyMDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1720209?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kination",
            "html_url": "https://github.com/kination",
            "followers_url": "https://api.github.com/users/kination/followers",
            "following_url": "https://api.github.com/users/kination/following{/other_user}",
            "gists_url": "https://api.github.com/users/kination/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kination/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kination/subscriptions",
            "organizations_url": "https://api.github.com/users/kination/orgs",
            "repos_url": "https://api.github.com/users/kination/repos",
            "events_url": "https://api.github.com/users/kination/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kination/received_events",
            "type": "User",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "7df7544e70385dff1e024c4db86aa9c6a9e2b756",
                "url": "https://api.github.com/repos/eBay/parallec/commits/7df7544e70385dff1e024c4db86aa9c6a9e2b756",
                "html_url": "https://github.com/eBay/parallec/commit/7df7544e70385dff1e024c4db86aa9c6a9e2b756"
            }
        ],
        "stats": {
            "total": 8,
            "additions": 3,
            "deletions": 5
        },
        "files": [
            {
                "sha": "12e390da37ca8434861865684d5d93c3100476d1",
                "filename": "src/main/java/io/parallec/core/ParallelClient.java",
                "status": "modified",
                "additions": 3,
                "deletions": 5,
                "changes": 8,
                "blob_url": "https://github.com/eBay/parallec/blob/b9445cdd4ec3508496bebe3839c013546b40cbff/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FParallelClient.java",
                "raw_url": "https://github.com/eBay/parallec/raw/b9445cdd4ec3508496bebe3839c013546b40cbff/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FParallelClient.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FParallelClient.java?ref=b9445cdd4ec3508496bebe3839c013546b40cbff",
                "patch": "@@ -12,20 +12,18 @@\n  */\n package io.parallec.core;\n \n+import com.ning.http.client.AsyncHttpClient;\n import io.parallec.core.actor.ActorConfig;\n import io.parallec.core.monitor.MonitorProvider;\n import io.parallec.core.resources.HttpClientStore;\n import io.parallec.core.resources.HttpClientType;\n import io.parallec.core.resources.HttpMethod;\n import io.parallec.core.resources.TcpUdpSshPingResourceStore;\n import io.parallec.core.task.ParallelTaskManager;\n-\n-import java.util.concurrent.atomic.AtomicBoolean;\n-\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n-import com.ning.http.client.AsyncHttpClient;\n+import java.util.concurrent.atomic.AtomicBoolean;\n \n /**\n  * \n@@ -170,7 +168,7 @@ public void reinitIfClosed() {\n             } catch (InterruptedException e) {\n                 logger.error(\"error reinit httpClientStore\", e);\n             }\n-            isClosed.set(true);\n+            isClosed.set(false);\n             logger.info(\"Parallel Client Resources has been reinitialized.\");\n         } else {\n             logger.debug(\"NO OP. Resource was not released.\");"
            }
        ]
    },
    {
        "sha": "7df7544e70385dff1e024c4db86aa9c6a9e2b756",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6N2RmNzU0NGU3MDM4NWRmZjFlMDI0YzRkYjg2YWE5YzZhOWUyYjc1Ng==",
        "commit": {
            "author": {
                "name": "Yuanteng (Jeff) Pei",
                "email": "ypei@ebay.com",
                "date": "2017-04-18T05:04:11Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2017-04-18T05:04:11Z"
            },
            "message": "Merge pull request #57 from bryant1410/master\n\nFix broken headings in Markdown files",
            "tree": {
                "sha": "4bffd6b107a5fb8446469ab1c02395bcf7b4c83c",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/4bffd6b107a5fb8446469ab1c02395bcf7b4c83c"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/7df7544e70385dff1e024c4db86aa9c6a9e2b756",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/7df7544e70385dff1e024c4db86aa9c6a9e2b756",
        "html_url": "https://github.com/eBay/parallec/commit/7df7544e70385dff1e024c4db86aa9c6a9e2b756",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/7df7544e70385dff1e024c4db86aa9c6a9e2b756/comments",
        "author": null,
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "5fb4bada283666cc44187c016c63502706770e44",
                "url": "https://api.github.com/repos/eBay/parallec/commits/5fb4bada283666cc44187c016c63502706770e44",
                "html_url": "https://github.com/eBay/parallec/commit/5fb4bada283666cc44187c016c63502706770e44"
            },
            {
                "sha": "93597066d16c415e885fc84f2f7f4d05ce75bf8e",
                "url": "https://api.github.com/repos/eBay/parallec/commits/93597066d16c415e885fc84f2f7f4d05ce75bf8e",
                "html_url": "https://github.com/eBay/parallec/commit/93597066d16c415e885fc84f2f7f4d05ce75bf8e"
            }
        ],
        "stats": {
            "total": 20,
            "additions": 10,
            "deletions": 10
        },
        "files": [
            {
                "sha": "ce5ee8afd83b267153caeb119f15745123d8cdc9",
                "filename": "README-brief-cn.md",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/7df7544e70385dff1e024c4db86aa9c6a9e2b756/README-brief-cn.md",
                "raw_url": "https://github.com/eBay/parallec/raw/7df7544e70385dff1e024c4db86aa9c6a9e2b756/README-brief-cn.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/README-brief-cn.md?ref=7df7544e70385dff1e024c4db86aa9c6a9e2b756",
                "patch": "@@ -1,7 +1,7 @@\n \n <a href=\"http://www.parallec.io\"><img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/parallec-logo.png\" width=\"325\"></a>\n \n-##Parallec 中文介绍\n+## Parallec 中文介绍\n \n [Parallec](http://www.parallec.io/) 是一个基于[Akka](http://akka.io)的快速并行异步HTTP(S)/SSH/TCP/UDP/Ping 客户端的Java库。它是eBay云计算部门开发并在[REST Commander](http://www.restcommander.com/)基础上开源的。Parallec的寓意是**\"并行客户端\"**： **Paralle**l **C**lient, 发音如 \"Para-like\". 更多说明请见[这里](http://www.parallec.io/)。\n "
            },
            {
                "sha": "707c564d199e864e3e0045f4b9a9cc131ce57ecc",
                "filename": "README.md",
                "status": "modified",
                "additions": 9,
                "deletions": 9,
                "changes": 18,
                "blob_url": "https://github.com/eBay/parallec/blob/7df7544e70385dff1e024c4db86aa9c6a9e2b756/README.md",
                "raw_url": "https://github.com/eBay/parallec/raw/7df7544e70385dff1e024c4db86aa9c6a9e2b756/README.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/README.md?ref=7df7544e70385dff1e024c4db86aa9c6a9e2b756",
                "patch": "@@ -112,7 +112,7 @@ pc.prepareHttpGet(\"/userdata/sample_weather_$ZIP.txt\")\n - [http://www.parallec.io/userdata/sample_weather_95037.txt](http://www.parallec.io/userdata/sample_weather_95037.txt)\n \n \n-###What's New\n+### What's New\n \n * 09/2016 Add option to save response headers in HTTP [#24](https://github.com/eBay/parallec/issues/24).\n * 08/2016 Support Parallel async UDP (via Netty) [#41](https://github.com/eBay/parallec/issues/41).\n@@ -121,13 +121,13 @@ pc.prepareHttpGet(\"/userdata/sample_weather_$ZIP.txt\")\n \n More details please check the [Change Log](https://github.com/eBay/parallec/blob/master/CHANGELOG.md).\n \n-###Versions\n+### Versions\n \n * The latest production-ready version is `0.10.x`, where we use in production.\n * **On async-http-client 2.x** The Parallec.io version using more up-to-date `async-http-client` (currently using AHC version `2.0.15`) is `0.20.0-SNAPSHOT`. This version has passed comprehensive unit tests but has not been used yet in production. This version **requires JDK8** due to AHC 2.x and can be used with the parallec-plugins with the same version `0.20.0-SNAPSHOT`, details please check [#37](https://github.com/eBay/parallec/issues/37).\n \n \n-###More Readings\n+### More Readings\n \n - [**More Examples**](https://github.com/ebay/parallec-samples#http) on setting context, send to Elastic Search / Kafka, async running, auto progress polling, track progress, TCP/SSH/Ping.  UDP example is [here](https://github.com/eBay/parallec/blob/master/src/test/java/io/parallec/core/main/udp/ParallelClientUdpBasicTest.java), with more to come. \n - [**Set Target Hosts**](http://www.parallec.io/docs/submit-task/#set-target-hosts) from list, string, line by line text, json path, from local or remote URLs.\n@@ -136,14 +136,14 @@ More details please check the [Change Log](https://github.com/eBay/parallec/blob\n - [**Ping Demo**](https://github.com/eBay/parallec/blob/master/README.md#demos) Ping 8000 Servers within 11.1 Seconds, performance test vs. [FPing](http://fping.org/).\n \n \n-###User Group\n+### User Group\n \n * Ask a question, and keep up to date on the library development by joining the discussion group / forum: [Parallec.io Google Group](https://groups.google.com/forum/#!forum/parallec). \n * Feel free to submit a [Github Issue](https://github.com/eBay/parallec/issues/new) for any questions and suggestions too.\n * Check [FAQ](http://www.parallec.io/docs/faq/).\n \n \n-###Use Cases\n+### Use Cases\n \n 1. Scalable web server monitoring, management, and configuration push, ping check.\n 1. Asset / server status discovery, remote task execution in agent-less(parallel SSH) or agent based (parallel HTTP/TCP) method.\n@@ -179,7 +179,7 @@ Parallec is built on Akka actors and [Async HTTP Client](https://github.com/Asyn\n \n \n \n-##Motivation\n+## Motivation\n - Flexible response handling and immediate processing embedded in other applications.\n - Handle async APIs with auto progress polling for task level concurrency control.\n - Support of other protocols, and [more](https://github.com/eBay/parallec/blob/master/README.md#features)..\n@@ -205,13 +205,13 @@ With the feedbacks, lessons, and improvements from the past year of internal usa\n \n Note that speed varies based on network speed, API response time, the slowest servers, timeout, and concurrency settings.\n \n-#####HTTP\n+##### HTTP\n \n We conducted remote task execution API on 3,000 servers with response aggregated to elastic search, visualized within 15 seconds, by writing 25 lines of code.\n \n With another faster API, calls to 8,000 servers in the same datacenter with response aggregated in memory in 12 seconds. \n \n-#####Ping\n+##### Ping\n Parallec 2.2 seconds vs FPing 4.5 seconds on 1500 servers. Parallec is 2x the speed of [FPing](http://fping.org/) (after best-effort tuning : -i 1 -r 0 v3.12)  of pinging 1500 servers while getting the same ping results.  Parallec pings 8000 servers within 11.1 seconds with breeze.\n \n As usual, don't rely on these numbers and perform your own benchmarks.\n@@ -282,7 +282,7 @@ Parallec is served to you by [Yuanteng (Jeff) Pei](https://www.linkedin.com/in/p\n \n \n \n-##Contributions\n+## Contributions\n <div style=\"text-align:right\">\n   <img src=\"https://github.com/eBay/Winder/blob/master/docs/ebaysf-open-x.png\" width=\"150px\"/>\n </div>"
            }
        ]
    },
    {
        "sha": "93597066d16c415e885fc84f2f7f4d05ce75bf8e",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6OTM1OTcwNjZkMTZjNDE1ZTg4NWZjODRmMmY3ZjRkMDVjZTc1YmY4ZQ==",
        "commit": {
            "author": {
                "name": "Santiago Castro",
                "email": "santi.1410@hotmail.com",
                "date": "2017-04-18T03:28:13Z"
            },
            "committer": {
                "name": "Santiago Castro",
                "email": "santi.1410@hotmail.com",
                "date": "2017-04-18T03:28:13Z"
            },
            "message": "Fix broken Markdown headings",
            "tree": {
                "sha": "4bffd6b107a5fb8446469ab1c02395bcf7b4c83c",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/4bffd6b107a5fb8446469ab1c02395bcf7b4c83c"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/93597066d16c415e885fc84f2f7f4d05ce75bf8e",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/93597066d16c415e885fc84f2f7f4d05ce75bf8e",
        "html_url": "https://github.com/eBay/parallec/commit/93597066d16c415e885fc84f2f7f4d05ce75bf8e",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/93597066d16c415e885fc84f2f7f4d05ce75bf8e/comments",
        "author": {
            "login": "bryant1410",
            "id": 3905501,
            "node_id": "MDQ6VXNlcjM5MDU1MDE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3905501?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bryant1410",
            "html_url": "https://github.com/bryant1410",
            "followers_url": "https://api.github.com/users/bryant1410/followers",
            "following_url": "https://api.github.com/users/bryant1410/following{/other_user}",
            "gists_url": "https://api.github.com/users/bryant1410/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bryant1410/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bryant1410/subscriptions",
            "organizations_url": "https://api.github.com/users/bryant1410/orgs",
            "repos_url": "https://api.github.com/users/bryant1410/repos",
            "events_url": "https://api.github.com/users/bryant1410/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bryant1410/received_events",
            "type": "User",
            "site_admin": false
        },
        "committer": {
            "login": "bryant1410",
            "id": 3905501,
            "node_id": "MDQ6VXNlcjM5MDU1MDE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3905501?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bryant1410",
            "html_url": "https://github.com/bryant1410",
            "followers_url": "https://api.github.com/users/bryant1410/followers",
            "following_url": "https://api.github.com/users/bryant1410/following{/other_user}",
            "gists_url": "https://api.github.com/users/bryant1410/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bryant1410/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bryant1410/subscriptions",
            "organizations_url": "https://api.github.com/users/bryant1410/orgs",
            "repos_url": "https://api.github.com/users/bryant1410/repos",
            "events_url": "https://api.github.com/users/bryant1410/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bryant1410/received_events",
            "type": "User",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "5fb4bada283666cc44187c016c63502706770e44",
                "url": "https://api.github.com/repos/eBay/parallec/commits/5fb4bada283666cc44187c016c63502706770e44",
                "html_url": "https://github.com/eBay/parallec/commit/5fb4bada283666cc44187c016c63502706770e44"
            }
        ],
        "stats": {
            "total": 20,
            "additions": 10,
            "deletions": 10
        },
        "files": [
            {
                "sha": "ce5ee8afd83b267153caeb119f15745123d8cdc9",
                "filename": "README-brief-cn.md",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/93597066d16c415e885fc84f2f7f4d05ce75bf8e/README-brief-cn.md",
                "raw_url": "https://github.com/eBay/parallec/raw/93597066d16c415e885fc84f2f7f4d05ce75bf8e/README-brief-cn.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/README-brief-cn.md?ref=93597066d16c415e885fc84f2f7f4d05ce75bf8e",
                "patch": "@@ -1,7 +1,7 @@\n \n <a href=\"http://www.parallec.io\"><img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/parallec-logo.png\" width=\"325\"></a>\n \n-##Parallec 中文介绍\n+## Parallec 中文介绍\n \n [Parallec](http://www.parallec.io/) 是一个基于[Akka](http://akka.io)的快速并行异步HTTP(S)/SSH/TCP/UDP/Ping 客户端的Java库。它是eBay云计算部门开发并在[REST Commander](http://www.restcommander.com/)基础上开源的。Parallec的寓意是**\"并行客户端\"**： **Paralle**l **C**lient, 发音如 \"Para-like\". 更多说明请见[这里](http://www.parallec.io/)。\n "
            },
            {
                "sha": "707c564d199e864e3e0045f4b9a9cc131ce57ecc",
                "filename": "README.md",
                "status": "modified",
                "additions": 9,
                "deletions": 9,
                "changes": 18,
                "blob_url": "https://github.com/eBay/parallec/blob/93597066d16c415e885fc84f2f7f4d05ce75bf8e/README.md",
                "raw_url": "https://github.com/eBay/parallec/raw/93597066d16c415e885fc84f2f7f4d05ce75bf8e/README.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/README.md?ref=93597066d16c415e885fc84f2f7f4d05ce75bf8e",
                "patch": "@@ -112,7 +112,7 @@ pc.prepareHttpGet(\"/userdata/sample_weather_$ZIP.txt\")\n - [http://www.parallec.io/userdata/sample_weather_95037.txt](http://www.parallec.io/userdata/sample_weather_95037.txt)\n \n \n-###What's New\n+### What's New\n \n * 09/2016 Add option to save response headers in HTTP [#24](https://github.com/eBay/parallec/issues/24).\n * 08/2016 Support Parallel async UDP (via Netty) [#41](https://github.com/eBay/parallec/issues/41).\n@@ -121,13 +121,13 @@ pc.prepareHttpGet(\"/userdata/sample_weather_$ZIP.txt\")\n \n More details please check the [Change Log](https://github.com/eBay/parallec/blob/master/CHANGELOG.md).\n \n-###Versions\n+### Versions\n \n * The latest production-ready version is `0.10.x`, where we use in production.\n * **On async-http-client 2.x** The Parallec.io version using more up-to-date `async-http-client` (currently using AHC version `2.0.15`) is `0.20.0-SNAPSHOT`. This version has passed comprehensive unit tests but has not been used yet in production. This version **requires JDK8** due to AHC 2.x and can be used with the parallec-plugins with the same version `0.20.0-SNAPSHOT`, details please check [#37](https://github.com/eBay/parallec/issues/37).\n \n \n-###More Readings\n+### More Readings\n \n - [**More Examples**](https://github.com/ebay/parallec-samples#http) on setting context, send to Elastic Search / Kafka, async running, auto progress polling, track progress, TCP/SSH/Ping.  UDP example is [here](https://github.com/eBay/parallec/blob/master/src/test/java/io/parallec/core/main/udp/ParallelClientUdpBasicTest.java), with more to come. \n - [**Set Target Hosts**](http://www.parallec.io/docs/submit-task/#set-target-hosts) from list, string, line by line text, json path, from local or remote URLs.\n@@ -136,14 +136,14 @@ More details please check the [Change Log](https://github.com/eBay/parallec/blob\n - [**Ping Demo**](https://github.com/eBay/parallec/blob/master/README.md#demos) Ping 8000 Servers within 11.1 Seconds, performance test vs. [FPing](http://fping.org/).\n \n \n-###User Group\n+### User Group\n \n * Ask a question, and keep up to date on the library development by joining the discussion group / forum: [Parallec.io Google Group](https://groups.google.com/forum/#!forum/parallec). \n * Feel free to submit a [Github Issue](https://github.com/eBay/parallec/issues/new) for any questions and suggestions too.\n * Check [FAQ](http://www.parallec.io/docs/faq/).\n \n \n-###Use Cases\n+### Use Cases\n \n 1. Scalable web server monitoring, management, and configuration push, ping check.\n 1. Asset / server status discovery, remote task execution in agent-less(parallel SSH) or agent based (parallel HTTP/TCP) method.\n@@ -179,7 +179,7 @@ Parallec is built on Akka actors and [Async HTTP Client](https://github.com/Asyn\n \n \n \n-##Motivation\n+## Motivation\n - Flexible response handling and immediate processing embedded in other applications.\n - Handle async APIs with auto progress polling for task level concurrency control.\n - Support of other protocols, and [more](https://github.com/eBay/parallec/blob/master/README.md#features)..\n@@ -205,13 +205,13 @@ With the feedbacks, lessons, and improvements from the past year of internal usa\n \n Note that speed varies based on network speed, API response time, the slowest servers, timeout, and concurrency settings.\n \n-#####HTTP\n+##### HTTP\n \n We conducted remote task execution API on 3,000 servers with response aggregated to elastic search, visualized within 15 seconds, by writing 25 lines of code.\n \n With another faster API, calls to 8,000 servers in the same datacenter with response aggregated in memory in 12 seconds. \n \n-#####Ping\n+##### Ping\n Parallec 2.2 seconds vs FPing 4.5 seconds on 1500 servers. Parallec is 2x the speed of [FPing](http://fping.org/) (after best-effort tuning : -i 1 -r 0 v3.12)  of pinging 1500 servers while getting the same ping results.  Parallec pings 8000 servers within 11.1 seconds with breeze.\n \n As usual, don't rely on these numbers and perform your own benchmarks.\n@@ -282,7 +282,7 @@ Parallec is served to you by [Yuanteng (Jeff) Pei](https://www.linkedin.com/in/p\n \n \n \n-##Contributions\n+## Contributions\n <div style=\"text-align:right\">\n   <img src=\"https://github.com/eBay/Winder/blob/master/docs/ebaysf-open-x.png\" width=\"150px\"/>\n </div>"
            }
        ]
    },
    {
        "sha": "5fb4bada283666cc44187c016c63502706770e44",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6NWZiNGJhZGEyODM2NjZjYzQ0MTg3YzAxNmM2MzUwMjcwNjc3MGU0NA==",
        "commit": {
            "author": {
                "name": "Yuanteng (Jeff) Pei",
                "email": "ypei@ebay.com",
                "date": "2017-04-10T20:32:48Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2017-04-10T20:32:48Z"
            },
            "message": "update contacts [skip ci]",
            "tree": {
                "sha": "105f3710fd8ce1b22f34d1cae12eb4f271d860db",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/105f3710fd8ce1b22f34d1cae12eb4f271d860db"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/5fb4bada283666cc44187c016c63502706770e44",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/5fb4bada283666cc44187c016c63502706770e44",
        "html_url": "https://github.com/eBay/parallec/commit/5fb4bada283666cc44187c016c63502706770e44",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/5fb4bada283666cc44187c016c63502706770e44/comments",
        "author": null,
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "f6f725bbfbed6486b3d84d4c3be6794a32c8b466",
                "url": "https://api.github.com/repos/eBay/parallec/commits/f6f725bbfbed6486b3d84d4c3be6794a32c8b466",
                "html_url": "https://github.com/eBay/parallec/commit/f6f725bbfbed6486b3d84d4c3be6794a32c8b466"
            }
        ],
        "stats": {
            "total": 2,
            "additions": 1,
            "deletions": 1
        },
        "files": [
            {
                "sha": "a946fe095da5704b5a41866b95ca2d1505d4be92",
                "filename": "README-brief-cn.md",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/5fb4bada283666cc44187c016c63502706770e44/README-brief-cn.md",
                "raw_url": "https://github.com/eBay/parallec/raw/5fb4bada283666cc44187c016c63502706770e44/README-brief-cn.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/README-brief-cn.md?ref=5fb4bada283666cc44187c016c63502706770e44",
                "patch": "@@ -32,5 +32,5 @@ Parallec内置特别的响应上下文（response context），在处理服务\n \n “eBay 网络智能分析组目前的几个项目都需要并行执行万级到十万级的API到第三方的服务器，这毫无疑问是我们最大的瓶颈。因此我们一致在寻找一个高效的异步I/O的解决方案。使用Parallec，不但显著的提升了性能，同时有效的减少了资源的使用。 ” －－ Tomer Balan, Data Extraction Engineer, Structured Data at eBay Inc (以色列).\n \n-您可以用5分钟按照[样例程序](http://www.parallec.io/#code-sample)试试Parallec去给多个服务器（网站）发送相同或者不同的请求。我们渴望收到您的意见和建议。您可以通过[提交Github Issue](https://github.com/eBay/parallec/issues/new), 查看[FAQ](http://www.parallec.io/docs/faq/)，登陆论坛 [Parallec.io Google Group](https://groups.google.com/forum/#!forum/parallec)，或者发邮件至 ypei@ebay.com 进行反馈或者提问。谢谢！\n+您可以用5分钟按照[样例程序](http://www.parallec.io/#code-sample)试试Parallec去给多个服务器（网站）发送相同或者不同的请求。我们渴望收到您的意见和建议。您可以通过[提交Github Issue](https://github.com/eBay/parallec/issues/new), 查看[FAQ](http://www.parallec.io/docs/faq/)，登陆论坛 [Parallec.io Google Group](https://groups.google.com/forum/#!forum/parallec)进行反馈或者提问。谢谢！\n "
            }
        ]
    },
    {
        "sha": "f6f725bbfbed6486b3d84d4c3be6794a32c8b466",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6ZjZmNzI1YmJmYmVkNjQ4NmIzZDg0ZDRjM2JlNjc5NGEzMmM4YjQ2Ng==",
        "commit": {
            "author": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2017-01-31T01:03:55Z"
            },
            "committer": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2017-01-31T01:03:55Z"
            },
            "message": "#56 add cms token - minor test enhancement",
            "tree": {
                "sha": "5be5a086431a3ebeaecd10c905bef7d946b33b3c",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/5be5a086431a3ebeaecd10c905bef7d946b33b3c"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/f6f725bbfbed6486b3d84d4c3be6794a32c8b466",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/f6f725bbfbed6486b3d84d4c3be6794a32c8b466",
        "html_url": "https://github.com/eBay/parallec/commit/f6f725bbfbed6486b3d84d4c3be6794a32c8b466",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/f6f725bbfbed6486b3d84d4c3be6794a32c8b466/comments",
        "author": null,
        "committer": null,
        "parents": [
            {
                "sha": "770e29b8cb838c5faef53de183404b71626e846c",
                "url": "https://api.github.com/repos/eBay/parallec/commits/770e29b8cb838c5faef53de183404b71626e846c",
                "html_url": "https://github.com/eBay/parallec/commit/770e29b8cb838c5faef53de183404b71626e846c"
            }
        ],
        "stats": {
            "total": 49,
            "additions": 49,
            "deletions": 0
        },
        "files": [
            {
                "sha": "119a61e89cf449a5a85468e7ffbd09bc348bdc92",
                "filename": "src/test/java/io/parallec/core/main/http/ParallelClientHttpFromCmsAsyncTest.java",
                "status": "modified",
                "additions": 49,
                "deletions": 0,
                "changes": 49,
                "blob_url": "https://github.com/eBay/parallec/blob/f6f725bbfbed6486b3d84d4c3be6794a32c8b466/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2FParallelClientHttpFromCmsAsyncTest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/f6f725bbfbed6486b3d84d4c3be6794a32c8b466/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2FParallelClientHttpFromCmsAsyncTest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2FParallelClientHttpFromCmsAsyncTest.java?ref=f6f725bbfbed6486b3d84d4c3be6794a32c8b466",
                "patch": "@@ -30,6 +30,55 @@ public static void shutdown() throws Exception {\n         pc.releaseExternalResources();\n     }\n \n+    /**\n+     * With CMS query; async timeout 15 seconds\n+     * Added token\n+     */\n+    @Test(timeout = 15000)\n+    public void hitCmsQuerySinglePageWithoutTokenAsync() {\n+\n+        // http://ccoetech.ebay.com/cms-configuration-management-service-based-mongodb\n+        String cmsQueryUrl = URL_CMS_QUERY_SINGLE_PAGE;\n+        ParallelTask pt = pc.prepareHttpGet(\"/validateInternals.html\")\n+                .setTargetHostsFromCmsQueryUrl(cmsQueryUrl, \"label\")\n+                .setConcurrency(1700).async()\n+                .execute(new ParallecResponseHandler() {\n+\n+                    @Override\n+                    public void onCompleted(ResponseOnSingleTask res,\n+                            Map<String, Object> responseContext) {\n+                        String cpu = new FilterRegex(\n+                                \".*<td>CPU-Usage-Percent</td>\\\\s*<td>(.*?)</td>[\\\\s\\\\S]*\")\n+                                .filter(res.getResponseContent());\n+                        String memory = new FilterRegex(\n+                                \".*<td>Memory-Used-KB</td>\\\\s*<td>(.*?)</td>[\\\\s\\\\S]*\")\n+                                .filter(res.getResponseContent());\n+\n+                        Map<String, Object> metricMap = new HashMap<String, Object>();\n+                        metricMap.put(\"CpuUsage\", cpu);\n+                        metricMap.put(\"MemoryUsage\", memory);\n+                        metricMap.put(\"LastUpdated\",\n+                                PcDateUtils.getNowDateTimeStrStandard());\n+                        metricMap.put(\"NodeGroupType\", \"OpenSource\");\n+\n+                        logger.info(\"cpu:\" + cpu + \" host: \" + res.getHost());\n+                    }\n+                });\n+        logger.info(pt.toString());\n+        Asserts.check(pt.getRequestNum() == 3, \"fail to load all target hosts\");\n+        while (!pt.isCompleted()) {\n+            try {\n+                Thread.sleep(100L);\n+                System.err.println(String.format(\"POLL_JOB_PROGRESS (%.5g%%)\",\n+                        pt.getProgress()));\n+            } catch (InterruptedException e) {\n+                e.printStackTrace();\n+            }\n+        }\n+\n+    }    \n+    \n+    \n     /**\n      * With CMS query; async timeout 15 seconds\n      * Added token"
            }
        ]
    },
    {
        "sha": "770e29b8cb838c5faef53de183404b71626e846c",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6NzcwZTI5YjhjYjgzOGM1ZmFlZjUzZGUxODM0MDRiNzE2MjZlODQ2Yw==",
        "commit": {
            "author": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2017-01-31T00:47:51Z"
            },
            "committer": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2017-01-31T00:47:51Z"
            },
            "message": "#56 cms query for target hosts with auth token",
            "tree": {
                "sha": "d4ba62fb356f0eb8c7ea89af0ed0bc016b433df0",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/d4ba62fb356f0eb8c7ea89af0ed0bc016b433df0"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/770e29b8cb838c5faef53de183404b71626e846c",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/770e29b8cb838c5faef53de183404b71626e846c",
        "html_url": "https://github.com/eBay/parallec/commit/770e29b8cb838c5faef53de183404b71626e846c",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/770e29b8cb838c5faef53de183404b71626e846c/comments",
        "author": null,
        "committer": null,
        "parents": [
            {
                "sha": "15bdff3018f93caa938c98067b76d14756e473ba",
                "url": "https://api.github.com/repos/eBay/parallec/commits/15bdff3018f93caa938c98067b76d14756e473ba",
                "html_url": "https://github.com/eBay/parallec/commit/15bdff3018f93caa938c98067b76d14756e473ba"
            }
        ],
        "stats": {
            "total": 114,
            "additions": 92,
            "deletions": 22
        },
        "files": [
            {
                "sha": "140a67812d1bf2837ba5b48ab378a4b7d3355c1d",
                "filename": "CHANGELOG.md",
                "status": "modified",
                "additions": 7,
                "deletions": 0,
                "changes": 7,
                "blob_url": "https://github.com/eBay/parallec/blob/770e29b8cb838c5faef53de183404b71626e846c/CHANGELOG.md",
                "raw_url": "https://github.com/eBay/parallec/raw/770e29b8cb838c5faef53de183404b71626e846c/CHANGELOG.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/CHANGELOG.md?ref=770e29b8cb838c5faef53de183404b71626e846c",
                "patch": "@@ -2,6 +2,13 @@ Parallec Change Log\n ==========\n \n \n+## Version 0.10.4\n+\n+_2017-01-29_\n+\n+* Issue [#56](https://github.com/eBay/parallec/issues/56).  For loading target hosts from CMS (YiDB), add support for authorization token.\n+\n+\n ## Version 0.10.3\n \n _2016-11-03_"
            },
            {
                "sha": "594302492b3e3564019a26250cf3e5e6b96fcc06",
                "filename": "README.md",
                "status": "modified",
                "additions": 3,
                "deletions": 3,
                "changes": 6,
                "blob_url": "https://github.com/eBay/parallec/blob/770e29b8cb838c5faef53de183404b71626e846c/README.md",
                "raw_url": "https://github.com/eBay/parallec/raw/770e29b8cb838c5faef53de183404b71626e846c/README.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/README.md?ref=770e29b8cb838c5faef53de183404b71626e846c",
                "patch": "@@ -4,7 +4,7 @@\n ![build status](https://img.shields.io/badge/build-info=>-green.svg) [![Build Status](https://travis-ci.org/eBay/parallec.svg?branch=master)](https://travis-ci.org/eBay/parallec) [![Coverage Status](https://img.shields.io/codecov/c/github/eBay/parallec.svg)](https://codecov.io/github/eBay/parallec) [![Apache V2.0 License](http://www.parallec.io/images/apache2.svg) ](https://github.com/eBay/parallec/blob/master/LICENSE)\n \n \n-![latest 0.10.x](http://img.shields.io/badge/latest_stable-0.10.x=>-green.svg) [ ![latest beta  maven central](https://maven-badges.herokuapp.com/maven-central/io.parallec/parallec-core/badge.svg?style=flat)](http://search.maven.org/#artifactdetails|io.parallec|parallec-core|0.10.3|) [![Gitter](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/eBay/parallec?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge)\n+![latest 0.10.x](http://img.shields.io/badge/latest_stable-0.10.x=>-green.svg) [ ![latest beta  maven central](https://maven-badges.herokuapp.com/maven-central/io.parallec/parallec-core/badge.svg?style=flat)](http://search.maven.org/#artifactdetails|io.parallec|parallec-core|0.10.4|) [![Gitter](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/eBay/parallec?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge)\n \n [![Javadoc](http://www.parallec.io/images/parallec-javadoc-blue.svg)](http://www.parallec.io/javadoc/index.html?io/parallec/core/ParallelClient.html) [![Documentation](http://www.parallec.io/images/parallec-documentation-red.svg)](http://www.parallec.io/docs/) [![Samples](http://www.parallec.io/images/parallec-samples-brightgreen.svg)](https://github.com/eBay/parallec-samples) [![Chinese](http://www.parallec.io/images/parallec-cnbrief-blue.svg)](https://github.com/eBay/parallec/blob/master/README-brief-cn.md) \n \n@@ -42,14 +42,14 @@ Donwload [the latest JAR](https://search.maven.org/remote_content?g=io.parallec&\n <dependency>\n \t<groupId>io.parallec</groupId>\n \t<artifactId>parallec-core</artifactId>\n-\t<version>0.10.3</version>\n+\t<version>0.10.4</version>\n </dependency>\n ```\n Snapshots of the development version are available in [Sonatype's `snapshots` repository](https://oss.sonatype.org/content/repositories/snapshots/io/parallec/parallec-core/).\n \n or Gradle:\n ```xml\n-compile 'io.parallec:parallec-core:0.10.3'\n+compile 'io.parallec:parallec-core:0.10.4'\n ```\n \n "
            },
            {
                "sha": "c5878a105730a2ed1fb2df30da8d576a92d933ff",
                "filename": "pom.xml",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/770e29b8cb838c5faef53de183404b71626e846c/pom.xml",
                "raw_url": "https://github.com/eBay/parallec/raw/770e29b8cb838c5faef53de183404b71626e846c/pom.xml",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/pom.xml?ref=770e29b8cb838c5faef53de183404b71626e846c",
                "patch": "@@ -4,7 +4,7 @@\n \t<modelVersion>4.0.0</modelVersion>\n \t<groupId>io.parallec</groupId>\n \t<artifactId>parallec-core</artifactId>\n-\t<version>0.10.3</version>\n+\t<version>0.10.4</version>\n \t<packaging>jar</packaging>\n \t<name>io.parallec:parallec-core</name>\n \t<url>https://github.com/eBay/parallec</url>"
            },
            {
                "sha": "39b042d59671929a0d76822e8c2dd6dcfad5108b",
                "filename": "src/main/java/io/parallec/core/ParallelTaskBuilder.java",
                "status": "modified",
                "additions": 31,
                "deletions": 1,
                "changes": 32,
                "blob_url": "https://github.com/eBay/parallec/blob/770e29b8cb838c5faef53de183404b71626e846c/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FParallelTaskBuilder.java",
                "raw_url": "https://github.com/eBay/parallec/raw/770e29b8cb838c5faef53de183404b71626e846c/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FParallelTaskBuilder.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FParallelTaskBuilder.java?ref=770e29b8cb838c5faef53de183404b71626e846c",
                "patch": "@@ -547,7 +547,8 @@ public ParallelTaskBuilder setTargetHostsFromLineByLineText(\n \n \n     /**\n-     * Sets the target hosts from cms query url.\n+     * Sets the target hosts from CMS query url. \n+     * Will use label as projection, will not use authorization token\n      *\n      * @param cmsQueryUrl\n      *            the cms query url\n@@ -563,6 +564,7 @@ public ParallelTaskBuilder setTargetHostsFromCmsQueryUrl(String cmsQueryUrl)\n     }\n \n     /**\n+     * Sets the target hosts from CMS query url. Will not use authorization token.\n      * CMS: configuration-management-service. \n      * A.k.a. YiDB: http://www.yidb.org/\n      * \n@@ -587,6 +589,34 @@ public ParallelTaskBuilder setTargetHostsFromCmsQueryUrl(\n                 projection);\n         return this;\n     }\n+    \n+    /**\n+     * CMS: configuration-management-service. \n+     * A.k.a. YiDB: http://www.yidb.org/\n+     * \n+     * Parallec supports CMS query\n+     * \n+     * http://ccoetech.ebay.com/cms-configuration-management-service-based-\n+     * mongodb\n+     *\n+     * @param cmsQueryUrl\n+     *            the cms query url\n+     * @param projection\n+     *            the projection\n+     * @param token\n+     *            the CMS authorization token if needed\n+     * @return the parallel task builder\n+     * @throws TargetHostsLoadException\n+     *             the target hosts load exception\n+     */\n+\n+    public ParallelTaskBuilder setTargetHostsFromCmsQueryUrl(\n+            String cmsQueryUrl, String projection, String token)\n+            throws TargetHostsLoadException {\n+        this.targetHosts = targetHostBuilder.setTargetHostsFromCmsQueryUrl(cmsQueryUrl,\n+                projection, token);\n+        return this;\n+    }\n \n     /**\n      * Gets the TargetHostsBuilder."
            },
            {
                "sha": "bef0e6024955e233813c653f0db60096e5fe7c0d",
                "filename": "src/main/java/io/parallec/core/taskbuilder/targethosts/ITargetHostsBuilder.java",
                "status": "modified",
                "additions": 16,
                "deletions": 0,
                "changes": 16,
                "blob_url": "https://github.com/eBay/parallec/blob/770e29b8cb838c5faef53de183404b71626e846c/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Ftaskbuilder%2Ftargethosts%2FITargetHostsBuilder.java",
                "raw_url": "https://github.com/eBay/parallec/raw/770e29b8cb838c5faef53de183404b71626e846c/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Ftaskbuilder%2Ftargethosts%2FITargetHostsBuilder.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Ftaskbuilder%2Ftargethosts%2FITargetHostsBuilder.java?ref=770e29b8cb838c5faef53de183404b71626e846c",
                "patch": "@@ -104,4 +104,20 @@ public List<String> setTargetHostsFromCmsQueryUrl(String cmsQueryUrl)\n     public List<String> setTargetHostsFromCmsQueryUrl(String cmsQueryUrl,\n             String projection) throws TargetHostsLoadException;\n \n+    /**\n+     * Sets the target hosts from cms query url with projection and authorization token.\n+     *\n+     * @param cmsQueryUrl\n+     *            the cms query url\n+     * @param projection\n+     *            the projection\n+     * @param token\n+     *            the cms authorization token\n+     * @return the list\n+     * @throws TargetHostsLoadException\n+     *             the target hosts load exception\n+     */\n+    public List<String> setTargetHostsFromCmsQueryUrl(String cmsQueryUrl,\n+            String projection, String token) throws TargetHostsLoadException;\n+    \n }"
            },
            {
                "sha": "3b1483d80a45334a87b0ce8ff376a64721625aa2",
                "filename": "src/main/java/io/parallec/core/taskbuilder/targethosts/TargetHostsBuilder.java",
                "status": "modified",
                "additions": 17,
                "deletions": 4,
                "changes": 21,
                "blob_url": "https://github.com/eBay/parallec/blob/770e29b8cb838c5faef53de183404b71626e846c/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Ftaskbuilder%2Ftargethosts%2FTargetHostsBuilder.java",
                "raw_url": "https://github.com/eBay/parallec/raw/770e29b8cb838c5faef53de183404b71626e846c/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Ftaskbuilder%2Ftargethosts%2FTargetHostsBuilder.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Ftaskbuilder%2Ftargethosts%2FTargetHostsBuilder.java?ref=770e29b8cb838c5faef53de183404b71626e846c",
                "patch": "@@ -185,7 +185,6 @@ public List<String> setTargetHostsFromCmsQueryUrl(String cmsQueryUrl)\n \n             logger.info(\"will use default project label\");\n             targetHosts = setTargetHostsFromCmsQueryUrl(cmsQueryUrl, \"label\");\n-\n         } catch (Exception e) {\n             throw new TargetHostsLoadException(\"error when reading  \"\n                     + cmsQueryUrl, e);\n@@ -194,6 +193,8 @@ public List<String> setTargetHostsFromCmsQueryUrl(String cmsQueryUrl)\n         return targetHosts;\n \n     }\n+    \n+    \n \n     /*\n      * (non-Javadoc)\n@@ -204,6 +205,18 @@ public List<String> setTargetHostsFromCmsQueryUrl(String cmsQueryUrl)\n     @Override\n     public List<String> setTargetHostsFromCmsQueryUrl(String cmsQueryUrl,\n             String projection) {\n+        return setTargetHostsFromCmsQueryUrl(cmsQueryUrl, projection, null);\n+    }\n+\n+    /*\n+     * (non-Javadoc)\n+     * \n+     * @see io.parallec.core.taskbuilder.targethosts.ITargetHostsBuilder#\n+     * setTargetHostsFromCmsQueryUrl(java.lang.String, java.lang.String, java.lang.String)\n+     */\n+    @Override\n+    public List<String> setTargetHostsFromCmsQueryUrl(String cmsQueryUrl,\n+            String projection, String token) {\n \n         List<String> targetHosts = new ArrayList<String>();\n \n@@ -215,7 +228,7 @@ public List<String> setTargetHostsFromCmsQueryUrl(String cmsQueryUrl,\n             }\n             TargetHostsBuilderHelperCms helper = new TargetHostsBuilderHelperCms();\n             targetHosts = helper.getNodeListCompleteURLForCMS(cmsQueryUrl,\n-                    projection);\n+                    projection, token);\n \n         } catch (Exception e) {\n             throw new TargetHostsLoadException(\"error when reading  \"\n@@ -224,6 +237,6 @@ public List<String> setTargetHostsFromCmsQueryUrl(String cmsQueryUrl,\n \n         return targetHosts;\n \n-    }\n-\n+    }    \n+    \n }"
            },
            {
                "sha": "9d6d235bafad7d3c23e41f56a7282140c5b80637",
                "filename": "src/main/java/io/parallec/core/taskbuilder/targethosts/TargetHostsBuilderHelperCms.java",
                "status": "modified",
                "additions": 7,
                "deletions": 11,
                "changes": 18,
                "blob_url": "https://github.com/eBay/parallec/blob/770e29b8cb838c5faef53de183404b71626e846c/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Ftaskbuilder%2Ftargethosts%2FTargetHostsBuilderHelperCms.java",
                "raw_url": "https://github.com/eBay/parallec/raw/770e29b8cb838c5faef53de183404b71626e846c/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Ftaskbuilder%2Ftargethosts%2FTargetHostsBuilderHelperCms.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Ftaskbuilder%2Ftargethosts%2FTargetHostsBuilderHelperCms.java?ref=770e29b8cb838c5faef53de183404b71626e846c",
                "patch": "@@ -106,7 +106,7 @@ static List<String> getFQDNValueListCMS(JSONObject jObj,\n      * @throws JSONException\n      *             the JSON exception\n      */\n-    static JSONObject readJsonFromUrlWithCmsHeader(String url)\n+    static JSONObject readJsonFromUrlWithCmsHeader(String url, String token)\n             throws MalformedURLException, IOException, JSONException {\n         InputStream is = null;\n \n@@ -116,6 +116,9 @@ static JSONObject readJsonFromUrlWithCmsHeader(String url)\n             HttpURLConnection.setFollowRedirects(false);\n             HttpURLConnection con = (HttpURLConnection) new URL(url).openConnection();\n             con.setRequestMethod(\"GET\");\n+            if(token!=null){\n+                con.setRequestProperty(\"Authorization\", token);\n+            }\n             con.setConnectTimeout(ParallecGlobalConfig.urlConnectionConnectTimeoutMillis);\n             con.setReadTimeout(ParallecGlobalConfig.urlConnectionReadTimeoutMillis);\n             is = con.getInputStream();\n@@ -141,7 +144,6 @@ static JSONObject readJsonFromUrlWithCmsHeader(String url)\n \n \n     /**\n-     * TODO : will be removed .\n      *\n      * @param url\n      *            the url\n@@ -150,7 +152,7 @@ static JSONObject readJsonFromUrlWithCmsHeader(String url)\n      * @return the node list complete url for cms\n      */\n     public List<String> getNodeListCompleteURLForCMS(String url,\n-            String projectionStr) {\n+            String projectionStr, String token) {\n         List<String> nodes = new ArrayList<String>();\n \n         try {\n@@ -160,7 +162,7 @@ public List<String> getNodeListCompleteURLForCMS(String url,\n \n             // add 1st\n             // updated 201501 for adding auth header.\n-            JSONObject jsonObject = readJsonFromUrlWithCmsHeader(url);\n+            JSONObject jsonObject = readJsonFromUrlWithCmsHeader(url, token);\n             nodes.addAll(getFQDNValueListCMS(jsonObject, projectionStr));\n             JSONObject jsonObjectNext = jsonObject;\n             Boolean hasMore = false;\n@@ -169,9 +171,6 @@ public List<String> getNodeListCompleteURLForCMS(String url,\n             String KEY_NEXT_PARENT = \"next\";\n             String KEY_NEXT_URL = \"url\";\n             do {\n-                /**\n-                 * 20141103: BEGIN: for loop to check if has more.\n-                 */\n                 hasMore = false;\n                 hasMoreNextUrl = null;\n \n@@ -190,7 +189,7 @@ public List<String> getNodeListCompleteURLForCMS(String url,\n                                 + hasMoreNextUrl;\n \n                         // 201501 add here too.\n-                        jsonObjectNext = readJsonFromUrlWithCmsHeader(nextUrlComplete);\n+                        jsonObjectNext = readJsonFromUrlWithCmsHeader(nextUrlComplete, token);\n                         nodes.addAll(getFQDNValueListCMS(jsonObjectNext,\n                                 projectionStr));\n \n@@ -200,9 +199,6 @@ public List<String> getNodeListCompleteURLForCMS(String url,\n                 }\n             } while (hasMore);\n \n-            /**\n-             * 20141103: END: for loop to check if has more.\n-             */\n \n             // filtering duplicated nodes:\n             int removedDuplicatedNodeCount = PcTargetHostsUtils"
            },
            {
                "sha": "1dbfe6c47cc6e92aae3e2314b7446a7c2b3f6d3e",
                "filename": "src/test/java/io/parallec/core/main/http/ParallelClientHttpFromCmsAsyncTest.java",
                "status": "modified",
                "additions": 3,
                "deletions": 2,
                "changes": 5,
                "blob_url": "https://github.com/eBay/parallec/blob/770e29b8cb838c5faef53de183404b71626e846c/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2FParallelClientHttpFromCmsAsyncTest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/770e29b8cb838c5faef53de183404b71626e846c/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2FParallelClientHttpFromCmsAsyncTest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2FParallelClientHttpFromCmsAsyncTest.java?ref=770e29b8cb838c5faef53de183404b71626e846c",
                "patch": "@@ -32,14 +32,15 @@ public static void shutdown() throws Exception {\n \n     /**\n      * With CMS query; async timeout 15 seconds\n+     * Added token\n      */\n     @Test(timeout = 15000)\n-    public void hitCmsQuerySinglePageAsync() {\n+    public void hitCmsQuerySinglePageWithTokenAsync() {\n \n         // http://ccoetech.ebay.com/cms-configuration-management-service-based-mongodb\n         String cmsQueryUrl = URL_CMS_QUERY_SINGLE_PAGE;\n         ParallelTask pt = pc.prepareHttpGet(\"/validateInternals.html\")\n-                .setTargetHostsFromCmsQueryUrl(cmsQueryUrl, \"label\")\n+                .setTargetHostsFromCmsQueryUrl(cmsQueryUrl, \"label\", \"someToken\")\n                 .setConcurrency(1700).async()\n                 .execute(new ParallecResponseHandler() {\n "
            },
            {
                "sha": "7660a26657984634f75855e2f4ce24a2dcaac911",
                "filename": "src/test/java/io/parallec/core/taskbuilder/ParallelTaskBuilderTest.java",
                "status": "modified",
                "additions": 7,
                "deletions": 0,
                "changes": 7,
                "blob_url": "https://github.com/eBay/parallec/blob/770e29b8cb838c5faef53de183404b71626e846c/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Ftaskbuilder%2FParallelTaskBuilderTest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/770e29b8cb838c5faef53de183404b71626e846c/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Ftaskbuilder%2FParallelTaskBuilderTest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Ftaskbuilder%2FParallelTaskBuilderTest.java?ref=770e29b8cb838c5faef53de183404b71626e846c",
                "patch": "@@ -139,6 +139,13 @@ public void testSetterGetters() throws Exception {\n         } catch (TargetHostsLoadException e) {\n             logger.info(\"expected error \" + e);\n         }\n+        \n+        try {\n+            tb.setTargetHostsFromCmsQueryUrl(\"\", \"\", \"token\");\n+        } catch (TargetHostsLoadException e) {\n+            logger.info(\"expected error \" + e);\n+        }\n+        \n         tb.getTargetHostMeta();\n         tb.setTargetHostMeta(null);\n         tb.setSshPort(22);"
            }
        ]
    },
    {
        "sha": "15bdff3018f93caa938c98067b76d14756e473ba",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6MTViZGZmMzAxOGY5M2NhYTkzOGM5ODA2N2I3NmQxNDc1NmU0NzNiYQ==",
        "commit": {
            "author": {
                "name": "Yuanteng (Jeff) Pei",
                "email": "ypei@ebay.com",
                "date": "2017-01-10T16:32:47Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2017-01-10T16:32:47Z"
            },
            "message": "update readme CN with use cases [skip ci]",
            "tree": {
                "sha": "98d6a7cb9970df85684f4488254ceb745a18c10f",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/98d6a7cb9970df85684f4488254ceb745a18c10f"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/15bdff3018f93caa938c98067b76d14756e473ba",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/15bdff3018f93caa938c98067b76d14756e473ba",
        "html_url": "https://github.com/eBay/parallec/commit/15bdff3018f93caa938c98067b76d14756e473ba",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/15bdff3018f93caa938c98067b76d14756e473ba/comments",
        "author": null,
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "9eac65ef3a20fe848e8f859ec48b385932d67b74",
                "url": "https://api.github.com/repos/eBay/parallec/commits/9eac65ef3a20fe848e8f859ec48b385932d67b74",
                "html_url": "https://github.com/eBay/parallec/commit/9eac65ef3a20fe848e8f859ec48b385932d67b74"
            }
        ],
        "stats": {
            "total": 7,
            "additions": 7,
            "deletions": 0
        },
        "files": [
            {
                "sha": "eb411386fd6a448751418669510bc5f0b412f1da",
                "filename": "README-brief-cn.md",
                "status": "modified",
                "additions": 7,
                "deletions": 0,
                "changes": 7,
                "blob_url": "https://github.com/eBay/parallec/blob/15bdff3018f93caa938c98067b76d14756e473ba/README-brief-cn.md",
                "raw_url": "https://github.com/eBay/parallec/raw/15bdff3018f93caa938c98067b76d14756e473ba/README-brief-cn.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/README-brief-cn.md?ref=15bdff3018f93caa938c98067b76d14756e473ba",
                "patch": "@@ -20,6 +20,13 @@ Parallec内置特别的响应上下文（response context），在处理服务\n \n 通过过去一年内部使用和开源REST Superman/ REST Commander的开发， 反馈，经验教训，我们现在做把REST Commander的核心做成一个易于使用的独立库 （便于从Maven导入，让所有程序都写20行代码变成REST Commander）。在此基础上，我们添加超过[**15个新的功能**](https://github.com/eBay/parallec/blob/master/README.md#compare)，**改写超过70%的代码**，**以90%以上的测试覆盖率**，确保了用户和开源贡献者能够更加放心的开发和使用。与此同时，我们也把整体软件结构进行了优化，使得大部分内部开发可以直接在github开源平台上直接进行。\n \n+**生产环境使用案例**：广泛用于基础设施软件作为轮询和聚合引擎:\n+\n+* 应用程序部署/ PaaS：Parallec已集成在eBay主要生产应用程序部署系统（PaaS）中。 Parallec协调10+个API任务，每**个任务针对生产中超过1,000个应用程序池的10到1,000个服务器。 Parallec已经与工作流引擎Winder一起使用来处理复杂的部署工作流程。\n+* 数据提取/ ETL：Parallec已被eBay以色列的结构化大数据团队用于对单个第三方服务器执行10k-100k API并行调用，具有显着改进的性能和减少的资源。\n+* 主动探测进行网络故障排除：在eBay的网络/云团队中，Parallec有助于确保极低的错误警报率，从而准确检测交换机软故障。 Parallec在Master组件中充当核心轮询引擎，以检查Agent运行状况，及时有效地消除噪音和错误报警。\n+* Agent管理/Agent Master：在eBay的网站操作/工具团队中，Parallec作为核心引擎，在100,000个生产服务器上管理和监控一种和 puppet agent / salt minion / kubernetes kubelet 类似的agent，以确保快速大规模的并行的操作。\n+\n “Parallec.io现已经被集成在eBay的应用程序部署系统(PaaS)。Parallec被用于控制10个以上的并行API的任务的工作流，每个任务并行执行到数十到数千台的生产服务器的上。与以前的实现相比，Parallec 处理并行操作代码简洁，方便进行批作业的管理，为我们提高了资源利用率和效率。”\n －－ Xiaotang (Sheldon) Shao, Principle Software Engineer, Deployment Platform / PaaS, Cloud Engineering at eBay Inc.\n "
            }
        ]
    },
    {
        "sha": "9eac65ef3a20fe848e8f859ec48b385932d67b74",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6OWVhYzY1ZWYzYTIwZmU4NDhlOGY4NTllYzQ4YjM4NTkzMmQ2N2I3NA==",
        "commit": {
            "author": {
                "name": "Yuanteng (Jeff) Pei",
                "email": "ypei@ebay.com",
                "date": "2016-11-30T23:34:32Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2016-11-30T23:34:32Z"
            },
            "message": "update readme add ebaysf-open icon [skip ci]",
            "tree": {
                "sha": "142f52bedc9e898582f47e525ba3f02c61ccfc45",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/142f52bedc9e898582f47e525ba3f02c61ccfc45"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/9eac65ef3a20fe848e8f859ec48b385932d67b74",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/9eac65ef3a20fe848e8f859ec48b385932d67b74",
        "html_url": "https://github.com/eBay/parallec/commit/9eac65ef3a20fe848e8f859ec48b385932d67b74",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/9eac65ef3a20fe848e8f859ec48b385932d67b74/comments",
        "author": null,
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "b36173ee7be0eaf67413b9f04d906ffe4a3bd884",
                "url": "https://api.github.com/repos/eBay/parallec/commits/b36173ee7be0eaf67413b9f04d906ffe4a3bd884",
                "html_url": "https://github.com/eBay/parallec/commit/b36173ee7be0eaf67413b9f04d906ffe4a3bd884"
            }
        ],
        "stats": {
            "total": 12,
            "additions": 7,
            "deletions": 5
        },
        "files": [
            {
                "sha": "f3d28db80976d2ac661810b68e3e6e7adb60500a",
                "filename": "README.md",
                "status": "modified",
                "additions": 7,
                "deletions": 5,
                "changes": 12,
                "blob_url": "https://github.com/eBay/parallec/blob/9eac65ef3a20fe848e8f859ec48b385932d67b74/README.md",
                "raw_url": "https://github.com/eBay/parallec/raw/9eac65ef3a20fe848e8f859ec48b385932d67b74/README.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/README.md?ref=9eac65ef3a20fe848e8f859ec48b385932d67b74",
                "patch": "@@ -26,10 +26,10 @@ Parallec is a fast parallel async HTTP(S)/SSH/TCP/UDP/Ping client java library b\n \n **[Production Use Cases](http://www.parallec.io/#testimonial-ebay)**: widely used in infrastructure software as [the polling and aggregation engine](https://medium.com/@jeffpeiyt/a-reusable-part-in-many-cloud-projects-2151f42572e9#.31x5rt6j2)\n \n-1. Application Deployment / PaaS: Parallec has been [integrated](http://www.parallec.io/#testimonial-ebay) in eBay main production application deployment system (PaaS). Parallec orchestrates 10+ API tasks, with each task targeting 10s to 1,000s servers over 1,000+ application pools in production. Parallec has been used with work flow engine [Winder](https://github.com/eBay/Winder) to handle work flows more complex but similar to [this one](http://stackoverflow.com/questions/39081350/parallel-ssh-with-executorservice/39671381#39671381).\n-2. Data Extraction / ETL: Parallec has been [used](http://www.parallec.io/#testimonial-ebay) by eBay Israel's web intelligence team for executing 10k-100k API parallel calls to a single 3rd party server with dramatic improved performance and reduced resources. \n-3. Network Troubleshooting via Probing:  In eBay's network / cloud team, Parallec is instrumental to ensure an extremely low false alert rates to accurately detect switch soft failures. Parallec serves as the core polling engine in the master component to check agent healths and mark down agents to effectively and timely eliminate noises.\n-4. Agent Management / Master: In eBay's site operation / tools team, Parallec serves as the core engine to manage and monitor a puppet agent/salt minion/kubernetes kubelet like agent on 100,000+ production servers to ensure scalable operations.\n+1. **Application Deployment / PaaS**: Parallec has been [integrated](http://www.parallec.io/#testimonial-ebay) in eBay main production application deployment system (PaaS). Parallec orchestrates 10+ API tasks, with each task targeting 10s to 1,000s servers over 1,000+ application pools in production. Parallec has been used with work flow engine [Winder](https://github.com/eBay/Winder) to handle work flows more complex but similar to [this one](http://stackoverflow.com/questions/39081350/parallel-ssh-with-executorservice/39671381#39671381).\n+2. **Data Extraction / ETL**: Parallec has been [used](http://www.parallec.io/#testimonial-ebay) by eBay Israel's web intelligence team for executing 10k-100k API parallel calls to a single 3rd party server with dramatic improved performance and reduced resources. \n+3. **Network Troubleshooting via Probing**:  In eBay's network / cloud team, Parallec is instrumental to ensure an extremely low false alert rates to accurately detect switch soft failures. Parallec serves as the core polling engine in the master component to check agent healths and mark down agents to effectively and timely eliminate noises.\n+4. **[Agent Management / Agent Master](https://medium.com/@jeffpeiyt/a-reusable-part-in-many-cloud-projects-2151f42572e9#.31x5rt6j2)**: In eBay's site operation / tools team, Parallec serves as the core engine to manage and monitor a puppet agent/salt minion/kubernetes kubelet like agent on 100,000+ production servers to ensure scalable operations.\n \n ![Workflow Overview](http://www.parallec.io/images/parallec-flow.svg)\n \n@@ -283,7 +283,9 @@ Parallec is served to you by [Yuanteng (Jeff) Pei](https://www.linkedin.com/in/p\n \n \n ##Contributions\n-\n+<div style=\"text-align:right\">\n+  <img src=\"https://github.com/eBay/Winder/blob/master/docs/ebaysf-open-x.png\" width=\"150px\"/>\n+</div>\n Any helpful feedback is more than welcome. This includes feature requests, bug reports, pull requests, constructive feedback, and etc. You must agree on [this](https://github.com/eBay/parallec/blob/master/CONTRIBUTING.md) before submitting a [pull](https://github.com/eBay/parallec/pulls) request.\n \n "
            }
        ]
    },
    {
        "sha": "b36173ee7be0eaf67413b9f04d906ffe4a3bd884",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6YjM2MTczZWU3YmUwZWFmNjc0MTNiOWYwNGQ5MDZmZmU0YTNiZDg4NA==",
        "commit": {
            "author": {
                "name": "Yuanteng (Jeff) Pei",
                "email": "ypei@ebay.com",
                "date": "2016-11-30T21:04:57Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2016-11-30T21:04:57Z"
            },
            "message": "update readme [skip ci]",
            "tree": {
                "sha": "0d685ec9e8837d55c9d0003e1e0dd0adf0b5998a",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/0d685ec9e8837d55c9d0003e1e0dd0adf0b5998a"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/b36173ee7be0eaf67413b9f04d906ffe4a3bd884",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/b36173ee7be0eaf67413b9f04d906ffe4a3bd884",
        "html_url": "https://github.com/eBay/parallec/commit/b36173ee7be0eaf67413b9f04d906ffe4a3bd884",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/b36173ee7be0eaf67413b9f04d906ffe4a3bd884/comments",
        "author": null,
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "fd9f94c82132df31c2bbc192dca084cf670309d3",
                "url": "https://api.github.com/repos/eBay/parallec/commits/fd9f94c82132df31c2bbc192dca084cf670309d3",
                "html_url": "https://github.com/eBay/parallec/commit/fd9f94c82132df31c2bbc192dca084cf670309d3"
            }
        ],
        "stats": {
            "total": 2,
            "additions": 1,
            "deletions": 1
        },
        "files": [
            {
                "sha": "cf52f7757eaeed43fcc7ec2a6791f96e942cd0a6",
                "filename": "README.md",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/b36173ee7be0eaf67413b9f04d906ffe4a3bd884/README.md",
                "raw_url": "https://github.com/eBay/parallec/raw/b36173ee7be0eaf67413b9f04d906ffe4a3bd884/README.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/README.md?ref=b36173ee7be0eaf67413b9f04d906ffe4a3bd884",
                "patch": "@@ -26,7 +26,7 @@ Parallec is a fast parallel async HTTP(S)/SSH/TCP/UDP/Ping client java library b\n \n **[Production Use Cases](http://www.parallec.io/#testimonial-ebay)**: widely used in infrastructure software as [the polling and aggregation engine](https://medium.com/@jeffpeiyt/a-reusable-part-in-many-cloud-projects-2151f42572e9#.31x5rt6j2)\n \n-1. Application Deployment / PaaS: Parallec has been [integrated](http://www.parallec.io/#testimonial-ebay) in eBay main production application deployment system (PaaS). Parallec orchestrates 10+ API tasks, with each task targeting 10s to 1,000s servers over 1,000+ application pools in production. Parallec has been used with work flow engine [Winder](https://github.com/eBay/Winder) to handle complex work flows similar to [this one](http://stackoverflow.com/questions/39081350/parallel-ssh-with-executorservice/39671381#39671381).\n+1. Application Deployment / PaaS: Parallec has been [integrated](http://www.parallec.io/#testimonial-ebay) in eBay main production application deployment system (PaaS). Parallec orchestrates 10+ API tasks, with each task targeting 10s to 1,000s servers over 1,000+ application pools in production. Parallec has been used with work flow engine [Winder](https://github.com/eBay/Winder) to handle work flows more complex but similar to [this one](http://stackoverflow.com/questions/39081350/parallel-ssh-with-executorservice/39671381#39671381).\n 2. Data Extraction / ETL: Parallec has been [used](http://www.parallec.io/#testimonial-ebay) by eBay Israel's web intelligence team for executing 10k-100k API parallel calls to a single 3rd party server with dramatic improved performance and reduced resources. \n 3. Network Troubleshooting via Probing:  In eBay's network / cloud team, Parallec is instrumental to ensure an extremely low false alert rates to accurately detect switch soft failures. Parallec serves as the core polling engine in the master component to check agent healths and mark down agents to effectively and timely eliminate noises.\n 4. Agent Management / Master: In eBay's site operation / tools team, Parallec serves as the core engine to manage and monitor a puppet agent/salt minion/kubernetes kubelet like agent on 100,000+ production servers to ensure scalable operations."
            }
        ]
    },
    {
        "sha": "fd9f94c82132df31c2bbc192dca084cf670309d3",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6ZmQ5Zjk0YzgyMTMyZGYzMWMyYmJjMTkyZGNhMDg0Y2Y2NzAzMDlkMw==",
        "commit": {
            "author": {
                "name": "Yuanteng (Jeff) Pei",
                "email": "ypei@ebay.com",
                "date": "2016-11-30T20:59:10Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2016-11-30T20:59:10Z"
            },
            "message": "Update Readme. Add link of Winder [skip ci]",
            "tree": {
                "sha": "391e41bfcac8b84ab3c777f528550e22a82958d3",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/391e41bfcac8b84ab3c777f528550e22a82958d3"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/fd9f94c82132df31c2bbc192dca084cf670309d3",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/fd9f94c82132df31c2bbc192dca084cf670309d3",
        "html_url": "https://github.com/eBay/parallec/commit/fd9f94c82132df31c2bbc192dca084cf670309d3",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/fd9f94c82132df31c2bbc192dca084cf670309d3/comments",
        "author": null,
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "1b662664381035760d354e9306290defb10d1375",
                "url": "https://api.github.com/repos/eBay/parallec/commits/1b662664381035760d354e9306290defb10d1375",
                "html_url": "https://github.com/eBay/parallec/commit/1b662664381035760d354e9306290defb10d1375"
            }
        ],
        "stats": {
            "total": 2,
            "additions": 1,
            "deletions": 1
        },
        "files": [
            {
                "sha": "24d6bf1a56df48639f5737a42e955c9193cc5a4d",
                "filename": "README.md",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/fd9f94c82132df31c2bbc192dca084cf670309d3/README.md",
                "raw_url": "https://github.com/eBay/parallec/raw/fd9f94c82132df31c2bbc192dca084cf670309d3/README.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/README.md?ref=fd9f94c82132df31c2bbc192dca084cf670309d3",
                "patch": "@@ -26,7 +26,7 @@ Parallec is a fast parallel async HTTP(S)/SSH/TCP/UDP/Ping client java library b\n \n **[Production Use Cases](http://www.parallec.io/#testimonial-ebay)**: widely used in infrastructure software as [the polling and aggregation engine](https://medium.com/@jeffpeiyt/a-reusable-part-in-many-cloud-projects-2151f42572e9#.31x5rt6j2)\n \n-1. Application Deployment / PaaS: Parallec has been [integrated](http://www.parallec.io/#testimonial-ebay) in eBay main production application deployment system (PaaS). Parallec orchestrates 10+ API tasks, with each task targeting 10s to 1,000s servers over 1,000+ application pools in production.  \n+1. Application Deployment / PaaS: Parallec has been [integrated](http://www.parallec.io/#testimonial-ebay) in eBay main production application deployment system (PaaS). Parallec orchestrates 10+ API tasks, with each task targeting 10s to 1,000s servers over 1,000+ application pools in production. Parallec has been used with work flow engine [Winder](https://github.com/eBay/Winder) to handle complex work flows similar to [this one](http://stackoverflow.com/questions/39081350/parallel-ssh-with-executorservice/39671381#39671381).\n 2. Data Extraction / ETL: Parallec has been [used](http://www.parallec.io/#testimonial-ebay) by eBay Israel's web intelligence team for executing 10k-100k API parallel calls to a single 3rd party server with dramatic improved performance and reduced resources. \n 3. Network Troubleshooting via Probing:  In eBay's network / cloud team, Parallec is instrumental to ensure an extremely low false alert rates to accurately detect switch soft failures. Parallec serves as the core polling engine in the master component to check agent healths and mark down agents to effectively and timely eliminate noises.\n 4. Agent Management / Master: In eBay's site operation / tools team, Parallec serves as the core engine to manage and monitor a puppet agent/salt minion/kubernetes kubelet like agent on 100,000+ production servers to ensure scalable operations."
            }
        ]
    },
    {
        "sha": "1b662664381035760d354e9306290defb10d1375",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6MWI2NjI2NjQzODEwMzU3NjBkMzU0ZTkzMDYyOTBkZWZiMTBkMTM3NQ==",
        "commit": {
            "author": {
                "name": "Yuanteng (Jeff) Pei",
                "email": "ypei@ebay.com",
                "date": "2016-11-28T00:26:49Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2016-11-28T00:26:49Z"
            },
            "message": "Update readme [skip ci]",
            "tree": {
                "sha": "7885edac888565aeac776aee1f9a30921b8e708d",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/7885edac888565aeac776aee1f9a30921b8e708d"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/1b662664381035760d354e9306290defb10d1375",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/1b662664381035760d354e9306290defb10d1375",
        "html_url": "https://github.com/eBay/parallec/commit/1b662664381035760d354e9306290defb10d1375",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/1b662664381035760d354e9306290defb10d1375/comments",
        "author": null,
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "42df8f302ef084d3a13459b3e52bb0a368ad20f6",
                "url": "https://api.github.com/repos/eBay/parallec/commits/42df8f302ef084d3a13459b3e52bb0a368ad20f6",
                "html_url": "https://github.com/eBay/parallec/commit/42df8f302ef084d3a13459b3e52bb0a368ad20f6"
            }
        ],
        "stats": {
            "total": 6,
            "additions": 4,
            "deletions": 2
        },
        "files": [
            {
                "sha": "bd9ea8c178554bbd502d76dcc11d9d76e6f6ada7",
                "filename": "README.md",
                "status": "modified",
                "additions": 4,
                "deletions": 2,
                "changes": 6,
                "blob_url": "https://github.com/eBay/parallec/blob/1b662664381035760d354e9306290defb10d1375/README.md",
                "raw_url": "https://github.com/eBay/parallec/raw/1b662664381035760d354e9306290defb10d1375/README.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/README.md?ref=1b662664381035760d354e9306290defb10d1375",
                "patch": "@@ -15,14 +15,16 @@\n \n [Tweeted](https://twitter.com/jboner/status/663618652063813632) by the Creator of Akka & Featured in [ [This Week in #Scala](http://www.cakesolutions.net/teamblogs/this-week-in-scala-16/11/2015) | [OSChina](http://www.oschina.net/p/parallec) - [2015 Top 100](http://www.oschina.net/news/69808/2015-annual-ranking-top-100-new-open-source-software) ]\n \n-Parallec is a scalable yet agile polling and aggregation engine: a fast parallel async HTTP(S)/SSH/TCP/UDP/Ping client java library based on [Akka](http://akka.io). Scalably aggregate and handle API responses **anyway** and send it **anywhere** by writing [20 lines](https://www.youtube.com/watch?v=QcavegPMDms) of code. A super convenient **response context** let you pass in/out any object when handling the responses. Now you can conduct scalable API calls, then effortlessly pass aggregated data anywhere to elastic search, kafka, MongoDB, graphite, memcached, etc. Flexible task level concurrency control without creating a 1,000 threads thread pool. Parallec means  **Paralle**l **C**lient (pronounced as \"Para-like\"). Visit [www.parallec.io](http://www.parallec.io)\n+### Overview\n+\n+Parallec is a fast parallel async HTTP(S)/SSH/TCP/UDP/Ping client java library based on [Akka](http://akka.io). Scalably aggregate and handle API responses **anyway** and send it **anywhere** by writing [20 lines](https://www.youtube.com/watch?v=QcavegPMDms) of code. A super convenient **response context** let you pass in/out any object when handling the responses. Now you can conduct scalable API calls, then effortlessly pass aggregated data anywhere to elastic search, kafka, MongoDB, graphite, memcached, etc. Flexible task level concurrency control without creating a 1,000 threads thread pool. Parallec means  **Paralle**l **C**lient (pronounced as \"Para-like\"). Visit [www.parallec.io](http://www.parallec.io)\n \n **[Watch Demo](https://github.com/eBay/parallec/wiki/Parallec-Aggregates-HTTP-Responses-from-8000-Servers)**: **8,000** web server HTTP response aggregation to memory in **12** seconds / to ElasticSearch in **16** seconds.\n \n **Aggregated error messages - Debug friendly with full visibility**: Having trouble debugging in concurrent environment? Not any more! All exceptions, timeout, stack traces, request sent and response received time are **captured and aggregated** in the [response](http://www.parallec.io/javadoc/index.html?io/parallec/core/ResponseOnSingleTask.html) map. It is available in [ParallelTask](http://www.parallec.io/javadoc/index.html?io/parallec/core/ParallelTask.html) for polling right after you execute a task asynchronously.  Multi-level (worker/manager) timeout guarantees tasks return even for 100,000s of requests.  \n \n \n-**[Production Use Cases](http://www.parallec.io/#testimonial-ebay)**: widely used in many distributed systems as the polling and aggregation engine\n+**[Production Use Cases](http://www.parallec.io/#testimonial-ebay)**: widely used in infrastructure software as [the polling and aggregation engine](https://medium.com/@jeffpeiyt/a-reusable-part-in-many-cloud-projects-2151f42572e9#.31x5rt6j2)\n \n 1. Application Deployment / PaaS: Parallec has been [integrated](http://www.parallec.io/#testimonial-ebay) in eBay main production application deployment system (PaaS). Parallec orchestrates 10+ API tasks, with each task targeting 10s to 1,000s servers over 1,000+ application pools in production.  \n 2. Data Extraction / ETL: Parallec has been [used](http://www.parallec.io/#testimonial-ebay) by eBay Israel's web intelligence team for executing 10k-100k API parallel calls to a single 3rd party server with dramatic improved performance and reduced resources. "
            }
        ]
    },
    {
        "sha": "42df8f302ef084d3a13459b3e52bb0a368ad20f6",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6NDJkZjhmMzAyZWYwODRkM2ExMzQ1OWIzZTUyYmIwYTM2OGFkMjBmNg==",
        "commit": {
            "author": {
                "name": "Yuanteng (Jeff) Pei",
                "email": "ypei@ebay.com",
                "date": "2016-11-19T05:02:55Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2016-11-19T05:02:55Z"
            },
            "message": "update readme [skip ci]",
            "tree": {
                "sha": "a8a608365c1c01e554167945dc9a50ee01fda149",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/a8a608365c1c01e554167945dc9a50ee01fda149"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/42df8f302ef084d3a13459b3e52bb0a368ad20f6",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/42df8f302ef084d3a13459b3e52bb0a368ad20f6",
        "html_url": "https://github.com/eBay/parallec/commit/42df8f302ef084d3a13459b3e52bb0a368ad20f6",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/42df8f302ef084d3a13459b3e52bb0a368ad20f6/comments",
        "author": null,
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "40c3ee926558a3ae0a1b0f18232145fa4503e331",
                "url": "https://api.github.com/repos/eBay/parallec/commits/40c3ee926558a3ae0a1b0f18232145fa4503e331",
                "html_url": "https://github.com/eBay/parallec/commit/40c3ee926558a3ae0a1b0f18232145fa4503e331"
            }
        ],
        "stats": {
            "total": 4,
            "additions": 2,
            "deletions": 2
        },
        "files": [
            {
                "sha": "6962c23e9363f248e43a5bf5774b08ee5a85e070",
                "filename": "README.md",
                "status": "modified",
                "additions": 2,
                "deletions": 2,
                "changes": 4,
                "blob_url": "https://github.com/eBay/parallec/blob/42df8f302ef084d3a13459b3e52bb0a368ad20f6/README.md",
                "raw_url": "https://github.com/eBay/parallec/raw/42df8f302ef084d3a13459b3e52bb0a368ad20f6/README.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/README.md?ref=42df8f302ef084d3a13459b3e52bb0a368ad20f6",
                "patch": "@@ -15,14 +15,14 @@\n \n [Tweeted](https://twitter.com/jboner/status/663618652063813632) by the Creator of Akka & Featured in [ [This Week in #Scala](http://www.cakesolutions.net/teamblogs/this-week-in-scala-16/11/2015) | [OSChina](http://www.oschina.net/p/parallec) - [2015 Top 100](http://www.oschina.net/news/69808/2015-annual-ranking-top-100-new-open-source-software) ]\n \n-Parallec is the ultimate polling and aggregation engine: a fast parallel async HTTP(S)/SSH/TCP/UDP/Ping client java library based on [Akka](http://akka.io). Scalably aggregate and handle API responses **anyway** and send it **anywhere** by writing [20 lines](https://www.youtube.com/watch?v=QcavegPMDms) of code. A super convenient **response context** let you pass in/out any object when handling the responses. Now you can conduct scalable API calls, then effortlessly pass aggregated data anywhere to elastic search, kafka, MongoDB, graphite, memcached, etc. Flexible task level concurrency control without creating a 1,000 threads thread pool. Parallec means  **Paralle**l **C**lient (pronounced as \"Para-like\"). Visit [www.parallec.io](http://www.parallec.io)\n+Parallec is a scalable yet agile polling and aggregation engine: a fast parallel async HTTP(S)/SSH/TCP/UDP/Ping client java library based on [Akka](http://akka.io). Scalably aggregate and handle API responses **anyway** and send it **anywhere** by writing [20 lines](https://www.youtube.com/watch?v=QcavegPMDms) of code. A super convenient **response context** let you pass in/out any object when handling the responses. Now you can conduct scalable API calls, then effortlessly pass aggregated data anywhere to elastic search, kafka, MongoDB, graphite, memcached, etc. Flexible task level concurrency control without creating a 1,000 threads thread pool. Parallec means  **Paralle**l **C**lient (pronounced as \"Para-like\"). Visit [www.parallec.io](http://www.parallec.io)\n \n **[Watch Demo](https://github.com/eBay/parallec/wiki/Parallec-Aggregates-HTTP-Responses-from-8000-Servers)**: **8,000** web server HTTP response aggregation to memory in **12** seconds / to ElasticSearch in **16** seconds.\n \n **Aggregated error messages - Debug friendly with full visibility**: Having trouble debugging in concurrent environment? Not any more! All exceptions, timeout, stack traces, request sent and response received time are **captured and aggregated** in the [response](http://www.parallec.io/javadoc/index.html?io/parallec/core/ResponseOnSingleTask.html) map. It is available in [ParallelTask](http://www.parallec.io/javadoc/index.html?io/parallec/core/ParallelTask.html) for polling right after you execute a task asynchronously.  Multi-level (worker/manager) timeout guarantees tasks return even for 100,000s of requests.  \n \n \n-**[Production Use Cases](http://www.parallec.io/#testimonial-ebay)**: widely used in many distributed systems as the  ultimate polling and aggregation engine\n+**[Production Use Cases](http://www.parallec.io/#testimonial-ebay)**: widely used in many distributed systems as the polling and aggregation engine\n \n 1. Application Deployment / PaaS: Parallec has been [integrated](http://www.parallec.io/#testimonial-ebay) in eBay main production application deployment system (PaaS). Parallec orchestrates 10+ API tasks, with each task targeting 10s to 1,000s servers over 1,000+ application pools in production.  \n 2. Data Extraction / ETL: Parallec has been [used](http://www.parallec.io/#testimonial-ebay) by eBay Israel's web intelligence team for executing 10k-100k API parallel calls to a single 3rd party server with dramatic improved performance and reduced resources. "
            }
        ]
    },
    {
        "sha": "40c3ee926558a3ae0a1b0f18232145fa4503e331",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6NDBjM2VlOTI2NTU4YTNhZTBhMWIwZjE4MjMyMTQ1ZmE0NTAzZTMzMQ==",
        "commit": {
            "author": {
                "name": "Yuanteng (Jeff) Pei",
                "email": "ypei@ebay.com",
                "date": "2016-11-18T17:49:33Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2016-11-18T17:49:33Z"
            },
            "message": "update readme [skip ci]",
            "tree": {
                "sha": "4b31fe7d2f7c41c118e9df90c31d8ea1a15a3323",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/4b31fe7d2f7c41c118e9df90c31d8ea1a15a3323"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/40c3ee926558a3ae0a1b0f18232145fa4503e331",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/40c3ee926558a3ae0a1b0f18232145fa4503e331",
        "html_url": "https://github.com/eBay/parallec/commit/40c3ee926558a3ae0a1b0f18232145fa4503e331",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/40c3ee926558a3ae0a1b0f18232145fa4503e331/comments",
        "author": null,
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "b3a069aed62f5006306e51cadb3925fdea9bd003",
                "url": "https://api.github.com/repos/eBay/parallec/commits/b3a069aed62f5006306e51cadb3925fdea9bd003",
                "html_url": "https://github.com/eBay/parallec/commit/b3a069aed62f5006306e51cadb3925fdea9bd003"
            }
        ],
        "stats": {
            "total": 4,
            "additions": 2,
            "deletions": 2
        },
        "files": [
            {
                "sha": "d9320626f8ad6a207adf86fe772f2a46871bdf03",
                "filename": "README.md",
                "status": "modified",
                "additions": 2,
                "deletions": 2,
                "changes": 4,
                "blob_url": "https://github.com/eBay/parallec/blob/40c3ee926558a3ae0a1b0f18232145fa4503e331/README.md",
                "raw_url": "https://github.com/eBay/parallec/raw/40c3ee926558a3ae0a1b0f18232145fa4503e331/README.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/README.md?ref=40c3ee926558a3ae0a1b0f18232145fa4503e331",
                "patch": "@@ -15,14 +15,14 @@\n \n [Tweeted](https://twitter.com/jboner/status/663618652063813632) by the Creator of Akka & Featured in [ [This Week in #Scala](http://www.cakesolutions.net/teamblogs/this-week-in-scala-16/11/2015) | [OSChina](http://www.oschina.net/p/parallec) - [2015 Top 100](http://www.oschina.net/news/69808/2015-annual-ranking-top-100-new-open-source-software) ]\n \n-Parallec is the ultimate polling engine: a fast parallel async HTTP(S)/SSH/TCP/UDP/Ping client java library based on [Akka](http://akka.io). Scalably aggregate and handle API responses **anyway** and send it **anywhere** by writing [20 lines](https://www.youtube.com/watch?v=QcavegPMDms) of code. A super convenient **response context** let you pass in/out any object when handling the responses. Now you can conduct scalable API calls, then effortlessly pass aggregated data anywhere to elastic search, kafka, MongoDB, graphite, memcached, etc. Flexible task level concurrency control without creating a 1,000 threads thread pool. Parallec means  **Paralle**l **C**lient (pronounced as \"Para-like\"). Visit [www.parallec.io](http://www.parallec.io)\n+Parallec is the ultimate polling and aggregation engine: a fast parallel async HTTP(S)/SSH/TCP/UDP/Ping client java library based on [Akka](http://akka.io). Scalably aggregate and handle API responses **anyway** and send it **anywhere** by writing [20 lines](https://www.youtube.com/watch?v=QcavegPMDms) of code. A super convenient **response context** let you pass in/out any object when handling the responses. Now you can conduct scalable API calls, then effortlessly pass aggregated data anywhere to elastic search, kafka, MongoDB, graphite, memcached, etc. Flexible task level concurrency control without creating a 1,000 threads thread pool. Parallec means  **Paralle**l **C**lient (pronounced as \"Para-like\"). Visit [www.parallec.io](http://www.parallec.io)\n \n **[Watch Demo](https://github.com/eBay/parallec/wiki/Parallec-Aggregates-HTTP-Responses-from-8000-Servers)**: **8,000** web server HTTP response aggregation to memory in **12** seconds / to ElasticSearch in **16** seconds.\n \n **Aggregated error messages - Debug friendly with full visibility**: Having trouble debugging in concurrent environment? Not any more! All exceptions, timeout, stack traces, request sent and response received time are **captured and aggregated** in the [response](http://www.parallec.io/javadoc/index.html?io/parallec/core/ResponseOnSingleTask.html) map. It is available in [ParallelTask](http://www.parallec.io/javadoc/index.html?io/parallec/core/ParallelTask.html) for polling right after you execute a task asynchronously.  Multi-level (worker/manager) timeout guarantees tasks return even for 100,000s of requests.  \n \n \n-**[Production Use Cases](http://www.parallec.io/#testimonial-ebay)**: widely used in many distributed systems as the  ultimate polling engine\n+**[Production Use Cases](http://www.parallec.io/#testimonial-ebay)**: widely used in many distributed systems as the  ultimate polling and aggregation engine\n \n 1. Application Deployment / PaaS: Parallec has been [integrated](http://www.parallec.io/#testimonial-ebay) in eBay main production application deployment system (PaaS). Parallec orchestrates 10+ API tasks, with each task targeting 10s to 1,000s servers over 1,000+ application pools in production.  \n 2. Data Extraction / ETL: Parallec has been [used](http://www.parallec.io/#testimonial-ebay) by eBay Israel's web intelligence team for executing 10k-100k API parallel calls to a single 3rd party server with dramatic improved performance and reduced resources. "
            }
        ]
    },
    {
        "sha": "b3a069aed62f5006306e51cadb3925fdea9bd003",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6YjNhMDY5YWVkNjJmNTAwNjMwNmU1MWNhZGIzOTI1ZmRlYTliZDAwMw==",
        "commit": {
            "author": {
                "name": "Yuanteng (Jeff) Pei",
                "email": "ypei@ebay.com",
                "date": "2016-11-16T22:19:36Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2016-11-16T22:19:36Z"
            },
            "message": "Update readme cn for use cases [skip ci]",
            "tree": {
                "sha": "08b7439314603434dbf1da0e144628a8551d4e01",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/08b7439314603434dbf1da0e144628a8551d4e01"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/b3a069aed62f5006306e51cadb3925fdea9bd003",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/b3a069aed62f5006306e51cadb3925fdea9bd003",
        "html_url": "https://github.com/eBay/parallec/commit/b3a069aed62f5006306e51cadb3925fdea9bd003",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/b3a069aed62f5006306e51cadb3925fdea9bd003/comments",
        "author": null,
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "8e9aaac6ae7a9eaf6bd7c5dcfe14d16bee29d3a6",
                "url": "https://api.github.com/repos/eBay/parallec/commits/8e9aaac6ae7a9eaf6bd7c5dcfe14d16bee29d3a6",
                "html_url": "https://github.com/eBay/parallec/commit/8e9aaac6ae7a9eaf6bd7c5dcfe14d16bee29d3a6"
            }
        ],
        "stats": {
            "total": 2,
            "additions": 2,
            "deletions": 0
        },
        "files": [
            {
                "sha": "be3c8712eb07c6028857a1ff116e6c2494c6b8fb",
                "filename": "README-brief-cn.md",
                "status": "modified",
                "additions": 2,
                "deletions": 0,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/b3a069aed62f5006306e51cadb3925fdea9bd003/README-brief-cn.md",
                "raw_url": "https://github.com/eBay/parallec/raw/b3a069aed62f5006306e51cadb3925fdea9bd003/README-brief-cn.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/README-brief-cn.md?ref=b3a069aed62f5006306e51cadb3925fdea9bd003",
                "patch": "@@ -23,5 +23,7 @@ Parallec内置特别的响应上下文（response context），在处理服务\n “Parallec.io现已经被集成在eBay的应用程序部署系统(PaaS)。Parallec被用于控制10个以上的并行API的任务的工作流，每个任务并行执行到数十到数千台的生产服务器的上。与以前的实现相比，Parallec 处理并行操作代码简洁，方便进行批作业的管理，为我们提高了资源利用率和效率。”\n －－ Xiaotang (Sheldon) Shao, Principle Software Engineer, Deployment Platform / PaaS, Cloud Engineering at eBay Inc.\n \n+“eBay 网络智能分析组目前的几个项目都需要并行执行万级到十万级的API到第三方的服务器，这毫无疑问是我们最大的瓶颈。因此我们一致在寻找一个高效的异步I/O的解决方案。使用Parallec，不但显著的提升了性能，同时有效的减少了资源的使用。 ” －－ Tomer Balan, Data Extraction Engineer, Structured Data at eBay Inc (以色列).\n+\n 您可以用5分钟按照[样例程序](http://www.parallec.io/#code-sample)试试Parallec去给多个服务器（网站）发送相同或者不同的请求。我们渴望收到您的意见和建议。您可以通过[提交Github Issue](https://github.com/eBay/parallec/issues/new), 查看[FAQ](http://www.parallec.io/docs/faq/)，登陆论坛 [Parallec.io Google Group](https://groups.google.com/forum/#!forum/parallec)，或者发邮件至 ypei@ebay.com 进行反馈或者提问。谢谢！\n "
            }
        ]
    },
    {
        "sha": "8e9aaac6ae7a9eaf6bd7c5dcfe14d16bee29d3a6",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6OGU5YWFhYzZhZTdhOWVhZjZiZDdjNWRjZmUxNGQxNmJlZTI5ZDNhNg==",
        "commit": {
            "author": {
                "name": "Yuanteng (Jeff) Pei",
                "email": "ypei@ebay.com",
                "date": "2016-11-16T21:30:00Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2016-11-16T21:30:00Z"
            },
            "message": "Update Readme on Production Use Cases [skip ci]",
            "tree": {
                "sha": "eaa32169d4820218e9b98a2284f26c868566cfd3",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/eaa32169d4820218e9b98a2284f26c868566cfd3"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/8e9aaac6ae7a9eaf6bd7c5dcfe14d16bee29d3a6",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/8e9aaac6ae7a9eaf6bd7c5dcfe14d16bee29d3a6",
        "html_url": "https://github.com/eBay/parallec/commit/8e9aaac6ae7a9eaf6bd7c5dcfe14d16bee29d3a6",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/8e9aaac6ae7a9eaf6bd7c5dcfe14d16bee29d3a6/comments",
        "author": null,
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "7fd1f0abb147b101c840ce0f6ec737421fcceb90",
                "url": "https://api.github.com/repos/eBay/parallec/commits/7fd1f0abb147b101c840ce0f6ec737421fcceb90",
                "html_url": "https://github.com/eBay/parallec/commit/7fd1f0abb147b101c840ce0f6ec737421fcceb90"
            }
        ],
        "stats": {
            "total": 6,
            "additions": 3,
            "deletions": 3
        },
        "files": [
            {
                "sha": "0a2e7fa9d2fa08fd44a6941718d5df7885429c34",
                "filename": "README.md",
                "status": "modified",
                "additions": 3,
                "deletions": 3,
                "changes": 6,
                "blob_url": "https://github.com/eBay/parallec/blob/8e9aaac6ae7a9eaf6bd7c5dcfe14d16bee29d3a6/README.md",
                "raw_url": "https://github.com/eBay/parallec/raw/8e9aaac6ae7a9eaf6bd7c5dcfe14d16bee29d3a6/README.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/README.md?ref=8e9aaac6ae7a9eaf6bd7c5dcfe14d16bee29d3a6",
                "patch": "@@ -15,17 +15,17 @@\n \n [Tweeted](https://twitter.com/jboner/status/663618652063813632) by the Creator of Akka & Featured in [ [This Week in #Scala](http://www.cakesolutions.net/teamblogs/this-week-in-scala-16/11/2015) | [OSChina](http://www.oschina.net/p/parallec) - [2015 Top 100](http://www.oschina.net/news/69808/2015-annual-ranking-top-100-new-open-source-software) ]\n \n-Parallec is a fast parallel async HTTP(S)/SSH/TCP/UDP/Ping client java library based on [Akka](http://akka.io). Scalably aggregate and handle API responses **anyway** and send it **anywhere** by writing [20 lines](https://www.youtube.com/watch?v=QcavegPMDms) of code. A super convenient **response context** let you pass in/out any object when handling the responses. Now you can conduct scalable API calls, then effortlessly pass aggregated data anywhere to elastic search, kafka, MongoDB, graphite, memcached, etc. Flexible task level concurrency control without creating a 1,000 threads thread pool. Parallec means  **Paralle**l **C**lient (pronounced as \"Para-like\"). Visit [www.parallec.io](http://www.parallec.io)\n+Parallec is the ultimate polling engine: a fast parallel async HTTP(S)/SSH/TCP/UDP/Ping client java library based on [Akka](http://akka.io). Scalably aggregate and handle API responses **anyway** and send it **anywhere** by writing [20 lines](https://www.youtube.com/watch?v=QcavegPMDms) of code. A super convenient **response context** let you pass in/out any object when handling the responses. Now you can conduct scalable API calls, then effortlessly pass aggregated data anywhere to elastic search, kafka, MongoDB, graphite, memcached, etc. Flexible task level concurrency control without creating a 1,000 threads thread pool. Parallec means  **Paralle**l **C**lient (pronounced as \"Para-like\"). Visit [www.parallec.io](http://www.parallec.io)\n \n **[Watch Demo](https://github.com/eBay/parallec/wiki/Parallec-Aggregates-HTTP-Responses-from-8000-Servers)**: **8,000** web server HTTP response aggregation to memory in **12** seconds / to ElasticSearch in **16** seconds.\n \n **Aggregated error messages - Debug friendly with full visibility**: Having trouble debugging in concurrent environment? Not any more! All exceptions, timeout, stack traces, request sent and response received time are **captured and aggregated** in the [response](http://www.parallec.io/javadoc/index.html?io/parallec/core/ResponseOnSingleTask.html) map. It is available in [ParallelTask](http://www.parallec.io/javadoc/index.html?io/parallec/core/ParallelTask.html) for polling right after you execute a task asynchronously.  Multi-level (worker/manager) timeout guarantees tasks return even for 100,000s of requests.  \n \n \n-**[Production Use Cases](http://www.parallec.io/#testimonial-ebay)**\n+**[Production Use Cases](http://www.parallec.io/#testimonial-ebay)**: widely used in many distributed systems as the  ultimate polling engine\n \n 1. Application Deployment / PaaS: Parallec has been [integrated](http://www.parallec.io/#testimonial-ebay) in eBay main production application deployment system (PaaS). Parallec orchestrates 10+ API tasks, with each task targeting 10s to 1,000s servers over 1,000+ application pools in production.  \n-2. Data Extraction / ETL: Parallec was [used](http://www.parallec.io/#testimonial-ebay) by eBay Israel's web intelligence team for executing 10k-100k API parallel calls to a single 3rd party server with dramatic improved performance and reduced resources. \n+2. Data Extraction / ETL: Parallec has been [used](http://www.parallec.io/#testimonial-ebay) by eBay Israel's web intelligence team for executing 10k-100k API parallel calls to a single 3rd party server with dramatic improved performance and reduced resources. \n 3. Network Troubleshooting via Probing:  In eBay's network / cloud team, Parallec is instrumental to ensure an extremely low false alert rates to accurately detect switch soft failures. Parallec serves as the core polling engine in the master component to check agent healths and mark down agents to effectively and timely eliminate noises.\n 4. Agent Management / Master: In eBay's site operation / tools team, Parallec serves as the core engine to manage and monitor a puppet agent/salt minion/kubernetes kubelet like agent on 100,000+ production servers to ensure scalable operations.\n "
            }
        ]
    },
    {
        "sha": "7fd1f0abb147b101c840ce0f6ec737421fcceb90",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6N2ZkMWYwYWJiMTQ3YjEwMWM4NDBjZTBmNmVjNzM3NDIxZmNjZWI5MA==",
        "commit": {
            "author": {
                "name": "Yuanteng (Jeff) Pei",
                "email": "ypei@ebay.com",
                "date": "2016-11-16T21:22:07Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2016-11-16T21:22:07Z"
            },
            "message": "Update Readme on Production Use Cases [skip ci]",
            "tree": {
                "sha": "8d7cd66421fad02cbdc7af811d3b1e0a4fdd1392",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/8d7cd66421fad02cbdc7af811d3b1e0a4fdd1392"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/7fd1f0abb147b101c840ce0f6ec737421fcceb90",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/7fd1f0abb147b101c840ce0f6ec737421fcceb90",
        "html_url": "https://github.com/eBay/parallec/commit/7fd1f0abb147b101c840ce0f6ec737421fcceb90",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/7fd1f0abb147b101c840ce0f6ec737421fcceb90/comments",
        "author": null,
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "6383046078f139aaea739270ae9d4c857a100a55",
                "url": "https://api.github.com/repos/eBay/parallec/commits/6383046078f139aaea739270ae9d4c857a100a55",
                "html_url": "https://github.com/eBay/parallec/commit/6383046078f139aaea739270ae9d4c857a100a55"
            }
        ],
        "stats": {
            "total": 5,
            "additions": 3,
            "deletions": 2
        },
        "files": [
            {
                "sha": "765e94e421db80b969b7db2e48b7878030bfe111",
                "filename": "README.md",
                "status": "modified",
                "additions": 3,
                "deletions": 2,
                "changes": 5,
                "blob_url": "https://github.com/eBay/parallec/blob/7fd1f0abb147b101c840ce0f6ec737421fcceb90/README.md",
                "raw_url": "https://github.com/eBay/parallec/raw/7fd1f0abb147b101c840ce0f6ec737421fcceb90/README.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/README.md?ref=7fd1f0abb147b101c840ce0f6ec737421fcceb90",
                "patch": "@@ -25,8 +25,9 @@ Parallec is a fast parallel async HTTP(S)/SSH/TCP/UDP/Ping client java library b\n **[Production Use Cases](http://www.parallec.io/#testimonial-ebay)**\n \n 1. Application Deployment / PaaS: Parallec has been [integrated](http://www.parallec.io/#testimonial-ebay) in eBay main production application deployment system (PaaS). Parallec orchestrates 10+ API tasks, with each task targeting 10s to 1,000s servers over 1,000+ application pools in production.  \n-2. Data Extraction / ETL: Parallec was [used](http://www.parallec.io/#testimonial-ebay) by eBay Israel web intelligence team for executing 10k-100k API parallel calls to a single 3rd party server with dramatic improved performance and reduced resources. \n-3. Network troubleshooting via end-to-end probing:  In eBay Network/Cloud team, Parallec serves as the core polling engine in the master component to check agent healths and mark down agents to eliminate noises when detecting switch soft failures. \n+2. Data Extraction / ETL: Parallec was [used](http://www.parallec.io/#testimonial-ebay) by eBay Israel's web intelligence team for executing 10k-100k API parallel calls to a single 3rd party server with dramatic improved performance and reduced resources. \n+3. Network Troubleshooting via Probing:  In eBay's network / cloud team, Parallec is instrumental to ensure an extremely low false alert rates to accurately detect switch soft failures. Parallec serves as the core polling engine in the master component to check agent healths and mark down agents to effectively and timely eliminate noises.\n+4. Agent Management / Master: In eBay's site operation / tools team, Parallec serves as the core engine to manage and monitor a puppet agent/salt minion/kubernetes kubelet like agent on 100,000+ production servers to ensure scalable operations.\n \n ![Workflow Overview](http://www.parallec.io/images/parallec-flow.svg)\n "
            }
        ]
    },
    {
        "sha": "6383046078f139aaea739270ae9d4c857a100a55",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6NjM4MzA0NjA3OGYxMzlhYWVhNzM5MjcwYWU5ZDRjODU3YTEwMGE1NQ==",
        "commit": {
            "author": {
                "name": "Yuanteng (Jeff) Pei",
                "email": "ypei@ebay.com",
                "date": "2016-11-16T21:02:56Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2016-11-16T21:02:56Z"
            },
            "message": "Update Readme on Production Use Cases [skip ci]",
            "tree": {
                "sha": "4d6478009d950b12fe3b2326ed8309e592447be4",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/4d6478009d950b12fe3b2326ed8309e592447be4"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/6383046078f139aaea739270ae9d4c857a100a55",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/6383046078f139aaea739270ae9d4c857a100a55",
        "html_url": "https://github.com/eBay/parallec/commit/6383046078f139aaea739270ae9d4c857a100a55",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/6383046078f139aaea739270ae9d4c857a100a55/comments",
        "author": null,
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "83bcb2a69beb4a86611da077a4b72473c0f84208",
                "url": "https://api.github.com/repos/eBay/parallec/commits/83bcb2a69beb4a86611da077a4b72473c0f84208",
                "html_url": "https://github.com/eBay/parallec/commit/83bcb2a69beb4a86611da077a4b72473c0f84208"
            }
        ],
        "stats": {
            "total": 6,
            "additions": 5,
            "deletions": 1
        },
        "files": [
            {
                "sha": "8862a5dee0f9d6b9916075557aafc6d8c8b21858",
                "filename": "README.md",
                "status": "modified",
                "additions": 5,
                "deletions": 1,
                "changes": 6,
                "blob_url": "https://github.com/eBay/parallec/blob/6383046078f139aaea739270ae9d4c857a100a55/README.md",
                "raw_url": "https://github.com/eBay/parallec/raw/6383046078f139aaea739270ae9d4c857a100a55/README.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/README.md?ref=6383046078f139aaea739270ae9d4c857a100a55",
                "patch": "@@ -22,7 +22,11 @@ Parallec is a fast parallel async HTTP(S)/SSH/TCP/UDP/Ping client java library b\n **Aggregated error messages - Debug friendly with full visibility**: Having trouble debugging in concurrent environment? Not any more! All exceptions, timeout, stack traces, request sent and response received time are **captured and aggregated** in the [response](http://www.parallec.io/javadoc/index.html?io/parallec/core/ResponseOnSingleTask.html) map. It is available in [ParallelTask](http://www.parallec.io/javadoc/index.html?io/parallec/core/ParallelTask.html) for polling right after you execute a task asynchronously.  Multi-level (worker/manager) timeout guarantees tasks return even for 100,000s of requests.  \n \n \n-Parallec has been [integrated](http://www.parallec.io/#testimonial-ebay) in eBay main production application deployment system (PaaS). Parallec orchestrates 10+ API tasks, with each task targeting 10s to 1,000s servers over 1,000+ application pools in production. \n+**[Production Use Cases](http://www.parallec.io/#testimonial-ebay)**\n+\n+1. Application Deployment / PaaS: Parallec has been [integrated](http://www.parallec.io/#testimonial-ebay) in eBay main production application deployment system (PaaS). Parallec orchestrates 10+ API tasks, with each task targeting 10s to 1,000s servers over 1,000+ application pools in production.  \n+2. Data Extraction / ETL: Parallec was [used](http://www.parallec.io/#testimonial-ebay) by eBay Israel web intelligence team for executing 10k-100k API parallel calls to a single 3rd party server with dramatic improved performance and reduced resources. \n+3. Network troubleshooting via end-to-end probing:  In eBay Network/Cloud team, Parallec serves as the core polling engine in the master component to check agent healths and mark down agents to eliminate noises when detecting switch soft failures. \n \n ![Workflow Overview](http://www.parallec.io/images/parallec-flow.svg)\n "
            }
        ]
    },
    {
        "sha": "83bcb2a69beb4a86611da077a4b72473c0f84208",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6ODNiY2IyYTY5YmViNGE4NjYxMWRhMDc3YTRiNzI0NzNjMGY4NDIwOA==",
        "commit": {
            "author": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2016-11-04T01:08:29Z"
            },
            "committer": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2016-11-04T01:08:29Z"
            },
            "message": "v0.10.3 fix ping with process mode in linux",
            "tree": {
                "sha": "d05769a09fb6408bb4d7a7bde41e4e6d29f34187",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/d05769a09fb6408bb4d7a7bde41e4e6d29f34187"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/83bcb2a69beb4a86611da077a4b72473c0f84208",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/83bcb2a69beb4a86611da077a4b72473c0f84208",
        "html_url": "https://github.com/eBay/parallec/commit/83bcb2a69beb4a86611da077a4b72473c0f84208",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/83bcb2a69beb4a86611da077a4b72473c0f84208/comments",
        "author": null,
        "committer": null,
        "parents": [
            {
                "sha": "6e32f9aaf108f60a9a858b42f6be72ec5448fdde",
                "url": "https://api.github.com/repos/eBay/parallec/commits/6e32f9aaf108f60a9a858b42f6be72ec5448fdde",
                "html_url": "https://github.com/eBay/parallec/commit/6e32f9aaf108f60a9a858b42f6be72ec5448fdde"
            }
        ],
        "stats": {
            "total": 22,
            "additions": 13,
            "deletions": 9
        },
        "files": [
            {
                "sha": "e2f90718b00113ad28e7ab58c21d972636991a47",
                "filename": "CHANGELOG.md",
                "status": "modified",
                "additions": 2,
                "deletions": 1,
                "changes": 3,
                "blob_url": "https://github.com/eBay/parallec/blob/83bcb2a69beb4a86611da077a4b72473c0f84208/CHANGELOG.md",
                "raw_url": "https://github.com/eBay/parallec/raw/83bcb2a69beb4a86611da077a4b72473c0f84208/CHANGELOG.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/CHANGELOG.md?ref=83bcb2a69beb4a86611da077a4b72473c0f84208",
                "patch": "@@ -4,8 +4,9 @@ Parallec Change Log\n \n ## Version 0.10.3\n \n-_2016-11-??_\n+_2016-11-03_\n \n+* Fixed the ping status check in linux with process mode.\n * Improved unit tests coverage.\n \n ## Version 0.10.2"
            },
            {
                "sha": "c2caa815f5adb998edd812347fd24d84a138a616",
                "filename": "README.md",
                "status": "modified",
                "additions": 3,
                "deletions": 3,
                "changes": 6,
                "blob_url": "https://github.com/eBay/parallec/blob/83bcb2a69beb4a86611da077a4b72473c0f84208/README.md",
                "raw_url": "https://github.com/eBay/parallec/raw/83bcb2a69beb4a86611da077a4b72473c0f84208/README.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/README.md?ref=83bcb2a69beb4a86611da077a4b72473c0f84208",
                "patch": "@@ -4,7 +4,7 @@\n ![build status](https://img.shields.io/badge/build-info=>-green.svg) [![Build Status](https://travis-ci.org/eBay/parallec.svg?branch=master)](https://travis-ci.org/eBay/parallec) [![Coverage Status](https://img.shields.io/codecov/c/github/eBay/parallec.svg)](https://codecov.io/github/eBay/parallec) [![Apache V2.0 License](http://www.parallec.io/images/apache2.svg) ](https://github.com/eBay/parallec/blob/master/LICENSE)\n \n \n-![latest 0.10.x](http://img.shields.io/badge/latest_stable-0.10.x=>-green.svg) [ ![latest beta  maven central](https://maven-badges.herokuapp.com/maven-central/io.parallec/parallec-core/badge.svg?style=flat)](http://search.maven.org/#artifactdetails|io.parallec|parallec-core|0.10.2|) [![Gitter](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/eBay/parallec?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge)\n+![latest 0.10.x](http://img.shields.io/badge/latest_stable-0.10.x=>-green.svg) [ ![latest beta  maven central](https://maven-badges.herokuapp.com/maven-central/io.parallec/parallec-core/badge.svg?style=flat)](http://search.maven.org/#artifactdetails|io.parallec|parallec-core|0.10.3|) [![Gitter](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/eBay/parallec?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge)\n \n [![Javadoc](http://www.parallec.io/images/parallec-javadoc-blue.svg)](http://www.parallec.io/javadoc/index.html?io/parallec/core/ParallelClient.html) [![Documentation](http://www.parallec.io/images/parallec-documentation-red.svg)](http://www.parallec.io/docs/) [![Samples](http://www.parallec.io/images/parallec-samples-brightgreen.svg)](https://github.com/eBay/parallec-samples) [![Chinese](http://www.parallec.io/images/parallec-cnbrief-blue.svg)](https://github.com/eBay/parallec/blob/master/README-brief-cn.md) \n \n@@ -35,14 +35,14 @@ Donwload [the latest JAR](https://search.maven.org/remote_content?g=io.parallec&\n <dependency>\n \t<groupId>io.parallec</groupId>\n \t<artifactId>parallec-core</artifactId>\n-\t<version>0.10.2</version>\n+\t<version>0.10.3</version>\n </dependency>\n ```\n Snapshots of the development version are available in [Sonatype's `snapshots` repository](https://oss.sonatype.org/content/repositories/snapshots/io/parallec/parallec-core/).\n \n or Gradle:\n ```xml\n-compile 'io.parallec:parallec-core:0.10.2'\n+compile 'io.parallec:parallec-core:0.10.3'\n ```\n \n "
            },
            {
                "sha": "61a19c264f70f2954487f4640cc287580a74774d",
                "filename": "pom.xml",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/83bcb2a69beb4a86611da077a4b72473c0f84208/pom.xml",
                "raw_url": "https://github.com/eBay/parallec/raw/83bcb2a69beb4a86611da077a4b72473c0f84208/pom.xml",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/pom.xml?ref=83bcb2a69beb4a86611da077a4b72473c0f84208",
                "patch": "@@ -4,7 +4,7 @@\n \t<modelVersion>4.0.0</modelVersion>\n \t<groupId>io.parallec</groupId>\n \t<artifactId>parallec-core</artifactId>\n-\t<version>0.10.2</version>\n+\t<version>0.10.3</version>\n \t<packaging>jar</packaging>\n \t<name>io.parallec:parallec-core</name>\n \t<url>https://github.com/eBay/parallec</url>"
            },
            {
                "sha": "0d136784753843cc6a7096874477bc8f136f6f52",
                "filename": "src/main/java/io/parallec/core/commander/workflow/ping/PingProvider.java",
                "status": "modified",
                "additions": 7,
                "deletions": 4,
                "changes": 11,
                "blob_url": "https://github.com/eBay/parallec/blob/83bcb2a69beb4a86611da077a4b72473c0f84208/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fcommander%2Fworkflow%2Fping%2FPingProvider.java",
                "raw_url": "https://github.com/eBay/parallec/raw/83bcb2a69beb4a86611da077a4b72473c0f84208/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fcommander%2Fworkflow%2Fping%2FPingProvider.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fcommander%2Fworkflow%2Fping%2FPingProvider.java?ref=83bcb2a69beb4a86611da077a4b72473c0f84208",
                "patch": "@@ -41,14 +41,17 @@ public boolean isReachableByPingHelper(String targetHost, PingMeta pingMeta) {\n                 return address.isReachable(pingMeta.getPingTimeoutMillis());\n             }else{\n                 String cmd = \"\";\n-                if (System.getProperty(\"os.name\").startsWith(\"Windows\")) {\n+                String os = System.getProperty(\"os.name\").toLowerCase();\n+                if (os.indexOf(\"win\")>=0) {\n                     // For Windows\n                     cmd = \"ping -n 1 -w \" + pingMeta.getPingTimeoutMillis() + \" \" + targetHost;\n                 } else {\n-                    // For Linux and OSX\n-                    cmd = \"ping -c 1 -t \"+ (int) (pingMeta.getPingTimeoutMillis()/1000) + \" \"  + targetHost;\n+                    // For Linux (-W) and OSX (-t)\n+                    String timeoutArg = os.indexOf(\"mac\")>=0 ? \"-t\" : \"-W\"; \n+                    cmd = \"ping -c 1 \"\n+                            + timeoutArg\n+                            + \" \"+ (int) (pingMeta.getPingTimeoutMillis()/1000) + \" \"  + targetHost;\n                 }\n-                \n                 Process myProcess = Runtime.getRuntime().exec(cmd);\n                 myProcess.waitFor();\n                 if (myProcess.exitValue() == 0) {"
            }
        ]
    },
    {
        "sha": "6e32f9aaf108f60a9a858b42f6be72ec5448fdde",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6NmUzMmY5YWFmMTA4ZjYwYTlhODU4YjQyZjZiZTcyZWM1NDQ4ZmRkZQ==",
        "commit": {
            "author": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2016-11-04T00:05:47Z"
            },
            "committer": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2016-11-04T00:05:47Z"
            },
            "message": "improve test coverage",
            "tree": {
                "sha": "8c66b6ce317fe137f2537700e66a43f3f65bbefd",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/8c66b6ce317fe137f2537700e66a43f3f65bbefd"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/6e32f9aaf108f60a9a858b42f6be72ec5448fdde",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/6e32f9aaf108f60a9a858b42f6be72ec5448fdde",
        "html_url": "https://github.com/eBay/parallec/commit/6e32f9aaf108f60a9a858b42f6be72ec5448fdde",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/6e32f9aaf108f60a9a858b42f6be72ec5448fdde/comments",
        "author": null,
        "committer": null,
        "parents": [
            {
                "sha": "2357afc226b1e9c31370e69d3a28bb978e27a938",
                "url": "https://api.github.com/repos/eBay/parallec/commits/2357afc226b1e9c31370e69d3a28bb978e27a938",
                "html_url": "https://github.com/eBay/parallec/commit/2357afc226b1e9c31370e69d3a28bb978e27a938"
            }
        ],
        "stats": {
            "total": 270,
            "additions": 167,
            "deletions": 103
        },
        "files": [
            {
                "sha": "b910fa48d1027e8e49b37f62183b12320dbd015e",
                "filename": "src/main/java/io/parallec/core/ParallelTaskBuilder.java",
                "status": "modified",
                "additions": 2,
                "deletions": 3,
                "changes": 5,
                "blob_url": "https://github.com/eBay/parallec/blob/6e32f9aaf108f60a9a858b42f6be72ec5448fdde/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FParallelTaskBuilder.java",
                "raw_url": "https://github.com/eBay/parallec/raw/6e32f9aaf108f60a9a858b42f6be72ec5448fdde/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FParallelTaskBuilder.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FParallelTaskBuilder.java?ref=6e32f9aaf108f60a9a858b42f6be72ec5448fdde",
                "patch": "@@ -279,8 +279,7 @@ public void run() {\n                     try {\n                         Thread.sleep(500L);\n                     } catch (InterruptedException e) {\n-                        logger.error(\"fail sleep interrup exception in executing task \"\n-                                + e);\n+                        logger.error(\"InterruptedException \" + e);\n                     }\n                 }\n             }\n@@ -710,7 +709,7 @@ public ParallelTaskBuilder setReplaceVarMapToSingleTargetFromMap(\n     public ParallelTaskBuilder setReplaceVarMapToSingleTargetSingleVar(\n             String variable, List<String> replaceList, String uniformTargetHost) {\n \n-        if (uniformTargetHost == null || uniformTargetHost.isEmpty()) {\n+        if (Strings.isNullOrEmpty(uniformTargetHost)) {\n             logger.error(\"uniform target host is empty or null. skil setting.\");\n             return this;\n         }"
            },
            {
                "sha": "56500fdce46b929ab0d2453b7600baf5733e314d",
                "filename": "src/main/java/io/parallec/core/actor/ExecutionManager.java",
                "status": "modified",
                "additions": 2,
                "deletions": 4,
                "changes": 6,
                "blob_url": "https://github.com/eBay/parallec/blob/6e32f9aaf108f60a9a858b42f6be72ec5448fdde/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FExecutionManager.java",
                "raw_url": "https://github.com/eBay/parallec/raw/6e32f9aaf108f60a9a858b42f6be72ec5448fdde/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FExecutionManager.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FExecutionManager.java?ref=6e32f9aaf108f60a9a858b42f6be72ec5448fdde",
                "patch": "@@ -437,9 +437,7 @@ public void onReceive(Object message) {\n \n                 String hostName = taskResponse.getRequest().getHost();\n                 if (responseMap.containsKey(hostName)) {\n-\n-                    logger.error(\"ERROR: dupliated response received: \"\n-                            + hostName + PcDateUtils.getNowDateTimeStr());\n+                    logger.error(\"ERROR: duplicate response received {}\", hostName);\n                 }\n                 responseMap.put(hostName, taskResponse);\n \n@@ -724,7 +722,7 @@ private void cancelRequestAndWorkerOnHost(List<String> targetHosts) {\n                 logger.info(\"Submitted CANCEL request on Host {}\", targetHost);\n             } else {\n                 logger.info(\n-                        \"Dit NOT Submitted \"\n+                        \"Did NOT Submitted \"\n                                 + \"CANCEL request on Host {} as worker on this host is null or already killed\",\n                         targetHost);\n             }"
            },
            {
                "sha": "049952428619faa4e6ae7197fef74180fb16a208",
                "filename": "src/main/java/io/parallec/core/actor/OperationWorker.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/6e32f9aaf108f60a9a858b42f6be72ec5448fdde/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FOperationWorker.java",
                "raw_url": "https://github.com/eBay/parallec/raw/6e32f9aaf108f60a9a858b42f6be72ec5448fdde/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FOperationWorker.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FOperationWorker.java?ref=6e32f9aaf108f60a9a858b42f6be72ec5448fdde",
                "patch": "@@ -551,7 +551,7 @@ private final void reply(final boolean error, final String errorMessage,\n                         request.getHandler().onCompleted(response,\n                                 request.getResponseContext());\n                     } catch (Exception t) {\n-                        logger.error(\"Error handling onCompleted in manager for response: {} Error {}\"\n+                        logger.error(\"Error handling onCompleted in op worker for response: {} Error {}\"\n                                 , response.toString(),  t.getLocalizedMessage());\n                     }\n                 }"
            },
            {
                "sha": "b21c45c4fb76b37fd666f98afeffa700320cf372",
                "filename": "src/main/java/io/parallec/core/actor/PingWorker.java",
                "status": "modified",
                "additions": 0,
                "deletions": 10,
                "changes": 10,
                "blob_url": "https://github.com/eBay/parallec/blob/6e32f9aaf108f60a9a858b42f6be72ec5448fdde/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FPingWorker.java",
                "raw_url": "https://github.com/eBay/parallec/raw/6e32f9aaf108f60a9a858b42f6be72ec5448fdde/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FPingWorker.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FPingWorker.java?ref=6e32f9aaf108f60a9a858b42f6be72ec5448fdde",
                "patch": "@@ -318,16 +318,6 @@ public boolean isSentReply() {\n         return sentReply;\n     }\n \n-    /**\n-     * Sets the sent reply.\n-     *\n-     * @param sentReply\n-     *            the new sent reply\n-     */\n-    public void setSentReply(boolean sentReply) {\n-        this.sentReply = sentReply;\n-    }\n-\n     /**\n      * Gets the response future.\n      *"
            },
            {
                "sha": "ae8888432ec2bfd9bf6fe980a3356de378b06b99",
                "filename": "src/main/java/io/parallec/core/actor/poll/HttpPollerProcessor.java",
                "status": "modified",
                "additions": 23,
                "deletions": 4,
                "changes": 27,
                "blob_url": "https://github.com/eBay/parallec/blob/6e32f9aaf108f60a9a858b42f6be72ec5448fdde/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2Fpoll%2FHttpPollerProcessor.java",
                "raw_url": "https://github.com/eBay/parallec/raw/6e32f9aaf108f60a9a858b42f6be72ec5448fdde/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2Fpoll%2FHttpPollerProcessor.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2Fpoll%2FHttpPollerProcessor.java?ref=6e32f9aaf108f60a9a858b42f6be72ec5448fdde",
                "patch": "@@ -22,6 +22,7 @@\n import org.slf4j.LoggerFactory;\n \n \n+// TODO: Auto-generated Javadoc\n /**\n  * Define how to poll progress 1. how to get the job id from the 1st response.\n  * 2. what is the URL template to poll progress (assuming it is a HTTP GET) 3.\n@@ -76,8 +77,7 @@ public class HttpPollerProcessor {\n      * default as the cronus agent poller\n      * \n      * Assuming the polling API is By HTTP GET; without any postbody (for GET, no\n-     * post body for sure)\n-     * \n+     * post body for sure).\n      */\n \n     public HttpPollerProcessor() {\n@@ -221,7 +221,7 @@ public double getProgressFromResponse(ResponseOnSingeRequest myResponse) {\n             }\n \n         } catch (Exception t) {\n-            logger.error(\"fail\" + t);\n+            logger.error(\"fail \" + t);\n \n         }\n \n@@ -264,7 +264,7 @@ public boolean ifTaskCompletedSuccessOrFailureFromResponse(\n             }\n \n         } catch (Exception t) {\n-            logger.error(\"fail\" + t);\n+            logger.error(\"fail \" + t);\n \n         }\n         return isCompleted;\n@@ -421,4 +421,23 @@ public void setMaxPollError(int maxPollError) {\n         this.maxPollError = maxPollError;\n     }\n \n+    /**\n+     * Gets the success regex.\n+     *\n+     * @return the success regex\n+     */\n+    public String getSuccessRegex() {\n+        return successRegex;\n+    }\n+\n+    /**\n+     * Sets the success regex.\n+     *\n+     * @param successRegex the new success regex\n+     */\n+    public void setSuccessRegex(String successRegex) {\n+        this.successRegex = successRegex;\n+    }\n+    \n+\n }"
            },
            {
                "sha": "9d0fbc3ca50699dcb51b0d97bd2289fab47e44cb",
                "filename": "src/main/java/io/parallec/core/monitor/MonitorProvider.java",
                "status": "modified",
                "additions": 37,
                "deletions": 42,
                "changes": 79,
                "blob_url": "https://github.com/eBay/parallec/blob/6e32f9aaf108f60a9a858b42f6be72ec5448fdde/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fmonitor%2FMonitorProvider.java",
                "raw_url": "https://github.com/eBay/parallec/raw/6e32f9aaf108f60a9a858b42f6be72ec5448fdde/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fmonitor%2FMonitorProvider.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fmonitor%2FMonitorProvider.java?ref=6e32f9aaf108f60a9a858b42f6be72ec5448fdde",
                "patch": "@@ -9,7 +9,7 @@\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n-*/\n+ */\n package io.parallec.core.monitor;\n \n import io.parallec.core.util.PcDateUtils;\n@@ -27,18 +27,16 @@\n \n import com.google.gson.GsonBuilder;\n \n-\n-\n /**\n  * The Class MonitorProvider.\n  */\n public class MonitorProvider {\n-    \n+\n     /** The logger. */\n     @SuppressWarnings(\"unused\")\n     private static Logger logger = LoggerFactory\n             .getLogger(MonitorProvider.class);\n-    \n+\n     /** The threshold percent. */\n     public static int THRESHOLD_PERCENT = 90;\n \n@@ -100,29 +98,26 @@ public ThreadInfo[] getThreadDump() {\n      * @return the live thread count\n      */\n     public int getLiveThreadCount() {\n-        return ManagementFactory.getThreadMXBean().getThreadCount(); \n+        return ManagementFactory.getThreadMXBean().getThreadCount();\n     }\n-    \n+\n     /**\n      * Gets the thread usage.\n      *\n      * @return the thread usage\n      */\n     public ThreadUsage getThreadUsage() {\n         ThreadMXBean threadMxBean = ManagementFactory.getThreadMXBean();\n-        \n+\n         ThreadUsage threadUsage = new ThreadUsage();\n         long[] threadIds = threadMxBean.getAllThreadIds();\n         threadUsage.liveThreadCount = threadIds.length;\n \n         for (long tId : threadIds) {\n             ThreadInfo threadInfo = threadMxBean.getThreadInfo(tId);\n-            if(threadInfo==null) continue;\n-            threadUsage.threadData.put(\n-                    Long.toString(tId),\n-                    new ThreadData(threadInfo.getThreadName(), threadInfo\n-                            .getThreadState().name(), threadMxBean\n-                            .getThreadCpuTime(tId)));\n+            threadUsage.threadData.put(Long.toString(tId), new ThreadData(\n+                    threadInfo.getThreadName(), threadInfo.getThreadState()\n+                            .name(), threadMxBean.getThreadCpuTime(tId)));\n \n         }\n         return threadUsage;\n@@ -139,32 +134,33 @@ public String getHealthMemory() {\n         MonitorProvider mp = MonitorProvider.getInstance();\n         PerformUsage perf = mp.getJVMMemoryUsage();\n         sb.append(perf.toString());\n-        \n+\n         if (perf.memoryUsagePercent >= THRESHOLD_PERCENT) {\n-            sb.append(\"========= WARNING: MEM USAGE > \"+ THRESHOLD_PERCENT +\"!!\");\n+            sb.append(\"========= WARNING: MEM USAGE > \" + THRESHOLD_PERCENT\n+                    + \"!!\");\n             sb.append(\" !! Live Threads List=============\\n\");\n             sb.append(mp.getThreadUsage().toString());\n             sb.append(\"========================================\\n\");\n             sb.append(\"========================JVM Thread Dump====================\\n\");\n             ThreadInfo[] threadDump = mp.getThreadDump();\n             for (ThreadInfo threadInfo : threadDump) {\n-                sb.append(threadInfo.toString()+\"\\n\");\n+                sb.append(threadInfo.toString() + \"\\n\");\n             }\n             sb.append(\"===========================================================\\n\");\n         }\n         sb.append(\"Logged JVM Stats\\n\");\n-        \n+\n         return sb.toString();\n     }\n \n     /**\n      * The Class ThreadUsage.\n      */\n     public static class ThreadUsage extends Jsonable {\n-        \n+\n         /** The live thread count. */\n         public int liveThreadCount;\n-        \n+\n         /** The thread data. */\n         public Map<String, ThreadData> threadData = new HashMap<String, ThreadData>();\n     }\n@@ -176,19 +172,22 @@ public static class ThreadData extends Jsonable {\n \n         /** The thread name. */\n         public String threadName;\n-        \n+\n         /** The thread state. */\n         public String threadState;\n-        \n+\n         /** The cpu time in nano seconds. */\n         public long cpuTimeInNanoSeconds;\n \n         /**\n          * Instantiates a new thread data.\n          *\n-         * @param threadName the thread name\n-         * @param threadState the thread state\n-         * @param cpuTimeInNanoSeconds the cpu time in nano seconds\n+         * @param threadName\n+         *            the thread name\n+         * @param threadState\n+         *            the thread state\n+         * @param cpuTimeInNanoSeconds\n+         *            the cpu time in nano seconds\n          */\n         public ThreadData(String threadName, String threadState,\n                 long cpuTimeInNanoSeconds) {\n@@ -203,22 +202,22 @@ public ThreadData(String threadName, String threadState,\n      * The Class PerformUsage.\n      */\n     public static class PerformUsage extends Jsonable {\n-        \n+\n         /** The date. */\n         public String date = PcDateUtils.getNowDateTimeStrStandard();\n-        \n+\n         /** The total memory. */\n         public double totalMemory;\n-        \n+\n         /** The free memory. */\n         public double freeMemory;\n-        \n+\n         /** The used memory. */\n         public double usedMemory;\n-        \n+\n         /** The max memory. */\n         public double maxMemory;\n-        \n+\n         /** The memory usage percent. */\n         public double memoryUsagePercent;\n \n@@ -228,25 +227,21 @@ public static class PerformUsage extends Jsonable {\n          * @return the summary\n          */\n         public String getSummary() {\n-            return PcNumberUtils\n-                    .getStringFromDouble(memoryUsagePercent)\n-                    + \"% (\"\n-                    + PcNumberUtils.getStringFromDouble(usedMemory)\n-                    + \"/\"\n-                    + PcNumberUtils.getStringFromDouble(totalMemory)\n-                    + \") Max \"\n-                    + PcNumberUtils.getStringFromDouble(maxMemory);\n-\n+            return PcNumberUtils.getStringFromDouble(memoryUsagePercent)\n+                    + \"% (\" + PcNumberUtils.getStringFromDouble(usedMemory)\n+                    + \"/\" + PcNumberUtils.getStringFromDouble(totalMemory)\n+                    + \") Max \" + PcNumberUtils.getStringFromDouble(maxMemory);\n         }\n-\n     }\n \n     /**\n      * The Class Jsonable.\n      */\n     public abstract static class Jsonable {\n \n-        /* (non-Javadoc)\n+        /*\n+         * (non-Javadoc)\n+         * \n          * @see java.lang.Object#toString()\n          */\n         @Override"
            },
            {
                "sha": "49496d3d16eaa777754e7d81e7c563b81f5221a0",
                "filename": "src/test/java/io/parallec/core/pojo/ParallecPojoStrTest.java",
                "status": "modified",
                "additions": 64,
                "deletions": 0,
                "changes": 64,
                "blob_url": "https://github.com/eBay/parallec/blob/6e32f9aaf108f60a9a858b42f6be72ec5448fdde/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fpojo%2FParallecPojoStrTest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/6e32f9aaf108f60a9a858b42f6be72ec5448fdde/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fpojo%2FParallecPojoStrTest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fpojo%2FParallecPojoStrTest.java?ref=6e32f9aaf108f60a9a858b42f6be72ec5448fdde",
                "patch": "@@ -3,7 +3,10 @@\n import io.parallec.core.ParallelTaskBuilder;\n import io.parallec.core.ResponseOnSingleTask;\n import io.parallec.core.TestBase;\n+import io.parallec.core.actor.ActorConfig;\n import io.parallec.core.actor.message.NodeReqResponse;\n+import io.parallec.core.actor.message.ResponseOnSingeRequest;\n+import io.parallec.core.actor.poll.HttpPollerProcessor;\n import io.parallec.core.actor.poll.PollerData;\n import io.parallec.core.app.ParallecAppMin;\n import io.parallec.core.bean.HttpMeta;\n@@ -157,8 +160,69 @@ public void testStaticFuncUtilsClassAndMisc() {\n         manager.checkServerTrusted(null, null);\n         manager.getAcceptedIssuers();\n         \n+        ActorConfig.getTimeoutduration();\n+        ActorConfig.shutDownActorSystemForce();\n+        ActorConfig.shutDownActorSystemForce();\n+        TcpUdpSshPingResourceStore.getInstance().shutdown();\n+        TcpUdpSshPingResourceStore.getInstance().shutdown();\n         \n+      \n         \n+        \n+        \n+    }\n+    \n+    @Test\n+    public void testPollerException() {\n+        //test poller\n+        HttpPollerProcessor poller = new HttpPollerProcessor();\n+        ResponseOnSingeRequest res = new ResponseOnSingeRequest();\n+        res.setResponseBody(\"status/01218\");\n+        res.setFailObtainResponse(false);\n+        poller.setSuccessRegex(null);\n+        poller.setProgressRegex(null);\n+        \n+        try{\n+            poller.ifTaskCompletedSuccessOrFailureFromResponse(res);\n+        }catch(Exception e){\n+            logger.info(\"expected \", e);\n+        }\n+        \n+        try{\n+            poller.ifTaskCompletedSuccessOrFailureFromResponse(res);\n+        }catch(Exception e){\n+            logger.info(\"expected \", e);\n+        }\n+        poller.getProgressFromResponse(new ResponseOnSingeRequest());\n+    }\n+    \n+    @Test\n+    public void testPollerNotMatch() {\n+        //test poller\n+        HttpPollerProcessor poller = new HttpPollerProcessor();\n+        ResponseOnSingeRequest res = new ResponseOnSingeRequest();\n+        res.setResponseBody(\"status/01218\");\n+        poller.setSuccessRegex(\"testregex\");\n+        res.setFailObtainResponse(false);\n+        String progressRegex = \".*\\\"pr111ogress\\\"\\\\s*:\\\\s*([0-9]*).*}\";\n+        String failureRegex = \".*\\\"error\\\"\\\\s*:\\\\s*(.*).*}\";\n+        poller.setProgressRegex(progressRegex);\n+        poller.setFailureRegex(failureRegex);\n+        logger.info(\"completed (with failure): {} \",poller.ifTaskCompletedSuccessOrFailureFromResponse(res));\n+        logger.info(\"fail to match progress (should be 0): {} \",poller.getProgressFromResponse(res));\n+    }\n+    \n+    @Test\n+    public void testPoller() {\n+        //test poller\n+        HttpPollerProcessor poller = new HttpPollerProcessor();\n+        \n+        poller.ifTaskCompletedSuccessOrFailureFromResponse(null);\n+        poller.ifTaskCompletedSuccessOrFailureFromResponse(new ResponseOnSingeRequest());\n+        poller.ifThereIsErrorInResponse(null);\n+        \n+        poller.getProgressFromResponse(null);\n+        poller.getProgressFromResponse(new ResponseOnSingeRequest());\n     }\n \n }"
            },
            {
                "sha": "1c5627568c95bcb8872f2a325de912e8937b17ff",
                "filename": "src/test/java/io/parallec/core/taskbuilder/ParallelTaskBuilderTest.java",
                "status": "modified",
                "additions": 38,
                "deletions": 39,
                "changes": 77,
                "blob_url": "https://github.com/eBay/parallec/blob/6e32f9aaf108f60a9a858b42f6be72ec5448fdde/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Ftaskbuilder%2FParallelTaskBuilderTest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/6e32f9aaf108f60a9a858b42f6be72ec5448fdde/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Ftaskbuilder%2FParallelTaskBuilderTest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Ftaskbuilder%2FParallelTaskBuilderTest.java?ref=6e32f9aaf108f60a9a858b42f6be72ec5448fdde",
                "patch": "@@ -19,7 +19,6 @@\n \n import org.junit.AfterClass;\n import org.junit.BeforeClass;\n-import org.junit.Ignore;\n import org.junit.Test;\n \n public class ParallelTaskBuilderTest extends TestBase {\n@@ -43,98 +42,97 @@ public void builderFuncTest() throws Exception {\n \n         pc.prepareHttpGet(\"/userdata/$STATE/sample_weather_$ZIP.txt\")\n                 .setTargetHostsFromJsonPath(jsonPath, URL_JSON_PATH, SOURCE_URL);\n-        pc.prepareHttpGet(\"/userdata/$STATE/sample_weather_$ZIP.txt\").getHttpMeta();\n-        pc.prepareHttpGet(\"/userdata/$STATE/sample_weather_$ZIP.txt\").setHttpMeta(\n-                new HttpMeta());\n+        pc.prepareHttpGet(\"/userdata/$STATE/sample_weather_$ZIP.txt\")\n+                .getHttpMeta();\n+        pc.prepareHttpGet(\"/userdata/$STATE/sample_weather_$ZIP.txt\")\n+                .setHttpMeta(new HttpMeta());\n \n     }\n \n     @Test\n     public void testInvalid() throws Exception {\n         ParallelTaskBuilder tb = new ParallelTaskBuilder();\n- \n-        \n+\n         try {\n \n             tb.validation();\n         } catch (ParallelTaskInvalidException e) {\n             logger.info(\"expected error \" + e);\n         }\n     }\n-    \n+\n     @Test\n     public void testExecuteMock() throws Exception {\n-        \n+\n         ParallelTaskBuilder tb = mock(ParallelTaskBuilder.class);\n         HttpMeta meta = new HttpMeta();\n         meta.initValuesNa();\n         meta.setHttpMethod(HttpMethod.GET);\n         meta.setRequestPort(\"80\");\n-        \n+\n         ParallecResponseHandler handler = new ParallecResponseHandler() {\n             @Override\n             public void onCompleted(ResponseOnSingleTask res,\n                     Map<String, Object> responseContext) {\n-                logger.info(\"test:\"  + res.toString());\n+                logger.info(\"test:\" + res.toString());\n             }\n         };\n         try {\n             when(tb.getMode()).thenThrow(new RuntimeException());\n             when(tb.execute(handler)).thenCallRealMethod();\n             tb.setHttpMeta(meta);\n             tb.execute(handler);\n-            \n+\n         } catch (Exception e) {\n             logger.info(\"expected NPE error \" + e);\n         }\n     }\n-    \n-    @Ignore\n-    public void testExecute() throws Exception {\n+\n+    @Test\n+    public void testExecuteWorkerHandlerException() throws Exception {\n         ParallelTaskBuilder tb = new ParallelTaskBuilder();\n-        \n-        \n+\n         tb.setTargetHostsFromString(\"www.google.com\");\n         HttpMeta meta = new HttpMeta();\n         meta.initValuesNa();\n         meta.setHttpMethod(HttpMethod.GET);\n         meta.setRequestPort(\"80\");\n         tb.setHttpMeta(meta);\n-        try {\n-            tb.execute(new ParallecResponseHandler() {\n+        tb.handleInWorker();\n \n-                @Override\n-                public void onCompleted(ResponseOnSingleTask res,\n-                        Map<String, Object> responseContext) {\n-                    logger.info(\"test:\"  + res.toString());\n+        ParallecResponseHandler handler = new ParallecResponseHandler() {\n+            @Override\n+            public void onCompleted(ResponseOnSingleTask res,\n+                    Map<String, Object> responseContext) {\n+                throw new RuntimeException();\n+            }\n+        };\n+\n+        try {\n+            tb.execute(handler);\n \n-                }\n-            });\n-            \n         } catch (Exception e) {\n             logger.info(\"expected error \" + e);\n         }\n     }\n-    \n+\n     @Test\n     public void testSetReplaceVarMapToSingleTargetSingleVar() throws Exception {\n         ParallelTaskBuilder tb = new ParallelTaskBuilder();\n-        \n-        \n-        //test setReplaceVarMapToSingleTargetSingleVar\n+\n+        // test setReplaceVarMapToSingleTargetSingleVar\n         tb.setReplaceVarMapToSingleTargetSingleVar(null, null, null);\n-        \n-        tb.setReplaceVarMapToSingleTargetSingleVar(null, Arrays.asList(\"a\", null,\"c\"), \"replace\");\n-        \n+\n+        tb.setReplaceVarMapToSingleTargetSingleVar(null,\n+                Arrays.asList(\"a\", null, \"c\"), \"replace\");\n+\n         tb.setRunAsSuperUser(true);\n     }\n-    \n+\n     @Test\n     public void testSetterGetters() throws Exception {\n         ParallelTaskBuilder tb = new ParallelTaskBuilder();\n-        \n-        \n-        \n+\n         tb.setResponseContext(null);\n         try {\n             tb.setTargetHostsFromCmsQueryUrl(\"\", \"\");\n@@ -148,7 +146,7 @@ public void testSetterGetters() throws Exception {\n         tb.setSshLoginType(SshLoginType.KEY);\n         tb.setSshPrivKeyRelativePath(\"\");\n         tb.setSshPrivKeyRelativePathWtihPassphrase(\"\", \"\");\n-        \n+\n         tb.setTcpChannelFactory(null);\n         tb.setTcpConnectTimeoutMillis(1000);\n         tb.setTcpIdleTimeoutSec(5);\n@@ -158,8 +156,9 @@ public void testSetterGetters() throws Exception {\n         tb.getAsyncHttpClient();\n         tb.setHttpEntityBody(\"test\");\n         tb.setTargetHostsFromList(Arrays.asList(\"www.parallec.io\"));\n-        \n-        tb.setAsyncHttpClient(HttpClientStore.getInstance().getCurrentDefaultClient());\n+\n+        tb.setAsyncHttpClient(HttpClientStore.getInstance()\n+                .getCurrentDefaultClient());\n         try {\n \n             tb.validation();"
            }
        ]
    },
    {
        "sha": "2357afc226b1e9c31370e69d3a28bb978e27a938",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6MjM1N2FmYzIyNmIxZTljMzEzNzBlNjlkM2EyOGJiOTc4ZTI3YTkzOA==",
        "commit": {
            "author": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2016-11-03T22:34:54Z"
            },
            "committer": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2016-11-03T22:34:54Z"
            },
            "message": "improve some test for quick travis ci http tasks",
            "tree": {
                "sha": "8d401851ee240f6ab46a91a678be4081fda3c599",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/8d401851ee240f6ab46a91a678be4081fda3c599"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/2357afc226b1e9c31370e69d3a28bb978e27a938",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/2357afc226b1e9c31370e69d3a28bb978e27a938",
        "html_url": "https://github.com/eBay/parallec/commit/2357afc226b1e9c31370e69d3a28bb978e27a938",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/2357afc226b1e9c31370e69d3a28bb978e27a938/comments",
        "author": null,
        "committer": null,
        "parents": [
            {
                "sha": "25a688e29849bad56e596460f3870eacfa5cf77d",
                "url": "https://api.github.com/repos/eBay/parallec/commits/25a688e29849bad56e596460f3870eacfa5cf77d",
                "html_url": "https://github.com/eBay/parallec/commit/25a688e29849bad56e596460f3870eacfa5cf77d"
            }
        ],
        "stats": {
            "total": 3,
            "additions": 2,
            "deletions": 1
        },
        "files": [
            {
                "sha": "9087d480e574cd0507bae461835d67896913d42f",
                "filename": "src/test/java/io/parallec/core/main/http/ParallelTaskCancelWholeTaskTest.java",
                "status": "modified",
                "additions": 2,
                "deletions": 1,
                "changes": 3,
                "blob_url": "https://github.com/eBay/parallec/blob/2357afc226b1e9c31370e69d3a28bb978e27a938/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2FParallelTaskCancelWholeTaskTest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/2357afc226b1e9c31370e69d3a28bb978e27a938/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2FParallelTaskCancelWholeTaskTest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2FParallelTaskCancelWholeTaskTest.java?ref=2357afc226b1e9c31370e69d3a28bb978e27a938",
                "patch": "@@ -123,7 +123,8 @@ public void onCompleted(ResponseOnSingleTask res,\n                 });\n         while (!pt.isCompleted()) {\n             try {\n-                Thread.sleep(2000L);\n+                // travis ci is quick; can often finish the whole task within 1 sec.\n+                Thread.sleep(500L);\n                 pt.cancel(true);\n                 System.err.println(String.format(\n                         \"POLL_JOB_PROGRESS (%.5g%%)  PT jobid: %s\","
            }
        ]
    },
    {
        "sha": "25a688e29849bad56e596460f3870eacfa5cf77d",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6MjVhNjg4ZTI5ODQ5YmFkNTZlNTk2NDYwZjM4NzBlYWNmYTVjZjc3ZA==",
        "commit": {
            "author": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2016-11-03T22:21:59Z"
            },
            "committer": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2016-11-03T22:21:59Z"
            },
            "message": "improve test coverage",
            "tree": {
                "sha": "58f30dd099ed228631025f6b1e83414c5c51de6e",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/58f30dd099ed228631025f6b1e83414c5c51de6e"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/25a688e29849bad56e596460f3870eacfa5cf77d",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/25a688e29849bad56e596460f3870eacfa5cf77d",
        "html_url": "https://github.com/eBay/parallec/commit/25a688e29849bad56e596460f3870eacfa5cf77d",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/25a688e29849bad56e596460f3870eacfa5cf77d/comments",
        "author": null,
        "committer": null,
        "parents": [
            {
                "sha": "71ffa0ce47c2442bd1ef4588229768990434078c",
                "url": "https://api.github.com/repos/eBay/parallec/commits/71ffa0ce47c2442bd1ef4588229768990434078c",
                "html_url": "https://github.com/eBay/parallec/commit/71ffa0ce47c2442bd1ef4588229768990434078c"
            }
        ],
        "stats": {
            "total": 142,
            "additions": 124,
            "deletions": 18
        },
        "files": [
            {
                "sha": "e1d83b2ae99d2372950998b646fb98cd48854888",
                "filename": "CHANGELOG.md",
                "status": "modified",
                "additions": 6,
                "deletions": 0,
                "changes": 6,
                "blob_url": "https://github.com/eBay/parallec/blob/25a688e29849bad56e596460f3870eacfa5cf77d/CHANGELOG.md",
                "raw_url": "https://github.com/eBay/parallec/raw/25a688e29849bad56e596460f3870eacfa5cf77d/CHANGELOG.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/CHANGELOG.md?ref=25a688e29849bad56e596460f3870eacfa5cf77d",
                "patch": "@@ -2,6 +2,12 @@ Parallec Change Log\n ==========\n \n \n+## Version 0.10.3\n+\n+_2016-11-??_\n+\n+* Improved unit tests coverage.\n+\n ## Version 0.10.2\n \n _2016-10-27_"
            },
            {
                "sha": "be055f7ddf8546bfc0e6b666b9e0dbf766ff4771",
                "filename": "src/main/java/io/parallec/core/ParallelTaskBuilder.java",
                "status": "modified",
                "additions": 7,
                "deletions": 5,
                "changes": 12,
                "blob_url": "https://github.com/eBay/parallec/blob/25a688e29849bad56e596460f3870eacfa5cf77d/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FParallelTaskBuilder.java",
                "raw_url": "https://github.com/eBay/parallec/raw/25a688e29849bad56e596460f3870eacfa5cf77d/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FParallelTaskBuilder.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FParallelTaskBuilder.java?ref=25a688e29849bad56e596460f3870eacfa5cf77d",
                "patch": "@@ -271,7 +271,7 @@ public void run() {\n                 new Thread(director).start();\n             }\n \n-            if (this.mode == TaskRunMode.SYNC) {\n+            if (this.getMode() == TaskRunMode.SYNC) {\n                 logger.info(\"Executing task {} in SYNC mode...  \",\n                         task.getTaskId());\n \n@@ -300,7 +300,7 @@ public void run() {\n             logger.error(\"fail task builder. Unknown error: \" + t, t);\n             task.setState(ParallelTaskState.COMPLETED_WITH_ERROR);\n             task.getTaskErrorMetas().add(\n-                    new TaskErrorMeta(TaskErrorType.UNKNOWN, \"validation eror\",\n+                    new TaskErrorMeta(TaskErrorType.UNKNOWN, \"unknown eror\",\n                             t));\n         }\n \n@@ -681,8 +681,8 @@ public ParallelTaskBuilder setReplaceVarMapToSingleTargetFromMap(\n             String uniformTargetHost) {\n         setReplacementVarMapNodeSpecific(replacementVarMapNodeSpecific);\n \n-        if (uniformTargetHost == null || uniformTargetHost.isEmpty()) {\n-            logger.error(\"uniform target host is empty or null. skil setting.\");\n+        if (Strings.isNullOrEmpty(uniformTargetHost)) {\n+            logger.error(\"uniform target host is empty or null. skip setting.\");\n             return this;\n         }\n         for (Entry<String, StrStrMap> entry : replacementVarMapNodeSpecific\n@@ -718,8 +718,10 @@ public ParallelTaskBuilder setReplaceVarMapToSingleTargetSingleVar(\n         this.targetHosts.clear();\n         int i = 0;\n         for (String replace : replaceList) {\n-            if (replace == null)\n+            if (replace == null){\n+                logger.error(\"null replacement.. skip\");\n                 continue;\n+            }\n             String hostName = PcConstants.API_PREFIX + i;\n \n             replacementVarMapNodeSpecific.put("
            },
            {
                "sha": "9714e9909cbf7cde8b7292ceca4cfb9c72b47760",
                "filename": "src/main/java/io/parallec/core/resources/AsyncHttpClientFactoryEmbed.java",
                "status": "modified",
                "additions": 0,
                "deletions": 6,
                "changes": 6,
                "blob_url": "https://github.com/eBay/parallec/blob/25a688e29849bad56e596460f3870eacfa5cf77d/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fresources%2FAsyncHttpClientFactoryEmbed.java",
                "raw_url": "https://github.com/eBay/parallec/raw/25a688e29849bad56e596460f3870eacfa5cf77d/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fresources%2FAsyncHttpClientFactoryEmbed.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fresources%2FAsyncHttpClientFactoryEmbed.java?ref=25a688e29849bad56e596460f3870eacfa5cf77d",
                "patch": "@@ -146,12 +146,6 @@ public boolean verify(final String hostname,\n         HttpsURLConnection.setDefaultHostnameVerifier(verifier);\n     }\n \n-    /**\n-     * dummy.\n-     */\n-    public void state() {\n-        logger.info(\"Initializing Default AHC CLient Factory...\");\n-    }\n \n     /**\n      * class CustomTrustManager."
            },
            {
                "sha": "acad4a925051779720afcaa5a8389e270cb843d8",
                "filename": "src/main/java/io/parallec/core/task/CapacityAwareTaskScheduler.java",
                "status": "modified",
                "additions": 1,
                "deletions": 2,
                "changes": 3,
                "blob_url": "https://github.com/eBay/parallec/blob/25a688e29849bad56e596460f3870eacfa5cf77d/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Ftask%2FCapacityAwareTaskScheduler.java",
                "raw_url": "https://github.com/eBay/parallec/raw/25a688e29849bad56e596460f3870eacfa5cf77d/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Ftask%2FCapacityAwareTaskScheduler.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Ftask%2FCapacityAwareTaskScheduler.java?ref=25a688e29849bad56e596460f3870eacfa5cf77d",
                "patch": "@@ -98,8 +98,7 @@ public void run() {\n             }\n \n         } catch (Exception e) {\n-            logger.error(\"TASK_WAIT_Q: fail in EvalTaskInWaitQRunner \" + e\n-                    + \" details \", e);\n+            logger.error(\"TASK_WAIT_Q: fail in EvalTaskInWaitQRunner \", e);\n         }\n     }\n "
            },
            {
                "sha": "147a9ea4a0ee5532d9ca3e26b7e9bc6545f0799a",
                "filename": "src/test/java/io/parallec/core/client/ParallelTaskTest.java",
                "status": "modified",
                "additions": 14,
                "deletions": 1,
                "changes": 15,
                "blob_url": "https://github.com/eBay/parallec/blob/25a688e29849bad56e596460f3870eacfa5cf77d/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fclient%2FParallelTaskTest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/25a688e29849bad56e596460f3870eacfa5cf77d/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fclient%2FParallelTaskTest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fclient%2FParallelTaskTest.java?ref=25a688e29849bad56e596460f3870eacfa5cf77d",
                "patch": "@@ -67,14 +67,27 @@ public void testCancelException() {\n         task.cancel(true);\n     }\n \n+    @Test\n+    public void testGetProgress() {\n+        ParallelTask task = ExecutionManagerTest.genParallelTask();\n+        task.setState(ParallelTaskState.IN_PROGRESS);\n+        task.setRequestNum(0);\n+        logger.info(\"progress: {}\",task.getProgress());\n+        task.setState(ParallelTaskState.COMPLETED_WITHOUT_ERROR);\n+        logger.info(\"progress: {}\",task.getProgress());\n+        \n+    }\n+\n+    \n     @Test\n     public void testCancelNullManager() {\n         ParallelTask task = ExecutionManagerTest.genParallelTask();\n         task.setState(ParallelTaskState.IN_PROGRESS);\n         task.executionManager = null;\n         task.cancel(true);\n     }\n-\n+    \n+    \n     @Test\n     public void testValidation() {\n         ParallelTask task = ExecutionManagerTest.genParallelTask();"
            },
            {
                "sha": "7176192fb5207bb8422fcdca569b06a3811f557b",
                "filename": "src/test/java/io/parallec/core/main/http/ParallelTaskCancelWholeTaskTest.java",
                "status": "modified",
                "additions": 16,
                "deletions": 4,
                "changes": 20,
                "blob_url": "https://github.com/eBay/parallec/blob/25a688e29849bad56e596460f3870eacfa5cf77d/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2FParallelTaskCancelWholeTaskTest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/25a688e29849bad56e596460f3870eacfa5cf77d/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2FParallelTaskCancelWholeTaskTest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2FParallelTaskCancelWholeTaskTest.java?ref=25a688e29849bad56e596460f3870eacfa5cf77d",
                "patch": "@@ -13,8 +13,6 @@\n import org.junit.Test;\n \n /**\n- * TODO Testing the enabled capacity control\n- * \n  * @author Yuanteng (Jeff) Pei\n  *\n  */\n@@ -34,7 +32,6 @@ public static void shutdown() throws Exception {\n \n     @Test\n     public void cancelAfter100ms() {\n-        // $NULL_UR\n         ParallelTask pt = pc\n                 .prepareHttpGet(\"\")\n                 .async()\n@@ -62,6 +59,12 @@ public void onCompleted(ResponseOnSingleTask res,\n                 e.printStackTrace();\n             }\n         }\n+        \n+        try {\n+            Thread.sleep(3000L);\n+        } catch (InterruptedException e) {\n+            e.printStackTrace();\n+        }\n \n     }\n \n@@ -93,10 +96,17 @@ public void onCompleted(ResponseOnSingleTask res,\n             }\n         }\n         pt.cancel(true);\n+        try {\n+            Thread.sleep(1000L);\n+        } catch (InterruptedException e) {\n+            e.printStackTrace();\n+        }\n     }\n \n     @Test\n-    public void cancelAfter2Sec() {\n+    public void cancelAfter2SecSync() {\n+        \n+        logger.info(\"START cancelAfter2SecSync \");\n         ParallelTask pt = pc\n                 .prepareHttpGet(\"\")\n                 .async()\n@@ -123,6 +133,8 @@ public void onCompleted(ResponseOnSingleTask res,\n             }\n         }\n         pt.saveLogToLocal();\n+        \n+        logger.info(\"COMPLETED cancelAfter2SecSync \");\n     }\n \n }"
            },
            {
                "sha": "e08f8f2c106a3e6967fae82ad2e53879ecd22aa4",
                "filename": "src/test/java/io/parallec/core/pojo/ParallecPojoStrTest.java",
                "status": "modified",
                "additions": 3,
                "deletions": 0,
                "changes": 3,
                "blob_url": "https://github.com/eBay/parallec/blob/25a688e29849bad56e596460f3870eacfa5cf77d/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fpojo%2FParallecPojoStrTest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/25a688e29849bad56e596460f3870eacfa5cf77d/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fpojo%2FParallecPojoStrTest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fpojo%2FParallecPojoStrTest.java?ref=25a688e29849bad56e596460f3870eacfa5cf77d",
                "patch": "@@ -156,6 +156,9 @@ public void testStaticFuncUtilsClassAndMisc() {\n         manager.checkClientTrusted(null, null);\n         manager.checkServerTrusted(null, null);\n         manager.getAcceptedIssuers();\n+        \n+        \n+        \n     }\n \n }"
            },
            {
                "sha": "616dd1b07d864f4eccd157e4da8922348bd2a210",
                "filename": "src/test/java/io/parallec/core/taskbuilder/ParallelTaskBuilderTest.java",
                "status": "modified",
                "additions": 77,
                "deletions": 0,
                "changes": 77,
                "blob_url": "https://github.com/eBay/parallec/blob/25a688e29849bad56e596460f3870eacfa5cf77d/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Ftaskbuilder%2FParallelTaskBuilderTest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/25a688e29849bad56e596460f3870eacfa5cf77d/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Ftaskbuilder%2FParallelTaskBuilderTest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Ftaskbuilder%2FParallelTaskBuilderTest.java?ref=25a688e29849bad56e596460f3870eacfa5cf77d",
                "patch": "@@ -1,18 +1,25 @@\n package io.parallec.core.taskbuilder;\n \n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n+import io.parallec.core.ParallecResponseHandler;\n import io.parallec.core.ParallelClient;\n import io.parallec.core.ParallelTaskBuilder;\n+import io.parallec.core.ResponseOnSingleTask;\n import io.parallec.core.TestBase;\n import io.parallec.core.bean.HttpMeta;\n import io.parallec.core.bean.ssh.SshLoginType;\n import io.parallec.core.exception.ParallelTaskInvalidException;\n import io.parallec.core.exception.TargetHostsLoadException;\n import io.parallec.core.resources.HttpClientStore;\n+import io.parallec.core.resources.HttpMethod;\n \n import java.util.Arrays;\n+import java.util.Map;\n \n import org.junit.AfterClass;\n import org.junit.BeforeClass;\n+import org.junit.Ignore;\n import org.junit.Test;\n \n public class ParallelTaskBuilderTest extends TestBase {\n@@ -55,9 +62,79 @@ public void testInvalid() throws Exception {\n         }\n     }\n     \n+    @Test\n+    public void testExecuteMock() throws Exception {\n+        \n+        ParallelTaskBuilder tb = mock(ParallelTaskBuilder.class);\n+        HttpMeta meta = new HttpMeta();\n+        meta.initValuesNa();\n+        meta.setHttpMethod(HttpMethod.GET);\n+        meta.setRequestPort(\"80\");\n+        \n+        ParallecResponseHandler handler = new ParallecResponseHandler() {\n+            @Override\n+            public void onCompleted(ResponseOnSingleTask res,\n+                    Map<String, Object> responseContext) {\n+                logger.info(\"test:\"  + res.toString());\n+            }\n+        };\n+        try {\n+            when(tb.getMode()).thenThrow(new RuntimeException());\n+            when(tb.execute(handler)).thenCallRealMethod();\n+            tb.setHttpMeta(meta);\n+            tb.execute(handler);\n+            \n+        } catch (Exception e) {\n+            logger.info(\"expected NPE error \" + e);\n+        }\n+    }\n+    \n+    @Ignore\n+    public void testExecute() throws Exception {\n+        ParallelTaskBuilder tb = new ParallelTaskBuilder();\n+        \n+        \n+        tb.setTargetHostsFromString(\"www.google.com\");\n+        HttpMeta meta = new HttpMeta();\n+        meta.initValuesNa();\n+        meta.setHttpMethod(HttpMethod.GET);\n+        meta.setRequestPort(\"80\");\n+        tb.setHttpMeta(meta);\n+        try {\n+            tb.execute(new ParallecResponseHandler() {\n+\n+                @Override\n+                public void onCompleted(ResponseOnSingleTask res,\n+                        Map<String, Object> responseContext) {\n+                    logger.info(\"test:\"  + res.toString());\n+\n+                }\n+            });\n+            \n+        } catch (Exception e) {\n+            logger.info(\"expected error \" + e);\n+        }\n+    }\n+    \n+    @Test\n+    public void testSetReplaceVarMapToSingleTargetSingleVar() throws Exception {\n+        ParallelTaskBuilder tb = new ParallelTaskBuilder();\n+        \n+        \n+        //test setReplaceVarMapToSingleTargetSingleVar\n+        tb.setReplaceVarMapToSingleTargetSingleVar(null, null, null);\n+        \n+        tb.setReplaceVarMapToSingleTargetSingleVar(null, Arrays.asList(\"a\", null,\"c\"), \"replace\");\n+        \n+        tb.setRunAsSuperUser(true);\n+    }\n+    \n     @Test\n     public void testSetterGetters() throws Exception {\n         ParallelTaskBuilder tb = new ParallelTaskBuilder();\n+        \n+        \n+        \n         tb.setResponseContext(null);\n         try {\n             tb.setTargetHostsFromCmsQueryUrl(\"\", \"\");"
            }
        ]
    },
    {
        "sha": "71ffa0ce47c2442bd1ef4588229768990434078c",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6NzFmZmEwY2U0N2MyNDQyYmQxZWY0NTg4MjI5NzY4OTkwNDM0MDc4Yw==",
        "commit": {
            "author": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2016-11-03T18:02:12Z"
            },
            "committer": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2016-11-03T18:02:12Z"
            },
            "message": "update ping test",
            "tree": {
                "sha": "1c8ecdf0eacb51edaca1a169d255066a14e6895d",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/1c8ecdf0eacb51edaca1a169d255066a14e6895d"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/71ffa0ce47c2442bd1ef4588229768990434078c",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/71ffa0ce47c2442bd1ef4588229768990434078c",
        "html_url": "https://github.com/eBay/parallec/commit/71ffa0ce47c2442bd1ef4588229768990434078c",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/71ffa0ce47c2442bd1ef4588229768990434078c/comments",
        "author": null,
        "committer": null,
        "parents": [
            {
                "sha": "e9fb3225167ebf0494ce3efe70051c1760c88dc5",
                "url": "https://api.github.com/repos/eBay/parallec/commits/e9fb3225167ebf0494ce3efe70051c1760c88dc5",
                "html_url": "https://github.com/eBay/parallec/commit/e9fb3225167ebf0494ce3efe70051c1760c88dc5"
            }
        ],
        "stats": {
            "total": 33,
            "additions": 32,
            "deletions": 1
        },
        "files": [
            {
                "sha": "a372c9551461eb507d37f68bd7e8e6b67a560e26",
                "filename": "src/test/java/io/parallec/core/main/ping/PingTest.java",
                "status": "modified",
                "additions": 32,
                "deletions": 1,
                "changes": 33,
                "blob_url": "https://github.com/eBay/parallec/blob/71ffa0ce47c2442bd1ef4588229768990434078c/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fping%2FPingTest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/71ffa0ce47c2442bd1ef4588229768990434078c/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fping%2FPingTest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fping%2FPingTest.java?ref=71ffa0ce47c2442bd1ef4588229768990434078c",
                "patch": "@@ -25,6 +25,7 @@\n \n import org.junit.AfterClass;\n import org.junit.BeforeClass;\n+import org.junit.Ignore;\n import org.junit.Test;\n \n /**\n@@ -85,14 +86,44 @@ public void onCompleted(ResponseOnSingleTask res,\n         logger.info(\"Total Duration: \" + task.getDurationSec());\n     }// end func\n     \n+    \n+    @Ignore\n+    public void pingWebsitesMoreOptionsForever() {\n+        for(int i=1; i<100; i++){\n+            pingWebsitesMoreOptionsHelper();\n+        }\n+    }\n+    \n+    public void pingWebsitesMoreOptionsHelper() {\n+\n+        ParallelTask task = pc.preparePing().setConcurrency(100)\n+                .setTargetHostsFromLineByLineText(FILEPATH_TOP_100,\n+                        SOURCE_LOCAL)\n+                 .setPingMode(PingMode.PROCESS)\n+                 .setPingNumRetries(1)\n+                 .setPingTimeoutMillis(2000)\n+                 \n+                .execute(new ParallecResponseHandler() {\n+                    @Override\n+                    public void onCompleted(ResponseOnSingleTask res,\n+                            Map<String, Object> responseContext) {\n+                        logger.info(res.toString());\n+                    }\n+                });\n+\n+        logger.info(\"Task Pretty Print: \\n{}\",\n+                PcStringUtils.renderJson(task.getAggregateResultFullSummary()));\n+        logger.info(\"Total Duration: \" + task.getDurationSec());\n+    }// end func\n+    \n     @Test\n     public void pingWebsitesMoreOptions() {\n \n         ParallelTask task = pc.preparePing().setConcurrency(100)\n                  .setTargetHostsFromString(\n                  \"www.parallec.io www.jeffpei.com www.restcommander.com 192.168.99.11\")\n                  .setPingMode(PingMode.PROCESS)\n-                 .setPingNumRetries(3)\n+                 .setPingNumRetries(2)\n                  .setPingTimeoutMillis(2000)\n                  \n                 .execute(new ParallecResponseHandler() {"
            }
        ]
    },
    {
        "sha": "e9fb3225167ebf0494ce3efe70051c1760c88dc5",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6ZTlmYjMyMjUxNjdlYmYwNDk0Y2UzZWZlNzAwNTFjMTc2MGM4OGRjNQ==",
        "commit": {
            "author": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2016-10-27T07:29:07Z"
            },
            "committer": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2016-10-27T07:29:07Z"
            },
            "message": "#48",
            "tree": {
                "sha": "77f2750d4c74a20bc9c3086b19c304ad6ca76858",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/77f2750d4c74a20bc9c3086b19c304ad6ca76858"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/e9fb3225167ebf0494ce3efe70051c1760c88dc5",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/e9fb3225167ebf0494ce3efe70051c1760c88dc5",
        "html_url": "https://github.com/eBay/parallec/commit/e9fb3225167ebf0494ce3efe70051c1760c88dc5",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/e9fb3225167ebf0494ce3efe70051c1760c88dc5/comments",
        "author": null,
        "committer": null,
        "parents": [
            {
                "sha": "e25b9eee5a85abf6e4a94054898bfdf953df426c",
                "url": "https://api.github.com/repos/eBay/parallec/commits/e25b9eee5a85abf6e4a94054898bfdf953df426c",
                "html_url": "https://github.com/eBay/parallec/commit/e25b9eee5a85abf6e4a94054898bfdf953df426c"
            }
        ],
        "stats": {
            "total": 32,
            "additions": 19,
            "deletions": 13
        },
        "files": [
            {
                "sha": "8c1416ef2a130b814f5366de4db368f54d06e189",
                "filename": "CHANGELOG.md",
                "status": "modified",
                "additions": 7,
                "deletions": 0,
                "changes": 7,
                "blob_url": "https://github.com/eBay/parallec/blob/e9fb3225167ebf0494ce3efe70051c1760c88dc5/CHANGELOG.md",
                "raw_url": "https://github.com/eBay/parallec/raw/e9fb3225167ebf0494ce3efe70051c1760c88dc5/CHANGELOG.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/CHANGELOG.md?ref=e9fb3225167ebf0494ce3efe70051c1760c88dc5",
                "patch": "@@ -2,6 +2,13 @@ Parallec Change Log\n ==========\n \n \n+## Version 0.10.2\n+\n+_2016-10-27_\n+\n+* Issue [#48](https://github.com/eBay/parallec/issues/48). \n+* Fixed not setting context in some tests. Code refactoring. \n+\n ## Version 0.10.1\n \n _2016-10-18_"
            },
            {
                "sha": "cb2bd19b120d05aea97dbfba63a1b2cfe546726f",
                "filename": "README.md",
                "status": "modified",
                "additions": 3,
                "deletions": 3,
                "changes": 6,
                "blob_url": "https://github.com/eBay/parallec/blob/e9fb3225167ebf0494ce3efe70051c1760c88dc5/README.md",
                "raw_url": "https://github.com/eBay/parallec/raw/e9fb3225167ebf0494ce3efe70051c1760c88dc5/README.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/README.md?ref=e9fb3225167ebf0494ce3efe70051c1760c88dc5",
                "patch": "@@ -4,7 +4,7 @@\n ![build status](https://img.shields.io/badge/build-info=>-green.svg) [![Build Status](https://travis-ci.org/eBay/parallec.svg?branch=master)](https://travis-ci.org/eBay/parallec) [![Coverage Status](https://img.shields.io/codecov/c/github/eBay/parallec.svg)](https://codecov.io/github/eBay/parallec) [![Apache V2.0 License](http://www.parallec.io/images/apache2.svg) ](https://github.com/eBay/parallec/blob/master/LICENSE)\n \n \n-![latest 0.10.x](http://img.shields.io/badge/latest_stable-0.10.x=>-green.svg) [ ![latest beta  maven central](https://maven-badges.herokuapp.com/maven-central/io.parallec/parallec-core/badge.svg?style=flat)](http://search.maven.org/#artifactdetails|io.parallec|parallec-core|0.10.1|) [![Gitter](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/eBay/parallec?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge)\n+![latest 0.10.x](http://img.shields.io/badge/latest_stable-0.10.x=>-green.svg) [ ![latest beta  maven central](https://maven-badges.herokuapp.com/maven-central/io.parallec/parallec-core/badge.svg?style=flat)](http://search.maven.org/#artifactdetails|io.parallec|parallec-core|0.10.2|) [![Gitter](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/eBay/parallec?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge)\n \n [![Javadoc](http://www.parallec.io/images/parallec-javadoc-blue.svg)](http://www.parallec.io/javadoc/index.html?io/parallec/core/ParallelClient.html) [![Documentation](http://www.parallec.io/images/parallec-documentation-red.svg)](http://www.parallec.io/docs/) [![Samples](http://www.parallec.io/images/parallec-samples-brightgreen.svg)](https://github.com/eBay/parallec-samples) [![Chinese](http://www.parallec.io/images/parallec-cnbrief-blue.svg)](https://github.com/eBay/parallec/blob/master/README-brief-cn.md) \n \n@@ -35,14 +35,14 @@ Donwload [the latest JAR](https://search.maven.org/remote_content?g=io.parallec&\n <dependency>\n \t<groupId>io.parallec</groupId>\n \t<artifactId>parallec-core</artifactId>\n-\t<version>0.10.1</version>\n+\t<version>0.10.2</version>\n </dependency>\n ```\n Snapshots of the development version are available in [Sonatype's `snapshots` repository](https://oss.sonatype.org/content/repositories/snapshots/io/parallec/parallec-core/).\n \n or Gradle:\n ```xml\n-compile 'io.parallec:parallec-core:0.10.1'\n+compile 'io.parallec:parallec-core:0.10.2'\n ```\n \n "
            },
            {
                "sha": "5fd77222acfee72242798a1b6a7e8d27ece42472",
                "filename": "pom.xml",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/e9fb3225167ebf0494ce3efe70051c1760c88dc5/pom.xml",
                "raw_url": "https://github.com/eBay/parallec/raw/e9fb3225167ebf0494ce3efe70051c1760c88dc5/pom.xml",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/pom.xml?ref=e9fb3225167ebf0494ce3efe70051c1760c88dc5",
                "patch": "@@ -4,7 +4,7 @@\n \t<modelVersion>4.0.0</modelVersion>\n \t<groupId>io.parallec</groupId>\n \t<artifactId>parallec-core</artifactId>\n-\t<version>0.10.1</version>\n+\t<version>0.10.2</version>\n \t<packaging>jar</packaging>\n \t<name>io.parallec:parallec-core</name>\n \t<url>https://github.com/eBay/parallec</url>"
            },
            {
                "sha": "873b470452996172b5034335624d22b1e795dea7",
                "filename": "src/main/java/io/parallec/core/commander/workflow/ping/PingProvider.java",
                "status": "modified",
                "additions": 2,
                "deletions": 2,
                "changes": 4,
                "blob_url": "https://github.com/eBay/parallec/blob/e9fb3225167ebf0494ce3efe70051c1760c88dc5/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fcommander%2Fworkflow%2Fping%2FPingProvider.java",
                "raw_url": "https://github.com/eBay/parallec/raw/e9fb3225167ebf0494ce3efe70051c1760c88dc5/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fcommander%2Fworkflow%2Fping%2FPingProvider.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fcommander%2Fworkflow%2Fping%2FPingProvider.java?ref=e9fb3225167ebf0494ce3efe70051c1760c88dc5",
                "patch": "@@ -43,10 +43,10 @@ public boolean isReachableByPingHelper(String targetHost, PingMeta pingMeta) {\n                 String cmd = \"\";\n                 if (System.getProperty(\"os.name\").startsWith(\"Windows\")) {\n                     // For Windows\n-                    cmd = \"ping -n 1 \" + targetHost;\n+                    cmd = \"ping -n 1 -w \" + pingMeta.getPingTimeoutMillis() + \" \" + targetHost;\n                 } else {\n                     // For Linux and OSX\n-                    cmd = \"ping -c 1 \" + targetHost;\n+                    cmd = \"ping -c 1 -t \"+ (int) (pingMeta.getPingTimeoutMillis()/1000) + \" \"  + targetHost;\n                 }\n                 \n                 Process myProcess = Runtime.getRuntime().exec(cmd);"
            },
            {
                "sha": "5197ce0d90ce5ce7b0d2ef7a30ed60208c3f020c",
                "filename": "src/test/java/io/parallec/core/main/ping/PingTest.java",
                "status": "modified",
                "additions": 6,
                "deletions": 7,
                "changes": 13,
                "blob_url": "https://github.com/eBay/parallec/blob/e9fb3225167ebf0494ce3efe70051c1760c88dc5/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fping%2FPingTest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/e9fb3225167ebf0494ce3efe70051c1760c88dc5/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fping%2FPingTest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fping%2FPingTest.java?ref=e9fb3225167ebf0494ce3efe70051c1760c88dc5",
                "patch": "@@ -69,7 +69,7 @@ public static void shutdown() throws Exception {\n     @Test\n     public void pingWebsitesMinBasicSync() {\n \n-        ParallelTask task = pc.preparePing().setConcurrency(1500)\n+        ParallelTask task = pc.preparePing().setConcurrency(100)\n                  .setTargetHostsFromString(\n                  \"www.parallec.io www.jeffpei.com www.restcommander.com bad.c21tom\")\n                 .execute(new ParallecResponseHandler() {\n@@ -88,12 +88,12 @@ public void onCompleted(ResponseOnSingleTask res,\n     @Test\n     public void pingWebsitesMoreOptions() {\n \n-        ParallelTask task = pc.preparePing().setConcurrency(1500)\n+        ParallelTask task = pc.preparePing().setConcurrency(100)\n                  .setTargetHostsFromString(\n-                 \"www.parallec.io www.jeffpei.com www.restcommander.com\")\n+                 \"www.parallec.io www.jeffpei.com www.restcommander.com 192.168.99.11\")\n                  .setPingMode(PingMode.PROCESS)\n                  .setPingNumRetries(3)\n-                 .setPingTimeoutMillis(500)\n+                 .setPingTimeoutMillis(2000)\n                  \n                 .execute(new ParallecResponseHandler() {\n                     @Override\n@@ -112,7 +112,7 @@ public void onCompleted(ResponseOnSingleTask res,\n     @Test\n     public void testInvalidPoller() {\n         try {\n-            pc.preparePing().setConcurrency(1500)\n+            pc.preparePing().setConcurrency(100)\n             .setHttpPollable(true)\n             .setTargetHostsFromString(\n             \"www.parallec.io www.jeffpei.com www.restcommander.com bad.c21tom\")\n@@ -128,6 +128,5 @@ public void onCompleted(ResponseOnSingleTask res,\n             logger.info(\"EXPECTED Exception {}\", e.getLocalizedMessage());\n         }\n     }\n-    \n-  \n+ \n }"
            }
        ]
    },
    {
        "sha": "e25b9eee5a85abf6e4a94054898bfdf953df426c",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6ZTI1YjllZWU1YTg1YWJmNmU0YTk0MDU0ODk4YmZkZjk1M2RmNDI2Yw==",
        "commit": {
            "author": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2016-10-19T04:55:28Z"
            },
            "committer": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2016-10-19T04:55:28Z"
            },
            "message": "update version [skip-ci]",
            "tree": {
                "sha": "641acae5e20ab54a950f2992c2413e862bbb2d51",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/641acae5e20ab54a950f2992c2413e862bbb2d51"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/e25b9eee5a85abf6e4a94054898bfdf953df426c",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/e25b9eee5a85abf6e4a94054898bfdf953df426c",
        "html_url": "https://github.com/eBay/parallec/commit/e25b9eee5a85abf6e4a94054898bfdf953df426c",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/e25b9eee5a85abf6e4a94054898bfdf953df426c/comments",
        "author": null,
        "committer": null,
        "parents": [
            {
                "sha": "327efacc84baf2d2e056b81e554daf7b54710634",
                "url": "https://api.github.com/repos/eBay/parallec/commits/327efacc84baf2d2e056b81e554daf7b54710634",
                "html_url": "https://github.com/eBay/parallec/commit/327efacc84baf2d2e056b81e554daf7b54710634"
            }
        ],
        "stats": {
            "total": 6,
            "additions": 3,
            "deletions": 3
        },
        "files": [
            {
                "sha": "645d56e8402607653224263786fbd372167c605b",
                "filename": "README.md",
                "status": "modified",
                "additions": 3,
                "deletions": 3,
                "changes": 6,
                "blob_url": "https://github.com/eBay/parallec/blob/e25b9eee5a85abf6e4a94054898bfdf953df426c/README.md",
                "raw_url": "https://github.com/eBay/parallec/raw/e25b9eee5a85abf6e4a94054898bfdf953df426c/README.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/README.md?ref=e25b9eee5a85abf6e4a94054898bfdf953df426c",
                "patch": "@@ -4,7 +4,7 @@\n ![build status](https://img.shields.io/badge/build-info=>-green.svg) [![Build Status](https://travis-ci.org/eBay/parallec.svg?branch=master)](https://travis-ci.org/eBay/parallec) [![Coverage Status](https://img.shields.io/codecov/c/github/eBay/parallec.svg)](https://codecov.io/github/eBay/parallec) [![Apache V2.0 License](http://www.parallec.io/images/apache2.svg) ](https://github.com/eBay/parallec/blob/master/LICENSE)\n \n \n-![latest 0.10.x](http://img.shields.io/badge/latest_stable-0.10.x=>-green.svg) [ ![latest beta  maven central](https://maven-badges.herokuapp.com/maven-central/io.parallec/parallec-core/badge.svg?style=flat)](http://search.maven.org/#artifactdetails|io.parallec|parallec-core|0.10.1-beta|) [![Gitter](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/eBay/parallec?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge)\n+![latest 0.10.x](http://img.shields.io/badge/latest_stable-0.10.x=>-green.svg) [ ![latest beta  maven central](https://maven-badges.herokuapp.com/maven-central/io.parallec/parallec-core/badge.svg?style=flat)](http://search.maven.org/#artifactdetails|io.parallec|parallec-core|0.10.1|) [![Gitter](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/eBay/parallec?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge)\n \n [![Javadoc](http://www.parallec.io/images/parallec-javadoc-blue.svg)](http://www.parallec.io/javadoc/index.html?io/parallec/core/ParallelClient.html) [![Documentation](http://www.parallec.io/images/parallec-documentation-red.svg)](http://www.parallec.io/docs/) [![Samples](http://www.parallec.io/images/parallec-samples-brightgreen.svg)](https://github.com/eBay/parallec-samples) [![Chinese](http://www.parallec.io/images/parallec-cnbrief-blue.svg)](https://github.com/eBay/parallec/blob/master/README-brief-cn.md) \n \n@@ -35,14 +35,14 @@ Donwload [the latest JAR](https://search.maven.org/remote_content?g=io.parallec&\n <dependency>\n \t<groupId>io.parallec</groupId>\n \t<artifactId>parallec-core</artifactId>\n-\t<version>0.10.1-beta</version>\n+\t<version>0.10.1</version>\n </dependency>\n ```\n Snapshots of the development version are available in [Sonatype's `snapshots` repository](https://oss.sonatype.org/content/repositories/snapshots/io/parallec/parallec-core/).\n \n or Gradle:\n ```xml\n-compile 'io.parallec:parallec-core:0.10.1-beta'\n+compile 'io.parallec:parallec-core:0.10.1'\n ```\n \n "
            }
        ]
    },
    {
        "sha": "327efacc84baf2d2e056b81e554daf7b54710634",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6MzI3ZWZhY2M4NGJhZjJkMmUwNTZiODFlNTU0ZGFmN2I1NDcxMDYzNA==",
        "commit": {
            "author": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2016-10-19T04:39:53Z"
            },
            "committer": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2016-10-19T04:39:53Z"
            },
            "message": "#47",
            "tree": {
                "sha": "7dc16132e63e816a158410247b1ef4e8a9131b2b",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/7dc16132e63e816a158410247b1ef4e8a9131b2b"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/327efacc84baf2d2e056b81e554daf7b54710634",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/327efacc84baf2d2e056b81e554daf7b54710634",
        "html_url": "https://github.com/eBay/parallec/commit/327efacc84baf2d2e056b81e554daf7b54710634",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/327efacc84baf2d2e056b81e554daf7b54710634/comments",
        "author": null,
        "committer": null,
        "parents": [
            {
                "sha": "384cc77125ff23623f07d1915eff7a845ad59df1",
                "url": "https://api.github.com/repos/eBay/parallec/commits/384cc77125ff23623f07d1915eff7a845ad59df1",
                "html_url": "https://github.com/eBay/parallec/commit/384cc77125ff23623f07d1915eff7a845ad59df1"
            }
        ],
        "stats": {
            "total": 371,
            "additions": 287,
            "deletions": 84
        },
        "files": [
            {
                "sha": "bdab4d4dc1e50981e608d13ed5dd62a567982fc3",
                "filename": "CHANGELOG.md",
                "status": "modified",
                "additions": 8,
                "deletions": 0,
                "changes": 8,
                "blob_url": "https://github.com/eBay/parallec/blob/327efacc84baf2d2e056b81e554daf7b54710634/CHANGELOG.md",
                "raw_url": "https://github.com/eBay/parallec/raw/327efacc84baf2d2e056b81e554daf7b54710634/CHANGELOG.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/CHANGELOG.md?ref=327efacc84baf2d2e056b81e554daf7b54710634",
                "patch": "@@ -1,6 +1,14 @@\n Parallec Change Log\n ==========\n \n+\n+## Version 0.10.1\n+\n+_2016-10-18_\n+\n+* Issue [#47](https://github.com/eBay/parallec/issues/47). Created the response with proper error msg for the host when the whole parallel task [timeouts](http://www.parallec.io/docs/configurations/#long-running-jobs), added unit tests on this case. \n+* Fixed not setting context in some tests. Code refactoring. \n+\n ## Version 0.10.1-beta\n \n "
            },
            {
                "sha": "d5609490fc346d4ee87dd09952927c973a5c626e",
                "filename": "pom.xml",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/327efacc84baf2d2e056b81e554daf7b54710634/pom.xml",
                "raw_url": "https://github.com/eBay/parallec/raw/327efacc84baf2d2e056b81e554daf7b54710634/pom.xml",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/pom.xml?ref=327efacc84baf2d2e056b81e554daf7b54710634",
                "patch": "@@ -4,7 +4,7 @@\n \t<modelVersion>4.0.0</modelVersion>\n \t<groupId>io.parallec</groupId>\n \t<artifactId>parallec-core</artifactId>\n-\t<version>0.10.1-beta</version>\n+\t<version>0.10.1</version>\n \t<packaging>jar</packaging>\n \t<name>io.parallec:parallec-core</name>\n \t<url>https://github.com/eBay/parallec</url>"
            },
            {
                "sha": "f6e6147c0dc3c3fa976f0748ed2fad2ddecc8767",
                "filename": "src/main/java/io/parallec/core/actor/ExecutionManager.java",
                "status": "modified",
                "additions": 105,
                "deletions": 61,
                "changes": 166,
                "blob_url": "https://github.com/eBay/parallec/blob/327efacc84baf2d2e056b81e554daf7b54710634/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FExecutionManager.java",
                "raw_url": "https://github.com/eBay/parallec/raw/327efacc84baf2d2e056b81e554daf7b54710634/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FExecutionManager.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FExecutionManager.java?ref=327efacc84baf2d2e056b81e554daf7b54710634",
                "patch": "@@ -135,7 +135,8 @@ public class ExecutionManager extends UntypedActor {\n     /**\n      * Instantiates a new command manager.\n      *\n-     * @param task the task\n+     * @param task\n+     *            the task\n      */\n     public ExecutionManager(ParallelTask task) {\n         this.task = task;\n@@ -169,17 +170,16 @@ public void onReceive(Object message) {\n \n                 httpMeta = task.getHttpMeta();\n                 targetHostMeta = task.getTargetHostMeta();\n-                final RequestProtocol requestProtocol = task.getRequestProtocol();\n+                final RequestProtocol requestProtocol = task\n+                        .getRequestProtocol();\n \n                 // Get request parameters to construct a REST CALL\n                 final String requestUrlPrefixOrig = httpMeta\n                         .getRequestUrlPostfix();\n                 final HttpMethod httpMethod = httpMeta.getHttpMethod();\n-                \n-                String requestPortStrOrig = httpMeta\n-                        .getRequestPort();\n-                \n-                \n+\n+                String requestPortStrOrig = httpMeta.getRequestPort();\n+\n                 final boolean pollable = httpMeta.isPollable();\n \n                 final int maxConcurrency = task.getConcurrency();\n@@ -194,7 +194,7 @@ public void onReceive(Object message) {\n \n                 InternalDataProvider.getInstance()\n                         .filterUnsafeOrUnnecessaryRequest(nodeDataMapValid,\n-                                nodeDataMapValidSafe );\n+                                nodeDataMapValidSafe);\n \n                 logger.info(\n                         \"After Safety Check: total entry count in nodeDataMapValidSafe: {}\",\n@@ -235,7 +235,8 @@ public void onReceive(Object message) {\n                     final String targetHost = entry.getKey();\n                     NodeReqResponse nodeReqResponse = entry.getValue();\n \n-                    final String requestContentOrig = nodeReqResponse.getRequestParameters().get(\n+                    final String requestContentOrig = nodeReqResponse\n+                            .getRequestParameters().get(\n                                     PcConstants.REQUEST_BODY_PLACE_HOLDER);\n \n                     final String requestContent = NodeReqResponse\n@@ -246,25 +247,27 @@ public void onReceive(Object message) {\n                             .replaceStrByMap(\n                                     nodeReqResponse.getRequestParameters(),\n                                     requestUrlPrefixOrig);\n-                    //add support for port replacement\n+                    // add support for port replacement\n                     final String requestPortStr = NodeReqResponse\n                             .replaceStrByMap(\n                                     nodeReqResponse.getRequestParameters(),\n                                     requestPortStrOrig);\n                     int requestPort = 80;\n-                    try{\n+                    try {\n                         requestPort = Integer.parseInt(requestPortStr);\n-                    }catch(NumberFormatException nfe){\n-                        logger.error(\"Error parsing replacable port with NumberFormatException. \"\n-                                + \"No valid port for host {}. Now use default port 80\", targetHost);\n+                    } catch (NumberFormatException nfe) {\n+                        logger.error(\n+                                \"Error parsing replacable port with NumberFormatException. \"\n+                                        + \"No valid port for host {}. Now use default port 80\",\n+                                targetHost);\n                     }\n-                    //only pass when it is not in manager\n-                    final ParallecResponseHandler handler = \n-                            task.getConfig().getHandlerExecutionLocation()==HandlerExecutionLocation.MANAGER\n-                            ? null : task.getHandler();\n-                    final Map<String, Object> responseContext =\n-                            task.getConfig().getHandlerExecutionLocation()==HandlerExecutionLocation.MANAGER\n-                            ? null : task.getResponseContext();\n+                    // only pass when it is not in manager\n+                    final ParallecResponseHandler handler = task.getConfig()\n+                            .getHandlerExecutionLocation() == HandlerExecutionLocation.MANAGER ? null\n+                            : task.getHandler();\n+                    final Map<String, Object> responseContext = task\n+                            .getConfig().getHandlerExecutionLocation() == HandlerExecutionLocation.MANAGER ? null\n+                            : task.getResponseContext();\n                     Map<String, String> httpHeaderMapLocal = new HashMap<String, String>();\n                     httpHeaderMapLocal.putAll(httpMeta.getHeaderMetadata()\n                             .getHeaderMap());\n@@ -348,33 +351,32 @@ public void onReceive(Object message) {\n                     final SshMeta sshMeta = task.getSshMeta();\n                     final TcpMeta tcpMeta = task.getTcpMeta();\n                     final UdpMeta udpMeta = task.getUdpMeta();\n-                    \n+\n                     final PingMeta pingMeta = task.getPingMeta();\n-                    final ResponseHeaderMeta responseHeaderMeta = task.getHttpMeta().getResponseHeaderMeta();\n-                    \n-                    \n+                    final ResponseHeaderMeta responseHeaderMeta = task\n+                            .getHttpMeta().getResponseHeaderMeta();\n+\n                     logger.debug(\"REQUEST GENERATED: \"\n                             + (sentRequestCounter + 1)\n                             + \" / \"\n                             + requestCount\n                             + \" after \"\n-                            + Double.toString((prepareRequestTime - startTime) / 1000.0) + \" secs\"\n-                            + \":  (NOT SEND YET) \" + targetHost + \" at \"\n-                            + prepareRequestTimeStr);\n+                            + Double.toString((prepareRequestTime - startTime) / 1000.0)\n+                            + \" secs\" + \":  (NOT SEND YET) \" + targetHost\n+                            + \" at \" + prepareRequestTimeStr);\n \n                     ActorRef worker = getContext().system().actorOf(\n-                            Props.create(\n-                                    OperationWorker.class,\n+                            Props.create(OperationWorker.class,\n                                     new TaskRequest(task.getConfig()\n                                             .getActorMaxOperationTimeoutSec(),\n-                                            requestProtocol,\n-                                            targetHost, hostUniform,\n-                                            requestPort, resourcePath,\n-                                            requestContent, httpMethod\n-                                                    , pollable,\n-                                            httpHeaderMapLocal, \n-                                            handler,responseContext,\n-                                            sshMeta, tcpMeta, udpMeta, pingMeta, responseHeaderMeta),\n+                                            requestProtocol, targetHost,\n+                                            hostUniform, requestPort,\n+                                            resourcePath, requestContent,\n+                                            httpMethod, pollable,\n+                                            httpHeaderMapLocal, handler,\n+                                            responseContext, sshMeta, tcpMeta,\n+                                            udpMeta, pingMeta,\n+                                            responseHeaderMeta),\n                                     asyncHttpClient, task.getHttpMeta()\n                                             .getHttpPollerProcessor()\n \n@@ -410,8 +412,9 @@ public void onReceive(Object message) {\n                                 ExecutionManagerMsgType.OPERATION_TIMEOUT,\n                                 getContext().system().dispatcher(), getSelf());\n \n-                logger.debug(\"Scheduled TIMEOUT_IN_MANAGER_SCONDS OPERATION_TIMEOUT after SEC {} \",\n-                         task.getConfig().getTimeoutInManagerSec());\n+                logger.debug(\n+                        \"Scheduled TIMEOUT_IN_MANAGER_SCONDS OPERATION_TIMEOUT after SEC {} \",\n+                        task.getConfig().getTimeoutInManagerSec());\n             } else if (message instanceof ResponseOnSingleTask) {\n \n                 ResponseOnSingleTask taskResponse = (ResponseOnSingleTask) message;\n@@ -474,39 +477,52 @@ public void onReceive(Object message) {\n                         / (double) (requestCount) * 100.0;\n                 String responseReceiveTimeStr = PcDateUtils\n                         .getDateTimeStrStandard(new Date(responseReceiveTime));\n-                String secondElapsedStr = Double.toString((responseReceiveTime - startTime) / 1000.0);\n-                \n+                String secondElapsedStr = Double\n+                        .toString((responseReceiveTime - startTime) / 1000.0);\n+\n                 // log the first/ last 5 percent; then sample the middle\n-                if(requestCount < ParallecGlobalConfig.logAllResponseIfTotalLessThan\n+                if (requestCount < ParallecGlobalConfig.logAllResponseIfTotalLessThan\n                         || responseCount <= ParallecGlobalConfig.logAllResponseBeforeInitCount\n                         || progressPercent < ParallecGlobalConfig.logAllResponseBeforePercent\n                         || progressPercent > ParallecGlobalConfig.logAllResponseAfterPercent\n-                        || responseCount % ParallecGlobalConfig.logResponseInterval==0\n-                        ){\n+                        || responseCount\n+                                % ParallecGlobalConfig.logResponseInterval == 0) {\n                     // percent is escaped using percent sign; hostName\n                     logger.info(String\n                             .format(\"\\n[%d]__RESP_RECV_IN_MGR %d (+%d) / %d (%.5g%%)  \"\n                                     + \"AFT %s S @ %s @ %s , TaskID : %s , CODE: %s, RESP_BRIEF: %s %s\",\n-                                    responseCount, responseCount, requestCount\n-                                    - responseCount, requestCount,\n-                                    progressPercent, secondElapsedStr, hostName,\n-                                    responseReceiveTimeStr, taskIdTrim,\n-                                    taskResponse.getStatusCode(), displayResponse,\n-                                    taskResponse.getErrorMessage()==null? \"\" : \", ERR: \"+ taskResponse.getErrorMessage()));\n+                                    responseCount,\n+                                    responseCount,\n+                                    requestCount - responseCount,\n+                                    requestCount,\n+                                    progressPercent,\n+                                    secondElapsedStr,\n+                                    hostName,\n+                                    responseReceiveTimeStr,\n+                                    taskIdTrim,\n+                                    taskResponse.getStatusCode(),\n+                                    displayResponse,\n+                                    taskResponse.getErrorMessage() == null ? \"\"\n+                                            : \", ERR: \"\n+                                                    + taskResponse\n+                                                            .getErrorMessage()));\n                 }\n \n                 nrr.getRequestParameters().put(PcConstants.NODE_REQUEST_STATUS,\n                         SingleTargetTaskStatus.COMPLETED.toString());\n \n-                if (task.getConfig().getHandlerExecutionLocation()==HandlerExecutionLocation.MANAGER\n-                        &&  task != null && task.getHandler() != null) {\n+                if (task.getConfig().getHandlerExecutionLocation() == HandlerExecutionLocation.MANAGER\n+                        && task != null && task.getHandler() != null) {\n                     try {\n-                        //logger.debug(\"HANDLE In manager: \" + taskResponse.getHost());\n+                        // logger.debug(\"HANDLE In manager: \" +\n+                        // taskResponse.getHost());\n                         task.getHandler().onCompleted(taskResponse,\n                                 task.getResponseContext());\n                     } catch (Exception t) {\n-                        logger.error(\"Error handling onCompleted in manager for response: {} Error {}\"\n-                                , taskResponse.toString(),  t.getLocalizedMessage());\n+                        logger.error(\n+                                \"Error handling onCompleted in manager for response: {} Error {}\",\n+                                taskResponse.toString(),\n+                                t.getLocalizedMessage());\n                     }\n                 }\n \n@@ -540,10 +556,13 @@ public void onReceive(Object message) {\n                 // reply\n                 case OPERATION_TIMEOUT:\n                     cancelRequestAndWorkers();\n+                    String msg = \"Execution manager timeout on whole Parallel Task.\";\n                     ExecutionManagerExecutionException ex = new ExecutionManagerExecutionException(\n-                            \"Manager timeout after\",\n+                            msg,\n                             ManagerExceptionType.TIMEOUT);\n+                    logger.error(msg);\n                     reply(ParallelTaskState.COMPLETED_WITH_ERROR, ex);\n+                    \n                     break;\n                 // this will wait for the works to reply.\n                 case CANCEL:\n@@ -596,8 +615,31 @@ private void reply(ParallelTaskState state, Exception t) {\n                     new TaskErrorMeta(TaskErrorType.COMMAND_MANAGER_ERROR,\n                             t == null ? \"NA\" : t.getLocalizedMessage()));\n \n+            String curTimeStr = PcDateUtils.getNowDateTimeStrStandard();\n             logger.info(\"COMPLETED_WITH_ERROR.  \" + this.requestCount\n-                    + \" at time: \" + PcDateUtils.getNowDateTimeStrStandard());\n+                    + \" at time: \" + curTimeStr);\n+//TODO\n+            // #47\n+            if (t instanceof ExecutionManagerExecutionException\n+                    && ((ExecutionManagerExecutionException) t).getType() == ManagerExceptionType.TIMEOUT) {\n+\n+                for (Entry<String, NodeReqResponse> entry : task\n+                        .getParallelTaskResult().entrySet()) {\n+\n+                    // no response yet\n+                    if (entry.getValue() != null\n+                            && entry.getValue().getSingleTaskResponse() == null) {\n+                        ResponseOnSingleTask response = new ResponseOnSingleTask();\n+                        response.setReceiveTimeInManager(curTimeStr);\n+                        response.setError(true);\n+                        response.setErrorMessage(t.getLocalizedMessage()+\" Response was not received\");\n+                        response.setReceiveTime(curTimeStr);\n+                        entry.getValue().setSingleTaskResponse(response);\n+                        logger.info(\"Found empty response for {}\",\n+                                entry.getKey());\n+                    }\n+                }\n+            }//end if\n \n         } else {\n             logger.info(\"SUCCESSFUL GOT ON ALL RESPONSES: Received all the expected messages. Count matches: \"\n@@ -628,14 +670,15 @@ private void reply(ParallelTaskState state, Exception t) {\n         }\n         workers.clear();\n \n-        if (batchSenderAsstManager != null && !batchSenderAsstManager.isTerminated()) {\n+        if (batchSenderAsstManager != null\n+                && !batchSenderAsstManager.isTerminated()) {\n             getContext().stop(batchSenderAsstManager);\n         }\n \n         if (timeoutMessageCancellable != null) {\n             timeoutMessageCancellable.cancel();\n         }\n-        \n+\n         if (getSelf() != null && !getSelf().isTerminated()) {\n             getContext().stop(getSelf());\n         }\n@@ -660,7 +703,8 @@ private void cancelRequestAndWorkers() {\n     /**\n      * Cancel request and worker on host.\n      *\n-     * @param targetHosts the target hosts\n+     * @param targetHosts\n+     *            the target hosts\n      */\n     @SuppressWarnings(\"deprecation\")\n     private void cancelRequestAndWorkerOnHost(List<String> targetHosts) {"
            },
            {
                "sha": "c705e8afb3b571ff378244da52af3da26344cf61",
                "filename": "src/main/java/io/parallec/core/commander/workflow/InternalDataProvider.java",
                "status": "modified",
                "additions": 12,
                "deletions": 20,
                "changes": 32,
                "blob_url": "https://github.com/eBay/parallec/blob/327efacc84baf2d2e056b81e554daf7b54710634/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fcommander%2Fworkflow%2FInternalDataProvider.java",
                "raw_url": "https://github.com/eBay/parallec/raw/327efacc84baf2d2e056b81e554daf7b54710634/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fcommander%2Fworkflow%2FInternalDataProvider.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fcommander%2Fworkflow%2FInternalDataProvider.java?ref=327efacc84baf2d2e056b81e554daf7b54710634",
                "patch": "@@ -64,40 +64,32 @@ private InternalDataProvider() {\n     public void genNodeDataMap(ParallelTask task) {\n \n         TargetHostMeta targetHostMeta = task.getTargetHostMeta();\n-\n         HttpMeta httpMeta = task.getHttpMeta();\n \n-        String entityBody = httpMeta\n-                .getEntityBody();\n+        String entityBody = httpMeta.getEntityBody();\n         String requestContent = HttpMeta\n                 .replaceDefaultFullRequestContent(entityBody);\n \n         Map<String, NodeReqResponse> parallelTaskResult = task\n                 .getParallelTaskResult();\n-        try {\n-            for (String fqdn : targetHostMeta.getHosts()) {\n-                NodeReqResponse nodeReqResponse = new NodeReqResponse(fqdn);\n-                nodeReqResponse.setDefaultReqestContent(requestContent);\n-                parallelTaskResult.put(fqdn, nodeReqResponse);\n-\n-            }\n-\n-        } catch (Exception e) {\n-            logger.error(\"sleep exception \" + e + \" details: \", e);\n+        for (String fqdn : targetHostMeta.getHosts()) {\n+            NodeReqResponse nodeReqResponse = new NodeReqResponse(fqdn);\n+            nodeReqResponse.setDefaultReqestContent(requestContent);\n+            parallelTaskResult.put(fqdn, nodeReqResponse);\n         }\n-\n     }// end func.\n \n     /**\n      * Filter unsafe or unnecessary request.\n      *\n-     * @param nodeDataMapValidSource the node data map valid source\n-     * @param nodeDataMapValidSafe the node data map valid safe\n+     * @param nodeDataMapValidSource\n+     *            the node data map valid source\n+     * @param nodeDataMapValidSafe\n+     *            the node data map valid safe\n      */\n     public void filterUnsafeOrUnnecessaryRequest(\n             Map<String, NodeReqResponse> nodeDataMapValidSource,\n-            Map<String, NodeReqResponse> nodeDataMapValidSafe\n-            ) {\n+            Map<String, NodeReqResponse> nodeDataMapValidSafe) {\n \n         for (Entry<String, NodeReqResponse> entry : nodeDataMapValidSource\n                 .entrySet()) {\n@@ -116,8 +108,8 @@ public void filterUnsafeOrUnnecessaryRequest(\n                         .get(PcConstants.NODE_REQUEST_WILL_EXECUTE));\n \n                 if (!willExecute) {\n-                    logger.info(\"NOT_EXECUTE_COMMAND \"\n-                             + \" on target: \" + hostName + \" at \"\n+                    logger.info(\"NOT_EXECUTE_COMMAND \" + \" on target: \"\n+                            + hostName + \" at \"\n                             + PcDateUtils.getNowDateTimeStrStandard());\n                     continue;\n                 }"
            },
            {
                "sha": "8f52ae2ba48c9efb221e607543867b5ad57fdf22",
                "filename": "src/test/java/io/parallec/core/main/http/ParallelClientHttpBasicMoreOptionsTest.java",
                "status": "modified",
                "additions": 1,
                "deletions": 0,
                "changes": 1,
                "blob_url": "https://github.com/eBay/parallec/blob/327efacc84baf2d2e056b81e554daf7b54710634/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2FParallelClientHttpBasicMoreOptionsTest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/327efacc84baf2d2e056b81e554daf7b54710634/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2FParallelClientHttpBasicMoreOptionsTest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2FParallelClientHttpBasicMoreOptionsTest.java?ref=327efacc84baf2d2e056b81e554daf7b54710634",
                "patch": "@@ -73,6 +73,7 @@ public void hitWebsitesMinSync() {\n         ParallelTask task = pc\n                 .prepareHttpGet(\"/validateInternals.html\")\n                 .setConcurrency(1700)\n+                .setResponseContext(responseContext)\n                 .setTargetHostsFromString(\n                         \"www.parallec.io www.jeffpei.com www.restcommander.com\")\n "
            },
            {
                "sha": "6a24a72885121f56a0e07f73f1f75d0a80196c9b",
                "filename": "src/test/java/io/parallec/core/main/http/ParallelClientHttpBasicTest.java",
                "status": "modified",
                "additions": 4,
                "deletions": 2,
                "changes": 6,
                "blob_url": "https://github.com/eBay/parallec/blob/327efacc84baf2d2e056b81e554daf7b54710634/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2FParallelClientHttpBasicTest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/327efacc84baf2d2e056b81e554daf7b54710634/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2FParallelClientHttpBasicTest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2FParallelClientHttpBasicTest.java?ref=327efacc84baf2d2e056b81e554daf7b54710634",
                "patch": "@@ -72,8 +72,9 @@ public void hitWebsitesMinSync() {\n         Map<String, Object> responseContext = new HashMap<String, Object>();\n         ParallelTask task = pc\n                 .prepareHttpGet(\"/validateInternals.html\")\n+                .setResponseContext(responseContext)\n                 .setConcurrency(1700)\n-                .handleInWorker()\n+                //.handleInWorker()\n                 .setTargetHostsFromString(\n                         \"www.parallec.io www.jeffpei.com www.restcommander.com\")\n                 .execute(new ParallecResponseHandler() {\n@@ -99,7 +100,8 @@ public void onCompleted(ResponseOnSingleTask res,\n \n                     }\n                 });\n-\n+        Asserts.check(responseContext.values().size() >= 3,\n+                \" Fail to get 3 results\");\n         for (Object o : responseContext.values()) {\n             Double cpuDouble = Double.parseDouble((String) o);\n             Asserts.check(cpuDouble <= 100.0 && cpuDouble >= 0.0,"
            },
            {
                "sha": "dca0e1274888efae3cc27e46dbd7f87e29c6ef9c",
                "filename": "src/test/java/io/parallec/core/main/http/ParallelClientHttpBasicTimeoutTest.java",
                "status": "added",
                "additions": 100,
                "deletions": 0,
                "changes": 100,
                "blob_url": "https://github.com/eBay/parallec/blob/327efacc84baf2d2e056b81e554daf7b54710634/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2FParallelClientHttpBasicTimeoutTest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/327efacc84baf2d2e056b81e554daf7b54710634/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2FParallelClientHttpBasicTimeoutTest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2FParallelClientHttpBasicTimeoutTest.java?ref=327efacc84baf2d2e056b81e554daf7b54710634",
                "patch": "@@ -0,0 +1,100 @@\n+/*  \n+Copyright [2013-2015] eBay Software Foundation\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+    http://www.apache.org/licenses/LICENSE-2.0\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+ */\n+package io.parallec.core.main.http;\n+\n+import io.parallec.core.ParallecResponseHandler;\n+import io.parallec.core.ParallelClient;\n+import io.parallec.core.ParallelTask;\n+import io.parallec.core.ResponseOnSingleTask;\n+import io.parallec.core.TestBase;\n+import io.parallec.core.config.ParallelTaskConfig;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import org.apache.http.util.Asserts;\n+import org.junit.AfterClass;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+\n+/**\n+ * The most basic test with hitting the same URL at 3 different websites.\n+ * require Internet access for testing.\n+ * \n+ * <p>\n+ * This example shows 1. Basic request construction 2. how to use response\n+ * context to pass value during the response handler out to a global space\n+ * </p>\n+ */\n+public class ParallelClientHttpBasicTimeoutTest extends TestBase {\n+\n+    /** The pc. */\n+    private static ParallelClient pc;\n+\n+    /**\n+     * Sets the up.\n+     *\n+     * @throws Exception\n+     *             the exception\n+     */\n+    @BeforeClass\n+    public static void setUp() throws Exception {\n+        pc = new ParallelClient();\n+    }\n+\n+    /**\n+     * Shutdown.\n+     *\n+     * @throws Exception\n+     *             the exception\n+     */\n+    @AfterClass\n+    public static void shutdown() throws Exception {\n+        pc.releaseExternalResources();\n+    }\n+\n+    /**\n+     * Hit websites min sync.\n+     */\n+    @Test\n+    public void hitWebsitesMinSyncTimeout() {\n+\n+        ParallelTaskConfig config = new ParallelTaskConfig();\n+        config.setTimeoutInManagerSec(0);\n+\n+        Map<String, Object> responseContext = new HashMap<String, Object>();\n+        ParallelTask task = pc\n+                .prepareHttpGet(\"/validateInternals.html\")\n+                .setConcurrency(1700)\n+                .setResponseContext(responseContext)\n+                .handleInWorker()\n+                .setConfig(config)\n+                .setTargetHostsFromString(\n+                        \"www.parallec.io www.jeffpei.com www.restcommander.com\")\n+                .execute(new ParallecResponseHandler() {\n+\n+                    @Override\n+                    public void onCompleted(ResponseOnSingleTask res,\n+                            Map<String, Object> responseContext) {\n+\n+                            ;\n+                    }\n+                });\n+\n+        Asserts.check(task.getParallelTaskResult().get(\"www.parallec.io\")\n+                .getSingleTaskResponse().getErrorMessage().contains(\"Execution manager timeout\"),\n+                \" Fail to get 3 results\");\n+        logger.info(\"Task Pretty Print: \\n{}\", task.prettyPrintInfo());\n+    }\n+\n+}"
            },
            {
                "sha": "6a9b70238181170f12b6e149e6ed3985cf4460f7",
                "filename": "src/test/java/io/parallec/core/main/http/ParallelClientHttpTop100WebsiteTimeoutTest.java",
                "status": "added",
                "additions": 56,
                "deletions": 0,
                "changes": 56,
                "blob_url": "https://github.com/eBay/parallec/blob/327efacc84baf2d2e056b81e554daf7b54710634/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2FParallelClientHttpTop100WebsiteTimeoutTest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/327efacc84baf2d2e056b81e554daf7b54710634/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2FParallelClientHttpTop100WebsiteTimeoutTest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2FParallelClientHttpTop100WebsiteTimeoutTest.java?ref=327efacc84baf2d2e056b81e554daf7b54710634",
                "patch": "@@ -0,0 +1,56 @@\n+package io.parallec.core.main.http;\n+\n+import io.parallec.core.ParallecResponseHandler;\n+import io.parallec.core.ParallelClient;\n+import io.parallec.core.ParallelTask;\n+import io.parallec.core.ResponseOnSingleTask;\n+import io.parallec.core.TestBase;\n+import io.parallec.core.config.ParallelTaskConfig;\n+\n+import java.util.Map;\n+\n+import org.junit.AfterClass;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+\n+public class ParallelClientHttpTop100WebsiteTimeoutTest extends TestBase {\n+\n+    private static ParallelClient pc;\n+\n+    @BeforeClass\n+    public static void setUp() throws Exception {\n+        pc = new ParallelClient();\n+    }\n+\n+    @AfterClass\n+    public static void shutdown() throws Exception {\n+        pc.releaseExternalResources();\n+    }\n+\n+    @Test\n+    public void hitTop100WebsitesTimeout() {\n+        // timeout early\n+        ParallelTaskConfig config = new ParallelTaskConfig();\n+        config.setTimeoutInManagerSec(1);\n+\n+        ParallelTask pt = pc\n+                .prepareHttpGet(\"\")\n+                .setConcurrency(1000)\n+                .setSaveResponseToTask(true)\n+                .setConfig(config)\n+                .setTargetHostsFromLineByLineText(FILEPATH_TOP_100,\n+                        SOURCE_LOCAL).execute(new ParallecResponseHandler() {\n+\n+                    @Override\n+                    public void onCompleted(ResponseOnSingleTask res,\n+                            Map<String, Object> responseContext) {\n+                        logger.info(\"Responose Code:\" + res.getStatusCode()\n+                                + \" host: \" + res.getHost());\n+                    }\n+                });\n+        logger.info(\"completed {} out of {} tasks in early timeout.\",\n+                pt.getResponsedNum(), pt.getRequestNum());\n+\n+    }\n+\n+}"
            }
        ]
    },
    {
        "sha": "384cc77125ff23623f07d1915eff7a845ad59df1",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6Mzg0Y2M3NzEyNWZmMjM2MjNmMDdkMTkxNWVmZjdhODQ1YWQ1OWRmMQ==",
        "commit": {
            "author": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2016-10-06T18:08:47Z"
            },
            "committer": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2016-10-06T18:08:47Z"
            },
            "message": "resolve conflict readme [skip ci]",
            "tree": {
                "sha": "a592b4428cd7f15243415992bd46958617318874",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/a592b4428cd7f15243415992bd46958617318874"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/384cc77125ff23623f07d1915eff7a845ad59df1",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/384cc77125ff23623f07d1915eff7a845ad59df1",
        "html_url": "https://github.com/eBay/parallec/commit/384cc77125ff23623f07d1915eff7a845ad59df1",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/384cc77125ff23623f07d1915eff7a845ad59df1/comments",
        "author": null,
        "committer": null,
        "parents": [
            {
                "sha": "7e0977dd98ab857566d049d0c5b749e4caaeef6f",
                "url": "https://api.github.com/repos/eBay/parallec/commits/7e0977dd98ab857566d049d0c5b749e4caaeef6f",
                "html_url": "https://github.com/eBay/parallec/commit/7e0977dd98ab857566d049d0c5b749e4caaeef6f"
            },
            {
                "sha": "108df5a6f9deb51c2d37b83cc666b8a0540f4204",
                "url": "https://api.github.com/repos/eBay/parallec/commits/108df5a6f9deb51c2d37b83cc666b8a0540f4204",
                "html_url": "https://github.com/eBay/parallec/commit/108df5a6f9deb51c2d37b83cc666b8a0540f4204"
            }
        ],
        "stats": {
            "total": 4,
            "additions": 4,
            "deletions": 0
        },
        "files": [
            {
                "sha": "d2ed5590ba69e92a1685ff79ec7fc1c789656325",
                "filename": "README-brief-cn.md",
                "status": "modified",
                "additions": 4,
                "deletions": 0,
                "changes": 4,
                "blob_url": "https://github.com/eBay/parallec/blob/384cc77125ff23623f07d1915eff7a845ad59df1/README-brief-cn.md",
                "raw_url": "https://github.com/eBay/parallec/raw/384cc77125ff23623f07d1915eff7a845ad59df1/README-brief-cn.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/README-brief-cn.md?ref=384cc77125ff23623f07d1915eff7a845ad59df1",
                "patch": "@@ -20,4 +20,8 @@ Parallec内置特别的响应上下文（response context），在处理服务\n \n 通过过去一年内部使用和开源REST Superman/ REST Commander的开发， 反馈，经验教训，我们现在做把REST Commander的核心做成一个易于使用的独立库 （便于从Maven导入，让所有程序都写20行代码变成REST Commander）。在此基础上，我们添加超过[**15个新的功能**](https://github.com/eBay/parallec/blob/master/README.md#compare)，**改写超过70%的代码**，**以90%以上的测试覆盖率**，确保了用户和开源贡献者能够更加放心的开发和使用。与此同时，我们也把整体软件结构进行了优化，使得大部分内部开发可以直接在github开源平台上直接进行。\n \n+“Parallec.io现已经被集成在eBay的应用程序部署系统(PaaS)。Parallec被用于控制10个以上的并行API的任务的工作流，每个任务并行执行到数十到数千台的生产服务器的上。与以前的实现相比，Parallec 处理并行操作代码简洁，方便进行批作业的管理，为我们提高了资源利用率和效率。”\n+－－ Xiaotang (Sheldon) Shao, Principle Software Engineer, Deployment Platform / PaaS, Cloud Engineering at eBay Inc.\n+\n 您可以用5分钟按照[样例程序](http://www.parallec.io/#code-sample)试试Parallec去给多个服务器（网站）发送相同或者不同的请求。我们渴望收到您的意见和建议。您可以通过[提交Github Issue](https://github.com/eBay/parallec/issues/new), 查看[FAQ](http://www.parallec.io/docs/faq/)，登陆论坛 [Parallec.io Google Group](https://groups.google.com/forum/#!forum/parallec)，或者发邮件至 ypei@ebay.com 进行反馈或者提问。谢谢！\n+"
            }
        ]
    },
    {
        "sha": "7e0977dd98ab857566d049d0c5b749e4caaeef6f",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6N2UwOTc3ZGQ5OGFiODU3NTY2ZDA0OWQwYzViNzQ5ZTRjYWFlZWY2Zg==",
        "commit": {
            "author": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2016-10-06T18:07:24Z"
            },
            "committer": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2016-10-06T18:07:24Z"
            },
            "message": "update readme on user groups [skip ci]",
            "tree": {
                "sha": "a4dc54107ed46213d9bed83fcc5ce423a524927a",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/a4dc54107ed46213d9bed83fcc5ce423a524927a"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/7e0977dd98ab857566d049d0c5b749e4caaeef6f",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/7e0977dd98ab857566d049d0c5b749e4caaeef6f",
        "html_url": "https://github.com/eBay/parallec/commit/7e0977dd98ab857566d049d0c5b749e4caaeef6f",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/7e0977dd98ab857566d049d0c5b749e4caaeef6f/comments",
        "author": null,
        "committer": null,
        "parents": [
            {
                "sha": "9da4d59d2e48e9ed9abc9d20e99776c00f6e6e6f",
                "url": "https://api.github.com/repos/eBay/parallec/commits/9da4d59d2e48e9ed9abc9d20e99776c00f6e6e6f",
                "html_url": "https://github.com/eBay/parallec/commit/9da4d59d2e48e9ed9abc9d20e99776c00f6e6e6f"
            }
        ],
        "stats": {
            "total": 12,
            "additions": 10,
            "deletions": 2
        },
        "files": [
            {
                "sha": "f9dfb68b891edc9914d303f90206b9955585e792",
                "filename": "README-brief-cn.md",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/7e0977dd98ab857566d049d0c5b749e4caaeef6f/README-brief-cn.md",
                "raw_url": "https://github.com/eBay/parallec/raw/7e0977dd98ab857566d049d0c5b749e4caaeef6f/README-brief-cn.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/README-brief-cn.md?ref=7e0977dd98ab857566d049d0c5b749e4caaeef6f",
                "patch": "@@ -20,4 +20,4 @@ Parallec内置特别的响应上下文（response context），在处理服务\n \n 通过过去一年内部使用和开源REST Superman/ REST Commander的开发， 反馈，经验教训，我们现在做把REST Commander的核心做成一个易于使用的独立库 （便于从Maven导入，让所有程序都写20行代码变成REST Commander）。在此基础上，我们添加超过[**15个新的功能**](https://github.com/eBay/parallec/blob/master/README.md#compare)，**改写超过70%的代码**，**以90%以上的测试覆盖率**，确保了用户和开源贡献者能够更加放心的开发和使用。与此同时，我们也把整体软件结构进行了优化，使得大部分内部开发可以直接在github开源平台上直接进行。\n \n-您可以用5分钟按照[样例程序](http://www.parallec.io/#code-sample)试试Parallec去给多个服务器（网站）发送相同或者不同的请求。我们渴望收到您的意见和建议。您可以通过[提交Github Issue](https://github.com/eBay/parallec/issues/new)或者发邮件至 ypei@ebay.com 进行反馈或者提问。谢谢！\n+您可以用5分钟按照[样例程序](http://www.parallec.io/#code-sample)试试Parallec去给多个服务器（网站）发送相同或者不同的请求。我们渴望收到您的意见和建议。您可以通过[提交Github Issue](https://github.com/eBay/parallec/issues/new), 查看[FAQ](http://www.parallec.io/docs/faq/)，登陆论坛 [Parallec.io Google Group](https://groups.google.com/forum/#!forum/parallec)，或者发邮件至 ypei@ebay.com 进行反馈或者提问。谢谢！"
            },
            {
                "sha": "611bdb7ed67805fd698ebb1d5ca0083916add45d",
                "filename": "README.md",
                "status": "modified",
                "additions": 9,
                "deletions": 1,
                "changes": 10,
                "blob_url": "https://github.com/eBay/parallec/blob/7e0977dd98ab857566d049d0c5b749e4caaeef6f/README.md",
                "raw_url": "https://github.com/eBay/parallec/raw/7e0977dd98ab857566d049d0c5b749e4caaeef6f/README.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/README.md?ref=7e0977dd98ab857566d049d0c5b749e4caaeef6f",
                "patch": "@@ -8,7 +8,7 @@\n \n [![Javadoc](http://www.parallec.io/images/parallec-javadoc-blue.svg)](http://www.parallec.io/javadoc/index.html?io/parallec/core/ParallelClient.html) [![Documentation](http://www.parallec.io/images/parallec-documentation-red.svg)](http://www.parallec.io/docs/) [![Samples](http://www.parallec.io/images/parallec-samples-brightgreen.svg)](https://github.com/eBay/parallec-samples) [![Chinese](http://www.parallec.io/images/parallec-cnbrief-blue.svg)](https://github.com/eBay/parallec/blob/master/README-brief-cn.md) \n \n-[ [Get-Started](https://github.com/eBay/parallec/blob/master/README.md#get-started) | [Features](https://github.com/eBay/parallec/blob/master/README.md#features) | [Use Cases](https://github.com/eBay/parallec/blob/master/README.md#use-cases) | [Samples](https://github.com/eBay/parallec-samples) | [Change Log](https://github.com/eBay/parallec/blob/master/CHANGELOG.md) / [What's New](https://github.com/eBay/parallec/blob/master/README.md#whats-new) / [Versions](https://github.com/eBay/parallec/blob/master/README.md#versions) |  [Motivation](https://github.com/eBay/parallec/blob/master/README.md#motivation) | [Demos](https://github.com/eBay/parallec/blob/master/README.md#demos) | [Performance](https://github.com/eBay/parallec/blob/master/README.md#performance) | [Compare](https://github.com/eBay/parallec/blob/master/README.md#compare) | [Contributors](https://github.com/eBay/parallec/blob/master/README.md#contributors) | [About](https://github.com/eBay/parallec/blob/master/README.md#authors) | [News](http://www.parallec.io/blog/) | [Plugin](https://github.com/eBay/parallec-plugins) | [中文介绍](https://github.com/eBay/parallec/blob/master/README-brief-cn.md) ]\n+[ [Get-Started](https://github.com/eBay/parallec/blob/master/README.md#get-started) | [Features](https://github.com/eBay/parallec/blob/master/README.md#features) | [Use Cases](https://github.com/eBay/parallec/blob/master/README.md#use-cases) | [Samples](https://github.com/eBay/parallec-samples) | [Change Log](https://github.com/eBay/parallec/blob/master/CHANGELOG.md) / [What's New](https://github.com/eBay/parallec/blob/master/README.md#whats-new) / [Versions](https://github.com/eBay/parallec/blob/master/README.md#versions) |  [User Group](https://github.com/eBay/parallec/blob/master/README.md#user-group) |  [Motivation](https://github.com/eBay/parallec/blob/master/README.md#motivation) | [Demos](https://github.com/eBay/parallec/blob/master/README.md#demos) | [Performance](https://github.com/eBay/parallec/blob/master/README.md#performance) | [Compare](https://github.com/eBay/parallec/blob/master/README.md#compare) | [Contributors](https://github.com/eBay/parallec/blob/master/README.md#contributors) | [About](https://github.com/eBay/parallec/blob/master/README.md#authors) | [News](http://www.parallec.io/blog/) | [Plugin](https://github.com/eBay/parallec-plugins) | [中文介绍](https://github.com/eBay/parallec/blob/master/README-brief-cn.md) ]\n \n \n [ [API Overview](http://www.parallec.io/docs/api-overview/) | [Generate & Submit Task](http://www.parallec.io/docs/submit-task/) | [Track Status & Examine Responses](http://www.parallec.io/docs/track-status/) | [Configurations](http://www.parallec.io/docs/configurations/) ]\n@@ -129,6 +129,13 @@ More details please check the [Change Log](https://github.com/eBay/parallec/blob\n - [**Ping Demo**](https://github.com/eBay/parallec/blob/master/README.md#demos) Ping 8000 Servers within 11.1 Seconds, performance test vs. [FPing](http://fping.org/).\n \n \n+###User Group\n+\n+* Ask a question, and keep up to date on the library development by joining the discussion group / forum: [Parallec.io Google Group](https://groups.google.com/forum/#!forum/parallec). \n+* Feel free to submit a [Github Issue](https://github.com/eBay/parallec/issues/new) for any questions and suggestions too.\n+* Check [FAQ](http://www.parallec.io/docs/faq/).\n+\n+\n ###Use Cases\n \n 1. Scalable web server monitoring, management, and configuration push, ping check.\n@@ -137,6 +144,7 @@ More details please check the [Change Log](https://github.com/eBay/parallec/blob\n 1. Orchestration and work flows on multiple web servers. \n 1. Parallel different requests with controlled concurrency to a single server: as a parallec client for REST API enabled Database / Web Server CRUD operations. Variable replacement allowed in post body, url and headers.\n 1. Load testing with request template. \n+1. Network monitoring with active probing via UDP/Ping etc. \n \n \n "
            }
        ]
    },
    {
        "sha": "108df5a6f9deb51c2d37b83cc666b8a0540f4204",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6MTA4ZGY1YTZmOWRlYjUxYzJkMzdiODNjYzY2NmI4YTA1NDBmNDIwNA==",
        "commit": {
            "author": {
                "name": "Yuanteng (Jeff) Pei",
                "email": "ypei@ebay.com",
                "date": "2016-10-05T21:10:58Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2016-10-05T21:10:58Z"
            },
            "message": "update readme cn [skip ci]",
            "tree": {
                "sha": "b2c6fbff7b093aea76d35cb851d08e6f0b578a6a",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/b2c6fbff7b093aea76d35cb851d08e6f0b578a6a"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/108df5a6f9deb51c2d37b83cc666b8a0540f4204",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/108df5a6f9deb51c2d37b83cc666b8a0540f4204",
        "html_url": "https://github.com/eBay/parallec/commit/108df5a6f9deb51c2d37b83cc666b8a0540f4204",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/108df5a6f9deb51c2d37b83cc666b8a0540f4204/comments",
        "author": null,
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "9da4d59d2e48e9ed9abc9d20e99776c00f6e6e6f",
                "url": "https://api.github.com/repos/eBay/parallec/commits/9da4d59d2e48e9ed9abc9d20e99776c00f6e6e6f",
                "html_url": "https://github.com/eBay/parallec/commit/9da4d59d2e48e9ed9abc9d20e99776c00f6e6e6f"
            }
        ],
        "stats": {
            "total": 3,
            "additions": 3,
            "deletions": 0
        },
        "files": [
            {
                "sha": "fc3d98ff72126904d7530499e9c13842f94ab768",
                "filename": "README-brief-cn.md",
                "status": "modified",
                "additions": 3,
                "deletions": 0,
                "changes": 3,
                "blob_url": "https://github.com/eBay/parallec/blob/108df5a6f9deb51c2d37b83cc666b8a0540f4204/README-brief-cn.md",
                "raw_url": "https://github.com/eBay/parallec/raw/108df5a6f9deb51c2d37b83cc666b8a0540f4204/README-brief-cn.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/README-brief-cn.md?ref=108df5a6f9deb51c2d37b83cc666b8a0540f4204",
                "patch": "@@ -20,4 +20,7 @@ Parallec内置特别的响应上下文（response context），在处理服务\n \n 通过过去一年内部使用和开源REST Superman/ REST Commander的开发， 反馈，经验教训，我们现在做把REST Commander的核心做成一个易于使用的独立库 （便于从Maven导入，让所有程序都写20行代码变成REST Commander）。在此基础上，我们添加超过[**15个新的功能**](https://github.com/eBay/parallec/blob/master/README.md#compare)，**改写超过70%的代码**，**以90%以上的测试覆盖率**，确保了用户和开源贡献者能够更加放心的开发和使用。与此同时，我们也把整体软件结构进行了优化，使得大部分内部开发可以直接在github开源平台上直接进行。\n \n+“Parallec.io现已经被集成在eBay的应用程序部署系统(PaaS)。Parallec被用于控制10个以上的并行API的任务的工作流，每个任务并行执行到数十到数千台的生产服务器的上。与以前的实现相比，Parallec 处理并行操作代码简洁，方便进行批作业的管理，为我们提高了资源利用率和效率。”\n+－－ Xiaotang (Sheldon) Shao, Principle Software Engineer, Deployment Platform / PaaS, Cloud Engineering at eBay Inc.\n+\n 您可以用5分钟按照[样例程序](http://www.parallec.io/#code-sample)试试Parallec去给多个服务器（网站）发送相同或者不同的请求。我们渴望收到您的意见和建议。您可以通过[提交Github Issue](https://github.com/eBay/parallec/issues/new)或者发邮件至 ypei@ebay.com 进行反馈或者提问。谢谢！"
            }
        ]
    },
    {
        "sha": "9da4d59d2e48e9ed9abc9d20e99776c00f6e6e6f",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6OWRhNGQ1OWQyZTQ4ZTllZDlhYmM5ZDIwZTk5Nzc2YzAwZjZlNmU2Zg==",
        "commit": {
            "author": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2016-10-05T00:20:19Z"
            },
            "committer": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2016-10-05T00:20:19Z"
            },
            "message": "update readme [skip ci]",
            "tree": {
                "sha": "3077f9e711749e2b3938ee0e8e9a271032865f39",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/3077f9e711749e2b3938ee0e8e9a271032865f39"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/9da4d59d2e48e9ed9abc9d20e99776c00f6e6e6f",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/9da4d59d2e48e9ed9abc9d20e99776c00f6e6e6f",
        "html_url": "https://github.com/eBay/parallec/commit/9da4d59d2e48e9ed9abc9d20e99776c00f6e6e6f",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/9da4d59d2e48e9ed9abc9d20e99776c00f6e6e6f/comments",
        "author": null,
        "committer": null,
        "parents": [
            {
                "sha": "145f5166d1e54696e0a545631ce65655f316214a",
                "url": "https://api.github.com/repos/eBay/parallec/commits/145f5166d1e54696e0a545631ce65655f316214a",
                "html_url": "https://github.com/eBay/parallec/commit/145f5166d1e54696e0a545631ce65655f316214a"
            }
        ],
        "stats": {
            "total": 3,
            "additions": 3,
            "deletions": 0
        },
        "files": [
            {
                "sha": "d7ff00150ec6063d99d24eeabb3d0adddd2a09c7",
                "filename": "README.md",
                "status": "modified",
                "additions": 3,
                "deletions": 0,
                "changes": 3,
                "blob_url": "https://github.com/eBay/parallec/blob/9da4d59d2e48e9ed9abc9d20e99776c00f6e6e6f/README.md",
                "raw_url": "https://github.com/eBay/parallec/raw/9da4d59d2e48e9ed9abc9d20e99776c00f6e6e6f/README.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/README.md?ref=9da4d59d2e48e9ed9abc9d20e99776c00f6e6e6f",
                "patch": "@@ -21,6 +21,9 @@ Parallec is a fast parallel async HTTP(S)/SSH/TCP/UDP/Ping client java library b\n \n **Aggregated error messages - Debug friendly with full visibility**: Having trouble debugging in concurrent environment? Not any more! All exceptions, timeout, stack traces, request sent and response received time are **captured and aggregated** in the [response](http://www.parallec.io/javadoc/index.html?io/parallec/core/ResponseOnSingleTask.html) map. It is available in [ParallelTask](http://www.parallec.io/javadoc/index.html?io/parallec/core/ParallelTask.html) for polling right after you execute a task asynchronously.  Multi-level (worker/manager) timeout guarantees tasks return even for 100,000s of requests.  \n \n+\n+Parallec has been [integrated](http://www.parallec.io/#testimonial-ebay) in eBay main production application deployment system (PaaS). Parallec orchestrates 10+ API tasks, with each task targeting 10s to 1,000s servers over 1,000+ application pools in production. \n+\n ![Workflow Overview](http://www.parallec.io/images/parallec-flow.svg)\n \n "
            }
        ]
    },
    {
        "sha": "145f5166d1e54696e0a545631ce65655f316214a",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6MTQ1ZjUxNjZkMWU1NDY5NmUwYTU0NTYzMWNlNjU2NTVmMzE2MjE0YQ==",
        "commit": {
            "author": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2016-09-30T21:48:09Z"
            },
            "committer": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2016-09-30T21:48:09Z"
            },
            "message": "update doc on versions [skip ci]",
            "tree": {
                "sha": "7df3d8f78d631f728ecdeea9b83bf286426cf09c",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/7df3d8f78d631f728ecdeea9b83bf286426cf09c"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/145f5166d1e54696e0a545631ce65655f316214a",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/145f5166d1e54696e0a545631ce65655f316214a",
        "html_url": "https://github.com/eBay/parallec/commit/145f5166d1e54696e0a545631ce65655f316214a",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/145f5166d1e54696e0a545631ce65655f316214a/comments",
        "author": null,
        "committer": null,
        "parents": [
            {
                "sha": "dac23bf3ff7efbf70f2c2ab02d974698651eb3c0",
                "url": "https://api.github.com/repos/eBay/parallec/commits/dac23bf3ff7efbf70f2c2ab02d974698651eb3c0",
                "html_url": "https://github.com/eBay/parallec/commit/dac23bf3ff7efbf70f2c2ab02d974698651eb3c0"
            }
        ],
        "stats": {
            "total": 10,
            "additions": 8,
            "deletions": 2
        },
        "files": [
            {
                "sha": "acd617aaf209f26447bd0c1dac19e6ff3b76eca1",
                "filename": "README.md",
                "status": "modified",
                "additions": 8,
                "deletions": 2,
                "changes": 10,
                "blob_url": "https://github.com/eBay/parallec/blob/145f5166d1e54696e0a545631ce65655f316214a/README.md",
                "raw_url": "https://github.com/eBay/parallec/raw/145f5166d1e54696e0a545631ce65655f316214a/README.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/README.md?ref=145f5166d1e54696e0a545631ce65655f316214a",
                "patch": "@@ -8,7 +8,7 @@\n \n [![Javadoc](http://www.parallec.io/images/parallec-javadoc-blue.svg)](http://www.parallec.io/javadoc/index.html?io/parallec/core/ParallelClient.html) [![Documentation](http://www.parallec.io/images/parallec-documentation-red.svg)](http://www.parallec.io/docs/) [![Samples](http://www.parallec.io/images/parallec-samples-brightgreen.svg)](https://github.com/eBay/parallec-samples) [![Chinese](http://www.parallec.io/images/parallec-cnbrief-blue.svg)](https://github.com/eBay/parallec/blob/master/README-brief-cn.md) \n \n-[ [Get-Started](https://github.com/eBay/parallec/blob/master/README.md#get-started) | [Features](https://github.com/eBay/parallec/blob/master/README.md#features) | [Use Cases](https://github.com/eBay/parallec/blob/master/README.md#use-cases) | [Samples](https://github.com/eBay/parallec-samples) | [Change Log](https://github.com/eBay/parallec/blob/master/CHANGELOG.md) |  [Motivation](https://github.com/eBay/parallec/blob/master/README.md#motivation) | [Demos](https://github.com/eBay/parallec/blob/master/README.md#demos) | [Performance](https://github.com/eBay/parallec/blob/master/README.md#performance) | [Compare](https://github.com/eBay/parallec/blob/master/README.md#compare) | [Contributors](https://github.com/eBay/parallec/blob/master/README.md#contributors) | [About](https://github.com/eBay/parallec/blob/master/README.md#authors) | [News](http://www.parallec.io/blog/) | [Plugin](https://github.com/eBay/parallec-plugins) | [中文介绍](https://github.com/eBay/parallec/blob/master/README-brief-cn.md) ]\n+[ [Get-Started](https://github.com/eBay/parallec/blob/master/README.md#get-started) | [Features](https://github.com/eBay/parallec/blob/master/README.md#features) | [Use Cases](https://github.com/eBay/parallec/blob/master/README.md#use-cases) | [Samples](https://github.com/eBay/parallec-samples) | [Change Log](https://github.com/eBay/parallec/blob/master/CHANGELOG.md) / [What's New](https://github.com/eBay/parallec/blob/master/README.md#whats-new) / [Versions](https://github.com/eBay/parallec/blob/master/README.md#versions) |  [Motivation](https://github.com/eBay/parallec/blob/master/README.md#motivation) | [Demos](https://github.com/eBay/parallec/blob/master/README.md#demos) | [Performance](https://github.com/eBay/parallec/blob/master/README.md#performance) | [Compare](https://github.com/eBay/parallec/blob/master/README.md#compare) | [Contributors](https://github.com/eBay/parallec/blob/master/README.md#contributors) | [About](https://github.com/eBay/parallec/blob/master/README.md#authors) | [News](http://www.parallec.io/blog/) | [Plugin](https://github.com/eBay/parallec-plugins) | [中文介绍](https://github.com/eBay/parallec/blob/master/README-brief-cn.md) ]\n \n \n [ [API Overview](http://www.parallec.io/docs/api-overview/) | [Generate & Submit Task](http://www.parallec.io/docs/submit-task/) | [Track Status & Examine Responses](http://www.parallec.io/docs/track-status/) | [Configurations](http://www.parallec.io/docs/configurations/) ]\n@@ -111,6 +111,12 @@ pc.prepareHttpGet(\"/userdata/sample_weather_$ZIP.txt\")\n \n More details please check the [Change Log](https://github.com/eBay/parallec/blob/master/CHANGELOG.md).\n \n+###Versions\n+\n+* The latest production-ready version is `0.10.x`, where we use in production.\n+* **On async-http-client 2.x** The Parallec.io version using more up-to-date `async-http-client` (currently using AHC version `2.0.15`) is `0.20.0-SNAPSHOT`. This version has passed comprehensive unit tests but has not been used yet in production. This version **requires JDK8** due to AHC 2.x and can be used with the parallec-plugins with the same version `0.20.0-SNAPSHOT`, details please check [#37](https://github.com/eBay/parallec/issues/37).\n+\n+\n ###More Readings\n \n - [**More Examples**](https://github.com/ebay/parallec-samples#http) on setting context, send to Elastic Search / Kafka, async running, auto progress polling, track progress, TCP/SSH/Ping.  UDP example is [here](https://github.com/eBay/parallec/blob/master/src/test/java/io/parallec/core/main/udp/ParallelClientUdpBasicTest.java), with more to come. \n@@ -141,7 +147,7 @@ Parallec is built on Akka actors and [Async HTTP Client](https://github.com/Asyn\n 1. **Generic response handler with context**. Special response context enables total freedom and convenience of processing each response your way. Process and aggregate data **anywhere** to Kafka, Redis, Elastic Search, mongoDB, CMS and etc.  \n 1. **Flexible on when to invoke the handler**:  before (in worker thread) or after the aggregation (in master/manager thread).\n 1. **Flexible Input of target hosts**: Input target hosts from a list, string, JSON Path from local files or a remote URL\n-1. **Scalable and fast**, **infinitely scalable** with built-in **Concurrency control**.\n+1. **Scalable and fast**, **infinitely scalable** with built-in [**Concurrency control**](http://www.ebaytechblog.com/2014/03/11/rest-commander-scalable-web-server-management-and-monitoring/#akka).\n 1. **Auto-progress polling** to enable task level concurrency with **Async API** for long jobs and  orchestrations.\n 1. **Request template** to handle non-uniform requests.\n 1. **Convenient single place handling success and failure cases**. Handle in a single function where you can get the response including the actual response if success; or stacktrace and error details if failures."
            }
        ]
    },
    {
        "sha": "dac23bf3ff7efbf70f2c2ab02d974698651eb3c0",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6ZGFjMjNiZjNmZjdlZmJmNzBmMmMyYWIwMmQ5NzQ2OTg2NTFlYjNjMA==",
        "commit": {
            "author": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2016-09-29T23:59:59Z"
            },
            "committer": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2016-09-29T23:59:59Z"
            },
            "message": "fix tests on http worker",
            "tree": {
                "sha": "16afc4eb36eec9644032abbdaf1117c00df96eb2",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/16afc4eb36eec9644032abbdaf1117c00df96eb2"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/dac23bf3ff7efbf70f2c2ab02d974698651eb3c0",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/dac23bf3ff7efbf70f2c2ab02d974698651eb3c0",
        "html_url": "https://github.com/eBay/parallec/commit/dac23bf3ff7efbf70f2c2ab02d974698651eb3c0",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/dac23bf3ff7efbf70f2c2ab02d974698651eb3c0/comments",
        "author": null,
        "committer": null,
        "parents": [
            {
                "sha": "37a652c723917116265966d34439dc530513968f",
                "url": "https://api.github.com/repos/eBay/parallec/commits/37a652c723917116265966d34439dc530513968f",
                "html_url": "https://github.com/eBay/parallec/commit/37a652c723917116265966d34439dc530513968f"
            }
        ],
        "stats": {
            "total": 302,
            "additions": 165,
            "deletions": 137
        },
        "files": [
            {
                "sha": "1e134d37e5e02a40cd55feda19d0b59667212f20",
                "filename": "CHANGELOG.md",
                "status": "modified",
                "additions": 1,
                "deletions": 0,
                "changes": 1,
                "blob_url": "https://github.com/eBay/parallec/blob/dac23bf3ff7efbf70f2c2ab02d974698651eb3c0/CHANGELOG.md",
                "raw_url": "https://github.com/eBay/parallec/raw/dac23bf3ff7efbf70f2c2ab02d974698651eb3c0/CHANGELOG.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/CHANGELOG.md?ref=dac23bf3ff7efbf70f2c2ab02d974698651eb3c0",
                "patch": "@@ -10,6 +10,7 @@ _2016-09-30_\n * Erased the response headers in the ResponseOnSingleTask if `task.getConfig().isSaveResponseToTask()` is false (default).\n * Minor refactored multiple places.\n * Fixed javadoc.\n+* Fixed the test cases with HttpWorker constructor.\n \n ```java\n "
            },
            {
                "sha": "53a08b05c5298a099bf6c40f5def3d78a0715d2d",
                "filename": "src/main/java/io/parallec/core/ParallelTask.java",
                "status": "modified",
                "additions": 103,
                "deletions": 88,
                "changes": 191,
                "blob_url": "https://github.com/eBay/parallec/blob/dac23bf3ff7efbf70f2c2ab02d974698651eb3c0/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FParallelTask.java",
                "raw_url": "https://github.com/eBay/parallec/raw/dac23bf3ff7efbf70f2c2ab02d974698651eb3c0/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FParallelTask.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FParallelTask.java?ref=dac23bf3ff7efbf70f2c2ab02d974698651eb3c0",
                "patch": "@@ -54,21 +54,28 @@\n \n import com.ning.http.client.AsyncHttpClient;\n \n-\n /**\n- * The key class represents a onetime execution on multiple requests. It contains all the task \n- * and request metadata, target hosts, configs, and the responses.\n+ * The key class represents a onetime execution on multiple requests. It\n+ * contains all the task and request metadata, target hosts, configs, and the\n+ * responses.\n  * \n- * A ParallelTask is the returned object from the {@link ParallelTaskBuilder#execute}\n+ * A ParallelTask is the returned object from the\n+ * {@link ParallelTaskBuilder#execute}\n  * \n  * <ul>\n-    <li>The metadata on this whole task, including config, running state, progress, request count, task id.&nbsp;</li>\n-    <li>The results of the task:&nbsp;parallelTaskResult,&nbsp;&nbsp;which is a hashmap of each target host map with its response. There is also a received count</li>\n-    <li>Detailed request metadata on HTTP/SSH/PING/TCP. &nbsp;The async http client used for this task ( you may replace it with your own )</li>\n-    <li>Target host list</li>\n-    <li>The user defined response handler</li>\n-    <li>A actorRef pointer to the command manager so that you may use it to cancel the whole task or those requests&nbsp;that match a sublist of target host lists.</li>\n-</ul>\n+ * <li>The metadata on this whole task, including config, running state,\n+ * progress, request count, task id.&nbsp;</li>\n+ * <li>The results of the task:&nbsp;parallelTaskResult,&nbsp;&nbsp;which is a\n+ * hashmap of each target host map with its response. There is also a received\n+ * count</li>\n+ * <li>Detailed request metadata on HTTP/SSH/PING/TCP. &nbsp;The async http\n+ * client used for this task ( you may replace it with your own )</li>\n+ * <li>Target host list</li>\n+ * <li>The user defined response handler</li>\n+ * <li>A actorRef pointer to the command manager so that you may use it to\n+ * cancel the whole task or those requests&nbsp;that match a sublist of target\n+ * host lists.</li>\n+ * </ul>\n  * \n  *\n  * @author Yuanteng (Jeff) Pei\n@@ -121,10 +128,11 @@ public class ParallelTask {\n     /** The aggregate result map. */\n     private final Map<String, LinkedHashSet<String>> aggregateResultMap = new ConcurrentHashMap<String, LinkedHashSet<String>>();\n \n-    /** The parallel task result: \n-     * a hashmap to store the request parameters, host name, ResponseOnSingleTask.\n-     * Note that by default, the response content is not saved into the ResponseOnSingleTask.\n-     * Unless the user changes the config by calling {@link ParallelTaskBuilder#setSaveResponseToTask}\n+    /**\n+     * The parallel task result: a hashmap to store the request parameters, host\n+     * name, ResponseOnSingleTask. Note that by default, the response content is\n+     * not saved into the ResponseOnSingleTask. Unless the user changes the\n+     * config by calling {@link ParallelTaskBuilder#setSaveResponseToTask}\n      * \n      * */\n     private Map<String, NodeReqResponse> parallelTaskResult = new ConcurrentHashMap<String, NodeReqResponse>();\n@@ -143,10 +151,10 @@ public class ParallelTask {\n \n     /** The UDP meta. */\n     private UdpMeta udpMeta;\n-    \n+\n     /** The ping meta. */\n     private PingMeta pingMeta;\n-    \n+\n     /**\n      * The command manager. if private: getter/setter: openpojo unit test will\n      * fail.\n@@ -178,43 +186,58 @@ public ParallelTask() {\n         this.responsedNum = 0;\n         this.requestNum = 0;\n         this.state = ParallelTaskState.WAITING;\n-        \n \n         // use default config\n         this.config = new ParallelTaskConfig();\n \n     }\n \n-\n     /**\n      * Instantiates a new parallel task.\n      *\n-     * @param requestProtocol the request protocol\n-     * @param concurrency the concurrency\n-     * @param httpMeta the http meta\n-     * @param targetHostMeta the target host meta\n-     * @param sshMeta the ssh meta\n-     * @param tcpMeta the tcp meta\n-     * @param udpMeta the udp meta\n-     * @param pingMeta the ping meta\n-     * @param handler the handler\n-     * @param responseContext the response context\n-     * @param replacementVarMapNodeSpecific the replacement var map node specific\n-     * @param replacementVarMap the replacement var map\n-     * @param requestReplacementType the request replacement type\n-     * @param config the config\n-     */\n-    public ParallelTask(RequestProtocol requestProtocol, int concurrency, HttpMeta httpMeta, TargetHostMeta targetHostMeta,\n-            SshMeta sshMeta, TcpMeta tcpMeta, UdpMeta udpMeta, PingMeta pingMeta, ParallecResponseHandler handler,\n+     * @param requestProtocol\n+     *            the request protocol\n+     * @param concurrency\n+     *            the concurrency\n+     * @param httpMeta\n+     *            the http meta\n+     * @param targetHostMeta\n+     *            the target host meta\n+     * @param sshMeta\n+     *            the ssh meta\n+     * @param tcpMeta\n+     *            the tcp meta\n+     * @param udpMeta\n+     *            the udp meta\n+     * @param pingMeta\n+     *            the ping meta\n+     * @param handler\n+     *            the handler\n+     * @param responseContext\n+     *            the response context\n+     * @param replacementVarMapNodeSpecific\n+     *            the replacement var map node specific\n+     * @param replacementVarMap\n+     *            the replacement var map\n+     * @param requestReplacementType\n+     *            the request replacement type\n+     * @param config\n+     *            the config\n+     */\n+    public ParallelTask(RequestProtocol requestProtocol, int concurrency,\n+            HttpMeta httpMeta, TargetHostMeta targetHostMeta, SshMeta sshMeta,\n+            TcpMeta tcpMeta, UdpMeta udpMeta, PingMeta pingMeta,\n+            ParallecResponseHandler handler,\n             Map<String, Object> responseContext,\n             Map<String, StrStrMap> replacementVarMapNodeSpecific,\n             Map<String, String> replacementVarMap,\n-            RequestReplacementType requestReplacementType, ParallelTaskConfig config\n+            RequestReplacementType requestReplacementType,\n+            ParallelTaskConfig config\n \n     ) {\n         this.requestProtocol = requestProtocol;\n         this.concurrency = concurrency;\n-        this.targetHostMeta =targetHostMeta;\n+        this.targetHostMeta = targetHostMeta;\n         // set taskid / requestNum must be after set target hosts meta;\n         // as it is using the target hosts count\n         this.taskId = this.generateTaskId();\n@@ -245,7 +268,8 @@ public ParallelTask(RequestProtocol requestProtocol, int concurrency, HttpMeta h\n     /**\n      * Cancel on target hosts.\n      *\n-     * @param targetHosts the target hosts\n+     * @param targetHosts\n+     *            the target hosts\n      * @return true, if successful\n      */\n     @SuppressWarnings(\"deprecation\")\n@@ -258,10 +282,10 @@ public boolean cancelOnTargetHosts(List<String> targetHosts) {\n             switch (state) {\n \n             case IN_PROGRESS:\n-                if (executionManager != null && !executionManager.isTerminated()) {\n-                    executionManager.tell(\n-                            new CancelTaskOnHostRequest(targetHosts),\n-                            executionManager);\n+                if (executionManager != null\n+                        && !executionManager.isTerminated()) {\n+                    executionManager.tell(new CancelTaskOnHostRequest(\n+                            targetHosts), executionManager);\n                     logger.info(\n                             \"asked task to stop from running on target hosts with count {}...\",\n                             targetHosts.size());\n@@ -293,7 +317,8 @@ public boolean cancelOnTargetHosts(List<String> targetHosts) {\n     /**\n      * Cancel.\n      *\n-     * @param sync the sync\n+     * @param sync\n+     *            the sync\n      * @return true, if successful\n      */\n     @SuppressWarnings(\"deprecation\")\n@@ -309,7 +334,8 @@ public boolean cancel(boolean sync) {\n                 success = true;\n                 break;\n             case IN_PROGRESS:\n-                if (executionManager != null && !executionManager.isTerminated()) {\n+                if (executionManager != null\n+                        && !executionManager.isTerminated()) {\n \n                     executionManager.tell(ExecutionManagerMsgType.CANCEL,\n                             executionManager);\n@@ -323,9 +349,7 @@ public boolean cancel(boolean sync) {\n                             try {\n                                 Thread.sleep(100L);\n                             } catch (InterruptedException e) {\n-                                logger.error(\n-                                        \"running task {} was interrupted  {}\",\n-                                        this.taskId, e);\n+                                logger.error(\" task {} interrupted \", this.taskId);\n                             }\n                         }\n                         logger.info(\"Task completed! Cancellation is completed.\");\n@@ -408,13 +432,12 @@ public boolean validateWithFillDefault()\n         }\n \n         // check if ssh\n-        if (this.requestProtocol==\n-                RequestProtocol.SSH) {\n+        if (this.requestProtocol == RequestProtocol.SSH) {\n \n             // this will throw ParallelTaskInvalidException\n             this.sshMeta.validation();\n-            \n-            if (this.getConcurrency() > ParallecGlobalConfig.concurrencySshLimit){\n+\n+            if (this.getConcurrency() > ParallecGlobalConfig.concurrencySshLimit) {\n                 logger.info(\"SSH CONCURRENCY LIMIT is lower. Apply value as: \"\n                         + ParallecGlobalConfig.concurrencySshLimit);\n                 this.setConcurrency(ParallecGlobalConfig.concurrencySshLimit);\n@@ -430,56 +453,52 @@ public boolean validateWithFillDefault()\n             this.pingMeta = null;\n             // remove udp object\n             this.udpMeta = null;\n-        }else if (this.requestProtocol==\n-                RequestProtocol.PING) {\n+        } else if (this.requestProtocol == RequestProtocol.PING) {\n \n             if (this.httpMeta.isPollable())\n                 throw new ParallelTaskInvalidException(\n                         \"Not support pollable job with PING.\");\n             this.httpMeta.initValuesNa();\n-            \n+\n             this.pingMeta.validation();\n             // remove ssh object\n             this.sshMeta = null;\n             // remove tcp object\n             this.tcpMeta = null;\n             // remove udp object\n-            this.udpMeta = null;            \n+            this.udpMeta = null;\n \n-            \n-        //TCP\n-        }else if (this.requestProtocol==\n-                RequestProtocol.TCP) { \n+            // TCP\n+        } else if (this.requestProtocol == RequestProtocol.TCP) {\n             if (this.httpMeta.isPollable())\n                 throw new ParallelTaskInvalidException(\n                         \"Not support pollable job with TCP.\");\n             this.httpMeta.initValuesNa();\n-            \n+\n             this.tcpMeta.validation();\n             // remove ssh object\n             this.sshMeta = null;\n             // remove ping object\n-            this.pingMeta = null;            \n+            this.pingMeta = null;\n             // remove udp object\n-            this.udpMeta = null;            \n-        //UDP\n-        }else if (this.requestProtocol==\n-                RequestProtocol.UDP) { \n+            this.udpMeta = null;\n+            // UDP\n+        } else if (this.requestProtocol == RequestProtocol.UDP) {\n             if (this.httpMeta.isPollable())\n                 throw new ParallelTaskInvalidException(\n                         \"Not support pollable job with UDP.\");\n             this.httpMeta.initValuesNa();\n-            \n+\n             this.udpMeta.validation();\n             // remove tcp object\n             this.tcpMeta = null;\n             // remove ssh object\n             this.sshMeta = null;\n             // remove ping object\n             this.pingMeta = null;\n-        //HTTP/HTTPS\n+            // HTTP/HTTPS\n         } else {\n-            \n+\n             this.httpMeta.validation();\n             // remove ssh object\n             this.sshMeta = null;\n@@ -516,12 +535,12 @@ public Double getProgress() {\n \n         if (state.equals(ParallelTaskState.IN_PROGRESS)) {\n             if (requestNum != 0) {\n-                return 100.0 * ((double) responsedNum / (double)requestNumActual);\n+                return 100.0 * ((double) responsedNum / (double) requestNumActual);\n             } else {\n                 return 0.0;\n             }\n         }\n-        \n+\n         if (state.equals(ParallelTaskState.WAITING)) {\n             return 0.0;\n         }\n@@ -532,7 +551,6 @@ public Double getProgress() {\n             return 100.0;\n         }\n \n-\n         return 0.0;\n \n     }\n@@ -634,10 +652,9 @@ public List<TaskErrorMeta> getTaskErrorMetas() {\n         return taskErrorMetas;\n     }\n \n-\n-\n-\n-    /* (non-Javadoc)\n+    /*\n+     * (non-Javadoc)\n+     * \n      * @see java.lang.Object#toString()\n      */\n     @Override\n@@ -662,7 +679,6 @@ public String toString() {\n                 + requestProtocol + \", concurrency=\" + concurrency + \"]\";\n     }\n \n-\n     /**\n      * Gets the ssh meta.\n      *\n@@ -717,13 +733,14 @@ public void setTargetHostMeta(TargetHostMeta targetHostMeta) {\n      */\n     public HttpMeta getHttpMeta() {\n         return httpMeta;\n-        \n+\n     }\n \n     /**\n      * Sets the command meta.\n      *\n-     * @param httpMeta the new http meta\n+     * @param httpMeta\n+     *            the new http meta\n      */\n     public void setHttpMeta(HttpMeta httpMeta) {\n         this.httpMeta = httpMeta;\n@@ -856,7 +873,7 @@ public Map<String, SetAndCount> getAggregateResultFullSummary() {\n \n         return summaryMap;\n     }\n-    \n+\n     /**\n      * Gets the aggregated result human str.\n      *\n@@ -865,8 +882,6 @@ public Map<String, SetAndCount> getAggregateResultFullSummary() {\n     public String getAggregatedResultHumanStr() {\n         return PcStringUtils.getAggregatedResultHuman(aggregateResultMap);\n     }\n-    \n-    \n \n     /**\n      * Gets the aggregate result count summary. only list the counts for brief\n@@ -926,12 +941,13 @@ public TcpMeta getTcpMeta() {\n     /**\n      * Sets the tcp meta.\n      *\n-     * @param tcpMeta the new tcp meta\n+     * @param tcpMeta\n+     *            the new tcp meta\n      */\n     public void setTcpMeta(TcpMeta tcpMeta) {\n         this.tcpMeta = tcpMeta;\n     }\n-    \n+\n     /**\n      * Gets the request protocol.\n      *\n@@ -969,7 +985,7 @@ public int getConcurrency() {\n     public void setConcurrency(int concurrency) {\n         this.concurrency = concurrency;\n     }\n-    \n+\n     /**\n      * Gets the submit time.\n      *\n@@ -1115,18 +1131,17 @@ public PingMeta getPingMeta() {\n     /**\n      * Sets the ping meta.\n      *\n-     * @param pingMeta the new ping meta\n+     * @param pingMeta\n+     *            the new ping meta\n      */\n     public void setPingMeta(PingMeta pingMeta) {\n         this.pingMeta = pingMeta;\n     }\n \n-\n     public UdpMeta getUdpMeta() {\n         return udpMeta;\n     }\n \n-\n     public void setUdpMeta(UdpMeta udpMeta) {\n         this.udpMeta = udpMeta;\n     }"
            },
            {
                "sha": "03b5bf2283be055fa376bc9c30821fc86d1234a6",
                "filename": "src/main/java/io/parallec/core/resources/AsyncHttpClientFactoryEmbed.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/dac23bf3ff7efbf70f2c2ab02d974698651eb3c0/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fresources%2FAsyncHttpClientFactoryEmbed.java",
                "raw_url": "https://github.com/eBay/parallec/raw/dac23bf3ff7efbf70f2c2ab02d974698651eb3c0/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fresources%2FAsyncHttpClientFactoryEmbed.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fresources%2FAsyncHttpClientFactoryEmbed.java?ref=dac23bf3ff7efbf70f2c2ab02d974698651eb3c0",
                "patch": "@@ -156,7 +156,7 @@ public void state() {\n     /**\n      * class CustomTrustManager.\n      */\n-    private static class CustomTrustManager implements X509TrustManager {\n+    public static class CustomTrustManager implements X509TrustManager {\n \n         /**\n          * Gets the accepted issuers."
            },
            {
                "sha": "3e4863d0d4de899df77d8bed751b3a0cd568e15b",
                "filename": "src/test/java/io/parallec/core/actor/HttpWorkerTest.java",
                "status": "modified",
                "additions": 7,
                "deletions": 7,
                "changes": 14,
                "blob_url": "https://github.com/eBay/parallec/blob/dac23bf3ff7efbf70f2c2ab02d974698651eb3c0/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FHttpWorkerTest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/dac23bf3ff7efbf70f2c2ab02d974698651eb3c0/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FHttpWorkerTest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FHttpWorkerTest.java?ref=dac23bf3ff7efbf70f2c2ab02d974698651eb3c0",
                "patch": "@@ -41,7 +41,7 @@ public static void shutdown() throws Exception {\n      * fake a bad request\n      */\n     @Test\n-    public void testSshWorkerCreateRequestException() {\n+    public void testHttpWorkerCreateRequestException() {\n         ActorRef asyncWorker = null;\n         try {\n             // Start new job\n@@ -52,7 +52,7 @@ public void testSshWorkerCreateRequestException() {\n                     Props.create(HttpWorker.class, actorMaxOperationTimeoutSec,\n                             HttpClientStore.getInstance()\n                                     .getCurrentDefaultClient(), urlComplete,\n-                            HttpMethod.GET, \"\", null));\n+                            HttpMethod.GET, \"\", null,null));\n             ;\n \n             final FiniteDuration duration = Duration.create(20,\n@@ -83,7 +83,7 @@ public void testHttpWorkerNormalCheckComplete() {\n                     Props.create(HttpWorker.class, actorMaxOperationTimeoutSec,\n                             HttpClientStore.getInstance()\n                                     .getCurrentDefaultClient(), urlComplete,\n-                            HttpMethod.GET, \"\", null));\n+                            HttpMethod.GET, \"\", null,null));\n \n             final FiniteDuration duration = Duration.create(20,\n                     TimeUnit.SECONDS);\n@@ -115,7 +115,7 @@ public void testHttpWorkerDupAndCancel() {\n                     Props.create(HttpWorker.class, actorMaxOperationTimeoutSec,\n                             HttpClientStore.getInstance()\n                                     .getCurrentDefaultClient(), urlComplete,\n-                            HttpMethod.GET, \"\", null));\n+                            HttpMethod.GET, \"\", null,null));\n \n             final FiniteDuration duration = Duration.create(20,\n                     TimeUnit.SECONDS);\n@@ -155,7 +155,7 @@ public void testHttpWorkerException() {\n                     Props.create(HttpWorker.class, actorMaxOperationTimeoutSec,\n                             HttpClientStore.getInstance()\n                                     .getCurrentDefaultClient(), urlComplete,\n-                            HttpMethod.GET, \"\", null));\n+                            HttpMethod.GET, \"\", null,null));\n             ;\n \n             final FiniteDuration duration = Duration.create(20,\n@@ -188,7 +188,7 @@ public void testHttpWorkerTimeoutException() {\n                     Props.create(HttpWorker.class, actorMaxOperationTimeoutSec,\n                             HttpClientStore.getInstance()\n                                     .getCurrentDefaultClient(), urlComplete,\n-                            HttpMethod.GET, \"\", null));\n+                            HttpMethod.GET, \"\", null,null));\n \n             final FiniteDuration duration = Duration.create(20,\n                     TimeUnit.SECONDS);\n@@ -216,7 +216,7 @@ public void testHttpWorkerBadMsgType() {\n                     Props.create(HttpWorker.class, actorMaxOperationTimeoutSec,\n                             HttpClientStore.getInstance()\n                                     .getCurrentDefaultClient(), urlComplete,\n-                            HttpMethod.GET, \"\", null));\n+                            HttpMethod.GET, \"\", null,null));\n \n             final FiniteDuration duration = Duration.create(20,\n                     TimeUnit.SECONDS);"
            },
            {
                "sha": "ed8dbeee38e8cbbb3b14918f2bc9f53d744f9047",
                "filename": "src/test/java/io/parallec/core/main/http/ParallelClientBeanTest.java",
                "status": "modified",
                "additions": 1,
                "deletions": 0,
                "changes": 1,
                "blob_url": "https://github.com/eBay/parallec/blob/dac23bf3ff7efbf70f2c2ab02d974698651eb3c0/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2FParallelClientBeanTest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/dac23bf3ff7efbf70f2c2ab02d974698651eb3c0/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2FParallelClientBeanTest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2FParallelClientBeanTest.java?ref=dac23bf3ff7efbf70f2c2ab02d974698651eb3c0",
                "patch": "@@ -30,6 +30,7 @@ public void parallecClient() {\n         pc.setCustomClientFast(null);\n         pc.setCustomClientSlow(null);\n         pc.setHttpClientTypeCurrentDefault(HttpClientType.EMBED_FAST);\n+        pc.getRunningJobCount();\n \n     }\n "
            },
            {
                "sha": "2e387000e429d244404948a7fb239682dbb77410",
                "filename": "src/test/java/io/parallec/core/pojo/ParallecPojoStrTest.java",
                "status": "modified",
                "additions": 52,
                "deletions": 41,
                "changes": 93,
                "blob_url": "https://github.com/eBay/parallec/blob/dac23bf3ff7efbf70f2c2ab02d974698651eb3c0/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fpojo%2FParallecPojoStrTest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/dac23bf3ff7efbf70f2c2ab02d974698651eb3c0/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fpojo%2FParallecPojoStrTest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fpojo%2FParallecPojoStrTest.java?ref=dac23bf3ff7efbf70f2c2ab02d974698651eb3c0",
                "patch": "@@ -1,6 +1,7 @@\n package io.parallec.core.pojo;\n \n import io.parallec.core.ParallelTaskBuilder;\n+import io.parallec.core.ResponseOnSingleTask;\n import io.parallec.core.TestBase;\n import io.parallec.core.actor.message.NodeReqResponse;\n import io.parallec.core.actor.poll.PollerData;\n@@ -12,6 +13,8 @@\n import io.parallec.core.bean.udp.UdpMeta;\n import io.parallec.core.exception.HttpRequestCreateException;\n import io.parallec.core.exception.ParallelTaskInvalidException;\n+import io.parallec.core.monitor.MonitorProvider;\n+import io.parallec.core.resources.AsyncHttpClientFactoryEmbed.CustomTrustManager;\n import io.parallec.core.resources.HttpMethod;\n import io.parallec.core.resources.TcpUdpSshPingResourceStore;\n import io.parallec.core.task.TaskErrorMeta;\n@@ -47,75 +50,74 @@ public void testMetaValidationToString() {\n \n         HttpMeta httpMeta = new HttpMeta();\n         logger.info(httpMeta.toString());\n-        \n+\n         HttpMeta httpMeta2 = new HttpMeta(HttpMethod.GET, \"\", \"\", \"\", null);\n         httpMeta2.toString();\n-        \n+\n         TcpMeta tcpMeta = new TcpMeta(\"\", 80, 1000, 5, null);\n         tcpMeta.toString();\n-        \n-        //empty and all pass validation: test validation\n+\n+        // empty and all pass validation: test validation\n         TcpMeta tcpMeta2 = new TcpMeta();\n         TcpMeta tcpMeta3 = new TcpMeta(\"\", 80, 1000, 5,\n                 TcpUdpSshPingResourceStore.getInstance().getChannelFactory());\n-        \n-        try{\n-            \n+\n+        try {\n+\n             tcpMeta2.validation();\n-        }catch(ParallelTaskInvalidException e){\n+        } catch (ParallelTaskInvalidException e) {\n             logger.info(\"expected exception {}\", e.getLocalizedMessage());\n         }\n         tcpMeta2.setCommand(\"\");\n-        try{\n-            \n+        try {\n+\n             tcpMeta2.validation();\n-        }catch(ParallelTaskInvalidException e){\n+        } catch (ParallelTaskInvalidException e) {\n             logger.info(\"expected exception {}\", e.getLocalizedMessage());\n         }\n-        \n+\n         tcpMeta3.validation();\n-        \n-        SetAndCount sc = new SetAndCount( new HashSet<String>());\n+\n+        SetAndCount sc = new SetAndCount(new HashSet<String>());\n         sc.toString();\n \n-        \n-        //udp meta validation\n+        // udp meta validation\n         UdpMeta udpMeta = new UdpMeta(\"\", 80, 5, null);\n         udpMeta.toString();\n-        \n-        //empty and all pass validation: test validation\n+\n+        // empty and all pass validation: test validation\n         UdpMeta udpMeta2 = new UdpMeta();\n-        UdpMeta udpMeta3 = new UdpMeta(\"\", 80, 5,\n-                TcpUdpSshPingResourceStore.getInstance().getDatagramChannelFactory());\n+        UdpMeta udpMeta3 = new UdpMeta(\"\", 80, 5, TcpUdpSshPingResourceStore\n+                .getInstance().getDatagramChannelFactory());\n+\n+        // null command\n+        try {\n \n-        //null command\n-        try{\n-            \n             udpMeta2.validation();\n-        }catch(ParallelTaskInvalidException e){\n+        } catch (ParallelTaskInvalidException e) {\n             logger.info(\"expected exception {}\", e.getLocalizedMessage());\n         }\n-        //now null port\n+        // now null port\n         udpMeta2.setCommand(\"\");\n-        try{\n-            \n+        try {\n+\n             udpMeta2.validation();\n-        }catch(ParallelTaskInvalidException e){\n+        } catch (ParallelTaskInvalidException e) {\n             logger.info(\"expected exception {}\", e.getLocalizedMessage());\n         }\n-        //now with null idle\n+        // now with null idle\n         udpMeta2.setUdpPort(40);\n-        try{\n+        try {\n             udpMeta2.validation();\n-        }catch(ParallelTaskInvalidException e){\n+        } catch (ParallelTaskInvalidException e) {\n             logger.info(\"expected exception {}\", e.getLocalizedMessage());\n         }\n-        \n+\n         udpMeta3.validation();\n     }\n \n     @Test\n-    public void testStaticFuncAndUtilsClass() {\n+    public void testStaticFuncUtilsClassAndMisc() {\n \n         new ParallecAppMin();\n         ParallecAppMin.main(null);\n@@ -130,21 +132,30 @@ public void testStaticFuncAndUtilsClass() {\n         new PcFileNetworkIoUtils();\n         new PcNumberUtils();\n         new TaskErrorMeta(TaskErrorType.COMMAND_MANAGER_ERROR, \"\", null);\n-        StrStrMap ssm = new StrStrMap(new HashMap<String,String>());\n+        StrStrMap ssm = new StrStrMap(new HashMap<String, String>());\n         ssm.addPair(null, \"\");\n         ssm.addPair(\"\", null);\n         ssm.addPair(\"k\", \"v\");\n+\n+        // misc\n         new HttpRequestCreateException(\"\", new RuntimeException());\n         new ParallelTaskInvalidException(\"\", new RuntimeException());\n-        \n+\n         boolean removeDuplicate = false;\n-        PcTargetHostsUtils\n-                .getNodeListFromStringLineSeperateOrSpaceSeperate(\n-                        \"a b\", removeDuplicate);\n-        \n+        PcTargetHostsUtils.getNodeListFromStringLineSeperateOrSpaceSeperate(\n+                \"a b\", removeDuplicate);\n+\n         PcStringUtils.printStackTrace(null);\n-        \n-        \n+        ResponseOnSingleTask task = new ResponseOnSingleTask();\n+        task.getHost();\n+\n+        logger.info(\"thread count {}\", MonitorProvider.getInstance()\n+                .getLiveThreadCount());\n+\n+        CustomTrustManager manager = new CustomTrustManager();\n+        manager.checkClientTrusted(null, null);\n+        manager.checkServerTrusted(null, null);\n+        manager.getAcceptedIssuers();\n     }\n \n }"
            }
        ]
    },
    {
        "sha": "37a652c723917116265966d34439dc530513968f",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6MzdhNjUyYzcyMzkxNzExNjI2NTk2NmQzNDQzOWRjNTMwNTEzOTY4Zg==",
        "commit": {
            "author": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2016-09-29T22:43:00Z"
            },
            "committer": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2016-09-29T22:43:00Z"
            },
            "message": "minor fix #24 docs javadoc",
            "tree": {
                "sha": "e1a9817e98562e2abbfc0f0debd1a03119a572c8",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/e1a9817e98562e2abbfc0f0debd1a03119a572c8"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/37a652c723917116265966d34439dc530513968f",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/37a652c723917116265966d34439dc530513968f",
        "html_url": "https://github.com/eBay/parallec/commit/37a652c723917116265966d34439dc530513968f",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/37a652c723917116265966d34439dc530513968f/comments",
        "author": null,
        "committer": null,
        "parents": [
            {
                "sha": "cf9f1a3751f898bb320ca2ea34bb2ac7be5a6145",
                "url": "https://api.github.com/repos/eBay/parallec/commits/cf9f1a3751f898bb320ca2ea34bb2ac7be5a6145",
                "html_url": "https://github.com/eBay/parallec/commit/cf9f1a3751f898bb320ca2ea34bb2ac7be5a6145"
            }
        ],
        "stats": {
            "total": 2,
            "additions": 1,
            "deletions": 1
        },
        "files": [
            {
                "sha": "7da4f4145a81d6d5963bd60f6f23f6c951118dfb",
                "filename": "README.md",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/37a652c723917116265966d34439dc530513968f/README.md",
                "raw_url": "https://github.com/eBay/parallec/raw/37a652c723917116265966d34439dc530513968f/README.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/README.md?ref=37a652c723917116265966d34439dc530513968f",
                "patch": "@@ -32,7 +32,7 @@ Donwload [the latest JAR](https://search.maven.org/remote_content?g=io.parallec&\n <dependency>\n \t<groupId>io.parallec</groupId>\n \t<artifactId>parallec-core</artifactId>\n-\t<version>0.10.0</version>\n+\t<version>0.10.1-beta</version>\n </dependency>\n ```\n Snapshots of the development version are available in [Sonatype's `snapshots` repository](https://oss.sonatype.org/content/repositories/snapshots/io/parallec/parallec-core/)."
            }
        ]
    },
    {
        "sha": "cf9f1a3751f898bb320ca2ea34bb2ac7be5a6145",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6Y2Y5ZjFhMzc1MWY4OThiYjMyMGNhMmVhMzRiYjJhYzdiZTVhNjE0NQ==",
        "commit": {
            "author": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2016-09-29T22:42:08Z"
            },
            "committer": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2016-09-29T22:42:08Z"
            },
            "message": "minor fix #24 docs javadoc",
            "tree": {
                "sha": "419cb6a1598de39f1be59f23216f6191bd6f27f7",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/419cb6a1598de39f1be59f23216f6191bd6f27f7"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/cf9f1a3751f898bb320ca2ea34bb2ac7be5a6145",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/cf9f1a3751f898bb320ca2ea34bb2ac7be5a6145",
        "html_url": "https://github.com/eBay/parallec/commit/cf9f1a3751f898bb320ca2ea34bb2ac7be5a6145",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/cf9f1a3751f898bb320ca2ea34bb2ac7be5a6145/comments",
        "author": null,
        "committer": null,
        "parents": [
            {
                "sha": "331663984a13c2ec8c6095573c388deae59cb774",
                "url": "https://api.github.com/repos/eBay/parallec/commits/331663984a13c2ec8c6095573c388deae59cb774",
                "html_url": "https://github.com/eBay/parallec/commit/331663984a13c2ec8c6095573c388deae59cb774"
            }
        ],
        "stats": {
            "total": 91,
            "additions": 51,
            "deletions": 40
        },
        "files": [
            {
                "sha": "32287cdf7d175a156684bc5a6af243b6ba9c4d15",
                "filename": "CHANGELOG.md",
                "status": "modified",
                "additions": 9,
                "deletions": 2,
                "changes": 11,
                "blob_url": "https://github.com/eBay/parallec/blob/cf9f1a3751f898bb320ca2ea34bb2ac7be5a6145/CHANGELOG.md",
                "raw_url": "https://github.com/eBay/parallec/raw/cf9f1a3751f898bb320ca2ea34bb2ac7be5a6145/CHANGELOG.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/CHANGELOG.md?ref=cf9f1a3751f898bb320ca2ea34bb2ac7be5a6145",
                "patch": "@@ -6,11 +6,18 @@ Parallec Change Log\n \n _2016-09-30_\n \n-* Issue [#24](https://github.com/eBay/parallec/issues/24). Examples are [here](https://github.com/eBay/parallec/blob/master/src/test/java/io/parallec/core/main/http/ParallelClientHttpResponseHeaderTest.java). Save Response Headers into the ResponseOnSingleTask. Note that the key set provided in  esponseHeaderMeta in request can be case insensitive. However in the response headers map returned in the ResponseOnSingleTask, all keys have been lower case for easy access. The key line is as below to enable the save response headers.\n+* Issue [#24](https://github.com/eBay/parallec/issues/24). Examples are [here](https://github.com/eBay/parallec/blob/master/src/test/java/io/parallec/core/main/http/ParallelClientHttpResponseHeaderTest.java). Save Response Headers into the ResponseOnSingleTask. Note that the key set provided in  esponseHeaderMeta in request can be case insensitive. However in the response headers map returned in the ResponseOnSingleTask, all keys have been **lower case for easy access**. The key line is as below to enable the save response headers.\n * Erased the response headers in the ResponseOnSingleTask if `task.getConfig().isSaveResponseToTask()` is false (default).\n * Minor refactored multiple places.\n+* Fixed javadoc.\n \n ```java\n+\n+//save all the keys. \n+ .saveResponseHeaders(new ResponseHeaderMeta(null, true))\n+ \n+ \n+//save a subset of keys\n  .saveResponseHeaders(\n                         new ResponseHeaderMeta(Arrays.asList(\"Content-Type\",\n                                 \"server\", \"x-github-request-id\"), false))\n@@ -24,7 +31,7 @@ _2016-09-30_\n \n _2016-08-18_\n \n-* Added main feature of parallel UDP based on async Netty, with `prepareUdp(String command)` API. Use `setUdpPort()` and `setUdpIdleTimeoutSec()` to set the port and read timeout.  Added tests. \n+* Issue [#41](https://github.com/eBay/parallec/issues/41). Added main feature of parallel UDP based on async Netty, with `prepareUdp(String command)` API. Use `setUdpPort()` and `setUdpIdleTimeoutSec()` to set the port and read timeout.  Added tests. \n * In udp/tcp/udp/http/ping/ssh worker, to check context before kill itself, as sometimes the msg is passed faster to the Op Worker which send msg to kill the worker already.  \n * Improved test coverage. \n "
            },
            {
                "sha": "2d3b19992e4139ca9cf3a8839ce2fbbee5dc880c",
                "filename": "README.md",
                "status": "modified",
                "additions": 4,
                "deletions": 3,
                "changes": 7,
                "blob_url": "https://github.com/eBay/parallec/blob/cf9f1a3751f898bb320ca2ea34bb2ac7be5a6145/README.md",
                "raw_url": "https://github.com/eBay/parallec/raw/cf9f1a3751f898bb320ca2ea34bb2ac7be5a6145/README.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/README.md?ref=cf9f1a3751f898bb320ca2ea34bb2ac7be5a6145",
                "patch": "@@ -4,7 +4,7 @@\n ![build status](https://img.shields.io/badge/build-info=>-green.svg) [![Build Status](https://travis-ci.org/eBay/parallec.svg?branch=master)](https://travis-ci.org/eBay/parallec) [![Coverage Status](https://img.shields.io/codecov/c/github/eBay/parallec.svg)](https://codecov.io/github/eBay/parallec) [![Apache V2.0 License](http://www.parallec.io/images/apache2.svg) ](https://github.com/eBay/parallec/blob/master/LICENSE)\n \n \n-![latest 0.10.x](http://img.shields.io/badge/latest_stable-0.10.x=>-green.svg) [ ![latest beta  maven central](https://maven-badges.herokuapp.com/maven-central/io.parallec/parallec-core/badge.svg?style=flat)](http://search.maven.org/#artifactdetails|io.parallec|parallec-core|0.10.0|) [![Gitter](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/eBay/parallec?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge)\n+![latest 0.10.x](http://img.shields.io/badge/latest_stable-0.10.x=>-green.svg) [ ![latest beta  maven central](https://maven-badges.herokuapp.com/maven-central/io.parallec/parallec-core/badge.svg?style=flat)](http://search.maven.org/#artifactdetails|io.parallec|parallec-core|0.10.1-beta|) [![Gitter](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/eBay/parallec?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge)\n \n [![Javadoc](http://www.parallec.io/images/parallec-javadoc-blue.svg)](http://www.parallec.io/javadoc/index.html?io/parallec/core/ParallelClient.html) [![Documentation](http://www.parallec.io/images/parallec-documentation-red.svg)](http://www.parallec.io/docs/) [![Samples](http://www.parallec.io/images/parallec-samples-brightgreen.svg)](https://github.com/eBay/parallec-samples) [![Chinese](http://www.parallec.io/images/parallec-cnbrief-blue.svg)](https://github.com/eBay/parallec/blob/master/README-brief-cn.md) \n \n@@ -39,7 +39,7 @@ Snapshots of the development version are available in [Sonatype's `snapshots` re\n \n or Gradle:\n ```xml\n-compile 'io.parallec:parallec-core:0.10.0'\n+compile 'io.parallec:parallec-core:0.10.1-beta'\n ```\n \n \n@@ -104,7 +104,8 @@ pc.prepareHttpGet(\"/userdata/sample_weather_$ZIP.txt\")\n \n ###What's New\n \n-* 08/2016 Support Parallel async UDP (via Netty).\n+* 09/2016 Add option to save response headers in HTTP [#24](https://github.com/eBay/parallec/issues/24).\n+* 08/2016 Support Parallel async UDP (via Netty) [#41](https://github.com/eBay/parallec/issues/41).\n * 07/2016 Support replacing different ports in different requests. \n * 06/2016 Parallel SSH add run sudo with password for commands.\n "
            },
            {
                "sha": "dbafb2dd410f7e1e4a118b683b32712e4721af5e",
                "filename": "src/main/java/io/parallec/core/ParallelTaskBuilder.java",
                "status": "modified",
                "additions": 18,
                "deletions": 8,
                "changes": 26,
                "blob_url": "https://github.com/eBay/parallec/blob/cf9f1a3751f898bb320ca2ea34bb2ac7be5a6145/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FParallelTaskBuilder.java",
                "raw_url": "https://github.com/eBay/parallec/raw/cf9f1a3751f898bb320ca2ea34bb2ac7be5a6145/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FParallelTaskBuilder.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FParallelTaskBuilder.java?ref=cf9f1a3751f898bb320ca2ea34bb2ac7be5a6145",
                "patch": "@@ -51,6 +51,7 @@\n import com.ning.http.client.AsyncHttpClient;\n \n \n+// TODO: Auto-generated Javadoc\n /**\n  * \n  * This class stores all the metadata to build the ParallelTask. It is a Parallec key class.\n@@ -407,10 +408,9 @@ public ParallelTaskBuilder setHttpPort(int port) {\n \n     \n     /**\n-     * Sets the port variable name such as $PORT\n+     * Sets the port variable name such as $PORT.\n      *\n-     * @param portVar\n-     *            the port\n+     * @param portVar            the port\n      * @return the parallel task builder\n      */\n     public ParallelTaskBuilder setHttpPortReplaceable(String portVar) {\n@@ -841,13 +841,13 @@ public ParallelTaskBuilder setHttpPollable(boolean isPollable) {\n     }\n     \n     \n+\n     /**\n      * Sets the HTTP response header meta data.\n      * Can define a list of keys would like to retrieve from the response headers. \n      * Or when getAll is true: will get all the key value pair, regardless of the keys list provided.\n      * \n-     * @param isPollable\n-     *            the is pollable\n+     * @param responseHeaderMeta the response header meta\n      * @return the parallel task builder\n      */\n     public ParallelTaskBuilder saveResponseHeaders(ResponseHeaderMeta responseHeaderMeta) {\n@@ -900,9 +900,9 @@ public ParallelTaskBuilder setSshCommandLine(String commandLine) {\n     }\n     \n     /**\n-     * Sets the ssh runAsSuperUser\n-     * @param runAsSuperUser\n-     *            the runAsSuperUser\n+     * Sets the ssh runAsSuperUser.\n+     *\n+     * @param runAsSuperUser            the runAsSuperUser\n      * @return the parallel task builder\n      */\n     public ParallelTaskBuilder setRunAsSuperUser(Boolean runAsSuperUser) {\n@@ -1224,10 +1224,20 @@ public ParallelTaskBuilder setPingNumRetries(int numRetries) {\n         return this;\n     }\n \n+    /**\n+     * Gets the udp meta.\n+     *\n+     * @return the udp meta\n+     */\n     public UdpMeta getUdpMeta() {\n         return udpMeta;\n     }\n \n+    /**\n+     * Sets the udp meta.\n+     *\n+     * @param udpMeta the new udp meta\n+     */\n     public void setUdpMeta(UdpMeta udpMeta) {\n         this.udpMeta = udpMeta;\n     }"
            },
            {
                "sha": "c8f67759c3a251c2f10e1d3eb09525716c38215c",
                "filename": "src/main/java/io/parallec/core/actor/HttpWorker.java",
                "status": "modified",
                "additions": 8,
                "deletions": 12,
                "changes": 20,
                "blob_url": "https://github.com/eBay/parallec/blob/cf9f1a3751f898bb320ca2ea34bb2ac7be5a6145/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FHttpWorker.java",
                "raw_url": "https://github.com/eBay/parallec/raw/cf9f1a3751f898bb320ca2ea34bb2ac7be5a6145/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FHttpWorker.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FHttpWorker.java?ref=cf9f1a3751f898bb320ca2ea34bb2ac7be5a6145",
                "patch": "@@ -49,6 +49,7 @@\n import com.ning.http.client.ListenableFuture;\n import com.ning.http.client.Response;\n \n+// TODO: Auto-generated Javadoc\n /**\n  * This is an akka actor with async http client.\n  *\n@@ -109,18 +110,13 @@ public class HttpWorker extends UntypedActor {\n     /**\n      * Instantiates a new http worker.\n      *\n-     * @param actorMaxOperationTimeoutSec\n-     *            the actor max operation timeout sec\n-     * @param client\n-     *            the client\n-     * @param requestUrl\n-     *            the request url\n-     * @param httpMethod\n-     *            the http method\n-     * @param postData\n-     *            the post data\n-     * @param httpHeaderMap\n-     *            the http header map\n+     * @param actorMaxOperationTimeoutSec the actor max operation timeout sec\n+     * @param client the client\n+     * @param requestUrl the request url\n+     * @param httpMethod the http method\n+     * @param postData the post data\n+     * @param httpHeaderMap the http header map\n+     * @param responseHeaderMeta the response header meta\n      */\n     public HttpWorker(final int actorMaxOperationTimeoutSec,\n             final AsyncHttpClient client, final String requestUrl,"
            },
            {
                "sha": "8c663d4b96d03563d6b28eaee334cf06245e6794",
                "filename": "src/main/java/io/parallec/core/actor/OperationWorker.java",
                "status": "modified",
                "additions": 0,
                "deletions": 1,
                "changes": 1,
                "blob_url": "https://github.com/eBay/parallec/blob/cf9f1a3751f898bb320ca2ea34bb2ac7be5a6145/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FOperationWorker.java",
                "raw_url": "https://github.com/eBay/parallec/raw/cf9f1a3751f898bb320ca2ea34bb2ac7be5a6145/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FOperationWorker.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FOperationWorker.java?ref=cf9f1a3751f898bb320ca2ea34bb2ac7be5a6145",
                "patch": "@@ -486,7 +486,6 @@ private final void cancelCancellable() {\n     /**\n      * Reply used in error cases. set the response header as null.\n      *\n-     * @param error the error\n      * @param errorMessage the error message\n      * @param stackTrace the stack trace\n      * @param statusCode the status code"
            },
            {
                "sha": "b5e8f00238a475e9b861c51591ef7894937e0c6e",
                "filename": "src/main/java/io/parallec/core/actor/message/ResponseOnSingeRequest.java",
                "status": "modified",
                "additions": 8,
                "deletions": 14,
                "changes": 22,
                "blob_url": "https://github.com/eBay/parallec/blob/cf9f1a3751f898bb320ca2ea34bb2ac7be5a6145/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2Fmessage%2FResponseOnSingeRequest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/cf9f1a3751f898bb320ca2ea34bb2ac7be5a6145/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2Fmessage%2FResponseOnSingeRequest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2Fmessage%2FResponseOnSingeRequest.java?ref=cf9f1a3751f898bb320ca2ea34bb2ac7be5a6145",
                "patch": "@@ -124,20 +124,14 @@ public void setStatusCode(String statusCode) {\n     /**\n      * Instantiates a new response on singe request.\n      *\n-     * @param responseBody\n-     *            the response body\n-     * @param failObtainResponse\n-     *            the fail obtain response\n-     * @param errorMessage\n-     *            the error message\n-     * @param stackTrace\n-     *            the stack trace\n-     * @param statusCode\n-     *            the status code\n-     * @param statusCodeInt\n-     *            the status code int\n-     * @param receiveTime\n-     *            the receive time\n+     * @param responseBody the response body\n+     * @param failObtainResponse the fail obtain response\n+     * @param errorMessage the error message\n+     * @param stackTrace the stack trace\n+     * @param statusCode the status code\n+     * @param statusCodeInt the status code int\n+     * @param receiveTime the receive time\n+     * @param responseHeaders the response headers\n      */\n     public ResponseOnSingeRequest(String responseBody,\n             boolean failObtainResponse, String errorMessage, String stackTrace,"
            },
            {
                "sha": "b8fa5cef163b3be98533b828aba735a023791207",
                "filename": "src/test/java/io/parallec/core/pojo/ParallecPojoClassTest.java",
                "status": "modified",
                "additions": 2,
                "deletions": 0,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/cf9f1a3751f898bb320ca2ea34bb2ac7be5a6145/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fpojo%2FParallecPojoClassTest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/cf9f1a3751f898bb320ca2ea34bb2ac7be5a6145/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fpojo%2FParallecPojoClassTest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fpojo%2FParallecPojoClassTest.java?ref=cf9f1a3751f898bb320ca2ea34bb2ac7be5a6145",
                "patch": "@@ -25,6 +25,7 @@\n import io.parallec.core.actor.message.RequestToBatchSenderAsstManager;\n import io.parallec.core.actor.message.ResponseCountToBatchSenderAsstManager;\n import io.parallec.core.actor.message.ResponseFromManager;\n+import io.parallec.core.actor.message.ResponseOnSingeRequest;\n import io.parallec.core.actor.poll.HttpPollerProcessor;\n import io.parallec.core.actor.poll.PollerData;\n import io.parallec.core.bean.HttpMeta;\n@@ -164,6 +165,7 @@ public List<Class<?>> getPOJOClasses() throws ClassNotFoundException {\n         pojoClasses.add(ResponseHeaderMeta.class);\n         \n         pojoClasses.add(HttpClientStore.class);\n+        pojoClasses.add(ResponseOnSingeRequest.class);\n         \n         return pojoClasses;\n     }"
            },
            {
                "sha": "cba60ad0e7e499efee928e3992d80185bd68e390",
                "filename": "src/test/java/io/parallec/core/pojo/ParallecPojoStrTest.java",
                "status": "modified",
                "additions": 2,
                "deletions": 0,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/cf9f1a3751f898bb320ca2ea34bb2ac7be5a6145/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fpojo%2FParallecPojoStrTest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/cf9f1a3751f898bb320ca2ea34bb2ac7be5a6145/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fpojo%2FParallecPojoStrTest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fpojo%2FParallecPojoStrTest.java?ref=cf9f1a3751f898bb320ca2ea34bb2ac7be5a6145",
                "patch": "@@ -143,6 +143,8 @@ public void testStaticFuncAndUtilsClass() {\n                         \"a b\", removeDuplicate);\n         \n         PcStringUtils.printStackTrace(null);\n+        \n+        \n     }\n \n }"
            }
        ]
    },
    {
        "sha": "331663984a13c2ec8c6095573c388deae59cb774",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6MzMxNjYzOTg0YTEzYzJlYzhjNjA5NTU3M2MzODhkZWFlNTljYjc3NA==",
        "commit": {
            "author": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2016-09-29T22:00:52Z"
            },
            "committer": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2016-09-29T22:00:52Z"
            },
            "message": "#24",
            "tree": {
                "sha": "1a10e312de9786d78da350a020370fc7fc060347",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/1a10e312de9786d78da350a020370fc7fc060347"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/331663984a13c2ec8c6095573c388deae59cb774",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/331663984a13c2ec8c6095573c388deae59cb774",
        "html_url": "https://github.com/eBay/parallec/commit/331663984a13c2ec8c6095573c388deae59cb774",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/331663984a13c2ec8c6095573c388deae59cb774/comments",
        "author": null,
        "committer": null,
        "parents": [
            {
                "sha": "1f99d8a373cc08e099036b1567d2b5833c056fea",
                "url": "https://api.github.com/repos/eBay/parallec/commits/1f99d8a373cc08e099036b1567d2b5833c056fea",
                "html_url": "https://github.com/eBay/parallec/commit/1f99d8a373cc08e099036b1567d2b5833c056fea"
            }
        ],
        "stats": {
            "total": 727,
            "additions": 634,
            "deletions": 93
        },
        "files": [
            {
                "sha": "ca01d51e8b9cc48dc7e4c1e0040e07727fcaac19",
                "filename": "CHANGELOG.md",
                "status": "modified",
                "additions": 14,
                "deletions": 4,
                "changes": 18,
                "blob_url": "https://github.com/eBay/parallec/blob/331663984a13c2ec8c6095573c388deae59cb774/CHANGELOG.md",
                "raw_url": "https://github.com/eBay/parallec/raw/331663984a13c2ec8c6095573c388deae59cb774/CHANGELOG.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/CHANGELOG.md?ref=331663984a13c2ec8c6095573c388deae59cb774",
                "patch": "@@ -1,12 +1,22 @@\n Parallec Change Log\n ==========\n \n-## Version 0.10.1\n+## Version 0.10.1-beta\n \n \n-_2016-??-??_\n+_2016-09-30_\n+\n+* Issue [#24](https://github.com/eBay/parallec/issues/24). Examples are [here](https://github.com/eBay/parallec/blob/master/src/test/java/io/parallec/core/main/http/ParallelClientHttpResponseHeaderTest.java). Save Response Headers into the ResponseOnSingleTask. Note that the key set provided in  esponseHeaderMeta in request can be case insensitive. However in the response headers map returned in the ResponseOnSingleTask, all keys have been lower case for easy access. The key line is as below to enable the save response headers.\n+* Erased the response headers in the ResponseOnSingleTask if `task.getConfig().isSaveResponseToTask()` is false (default).\n+* Minor refactored multiple places.\n+\n+```java\n+ .saveResponseHeaders(\n+                        new ResponseHeaderMeta(Arrays.asList(\"Content-Type\",\n+                                \"server\", \"x-github-request-id\"), false))\n+```                                \n+\n \n-* TBD\n \n \n ## Version 0.10.0\n@@ -16,7 +26,7 @@ _2016-08-18_\n \n * Added main feature of parallel UDP based on async Netty, with `prepareUdp(String command)` API. Use `setUdpPort()` and `setUdpIdleTimeoutSec()` to set the port and read timeout.  Added tests. \n * In udp/tcp/udp/http/ping/ssh worker, to check context before kill itself, as sometimes the msg is passed faster to the Op Worker which send msg to kill the worker already.  \n-* Improve test coverage. \n+* Improved test coverage. \n \n ## Version 0.9.4-beta\n "
            },
            {
                "sha": "b86daa4449a7897f7f85a2717d5821a9123b34dd",
                "filename": "pom.xml",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/331663984a13c2ec8c6095573c388deae59cb774/pom.xml",
                "raw_url": "https://github.com/eBay/parallec/raw/331663984a13c2ec8c6095573c388deae59cb774/pom.xml",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/pom.xml?ref=331663984a13c2ec8c6095573c388deae59cb774",
                "patch": "@@ -4,7 +4,7 @@\n \t<modelVersion>4.0.0</modelVersion>\n \t<groupId>io.parallec</groupId>\n \t<artifactId>parallec-core</artifactId>\n-\t<version>0.10.0</version>\n+\t<version>0.10.1-beta</version>\n \t<packaging>jar</packaging>\n \t<name>io.parallec:parallec-core</name>\n \t<url>https://github.com/eBay/parallec</url>"
            },
            {
                "sha": "2fa252b4e92d2207c1605df8d89da5d213d1787a",
                "filename": "src/main/java/io/parallec/core/ParallelTaskBuilder.java",
                "status": "modified",
                "additions": 19,
                "deletions": 0,
                "changes": 19,
                "blob_url": "https://github.com/eBay/parallec/blob/331663984a13c2ec8c6095573c388deae59cb774/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FParallelTaskBuilder.java",
                "raw_url": "https://github.com/eBay/parallec/raw/331663984a13c2ec8c6095573c388deae59cb774/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FParallelTaskBuilder.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FParallelTaskBuilder.java?ref=331663984a13c2ec8c6095573c388deae59cb774",
                "patch": "@@ -14,6 +14,7 @@\n \n import io.parallec.core.actor.poll.HttpPollerProcessor;\n import io.parallec.core.bean.HttpMeta;\n+import io.parallec.core.bean.ResponseHeaderMeta;\n import io.parallec.core.bean.StrStrMap;\n import io.parallec.core.bean.TargetHostMeta;\n import io.parallec.core.bean.TaskRunMode;\n@@ -838,6 +839,24 @@ public ParallelTaskBuilder setHttpPollable(boolean isPollable) {\n \n         return this;\n     }\n+    \n+    \n+    /**\n+     * Sets the HTTP response header meta data.\n+     * Can define a list of keys would like to retrieve from the response headers. \n+     * Or when getAll is true: will get all the key value pair, regardless of the keys list provided.\n+     * \n+     * @param isPollable\n+     *            the is pollable\n+     * @return the parallel task builder\n+     */\n+    public ParallelTaskBuilder saveResponseHeaders(ResponseHeaderMeta responseHeaderMeta) {\n+        this.httpMeta.setResponseHeaderMeta(responseHeaderMeta);\n+        return this;\n+    }\n+\n+    \n+    \n \n     /**\n      * Sets the HTTP poller processor to handle Async API."
            },
            {
                "sha": "ccf9baf9d4add8e2c392ca565c30c87bf2afad6f",
                "filename": "src/main/java/io/parallec/core/ResponseOnSingleTask.java",
                "status": "modified",
                "additions": 68,
                "deletions": 16,
                "changes": 84,
                "blob_url": "https://github.com/eBay/parallec/blob/331663984a13c2ec8c6095573c388deae59cb774/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FResponseOnSingleTask.java",
                "raw_url": "https://github.com/eBay/parallec/raw/331663984a13c2ec8c6095573c388deae59cb774/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FResponseOnSingleTask.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FResponseOnSingleTask.java?ref=331663984a13c2ec8c6095573c388deae59cb774",
                "patch": "@@ -17,8 +17,10 @@\n import io.parallec.core.util.PcStringUtils;\n \n import java.util.LinkedHashMap;\n+import java.util.List;\n import java.util.Map;\n \n+// TODO: Auto-generated Javadoc\n /**\n  * this includes the request each target host will have one.\n  * \n@@ -71,9 +73,11 @@ public class ResponseOnSingleTask {\n     private long operationTimeMillis;\n \n     /** The polling history map. */\n-    // for polling history 201412\n     final private Map<String, String> pollingHistoryMap = new LinkedHashMap<String, String>();\n \n+    /** The response headers. */\n+    private Map<String, List<String>> responseHeaders;\n+    \n     /**\n      * Gets the polling history map.\n      *\n@@ -279,28 +283,76 @@ public void setErrorMessage(String errorMessage) {\n         this.errorMessage = errorMessage;\n     }\n \n-    /*\n-     * (non-Javadoc)\n-     * \n-     * @see java.lang.Object#toString()\n-     */\n-    @Override\n-    public String toString() {\n-        return \"SingleTaskResponse [request=\" + request + \", responseContent=\"\n-                + responseContent + \", receiveTime=\" + receiveTime\n-                + \", receiveTimeInManager=\" + receiveTimeInManager + \", error=\"\n-                + error + \", errorMessage=\" + errorMessage + \", stackTrace=\"\n-                + stackTrace + \", statusCode=\" + statusCode\n-                + \", operationTimeMillis=\" + operationTimeMillis\n-                + \", pollingHistoryMap=\" + pollingHistoryMap + \"]\";\n-    }\n \n+    /**\n+     * Gets the status code int.\n+     *\n+     * @return the status code int\n+     */\n     public int getStatusCodeInt() {\n         return statusCodeInt;\n     }\n \n+    /**\n+     * Sets the status code int.\n+     *\n+     * @param statusCodeInt the new status code int\n+     */\n     public void setStatusCodeInt(int statusCodeInt) {\n         this.statusCodeInt = statusCodeInt;\n     }\n \n+    /**\n+     * Gets the error.\n+     *\n+     * @return the error\n+     */\n+    public Boolean getError() {\n+        return error;\n+    }\n+\n+    /**\n+     * Sets the error.\n+     *\n+     * @param error the new error\n+     */\n+    public void setError(Boolean error) {\n+        this.error = error;\n+    }\n+\n+    /**\n+     * Gets the response headers.\n+     *\n+     * @return the response headers\n+     */\n+    public Map<String, List<String>> getResponseHeaders() {\n+        return responseHeaders;\n+    }\n+\n+    /**\n+     * Sets the response headers.\n+     *\n+     * @param responseHeaders the response headers\n+     */\n+    public void setResponseHeaders(Map<String, List<String>> responseHeaders) {\n+        this.responseHeaders = responseHeaders;\n+    }\n+\n+    /* (non-Javadoc)\n+     * @see java.lang.Object#toString()\n+     */\n+    @Override\n+    public String toString() {\n+        return \"ResponseOnSingleTask [request=\" + request\n+                + \", responseContent=\" + responseContent + \", receiveTime=\"\n+                + receiveTime + \", receiveTimeInManager=\"\n+                + receiveTimeInManager + \", error=\" + error + \", errorMessage=\"\n+                + errorMessage + \", stackTrace=\" + stackTrace + \", statusCode=\"\n+                + statusCode + \", statusCodeInt=\" + statusCodeInt\n+                + \", operationTimeMillis=\" + operationTimeMillis\n+                + \", pollingHistoryMap=\" + pollingHistoryMap\n+                + \", responseHeaders=\" + responseHeaders + \"]\";\n+    }\n+    \n+\n }"
            },
            {
                "sha": "c754b35a04c8ce83e55724fd315cc3fab7839c46",
                "filename": "src/main/java/io/parallec/core/actor/ExecutionManager.java",
                "status": "modified",
                "additions": 6,
                "deletions": 2,
                "changes": 8,
                "blob_url": "https://github.com/eBay/parallec/blob/331663984a13c2ec8c6095573c388deae59cb774/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FExecutionManager.java",
                "raw_url": "https://github.com/eBay/parallec/raw/331663984a13c2ec8c6095573c388deae59cb774/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FExecutionManager.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FExecutionManager.java?ref=331663984a13c2ec8c6095573c388deae59cb774",
                "patch": "@@ -25,6 +25,7 @@\n import io.parallec.core.actor.message.type.ExecutionManagerMsgType;\n import io.parallec.core.actor.message.type.OperationWorkerMsgType;\n import io.parallec.core.bean.HttpMeta;\n+import io.parallec.core.bean.ResponseHeaderMeta;\n import io.parallec.core.bean.SingleTargetTaskStatus;\n import io.parallec.core.bean.TargetHostMeta;\n import io.parallec.core.bean.TaskRequest;\n@@ -349,6 +350,8 @@ public void onReceive(Object message) {\n                     final UdpMeta udpMeta = task.getUdpMeta();\n                     \n                     final PingMeta pingMeta = task.getPingMeta();\n+                    final ResponseHeaderMeta responseHeaderMeta = task.getHttpMeta().getResponseHeaderMeta();\n+                    \n                     \n                     logger.debug(\"REQUEST GENERATED: \"\n                             + (sentRequestCounter + 1)\n@@ -371,7 +374,7 @@ public void onReceive(Object message) {\n                                                     , pollable,\n                                             httpHeaderMapLocal, \n                                             handler,responseContext,\n-                                            sshMeta, tcpMeta, udpMeta, pingMeta),\n+                                            sshMeta, tcpMeta, udpMeta, pingMeta, responseHeaderMeta),\n                                     asyncHttpClient, task.getHttpMeta()\n                                             .getHttpPollerProcessor()\n \n@@ -509,7 +512,8 @@ public void onReceive(Object message) {\n \n                 if (!task.getConfig().isSaveResponseToTask()) {\n                     taskResponse.setResponseContent(PcConstants.NOT_SAVED);\n-                    logger.debug(\"Set single task response content as Not Saved to save space.\");\n+                    taskResponse.setResponseHeaders(null);\n+                    logger.debug(\"Erased single task response content and response headers to save space.\");\n                 }\n \n                 if (this.responseCount == this.requestCount) {"
            },
            {
                "sha": "a3531f7f39b15b3bc511eed7d2148877466fc47d",
                "filename": "src/main/java/io/parallec/core/actor/HttpWorker.java",
                "status": "modified",
                "additions": 57,
                "deletions": 19,
                "changes": 76,
                "blob_url": "https://github.com/eBay/parallec/blob/331663984a13c2ec8c6095573c388deae59cb774/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FHttpWorker.java",
                "raw_url": "https://github.com/eBay/parallec/raw/331663984a13c2ec8c6095573c388deae59cb774/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FHttpWorker.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FHttpWorker.java?ref=331663984a13c2ec8c6095573c388deae59cb774",
                "patch": "@@ -14,6 +14,7 @@\n \n import io.parallec.core.actor.message.ResponseOnSingeRequest;\n import io.parallec.core.actor.message.type.RequestWorkerMsgType;\n+import io.parallec.core.bean.ResponseHeaderMeta;\n import io.parallec.core.exception.ActorMessageTypeInvalidException;\n import io.parallec.core.exception.HttpRequestCreateException;\n import io.parallec.core.resources.HttpMethod;\n@@ -25,6 +26,9 @@\n \n import java.io.IOException;\n import java.util.HashMap;\n+import java.util.LinkedHashMap;\n+import java.util.List;\n+import java.util.Locale;\n import java.util.Map;\n import java.util.concurrent.TimeUnit;\n \n@@ -45,8 +49,6 @@\n import com.ning.http.client.ListenableFuture;\n import com.ning.http.client.Response;\n \n-\n-\n /**\n  * This is an akka actor with async http client.\n  *\n@@ -73,9 +75,14 @@ public class HttpWorker extends UntypedActor {\n     private static Logger logger = LoggerFactory.getLogger(HttpWorker.class);\n \n     /** The http header map. */\n-    // 20140310\n     private final Map<String, String> httpHeaderMap = new HashMap<String, String>();\n \n+    /**\n+     * The response header meta: which keys are needed to get from response\n+     * header.\n+     */\n+    private final ResponseHeaderMeta responseHeaderMeta;\n+\n     /** The sender. */\n     private ActorRef sender = null;\n \n@@ -98,21 +105,28 @@ public class HttpWorker extends UntypedActor {\n \n     /** The response future. */\n     ListenableFuture<ResponseOnSingeRequest> responseFuture = null;\n-    \n+\n     /**\n      * Instantiates a new http worker.\n      *\n-     * @param actorMaxOperationTimeoutSec the actor max operation timeout sec\n-     * @param client the client\n-     * @param requestUrl the request url\n-     * @param httpMethod the http method\n-     * @param postData the post data\n-     * @param httpHeaderMap the http header map\n+     * @param actorMaxOperationTimeoutSec\n+     *            the actor max operation timeout sec\n+     * @param client\n+     *            the client\n+     * @param requestUrl\n+     *            the request url\n+     * @param httpMethod\n+     *            the http method\n+     * @param postData\n+     *            the post data\n+     * @param httpHeaderMap\n+     *            the http header map\n      */\n     public HttpWorker(final int actorMaxOperationTimeoutSec,\n             final AsyncHttpClient client, final String requestUrl,\n             final HttpMethod httpMethod, final String postData,\n-            final Map<String, String> httpHeaderMap\n+            final Map<String, String> httpHeaderMap,\n+            final ResponseHeaderMeta responseHeaderMeta\n \n     ) {\n         this.actorMaxOperationTimeoutSec = actorMaxOperationTimeoutSec;\n@@ -122,6 +136,7 @@ public HttpWorker(final int actorMaxOperationTimeoutSec,\n         this.postData = postData;\n         if (httpHeaderMap != null)\n             this.httpHeaderMap.putAll(httpHeaderMap);\n+        this.responseHeaderMeta = responseHeaderMeta;\n \n     }\n \n@@ -233,7 +248,7 @@ public void onReceive(Object message) throws Exception {\n                         sender = getSender();\n                     reply(null, true, PcConstants.REQUEST_CANCELED,\n                             PcConstants.REQUEST_CANCELED, PcConstants.NA,\n-                            PcConstants.NA_INT);\n+                            PcConstants.NA_INT, null);\n                     break;\n \n                 case PROCESS_ON_EXCEPTION:\n@@ -243,7 +258,7 @@ public void onReceive(Object message) throws Exception {\n                     String stackTrace = PcStringUtils.printStackTrace(cause);\n                     cancelCancellable();\n                     reply(null, true, errorSummary, stackTrace, PcConstants.NA,\n-                            PcConstants.NA_INT);\n+                            PcConstants.NA_INT, null);\n \n                     break;\n \n@@ -258,7 +273,7 @@ public void onReceive(Object message) throws Exception {\n                                     actorMaxOperationTimeoutSec);\n \n                     reply(null, true, errorMsg, errorMsg, PcConstants.NA,\n-                            PcConstants.NA_INT);\n+                            PcConstants.NA_INT, null);\n                     break;\n \n                 case CHECK_FUTURE_STATE:\n@@ -317,17 +332,22 @@ public void cancelCancellable() {\n      *            the status code\n      * @param statusCodeInt\n      *            the status code int\n+     * @param responseHeaders\n+     *            the response headers\n      */\n     private void reply(final String response, final boolean error,\n             final String errorMessage, final String stackTrace,\n-            final String statusCode, final int statusCodeInt) {\n+            final String statusCode, final int statusCodeInt,\n+            Map<String, List<String>> responseHeaders) {\n \n         if (!sentReply) {\n-            //must update sentReply first to avoid duplicated msg.\n+            // must update sentReply first to avoid duplicated msg.\n             sentReply = true;\n+\n             final ResponseOnSingeRequest res = new ResponseOnSingeRequest(\n                     response, error, errorMessage, stackTrace, statusCode,\n-                    statusCodeInt, PcDateUtils.getNowDateTimeStrStandard());\n+                    statusCodeInt, PcDateUtils.getNowDateTimeStrStandard(),\n+                    responseHeaders);\n             if (!getContext().system().deadLetters().equals(sender)) {\n                 sender.tell(res, getSelf());\n             }\n@@ -340,21 +360,39 @@ private void reply(final String response, final boolean error,\n \n     /**\n      * On complete.\n+     * Save response headers when needed.\n      *\n      * @param response\n      *            the response\n-     * @return the response on singe request\n+     * @return the response on single request\n      */\n     public ResponseOnSingeRequest onComplete(Response response) {\n \n         cancelCancellable();\n         try {\n+            Map<String, List<String>> responseHeaders = null;\n+            if (responseHeaderMeta != null) {\n+                responseHeaders = new LinkedHashMap<String, List<String>>();\n+                if (responseHeaderMeta.isGetAll()) {\n+                    for (Map.Entry<String, List<String>> header : response\n+                            .getHeaders()) {\n+                        responseHeaders.put(header.getKey().toLowerCase(Locale.ROOT), header.getValue());\n+                    }\n+                } else {\n+                    for (String key : responseHeaderMeta.getKeys()) {\n+                        if (response.getHeaders().containsKey(key)) {\n+                            responseHeaders.put(key.toLowerCase(Locale.ROOT),\n+                                    response.getHeaders().get(key));\n+                        }\n+                    }\n+                }\n+            }\n \n             int statusCodeInt = response.getStatusCode();\n             String statusCode = statusCodeInt + \" \" + response.getStatusText();\n \n             reply(response.getResponseBody(), false, null, null, statusCode,\n-                    statusCodeInt);\n+                    statusCodeInt, responseHeaders);\n         } catch (IOException e) {\n             getLogger().error(\"fail response.getResponseBody \" + e);\n         }"
            },
            {
                "sha": "59c5f815b14b719c36f66941d030d132e8b37368",
                "filename": "src/main/java/io/parallec/core/actor/OperationWorker.java",
                "status": "modified",
                "additions": 16,
                "deletions": 15,
                "changes": 31,
                "blob_url": "https://github.com/eBay/parallec/blob/331663984a13c2ec8c6095573c388deae59cb774/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FOperationWorker.java",
                "raw_url": "https://github.com/eBay/parallec/raw/331663984a13c2ec8c6095573c388deae59cb774/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FOperationWorker.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FOperationWorker.java?ref=331663984a13c2ec8c6095573c388deae59cb774",
                "patch": "@@ -28,6 +28,8 @@\n import io.parallec.core.util.PcHttpUtils;\n import io.parallec.core.util.PcStringUtils;\n \n+import java.util.List;\n+import java.util.Map;\n import java.util.concurrent.TimeUnit;\n \n import org.slf4j.Logger;\n@@ -170,7 +172,7 @@ public void onReceive(Object message) throws Exception {\n                         \"invalid message type to OperationWorker\");\n             }\n         } catch (Exception e) {\n-            reply(true, e.toString(), PcStringUtils.printStackTrace(e),\n+            replyErrors(e.toString(), PcStringUtils.printStackTrace(e),\n                     PcConstants.NA, PcConstants.NA_INT);\n         }\n     }\n@@ -190,7 +192,7 @@ private final void pollProgress() {\n                         client, String.format(\"%s://%s:%d%s\", request\n                                 .getProtocol().toString(), trueTargetNode,\n                                 request.getPort(), pollUrl), pollerHttpMethod,\n-                        postBodyForPoller, request.getHttpHeaderMap()));\n+                        postBodyForPoller, request.getHttpHeaderMap(), request.getResponseHeaderMeta()));\n \n         logger.info(\"POLL_REQ_SEND\" + pollUrl + \" \"\n                 + PcDateUtils.getNowDateTimeStrStandard());\n@@ -329,7 +331,7 @@ private final void handleHttpWorkerResponse(\n                 respOnSingleReq.getStackTrace(),\n                 respOnSingleReq.getStatusCode(),\n                 respOnSingleReq.getStatusCodeInt(),\n-                respOnSingleReq.getReceiveTime());\n+                respOnSingleReq.getReceiveTime(), respOnSingleReq.getResponseHeaders());\n \n     }// end func\n \n@@ -355,7 +357,7 @@ private final void processMainRequest() {\n             if (!PcHttpUtils.isUrlValid(urlComplete.trim())) {\n                 String errMsg = \"INVALID_URL\";\n                 logger.error(\"INVALID_URL: \" + urlComplete + \" return..\");\n-                reply(true, errMsg, errMsg, PcConstants.NA, PcConstants.NA_INT);\n+                replyErrors(errMsg, errMsg, PcConstants.NA, PcConstants.NA_INT);\n                 return;\n             } else {\n                 logger.debug(\"url pass validation: \" + urlComplete);\n@@ -364,7 +366,7 @@ private final void processMainRequest() {\n             asyncWorker = getContext().actorOf(\n                     Props.create(HttpWorker.class, actorMaxOperationTimeoutSec,\n                             client, urlComplete, request.getHttpMethod(),\n-                            request.getPostData(), request.getHttpHeaderMap()));\n+                            request.getPostData(), request.getHttpHeaderMap(), request.getResponseHeaderMeta()));\n \n         } else if (request.getProtocol() == RequestProtocol.SSH ){\n             asyncWorker = getContext().actorOf(\n@@ -433,7 +435,7 @@ private final void operationTimeout() {\n             logger.info(\"asyncWorker has been killed or uninitialized (null). \"\n                     + \"Not send PROCESS ON TIMEOUT.\\nREQ: \"\n                     + request.toString());\n-            reply(true, PcConstants.OPERATION_TIMEOUT,\n+            replyErrors(PcConstants.OPERATION_TIMEOUT,\n                     PcConstants.OPERATION_TIMEOUT, PcConstants.NA,\n                     PcConstants.NA_INT);\n         }\n@@ -460,7 +462,7 @@ private final void cancel() {\n             // this.\n             if (sender == null)\n                 sender = getSender();\n-            reply(true, PcConstants.REQUEST_CANCELED,\n+            replyErrors(PcConstants.REQUEST_CANCELED,\n                     PcConstants.REQUEST_CANCELED, PcConstants.NA,\n                     PcConstants.NA_INT);\n         }\n@@ -482,19 +484,19 @@ private final void cancelCancellable() {\n     }\n \n     /**\n-     * Reply.\n+     * Reply used in error cases. set the response header as null.\n      *\n      * @param error the error\n      * @param errorMessage the error message\n      * @param stackTrace the stack trace\n      * @param statusCode the status code\n      * @param statusCodeInt the status code int\n      */\n-    private final void reply(final boolean error, final String errorMessage,\n+    private final void replyErrors(final String errorMessage,\n             final String stackTrace, final String statusCode,\n             final int statusCodeInt) {\n-        reply(error, errorMessage, stackTrace, statusCode, statusCodeInt,\n-                PcConstants.NA);\n+        reply(true, errorMessage, stackTrace, statusCode, statusCodeInt,\n+                PcConstants.NA, null);\n \n     }\n \n@@ -507,11 +509,12 @@ private final void reply(final boolean error, final String errorMessage,\n      * @param statusCode the status code\n      * @param statusCodeInt the status code int\n      * @param receiveTime the receive time\n+     * @param responseHeaders the response headers\n      */\n     @SuppressWarnings(\"deprecation\")\n     private final void reply(final boolean error, final String errorMessage,\n             final String stackTrace, final String statusCode,\n-            final int statusCodeInt, final String receiveTime) {\n+            final int statusCodeInt, final String receiveTime,  Map<String, List<String>> responseHeaders) {\n         \n         if (!sentReply) {\n             sentReply = true;\n@@ -534,6 +537,7 @@ private final void reply(final boolean error, final String errorMessage,\n                 response.setStatusCode(statusCode);\n                 response.setStatusCodeInt(statusCodeInt);\n                 response.setReceiveTime(receiveTime);\n+                response.setResponseHeaders(responseHeaders);\n \n                 // add history.\n                 if (request.isPollable() && pollerData != null) {\n@@ -552,11 +556,8 @@ private final void reply(final boolean error, final String errorMessage,\n                                 , response.toString(),  t.getLocalizedMessage());\n                     }\n                 }\n-                \n-                \n                 sender.tell(response, getSelf());\n             }\n-\n             \n             if (asyncWorker != null && !asyncWorker.isTerminated()) {\n                 getContext().stop(asyncWorker);"
            },
            {
                "sha": "491378f443902ff31b1d2f9cce166fabca9cebef",
                "filename": "src/main/java/io/parallec/core/actor/PingWorker.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/331663984a13c2ec8c6095573c388deae59cb774/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FPingWorker.java",
                "raw_url": "https://github.com/eBay/parallec/raw/331663984a13c2ec8c6095573c388deae59cb774/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FPingWorker.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FPingWorker.java?ref=331663984a13c2ec8c6095573c388deae59cb774",
                "patch": "@@ -298,7 +298,7 @@ private void reply(final String response, final boolean failObtainResponse,\n             final ResponseOnSingeRequest res = new ResponseOnSingeRequest(\n                     response, failObtainResponse, errorMessage, stackTrace,\n                     statusCode, statusCodeInt,\n-                    PcDateUtils.getNowDateTimeStrStandard());\n+                    PcDateUtils.getNowDateTimeStrStandard(), null);\n \n             if (!getContext().system().deadLetters().equals(sender)) {\n                 sender.tell(res, getSelf());"
            },
            {
                "sha": "61c7dd841bfaee33533157b1e1cffdb2f2083c9a",
                "filename": "src/main/java/io/parallec/core/actor/SshWorker.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/331663984a13c2ec8c6095573c388deae59cb774/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FSshWorker.java",
                "raw_url": "https://github.com/eBay/parallec/raw/331663984a13c2ec8c6095573c388deae59cb774/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FSshWorker.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FSshWorker.java?ref=331663984a13c2ec8c6095573c388deae59cb774",
                "patch": "@@ -300,7 +300,7 @@ private void reply(final String response, final boolean failObtainResponse,\n             final ResponseOnSingeRequest res = new ResponseOnSingeRequest(\n                     response, failObtainResponse, errorMessage, stackTrace,\n                     statusCode, statusCodeInt,\n-                    PcDateUtils.getNowDateTimeStrStandard());\n+                    PcDateUtils.getNowDateTimeStrStandard(), null);\n \n             if (!getContext().system().deadLetters().equals(sender)) {\n                 sender.tell(res, getSelf());"
            },
            {
                "sha": "d7089e6c15ce06e2bdc6479ffa715aacaeaab189",
                "filename": "src/main/java/io/parallec/core/actor/TcpWorker.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/331663984a13c2ec8c6095573c388deae59cb774/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FTcpWorker.java",
                "raw_url": "https://github.com/eBay/parallec/raw/331663984a13c2ec8c6095573c388deae59cb774/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FTcpWorker.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FTcpWorker.java?ref=331663984a13c2ec8c6095573c388deae59cb774",
                "patch": "@@ -316,7 +316,7 @@ private void reply(final String response, final boolean error,\n                 channel.close().awaitUninterruptibly();\n             final ResponseOnSingeRequest res = new ResponseOnSingeRequest(\n                     response, error, errorMessage, stackTrace, statusCode,\n-                    statusCodeInt, PcDateUtils.getNowDateTimeStrStandard());\n+                    statusCodeInt, PcDateUtils.getNowDateTimeStrStandard(), null);\n             if (!getContext().system().deadLetters().equals(sender)) {\n                 sender.tell(res, getSelf());\n             }"
            },
            {
                "sha": "df352c9c25d1d4f56b60e692478d622c47e3e7fd",
                "filename": "src/main/java/io/parallec/core/actor/UdpWorker.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/331663984a13c2ec8c6095573c388deae59cb774/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FUdpWorker.java",
                "raw_url": "https://github.com/eBay/parallec/raw/331663984a13c2ec8c6095573c388deae59cb774/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FUdpWorker.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FUdpWorker.java?ref=331663984a13c2ec8c6095573c388deae59cb774",
                "patch": "@@ -306,7 +306,7 @@ private void reply(final String response, final boolean error,\n                 channel.close().awaitUninterruptibly();\n             final ResponseOnSingeRequest res = new ResponseOnSingeRequest(\n                     response, error, errorMessage, stackTrace, statusCode,\n-                    statusCodeInt, PcDateUtils.getNowDateTimeStrStandard());\n+                    statusCodeInt, PcDateUtils.getNowDateTimeStrStandard(), null);\n             if (!getContext().system().deadLetters().equals(sender)) {\n //                logger.debug(\"SEND_MSG {} from host {}\", res.toString(),\n //                        this.targetHost);"
            },
            {
                "sha": "d30931be76465d26112362d9c44adaaecd3b82e8",
                "filename": "src/main/java/io/parallec/core/actor/message/ResponseOnSingeRequest.java",
                "status": "modified",
                "additions": 29,
                "deletions": 1,
                "changes": 30,
                "blob_url": "https://github.com/eBay/parallec/blob/331663984a13c2ec8c6095573c388deae59cb774/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2Fmessage%2FResponseOnSingeRequest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/331663984a13c2ec8c6095573c388deae59cb774/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2Fmessage%2FResponseOnSingeRequest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2Fmessage%2FResponseOnSingeRequest.java?ref=331663984a13c2ec8c6095573c388deae59cb774",
                "patch": "@@ -15,7 +15,11 @@\n import io.parallec.core.util.PcConstants;\n import io.parallec.core.util.PcDateUtils;\n \n+import java.util.List;\n+import java.util.Map;\n \n+\n+// TODO: Auto-generated Javadoc\n /**\n  * A single HTTP response for each http request\n  * \n@@ -50,6 +54,11 @@ public class ResponseOnSingeRequest {\n     /** The status code. */\n     private String statusCode;\n \n+    \n+    /** The response headers: keys are lower cased. */\n+    private Map<String, List<String>> responseHeaders;\n+    \n+    \n     /**\n      * Checks if is fail obtain response.\n      *\n@@ -132,7 +141,7 @@ public void setStatusCode(String statusCode) {\n      */\n     public ResponseOnSingeRequest(String responseBody,\n             boolean failObtainResponse, String errorMessage, String stackTrace,\n-            String statusCode, int statusCodeInt, String receiveTime) {\n+            String statusCode, int statusCodeInt, String receiveTime,  Map<String, List<String>> responseHeaders) {\n         super();\n \n         this.responseBody = responseBody;\n@@ -142,6 +151,7 @@ public ResponseOnSingeRequest(String responseBody,\n         this.statusCode = statusCode;\n         this.setStatusCodeInt(statusCodeInt);\n         this.setReceiveTime(receiveTime);\n+        this.responseHeaders = responseHeaders;\n     }\n \n     /**\n@@ -253,4 +263,22 @@ public String toString() {\n                 + \"]\";\n     }\n \n+    /**\n+     * Gets the response headers.\n+     *\n+     * @return the response headers\n+     */\n+    public Map<String, List<String>> getResponseHeaders() {\n+        return responseHeaders;\n+    }\n+\n+    /**\n+     * Sets the response headers.\n+     *\n+     * @param responseHeaders the response headers\n+     */\n+    public void setResponseHeaders(Map<String, List<String>> responseHeaders) {\n+        this.responseHeaders = responseHeaders;\n+    }\n+\n }// end subclass\n\\ No newline at end of file"
            },
            {
                "sha": "9d96ffa2a5130f69553fb0f3fda5ccd0f8f9fe77",
                "filename": "src/main/java/io/parallec/core/bean/HttpMeta.java",
                "status": "modified",
                "additions": 78,
                "deletions": 7,
                "changes": 85,
                "blob_url": "https://github.com/eBay/parallec/blob/331663984a13c2ec8c6095573c388deae59cb774/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2FHttpMeta.java",
                "raw_url": "https://github.com/eBay/parallec/raw/331663984a13c2ec8c6095573c388deae59cb774/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2FHttpMeta.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2FHttpMeta.java?ref=331663984a13c2ec8c6095573c388deae59cb774",
                "patch": "@@ -24,6 +24,7 @@\n \n import com.ning.http.client.AsyncHttpClient;\n \n+// TODO: Auto-generated Javadoc\n /**\n  * The metadata about the HTTP request (url/port/header/concurrency etc) It does\n  * not include the target hosts information.\n@@ -39,7 +40,7 @@ public class HttpMeta {\n     /** The request url postfix. */\n     private String requestUrlPostfix;\n \n-    /** The request entityBody */\n+    /**  The request entityBody. */\n     private String entityBody;\n \n     /** The request port. */\n@@ -51,14 +52,15 @@ public class HttpMeta {\n     /** The http poller processor. */\n     private HttpPollerProcessor httpPollerProcessor = null;\n \n-    // 0910\n     /** The is pollable. */\n-    // pollable\n     private boolean isPollable = false;\n \n     /** The async http client. */\n     private AsyncHttpClient asyncHttpClient;\n \n+    /** The response header meta: which keys are needed to get from response header. */\n+    private ResponseHeaderMeta responseHeaderMeta;\n+    \n     /**\n      * Instantiates a new command meta.\n      */\n@@ -72,6 +74,7 @@ public HttpMeta() {\n         this.httpPollerProcessor = null;\n         this.isPollable = false;\n         this.asyncHttpClient = null;\n+        this.responseHeaderMeta = null;\n     };\n \n     /**\n@@ -87,6 +90,7 @@ public void initValuesNa() {\n         this.httpPollerProcessor = null;\n         this.isPollable = false;\n         this.asyncHttpClient = null;\n+        this.responseHeaderMeta = null;\n     }\n \n \n@@ -107,7 +111,6 @@ public boolean validation() throws ParallelTaskInvalidException {\n             this.asyncHttpClient = HttpClientStore.getInstance()\n                     .getCurrentDefaultClient();\n         }\n-\n         \n         if (this.getHttpMethod() == null)\n             throw new ParallelTaskInvalidException(\"Missing getHttpMethod!\");\n@@ -210,17 +213,28 @@ public String getEntityBody() {\n         return entityBody;\n     }\n \n+    /**\n+     * Sets the entity body.\n+     *\n+     * @param entityBody the new entity body\n+     */\n     public void setEntityBody(String entityBody) {\n         this.entityBody = entityBody;\n     }\n \n \n+    /* (non-Javadoc)\n+     * @see java.lang.Object#toString()\n+     */\n     @Override\n     public String toString() {\n         return \"HttpMeta [httpMethod=\" + httpMethod + \", requestUrlPostfix=\"\n-                + requestUrlPostfix + \", entityBody=\"\n-                + entityBody + \", requestPort=\" + requestPort\n-                + \", parallecHeader=\" + parallecHeader + \"]\";\n+                + requestUrlPostfix + \", entityBody=\" + entityBody\n+                + \", requestPort=\" + requestPort + \", parallecHeader=\"\n+                + parallecHeader + \", httpPollerProcessor=\"\n+                + httpPollerProcessor + \", isPollable=\" + isPollable\n+                + \", asyncHttpClient=\" + asyncHttpClient\n+                + \", responseHeaderMeta=\" + responseHeaderMeta + \"]\";\n     }\n \n     /**\n@@ -271,6 +285,15 @@ public void setHeaderMetadata(ParallecHeader parallecHeader) {\n         this.parallecHeader = parallecHeader;\n     }\n \n+    /**\n+     * Instantiates a new http meta.\n+     *\n+     * @param httpMethod the http method\n+     * @param requestUrlPostfix the request url postfix\n+     * @param entityBody the entity body\n+     * @param requestPort the request port\n+     * @param parallecHeader the parallec header\n+     */\n     public HttpMeta(HttpMethod httpMethod, String requestUrlPostfix,\n             String entityBody, String requestPort, ParallecHeader parallecHeader) {\n         super();\n@@ -281,28 +304,76 @@ public HttpMeta(HttpMethod httpMethod, String requestUrlPostfix,\n         this.parallecHeader = parallecHeader;\n     }\n \n+    /**\n+     * Gets the http poller processor.\n+     *\n+     * @return the http poller processor\n+     */\n     public HttpPollerProcessor getHttpPollerProcessor() {\n         return httpPollerProcessor;\n     }\n \n+    /**\n+     * Sets the http poller processor.\n+     *\n+     * @param httpPollerProcessor the new http poller processor\n+     */\n     public void setHttpPollerProcessor(HttpPollerProcessor httpPollerProcessor) {\n         this.httpPollerProcessor = httpPollerProcessor;\n     }\n \n+    /**\n+     * Checks if is pollable.\n+     *\n+     * @return true, if is pollable\n+     */\n     public boolean isPollable() {\n         return isPollable;\n     }\n \n+    /**\n+     * Sets the pollable.\n+     *\n+     * @param isPollable the new pollable\n+     */\n     public void setPollable(boolean isPollable) {\n         this.isPollable = isPollable;\n     }\n \n+    /**\n+     * Gets the async http client.\n+     *\n+     * @return the async http client\n+     */\n     public AsyncHttpClient getAsyncHttpClient() {\n         return asyncHttpClient;\n     }\n \n+    /**\n+     * Sets the async http client.\n+     *\n+     * @param asyncHttpClient the new async http client\n+     */\n     public void setAsyncHttpClient(AsyncHttpClient asyncHttpClient) {\n         this.asyncHttpClient = asyncHttpClient;\n     }\n \n+    /**\n+     * Gets the response header meta.\n+     *\n+     * @return the response header meta\n+     */\n+    public ResponseHeaderMeta getResponseHeaderMeta() {\n+        return responseHeaderMeta;\n+    }\n+\n+    /**\n+     * Sets the response header meta.\n+     *\n+     * @param responseHeaderMeta the new response header meta\n+     */\n+    public void setResponseHeaderMeta(ResponseHeaderMeta responseHeaderMeta) {\n+        this.responseHeaderMeta = responseHeaderMeta;\n+    }\n+\n }"
            },
            {
                "sha": "ac6158f5813fef9d95d4437e0b5cb011bfb6e3ce",
                "filename": "src/main/java/io/parallec/core/bean/ResponseHeaderMeta.java",
                "status": "added",
                "additions": 97,
                "deletions": 0,
                "changes": 97,
                "blob_url": "https://github.com/eBay/parallec/blob/331663984a13c2ec8c6095573c388deae59cb774/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2FResponseHeaderMeta.java",
                "raw_url": "https://github.com/eBay/parallec/raw/331663984a13c2ec8c6095573c388deae59cb774/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2FResponseHeaderMeta.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2FResponseHeaderMeta.java?ref=331663984a13c2ec8c6095573c388deae59cb774",
                "patch": "@@ -0,0 +1,97 @@\n+/*  \n+Copyright [2013-2015] eBay Software Foundation\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+    http://www.apache.org/licenses/LICENSE-2.0\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+ */\n+package io.parallec.core.bean;\n+\n+import java.util.List;\n+\n+\n+// TODO: Auto-generated Javadoc\n+/**\n+ * The class used to represent the metadata for getting the response headers.\n+ * Which keys are needed to get from response header.\n+ * \n+ * @author Yuanteng (Jeff) Pei\n+ */\n+/**\n+ * @author ypei\n+ *\n+ */\n+public class ResponseHeaderMeta {\n+\n+\n+    /**  If true, will get all the entries in the response headers. */\n+    private boolean getAll;\n+\n+    /** The key set for retrieving the http response headers. */\n+    private List<String> keys;\n+\n+    \n+    /**\n+     * Instantiates a new response header meta.\n+     *\n+     * @param keys the keys would like to save\n+     * @param getAll when true: will get all the key value pair, regardless of the keys list provided.\n+     */\n+    public ResponseHeaderMeta(List<String> keys, boolean getAll) {\n+        super();\n+        this.keys = keys;\n+        this.getAll = getAll;\n+    }\n+\n+\n+    /**\n+     * Checks if is gets the all.\n+     *\n+     * @return true, if is gets the all\n+     */\n+    public boolean isGetAll() {\n+        return getAll;\n+    }\n+\n+    /**\n+     * Sets the gets the all.\n+     *\n+     * @param getAll the new gets the all\n+     */\n+    public void setGetAll(boolean getAll) {\n+        this.getAll = getAll;\n+    }\n+\n+    /**\n+     * Gets the keys.\n+     *\n+     * @return the keys\n+     */\n+    public List<String> getKeys() {\n+        return keys;\n+    }\n+\n+    /**\n+     * Sets the keys.\n+     *\n+     * @param keys the new keys\n+     */\n+    public void setKeys(List<String> keys) {\n+        this.keys = keys;\n+    }\n+\n+    /* (non-Javadoc)\n+     * @see java.lang.Object#toString()\n+     */\n+    @Override\n+    public String toString() {\n+        return \"ResponseHeaderMeta [getAll=\" + getAll + \", keys=\" + keys + \"]\";\n+    }\n+\n+\n+}"
            },
            {
                "sha": "4d7f8859d8d90c67c57f3ab08e4ca687b4060c21",
                "filename": "src/main/java/io/parallec/core/bean/TaskRequest.java",
                "status": "modified",
                "additions": 78,
                "deletions": 2,
                "changes": 80,
                "blob_url": "https://github.com/eBay/parallec/blob/331663984a13c2ec8c6095573c388deae59cb774/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2FTaskRequest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/331663984a13c2ec8c6095573c388deae59cb774/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2FTaskRequest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2FTaskRequest.java?ref=331663984a13c2ec8c6095573c388deae59cb774",
                "patch": "@@ -26,6 +26,7 @@\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n+// TODO: Auto-generated Javadoc\n /**\n  * This is the request send to the operation worker. \n  * It contains the actual request that has been replaced if there are variables defined.\n@@ -38,6 +39,7 @@ public class TaskRequest {\n     @SuppressWarnings(\"unused\")\n     private static Logger logger = LoggerFactory.getLogger(TaskRequest.class);\n \n+    /** The actor max operation timeout sec. */\n     private final int actorMaxOperationTimeoutSec;\n \n     /** The resource path. */\n@@ -80,10 +82,36 @@ public class TaskRequest {\n     /** The ping meta. */\n     private final PingMeta pingMeta;\n     \n+    /** The handler. */\n     private final ParallecResponseHandler handler;\n     \n+    /** The response context. */\n     private final Map<String, Object> responseContext;\n+    \n+    /** The response header meta. */\n+    private final ResponseHeaderMeta responseHeaderMeta;\n \n+    /**\n+     * Instantiates a new task request.\n+     *\n+     * @param actorMaxOperationTimeoutSec the actor max operation timeout sec\n+     * @param protocol the protocol\n+     * @param host the host\n+     * @param hostUniform the host uniform\n+     * @param port the port\n+     * @param resourcePath the resource path\n+     * @param requestContent the request content\n+     * @param httpMethod the http method\n+     * @param pollable the pollable\n+     * @param httpHeaderMap the http header map\n+     * @param handler the handler\n+     * @param responseContext the response context\n+     * @param sshMeta the ssh meta\n+     * @param tcpMeta the tcp meta\n+     * @param udpMeta the udp meta\n+     * @param pingMeta the ping meta\n+     * @param responseHeaderMeta the response header meta\n+     */\n     public TaskRequest(\n \n             // add for config\n@@ -94,7 +122,7 @@ public TaskRequest(\n             Map<String, String> httpHeaderMap, \n             ParallecResponseHandler handler, \n             Map<String, Object> responseContext,\n-            SshMeta sshMeta, TcpMeta tcpMeta, UdpMeta udpMeta, PingMeta pingMeta\n+            SshMeta sshMeta, TcpMeta tcpMeta, UdpMeta udpMeta, PingMeta pingMeta, ResponseHeaderMeta responseHeaderMeta\n \n     ) {\n         this.actorMaxOperationTimeoutSec = actorMaxOperationTimeoutSec;\n@@ -116,6 +144,7 @@ public TaskRequest(\n         this.tcpMeta = tcpMeta;\n         this.udpMeta = udpMeta;\n         this.pingMeta = pingMeta;\n+        this.responseHeaderMeta = responseHeaderMeta;\n \n     }\n \n@@ -164,6 +193,10 @@ public boolean isPollable() {\n         return pollable;\n     }\n \n+\n+    /* (non-Javadoc)\n+     * @see java.lang.Object#toString()\n+     */\n     @Override\n     public String toString() {\n         return \"TaskRequest [actorMaxOperationTimeoutSec=\"\n@@ -172,7 +205,11 @@ public String toString() {\n                 + \", httpMethod=\" + httpMethod + \", pollable=\" + pollable\n                 + \", httpHeaderMap=\" + httpHeaderMap + \", protocol=\" + protocol\n                 + \", host=\" + host + \", hostUniform=\" + hostUniform + \", port=\"\n-                + port + \", sshMeta=\" + sshMeta + \"]\";\n+                + port + \", sshMeta=\" + sshMeta + \", tcpMeta=\" + tcpMeta\n+                + \", udpMeta=\" + udpMeta + \", pingMeta=\" + pingMeta\n+                + \", handler=\" + handler + \", responseContext=\"\n+                + responseContext + \", responseHeaderMeta=\"\n+                + responseHeaderMeta + \"]\";\n     }\n \n     /**\n@@ -229,28 +266,67 @@ public SshMeta getSshMeta() {\n         return sshMeta;\n     }\n \n+    /**\n+     * Gets the actor max operation timeout sec.\n+     *\n+     * @return the actor max operation timeout sec\n+     */\n     public int getActorMaxOperationTimeoutSec() {\n         return actorMaxOperationTimeoutSec;\n     }\n \n+    /**\n+     * Gets the tcp meta.\n+     *\n+     * @return the tcp meta\n+     */\n     public TcpMeta getTcpMeta() {\n         return tcpMeta;\n     }\n \n+    /**\n+     * Gets the ping meta.\n+     *\n+     * @return the ping meta\n+     */\n     public PingMeta getPingMeta() {\n         return pingMeta;\n     }\n \n+    /**\n+     * Gets the handler.\n+     *\n+     * @return the handler\n+     */\n     public ParallecResponseHandler getHandler() {\n         return handler;\n     }\n \n+    /**\n+     * Gets the response context.\n+     *\n+     * @return the response context\n+     */\n     public Map<String, Object> getResponseContext() {\n         return responseContext;\n     }\n \n+    /**\n+     * Gets the udp meta.\n+     *\n+     * @return the udp meta\n+     */\n     public UdpMeta getUdpMeta() {\n         return udpMeta;\n     }\n \n+    /**\n+     * Gets the response header meta.\n+     *\n+     * @return the response header meta\n+     */\n+    public ResponseHeaderMeta getResponseHeaderMeta() {\n+        return responseHeaderMeta;\n+    }\n+\n }"
            },
            {
                "sha": "34917daa3511986d49b061537f1892b7e8152f60",
                "filename": "src/main/java/io/parallec/core/util/PcTargetHostsUtils.java",
                "status": "modified",
                "additions": 0,
                "deletions": 17,
                "changes": 17,
                "blob_url": "https://github.com/eBay/parallec/blob/331663984a13c2ec8c6095573c388deae59cb774/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Futil%2FPcTargetHostsUtils.java",
                "raw_url": "https://github.com/eBay/parallec/raw/331663984a13c2ec8c6095573c388deae59cb774/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Futil%2FPcTargetHostsUtils.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Futil%2FPcTargetHostsUtils.java?ref=331663984a13c2ec8c6095573c388deae59cb774",
                "patch": "@@ -32,23 +32,6 @@ public class PcTargetHostsUtils {\n     private static Logger logger = LoggerFactory\n             .getLogger(PcTargetHostsUtils.class);\n \n-    /**\n-     * Must have maximum limit.\n-     *\n-     * @param args\n-     *            the arguments\n-     */\n-\n-    public static void main(String[] args) {\n-\n-        // System.out.println(getAgentVersionWisb());\n-        // models.utils.LogUtilslogger.info(getAgentVersionWisb());\n-        // getEvpsUrl();\n-        // models.utils.LogUtilslogger.info(testGetGenericVersionWisb());\n-\n-        // testChunkStrStrMap();\n-    }\n-\n     /**\n      * Gets the node list from string line seperate or space seperate.\n      *"
            },
            {
                "sha": "762ea97e68785fb3b569627c31063019514b7049",
                "filename": "src/test/java/io/parallec/core/actor/OperationWorkerTest.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/331663984a13c2ec8c6095573c388deae59cb774/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FOperationWorkerTest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/331663984a13c2ec8c6095573c388deae59cb774/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FOperationWorkerTest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FOperationWorkerTest.java?ref=331663984a13c2ec8c6095573c388deae59cb774",
                "patch": "@@ -53,7 +53,7 @@ public void testOperationWorkerWrongMsgType() {\n                                     HttpMethod.GET, false, null, \n                                     null,\n                                     new HashMap<String, Object>(),\n-                                    null,null, null,null), HttpClientStore\n+                                    null,null, null,null,null), HttpClientStore\n                                     .getInstance().getEmbedClientFast(), null\n \n                     ));"
            },
            {
                "sha": "7ab53af6058fbf9e624083fc5a0de6e3122b53ba",
                "filename": "src/test/java/io/parallec/core/main/http/ParallelClientHttpResponseHeaderTest.java",
                "status": "added",
                "additions": 155,
                "deletions": 0,
                "changes": 155,
                "blob_url": "https://github.com/eBay/parallec/blob/331663984a13c2ec8c6095573c388deae59cb774/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2FParallelClientHttpResponseHeaderTest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/331663984a13c2ec8c6095573c388deae59cb774/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2FParallelClientHttpResponseHeaderTest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2FParallelClientHttpResponseHeaderTest.java?ref=331663984a13c2ec8c6095573c388deae59cb774",
                "patch": "@@ -0,0 +1,155 @@\n+/*  \n+Copyright [2013-2015] eBay Software Foundation\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+    http://www.apache.org/licenses/LICENSE-2.0\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+ */\n+package io.parallec.core.main.http;\n+\n+import io.parallec.core.ParallecResponseHandler;\n+import io.parallec.core.ParallelClient;\n+import io.parallec.core.ResponseOnSingleTask;\n+import io.parallec.core.TestBase;\n+import io.parallec.core.bean.ResponseHeaderMeta;\n+\n+import java.util.Arrays;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Map.Entry;\n+\n+import org.apache.http.util.Asserts;\n+import org.junit.AfterClass;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+\n+/**\n+ * Testing the response header\n+ * \n+ */\n+public class ParallelClientHttpResponseHeaderTest extends TestBase {\n+\n+    /** The pc. */\n+    private static ParallelClient pc;\n+\n+    /**\n+     * Sets the up.\n+     *\n+     * @throws Exception\n+     *             the exception\n+     */\n+    @BeforeClass\n+    public static void setUp() throws Exception {\n+        pc = new ParallelClient();\n+    }\n+\n+    /**\n+     * Shutdown.\n+     *\n+     * @throws Exception\n+     *             the exception\n+     */\n+    @AfterClass\n+    public static void shutdown() throws Exception {\n+        pc.releaseExternalResources();\n+    }\n+\n+    /**\n+     * Hit websites and get all headers\n+     */\n+    @Test\n+    public void hitWebsitesMinSyncWithResponseHeadersAll() {\n+\n+        Map<String, Object> responseContext = new HashMap<String, Object>();\n+        pc.prepareHttpGet(\"/validateInternals.html\")\n+                .setConcurrency(1700)\n+                .handleInWorker()\n+                .saveResponseHeaders(new ResponseHeaderMeta(null, true))\n+                .setTargetHostsFromString(\n+                        \"www.parallec.io www.jeffpei.com www.restcommander.com\")\n+                .execute(new ParallecResponseHandler() {\n+\n+                    @Override\n+                    public void onCompleted(ResponseOnSingleTask res,\n+                            Map<String, Object> responseContext) {\n+\n+                        Map<String, List<String>> responseHeaders = res\n+                                .getResponseHeaders();\n+                        for (Entry<String, List<String>> entry : responseHeaders\n+                                .entrySet()) {\n+                            logger.info(\n+                                    \"response header (lowed case key): {} - {}\",\n+                                    entry.getKey(), entry.getValue());\n+                        }\n+                        responseContext.put(res.getHost(),\n+                                responseHeaders.size());\n+                        logger.debug(res.toString());\n+\n+                    }\n+                });\n+\n+        for (Object o : responseContext.values()) {\n+            int headerKeySize = Integer.parseInt((String) o);\n+            Asserts.check(headerKeySize > 0, \" Fail to extract http header\");\n+        }\n+        // logger.info(\"Task Pretty Print: \\n{}\", task.prettyPrintInfo());\n+    }\n+\n+    /**\n+     * Hit websites min sync and get response headers with certain list of keys.\n+     * \n+     * the x-github-request-id key is not present in amazone S3 responses. So\n+     * the response header size should be [3,2,2]\n+     * \n+     * note that the key set provided in ResponseHeaderMeta in request can be case insensitive. However in the\n+     * response headers map returned in the ResponseOnSingleTask, all keys have been lower case for easy access.\n+     * \n+     */\n+    @Test\n+    public void hitWebsitesMinSyncWithResponseHeadersSubset() {\n+\n+        Map<String, Object> responseContext = new HashMap<String, Object>();\n+        pc.prepareHttpGet(\"/validateInternals.html\")\n+                .setConcurrency(1700)\n+                .handleInWorker()\n+                .saveResponseHeaders(\n+                        new ResponseHeaderMeta(Arrays.asList(\"Content-Type\",\n+                                \"server\", \"x-github-request-id\"), false))\n+                .setTargetHostsFromString(\n+                        \"www.parallec.io www.jeffpei.com www.restcommander.com\")\n+                .execute(new ParallecResponseHandler() {\n+\n+                    @Override\n+                    public void onCompleted(ResponseOnSingleTask res,\n+                            Map<String, Object> responseContext) {\n+\n+                        Map<String, List<String>> responseHeaders = res\n+                                .getResponseHeaders();\n+                        for (Entry<String, List<String>> entry : responseHeaders\n+                                .entrySet()) {\n+                            logger.info(\n+                                    \"response header (lowed case key): {} - {}\",\n+                                    entry.getKey(), entry.getValue());\n+                        }\n+                        responseContext.put(res.getHost(),\n+                                responseHeaders.size());\n+                        logger.debug(res.toString());\n+\n+                    }\n+                });\n+\n+        for (Object o : responseContext.values()) {\n+            int headerKeySize = Integer.parseInt((String) o);\n+            Asserts.check(headerKeySize >= 2 && headerKeySize <= 3,\n+                    \" Fail to extract http header subset\");\n+        }\n+        // logger.info(\"Task Pretty Print: \\n{}\", task.prettyPrintInfo());\n+    }\n+\n+}"
            },
            {
                "sha": "c7a285c75912288564d49ebe349682d07f7106d5",
                "filename": "src/test/java/io/parallec/core/pojo/ParallecPojoClassTest.java",
                "status": "modified",
                "additions": 2,
                "deletions": 1,
                "changes": 3,
                "blob_url": "https://github.com/eBay/parallec/blob/331663984a13c2ec8c6095573c388deae59cb774/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fpojo%2FParallecPojoClassTest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/331663984a13c2ec8c6095573c388deae59cb774/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fpojo%2FParallecPojoClassTest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fpojo%2FParallecPojoClassTest.java?ref=331663984a13c2ec8c6095573c388deae59cb774",
                "patch": "@@ -28,6 +28,7 @@\n import io.parallec.core.actor.poll.HttpPollerProcessor;\n import io.parallec.core.actor.poll.PollerData;\n import io.parallec.core.bean.HttpMeta;\n+import io.parallec.core.bean.ResponseHeaderMeta;\n import io.parallec.core.bean.SetAndCount;\n import io.parallec.core.bean.StrStrMap;\n import io.parallec.core.bean.TargetHostMeta;\n@@ -160,7 +161,7 @@ public List<Class<?>> getPOJOClasses() throws ClassNotFoundException {\n         pojoClasses.add(TcpUdpRequestCreateException.class);\n         pojoClasses.add(TcpUdpSshPingResourceStore.class);\n         \n-        \n+        pojoClasses.add(ResponseHeaderMeta.class);\n         \n         pojoClasses.add(HttpClientStore.class);\n         "
            },
            {
                "sha": "f2d72dcd218990f72947a3dd1ae3eb58022791fe",
                "filename": "src/test/java/io/parallec/core/pojo/ParallecPojoStrTest.java",
                "status": "modified",
                "additions": 9,
                "deletions": 3,
                "changes": 12,
                "blob_url": "https://github.com/eBay/parallec/blob/331663984a13c2ec8c6095573c388deae59cb774/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fpojo%2FParallecPojoStrTest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/331663984a13c2ec8c6095573c388deae59cb774/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fpojo%2FParallecPojoStrTest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fpojo%2FParallecPojoStrTest.java?ref=331663984a13c2ec8c6095573c388deae59cb774",
                "patch": "@@ -10,6 +10,7 @@\n import io.parallec.core.bean.StrStrMap;\n import io.parallec.core.bean.tcp.TcpMeta;\n import io.parallec.core.bean.udp.UdpMeta;\n+import io.parallec.core.exception.HttpRequestCreateException;\n import io.parallec.core.exception.ParallelTaskInvalidException;\n import io.parallec.core.resources.HttpMethod;\n import io.parallec.core.resources.TcpUdpSshPingResourceStore;\n@@ -111,8 +112,6 @@ public void testMetaValidationToString() {\n         }\n         \n         udpMeta3.validation();\n-        \n-        \n     }\n \n     @Test\n@@ -135,8 +134,15 @@ public void testStaticFuncAndUtilsClass() {\n         ssm.addPair(null, \"\");\n         ssm.addPair(\"\", null);\n         ssm.addPair(\"k\", \"v\");\n+        new HttpRequestCreateException(\"\", new RuntimeException());\n+        new ParallelTaskInvalidException(\"\", new RuntimeException());\n+        \n+        boolean removeDuplicate = false;\n+        PcTargetHostsUtils\n+                .getNodeListFromStringLineSeperateOrSpaceSeperate(\n+                        \"a b\", removeDuplicate);\n         \n-       \n+        PcStringUtils.printStackTrace(null);\n     }\n \n }"
            }
        ]
    },
    {
        "sha": "1f99d8a373cc08e099036b1567d2b5833c056fea",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6MWY5OWQ4YTM3M2NjMDhlMDk5MDM2YjE1NjdkMmI1ODMzYzA1NmZlYQ==",
        "commit": {
            "author": {
                "name": "Yuanteng (Jeff) Pei",
                "email": "ypei@ebay.com",
                "date": "2016-09-23T21:22:58Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2016-09-23T21:22:58Z"
            },
            "message": "update readme on passing hashmap  [skip ci]\n\npass hashmap to response context",
            "tree": {
                "sha": "84166496aa8f062812fd38051527f520765a6739",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/84166496aa8f062812fd38051527f520765a6739"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/1f99d8a373cc08e099036b1567d2b5833c056fea",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/1f99d8a373cc08e099036b1567d2b5833c056fea",
        "html_url": "https://github.com/eBay/parallec/commit/1f99d8a373cc08e099036b1567d2b5833c056fea",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/1f99d8a373cc08e099036b1567d2b5833c056fea/comments",
        "author": null,
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "fb15f2a3eac0c40f881d0521139dd32bdc922d9a",
                "url": "https://api.github.com/repos/eBay/parallec/commits/fb15f2a3eac0c40f881d0521139dd32bdc922d9a",
                "html_url": "https://github.com/eBay/parallec/commit/fb15f2a3eac0c40f881d0521139dd32bdc922d9a"
            }
        ],
        "stats": {
            "total": 2,
            "additions": 1,
            "deletions": 1
        },
        "files": [
            {
                "sha": "b49df6ca3ac30f5f27d6b93932fa20b8571ea0f3",
                "filename": "README.md",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/1f99d8a373cc08e099036b1567d2b5833c056fea/README.md",
                "raw_url": "https://github.com/eBay/parallec/raw/1f99d8a373cc08e099036b1567d2b5833c056fea/README.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/README.md?ref=1f99d8a373cc08e099036b1567d2b5833c056fea",
                "patch": "@@ -63,7 +63,7 @@ pc.prepareHttpGet(\"\").setTargetHostsFromString(\"www.google.com www.ebay.com www.\n ```\t\n **20 Line Example**\n \n-Now that you have learned the basics, check out how easy to pass an elastic search client using the convenient **response context** to aggregate data anywhere you like.\n+Now that you have learned the basics, check out how easy to pass an elastic search client using the convenient **response context** to aggregate data anywhere you like. You can also pass a hash map to the `responseContext`, save the processed results to the map during `onCompleted`, and use the map outside for further work. \n \n ```java\n ParallelClient pc = new ParallelClient();"
            }
        ]
    },
    {
        "sha": "fb15f2a3eac0c40f881d0521139dd32bdc922d9a",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6ZmIxNWYyYTNlYWMwYzQwZjg4MWQwNTIxMTM5ZGQzMmJkYzkyMmQ5YQ==",
        "commit": {
            "author": {
                "name": "Yuanteng (Jeff) Pei",
                "email": "ypei@ebay.com",
                "date": "2016-09-23T20:50:04Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2016-09-23T20:50:04Z"
            },
            "message": "update readme - aggregated error msg 1 [skip ci]",
            "tree": {
                "sha": "0c881567d31e07ab158e9cc71ad98ef16e91c3ef",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/0c881567d31e07ab158e9cc71ad98ef16e91c3ef"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/fb15f2a3eac0c40f881d0521139dd32bdc922d9a",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/fb15f2a3eac0c40f881d0521139dd32bdc922d9a",
        "html_url": "https://github.com/eBay/parallec/commit/fb15f2a3eac0c40f881d0521139dd32bdc922d9a",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/fb15f2a3eac0c40f881d0521139dd32bdc922d9a/comments",
        "author": null,
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "cf87e8b51445b2517334b72c657bc4ff581b1862",
                "url": "https://api.github.com/repos/eBay/parallec/commits/cf87e8b51445b2517334b72c657bc4ff581b1862",
                "html_url": "https://github.com/eBay/parallec/commit/cf87e8b51445b2517334b72c657bc4ff581b1862"
            }
        ],
        "stats": {
            "total": 2,
            "additions": 1,
            "deletions": 1
        },
        "files": [
            {
                "sha": "6cd4be5a2bc720ec1087c6bc835ab1dd8c289472",
                "filename": "README.md",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/fb15f2a3eac0c40f881d0521139dd32bdc922d9a/README.md",
                "raw_url": "https://github.com/eBay/parallec/raw/fb15f2a3eac0c40f881d0521139dd32bdc922d9a/README.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/README.md?ref=fb15f2a3eac0c40f881d0521139dd32bdc922d9a",
                "patch": "@@ -19,7 +19,7 @@ Parallec is a fast parallel async HTTP(S)/SSH/TCP/UDP/Ping client java library b\n \n **[Watch Demo](https://github.com/eBay/parallec/wiki/Parallec-Aggregates-HTTP-Responses-from-8000-Servers)**: **8,000** web server HTTP response aggregation to memory in **12** seconds / to ElasticSearch in **16** seconds.\n \n-**Aggregated error messages - Debug friendly with full visibility**: Having trouble debugging in concurrent environment? Not any more! All exceptions, timeout, stack traces, request sent and response received time are **captured and aggregated** in the [response](http://www.parallec.io/javadoc/index.html?io/parallec/core/ResponseOnSingleTask.html) map. It is available in [ParallelTask](http://www.parallec.io/javadoc/index.html?io/parallec/core/ParallelTask.html) for polling right after you execute a task asynchronously.  Multi-level (worker/manager) timeout guarantee tasks return even for 100,000s requests.  \n+**Aggregated error messages - Debug friendly with full visibility**: Having trouble debugging in concurrent environment? Not any more! All exceptions, timeout, stack traces, request sent and response received time are **captured and aggregated** in the [response](http://www.parallec.io/javadoc/index.html?io/parallec/core/ResponseOnSingleTask.html) map. It is available in [ParallelTask](http://www.parallec.io/javadoc/index.html?io/parallec/core/ParallelTask.html) for polling right after you execute a task asynchronously.  Multi-level (worker/manager) timeout guarantees tasks return even for 100,000s of requests.  \n \n ![Workflow Overview](http://www.parallec.io/images/parallec-flow.svg)\n "
            }
        ]
    },
    {
        "sha": "cf87e8b51445b2517334b72c657bc4ff581b1862",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6Y2Y4N2U4YjUxNDQ1YjI1MTczMzRiNzJjNjU3YmM0ZmY1ODFiMTg2Mg==",
        "commit": {
            "author": {
                "name": "Yuanteng (Jeff) Pei",
                "email": "ypei@ebay.com",
                "date": "2016-09-23T20:47:40Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2016-09-23T20:47:40Z"
            },
            "message": "update readme - aggregated error msg [skip ci]",
            "tree": {
                "sha": "8decbb6137b0c89b906c96a8f7f3143798f12e60",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/8decbb6137b0c89b906c96a8f7f3143798f12e60"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/cf87e8b51445b2517334b72c657bc4ff581b1862",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/cf87e8b51445b2517334b72c657bc4ff581b1862",
        "html_url": "https://github.com/eBay/parallec/commit/cf87e8b51445b2517334b72c657bc4ff581b1862",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/cf87e8b51445b2517334b72c657bc4ff581b1862/comments",
        "author": null,
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "9ddd51edd5d410d471c93a15413466fda82dec21",
                "url": "https://api.github.com/repos/eBay/parallec/commits/9ddd51edd5d410d471c93a15413466fda82dec21",
                "html_url": "https://github.com/eBay/parallec/commit/9ddd51edd5d410d471c93a15413466fda82dec21"
            }
        ],
        "stats": {
            "total": 2,
            "additions": 2,
            "deletions": 0
        },
        "files": [
            {
                "sha": "53d8d72de9d13075850e47e9a94822248882c29c",
                "filename": "README.md",
                "status": "modified",
                "additions": 2,
                "deletions": 0,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/cf87e8b51445b2517334b72c657bc4ff581b1862/README.md",
                "raw_url": "https://github.com/eBay/parallec/raw/cf87e8b51445b2517334b72c657bc4ff581b1862/README.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/README.md?ref=cf87e8b51445b2517334b72c657bc4ff581b1862",
                "patch": "@@ -19,6 +19,8 @@ Parallec is a fast parallel async HTTP(S)/SSH/TCP/UDP/Ping client java library b\n \n **[Watch Demo](https://github.com/eBay/parallec/wiki/Parallec-Aggregates-HTTP-Responses-from-8000-Servers)**: **8,000** web server HTTP response aggregation to memory in **12** seconds / to ElasticSearch in **16** seconds.\n \n+**Aggregated error messages - Debug friendly with full visibility**: Having trouble debugging in concurrent environment? Not any more! All exceptions, timeout, stack traces, request sent and response received time are **captured and aggregated** in the [response](http://www.parallec.io/javadoc/index.html?io/parallec/core/ResponseOnSingleTask.html) map. It is available in [ParallelTask](http://www.parallec.io/javadoc/index.html?io/parallec/core/ParallelTask.html) for polling right after you execute a task asynchronously.  Multi-level (worker/manager) timeout guarantee tasks return even for 100,000s requests.  \n+\n ![Workflow Overview](http://www.parallec.io/images/parallec-flow.svg)\n \n "
            }
        ]
    },
    {
        "sha": "9ddd51edd5d410d471c93a15413466fda82dec21",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6OWRkZDUxZWRkNWQ0MTBkNDcxYzkzYTE1NDEzNDY2ZmRhODJkZWMyMQ==",
        "commit": {
            "author": {
                "name": "Yuanteng (Jeff) Pei",
                "email": "ypei@ebay.com",
                "date": "2016-09-23T00:56:43Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2016-09-23T00:56:43Z"
            },
            "message": "update readme on thread pool comparison [skip ci]",
            "tree": {
                "sha": "3d0558b33223da8d9fc3e0591c10bf5e054fa63d",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/3d0558b33223da8d9fc3e0591c10bf5e054fa63d"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/9ddd51edd5d410d471c93a15413466fda82dec21",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/9ddd51edd5d410d471c93a15413466fda82dec21",
        "html_url": "https://github.com/eBay/parallec/commit/9ddd51edd5d410d471c93a15413466fda82dec21",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/9ddd51edd5d410d471c93a15413466fda82dec21/comments",
        "author": null,
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "76eac4154dc3d15dc314ecc1a644c4c7f5f6afc8",
                "url": "https://api.github.com/repos/eBay/parallec/commits/76eac4154dc3d15dc314ecc1a644c4c7f5f6afc8",
                "html_url": "https://github.com/eBay/parallec/commit/76eac4154dc3d15dc314ecc1a644c4c7f5f6afc8"
            }
        ],
        "stats": {
            "total": 2,
            "additions": 1,
            "deletions": 1
        },
        "files": [
            {
                "sha": "22d0b8453976d6cfc357ef36f2f2fff8cfeb0e4d",
                "filename": "README.md",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/9ddd51edd5d410d471c93a15413466fda82dec21/README.md",
                "raw_url": "https://github.com/eBay/parallec/raw/9ddd51edd5d410d471c93a15413466fda82dec21/README.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/README.md?ref=9ddd51edd5d410d471c93a15413466fda82dec21",
                "patch": "@@ -191,7 +191,7 @@ As usual, don't rely on these numbers and perform your own benchmarks.\n \n ## Compare Parallec vs REST Commander vs ThreadPools+Async Client<a name=\"compare\"></a>\n \n-- Compared with java thread pool based solution, parallec gives you worry free concurrency control without constraints on thread size. \n+- Compared with java thread pool based solution, parallec gives you worry free concurrency control without constraints on thread size. Thread pools do not fit well when need to have a concurrency of 1000 (1000 threads..)  or need a different concurrency setting for each request.\n - Compared with single-threaded Node.js solutions, Parallec enables parallel computation-intensive response handling with multiple-cores. \n - Similar issues with Python's global interpreter lock, and to use multiple CPU you will need to use costly multi-process. These are more suited for I/O only but no cpu intensive response processing.  \n "
            }
        ]
    },
    {
        "sha": "76eac4154dc3d15dc314ecc1a644c4c7f5f6afc8",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6NzZlYWM0MTU0ZGMzZDE1ZGMzMTRlY2MxYTY0NGM0YzdmNWY2YWZjOA==",
        "commit": {
            "author": {
                "name": "Yuanteng (Jeff) Pei",
                "email": "ypei@ebay.com",
                "date": "2016-09-12T22:45:19Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2016-09-12T22:45:19Z"
            },
            "message": "[SKIP CI] readme update on concurrency control",
            "tree": {
                "sha": "fc9b77c17d5c83ba4df8f3f7761a54b2eb6b1f70",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/fc9b77c17d5c83ba4df8f3f7761a54b2eb6b1f70"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/76eac4154dc3d15dc314ecc1a644c4c7f5f6afc8",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/76eac4154dc3d15dc314ecc1a644c4c7f5f6afc8",
        "html_url": "https://github.com/eBay/parallec/commit/76eac4154dc3d15dc314ecc1a644c4c7f5f6afc8",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/76eac4154dc3d15dc314ecc1a644c4c7f5f6afc8/comments",
        "author": null,
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "700f604af4043a2c661ee33e1809b19a04ceee8b",
                "url": "https://api.github.com/repos/eBay/parallec/commits/700f604af4043a2c661ee33e1809b19a04ceee8b",
                "html_url": "https://github.com/eBay/parallec/commit/700f604af4043a2c661ee33e1809b19a04ceee8b"
            }
        ],
        "stats": {
            "total": 2,
            "additions": 1,
            "deletions": 1
        },
        "files": [
            {
                "sha": "6fbe4da62ec6b4afb3b93b5b92a23d93e18b6c68",
                "filename": "README.md",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/76eac4154dc3d15dc314ecc1a644c4c7f5f6afc8/README.md",
                "raw_url": "https://github.com/eBay/parallec/raw/76eac4154dc3d15dc314ecc1a644c4c7f5f6afc8/README.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/README.md?ref=76eac4154dc3d15dc314ecc1a644c4c7f5f6afc8",
                "patch": "@@ -15,7 +15,7 @@\n \n [Tweeted](https://twitter.com/jboner/status/663618652063813632) by the Creator of Akka & Featured in [ [This Week in #Scala](http://www.cakesolutions.net/teamblogs/this-week-in-scala-16/11/2015) | [OSChina](http://www.oschina.net/p/parallec) - [2015 Top 100](http://www.oschina.net/news/69808/2015-annual-ranking-top-100-new-open-source-software) ]\n \n-Parallec is a fast parallel async HTTP(S)/SSH/TCP/UDP/Ping client java library based on [Akka](http://akka.io). Scalably aggregate and handle API responses **anyway** and send it **anywhere** by writing [20 lines](https://www.youtube.com/watch?v=QcavegPMDms) of code. A special super convenient **response context** let you pass in/out any object when handling the responses. Now you can conduct scalable API calls, then effortlessly pass aggregated data anywhere to elastic search, kafka, MongoDB, graphite, memcached, etc. Parallec means  **Paralle**l **C**lient, and is pronounced as \"Para-like\". Visit [www.parallec.io](http://www.parallec.io)\n+Parallec is a fast parallel async HTTP(S)/SSH/TCP/UDP/Ping client java library based on [Akka](http://akka.io). Scalably aggregate and handle API responses **anyway** and send it **anywhere** by writing [20 lines](https://www.youtube.com/watch?v=QcavegPMDms) of code. A super convenient **response context** let you pass in/out any object when handling the responses. Now you can conduct scalable API calls, then effortlessly pass aggregated data anywhere to elastic search, kafka, MongoDB, graphite, memcached, etc. Flexible task level concurrency control without creating a 1,000 threads thread pool. Parallec means  **Paralle**l **C**lient (pronounced as \"Para-like\"). Visit [www.parallec.io](http://www.parallec.io)\n \n **[Watch Demo](https://github.com/eBay/parallec/wiki/Parallec-Aggregates-HTTP-Responses-from-8000-Servers)**: **8,000** web server HTTP response aggregation to memory in **12** seconds / to ElasticSearch in **16** seconds.\n "
            }
        ]
    },
    {
        "sha": "700f604af4043a2c661ee33e1809b19a04ceee8b",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6NzAwZjYwNGFmNDA0M2EyYzY2MWVlMzNlMTgwOWIxOWEwNGNlZWU4Yg==",
        "commit": {
            "author": {
                "name": "Yuanteng (Jeff) Pei",
                "email": "ypei@ebay.com",
                "date": "2016-08-26T05:51:03Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2016-08-26T05:51:03Z"
            },
            "message": "update readme cn [skip ci]",
            "tree": {
                "sha": "f59866ebc78ee206c7f51f1416cab67842c5c534",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/f59866ebc78ee206c7f51f1416cab67842c5c534"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/700f604af4043a2c661ee33e1809b19a04ceee8b",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/700f604af4043a2c661ee33e1809b19a04ceee8b",
        "html_url": "https://github.com/eBay/parallec/commit/700f604af4043a2c661ee33e1809b19a04ceee8b",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/700f604af4043a2c661ee33e1809b19a04ceee8b/comments",
        "author": null,
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "4572f18e4791ae911c2a9fb07c8554a8a237e0de",
                "url": "https://api.github.com/repos/eBay/parallec/commits/4572f18e4791ae911c2a9fb07c8554a8a237e0de",
                "html_url": "https://github.com/eBay/parallec/commit/4572f18e4791ae911c2a9fb07c8554a8a237e0de"
            }
        ],
        "stats": {
            "total": 4,
            "additions": 2,
            "deletions": 2
        },
        "files": [
            {
                "sha": "4208f5fe8279293b1b8fe275974543e43d4201f6",
                "filename": "README-brief-cn.md",
                "status": "modified",
                "additions": 2,
                "deletions": 2,
                "changes": 4,
                "blob_url": "https://github.com/eBay/parallec/blob/700f604af4043a2c661ee33e1809b19a04ceee8b/README-brief-cn.md",
                "raw_url": "https://github.com/eBay/parallec/raw/700f604af4043a2c661ee33e1809b19a04ceee8b/README-brief-cn.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/README-brief-cn.md?ref=700f604af4043a2c661ee33e1809b19a04ceee8b",
                "patch": "@@ -3,11 +3,11 @@\n \n ##Parallec 中文介绍\n \n-[Parallec](http://www.parallec.io/) 是一个基于[Akka](http://akka.io)的快速并行异步HTTP(S)/SSH/TCP/Ping 客户端的Java库。它是eBay云计算部门开发并在[REST Commander](http://www.restcommander.com/)基础上开源的。Parallec的寓意是**\"并行客户端\"**： **Paralle**l **C**lient, 发音如 \"Para-like\". 更多说明请见[这里](http://www.parallec.io/)。\n+[Parallec](http://www.parallec.io/) 是一个基于[Akka](http://akka.io)的快速并行异步HTTP(S)/SSH/TCP/UDP/Ping 客户端的Java库。它是eBay云计算部门开发并在[REST Commander](http://www.restcommander.com/)基础上开源的。Parallec的寓意是**\"并行客户端\"**： **Paralle**l **C**lient, 发音如 \"Para-like\". 更多说明请见[这里](http://www.parallec.io/)。\n \n 主要用途： \n \n-- 管理监控大量HTTP/TCP服务器，ping海量服务器\n+- 管理监控大量HTTP/TCP/UDP服务器，ping海量服务器\n - 集群机器状态、配置探索，基于HTTP(S)/TCP/UDP Agent 或者 无agent 的大量远程任务执行，软件部署, 网络监控. HTTP支持SSL 客户端认证\n - 海量API聚集到任意数据存储，数据流入口\n - 并行工作流，自动检测任务进度，以便支持并行处理异步API"
            }
        ]
    },
    {
        "sha": "4572f18e4791ae911c2a9fb07c8554a8a237e0de",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6NDU3MmYxOGU0NzkxYWU5MTFjMmE5ZmIwN2M4NTU0YThhMjM3ZTBkZQ==",
        "commit": {
            "author": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2016-08-19T17:00:18Z"
            },
            "committer": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2016-08-19T17:00:18Z"
            },
            "message": "update readme [skip ci]",
            "tree": {
                "sha": "95c81cfd08255466fb8682d41eea693e6b96ef2d",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/95c81cfd08255466fb8682d41eea693e6b96ef2d"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/4572f18e4791ae911c2a9fb07c8554a8a237e0de",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/4572f18e4791ae911c2a9fb07c8554a8a237e0de",
        "html_url": "https://github.com/eBay/parallec/commit/4572f18e4791ae911c2a9fb07c8554a8a237e0de",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/4572f18e4791ae911c2a9fb07c8554a8a237e0de/comments",
        "author": null,
        "committer": null,
        "parents": [
            {
                "sha": "5a81b8f54dfe4f9849dbecb6fcc9f196b01ba8cd",
                "url": "https://api.github.com/repos/eBay/parallec/commits/5a81b8f54dfe4f9849dbecb6fcc9f196b01ba8cd",
                "html_url": "https://github.com/eBay/parallec/commit/5a81b8f54dfe4f9849dbecb6fcc9f196b01ba8cd"
            }
        ],
        "stats": {
            "total": 13,
            "additions": 12,
            "deletions": 1
        },
        "files": [
            {
                "sha": "4854c10edefb9a6ade533e0bf2fe6ee7dc6d9f0e",
                "filename": "README.md",
                "status": "modified",
                "additions": 12,
                "deletions": 1,
                "changes": 13,
                "blob_url": "https://github.com/eBay/parallec/blob/4572f18e4791ae911c2a9fb07c8554a8a237e0de/README.md",
                "raw_url": "https://github.com/eBay/parallec/raw/4572f18e4791ae911c2a9fb07c8554a8a237e0de/README.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/README.md?ref=4572f18e4791ae911c2a9fb07c8554a8a237e0de",
                "patch": "@@ -21,6 +21,8 @@ Parallec is a fast parallel async HTTP(S)/SSH/TCP/UDP/Ping client java library b\n \n ![Workflow Overview](http://www.parallec.io/images/parallec-flow.svg)\n \n+\n+\n ### Get Started\n Donwload [the latest JAR](https://search.maven.org/remote_content?g=io.parallec&a=parallec-core&v=LATEST) or grab from Maven:\n \n@@ -97,9 +99,18 @@ pc.prepareHttpGet(\"/userdata/sample_weather_$ZIP.txt\")\n - [http://www.parallec.io/userdata/sample_weather_48824.txt](http://www.parallec.io/userdata/sample_weather_48824.txt)\n - [http://www.parallec.io/userdata/sample_weather_95037.txt](http://www.parallec.io/userdata/sample_weather_95037.txt)\n \n+\n+###What's New\n+\n+* 08/2016 Support Parallel async UDP (via Netty).\n+* 07/2016 Support replacing different ports in different requests. \n+* 06/2016 Parallel SSH add run sudo with password for commands.\n+\n+More details please check the [Change Log](https://github.com/eBay/parallec/blob/master/CHANGELOG.md).\n+\n ###More Readings\n \n-- [**More Examples**](https://github.com/ebay/parallec-samples#http) on setting context, send to Elastic Search / Kafka, async running, auto progress polling, track progress, TCP/SSH/Ping.  UDP example are . \n+- [**More Examples**](https://github.com/ebay/parallec-samples#http) on setting context, send to Elastic Search / Kafka, async running, auto progress polling, track progress, TCP/SSH/Ping.  UDP example is [here](https://github.com/eBay/parallec/blob/master/src/test/java/io/parallec/core/main/udp/ParallelClientUdpBasicTest.java), with more to come. \n - [**Set Target Hosts**](http://www.parallec.io/docs/submit-task/#set-target-hosts) from list, string, line by line text, json path, from local or remote URLs.\n - [**Full Documentation**](http://www.parallec.io/docs/)\n - [**Javadoc**](http://www.parallec.io/javadoc/index.html?io/parallec/core/package-summary.html)"
            }
        ]
    },
    {
        "sha": "5a81b8f54dfe4f9849dbecb6fcc9f196b01ba8cd",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6NWE4MWI4ZjU0ZGZlNGY5ODQ5ZGJlY2I2ZmNjOWYxOTZiMDFiYThjZA==",
        "commit": {
            "author": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2016-08-19T00:37:26Z"
            },
            "committer": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2016-08-19T00:37:26Z"
            },
            "message": "update readme [skip ci]",
            "tree": {
                "sha": "38314cc29688835758c3a8a3548258326ce87fc9",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/38314cc29688835758c3a8a3548258326ce87fc9"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/5a81b8f54dfe4f9849dbecb6fcc9f196b01ba8cd",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/5a81b8f54dfe4f9849dbecb6fcc9f196b01ba8cd",
        "html_url": "https://github.com/eBay/parallec/commit/5a81b8f54dfe4f9849dbecb6fcc9f196b01ba8cd",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/5a81b8f54dfe4f9849dbecb6fcc9f196b01ba8cd/comments",
        "author": null,
        "committer": null,
        "parents": [
            {
                "sha": "a7e36988d0a5ca87f8b54e789cdd4a0d9a445644",
                "url": "https://api.github.com/repos/eBay/parallec/commits/a7e36988d0a5ca87f8b54e789cdd4a0d9a445644",
                "html_url": "https://github.com/eBay/parallec/commit/a7e36988d0a5ca87f8b54e789cdd4a0d9a445644"
            }
        ],
        "stats": {
            "total": 8,
            "additions": 4,
            "deletions": 4
        },
        "files": [
            {
                "sha": "d085b9f9f3d1b66b6fd21c621cbebb4477a1b346",
                "filename": "README.md",
                "status": "modified",
                "additions": 4,
                "deletions": 4,
                "changes": 8,
                "blob_url": "https://github.com/eBay/parallec/blob/5a81b8f54dfe4f9849dbecb6fcc9f196b01ba8cd/README.md",
                "raw_url": "https://github.com/eBay/parallec/raw/5a81b8f54dfe4f9849dbecb6fcc9f196b01ba8cd/README.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/README.md?ref=5a81b8f54dfe4f9849dbecb6fcc9f196b01ba8cd",
                "patch": "@@ -8,7 +8,7 @@\n \n [![Javadoc](http://www.parallec.io/images/parallec-javadoc-blue.svg)](http://www.parallec.io/javadoc/index.html?io/parallec/core/ParallelClient.html) [![Documentation](http://www.parallec.io/images/parallec-documentation-red.svg)](http://www.parallec.io/docs/) [![Samples](http://www.parallec.io/images/parallec-samples-brightgreen.svg)](https://github.com/eBay/parallec-samples) [![Chinese](http://www.parallec.io/images/parallec-cnbrief-blue.svg)](https://github.com/eBay/parallec/blob/master/README-brief-cn.md) \n \n-[ [Get-Started](https://github.com/eBay/parallec/blob/master/README.md#get-started) | [Features](https://github.com/eBay/parallec/blob/master/README.md#features) | [Use Cases](https://github.com/eBay/parallec/blob/master/README.md#use-cases) | [Samples](https://github.com/eBay/parallec-samples) | [Motivation](https://github.com/eBay/parallec/blob/master/README.md#motivation) | [Demos](https://github.com/eBay/parallec/blob/master/README.md#demos) | [Performance](https://github.com/eBay/parallec/blob/master/README.md#performance) | [Compare](https://github.com/eBay/parallec/blob/master/README.md#compare) | [Contributors](https://github.com/eBay/parallec/blob/master/README.md#contributors) | [About](https://github.com/eBay/parallec/blob/master/README.md#authors) | [News](http://www.parallec.io/blog/) | [Change Log](https://github.com/eBay/parallec/blob/master/CHANGELOG.md) | [中文介绍](https://github.com/eBay/parallec/blob/master/README-brief-cn.md) ]\n+[ [Get-Started](https://github.com/eBay/parallec/blob/master/README.md#get-started) | [Features](https://github.com/eBay/parallec/blob/master/README.md#features) | [Use Cases](https://github.com/eBay/parallec/blob/master/README.md#use-cases) | [Samples](https://github.com/eBay/parallec-samples) | [Change Log](https://github.com/eBay/parallec/blob/master/CHANGELOG.md) |  [Motivation](https://github.com/eBay/parallec/blob/master/README.md#motivation) | [Demos](https://github.com/eBay/parallec/blob/master/README.md#demos) | [Performance](https://github.com/eBay/parallec/blob/master/README.md#performance) | [Compare](https://github.com/eBay/parallec/blob/master/README.md#compare) | [Contributors](https://github.com/eBay/parallec/blob/master/README.md#contributors) | [About](https://github.com/eBay/parallec/blob/master/README.md#authors) | [News](http://www.parallec.io/blog/) | [Plugin](https://github.com/eBay/parallec-plugins) | [中文介绍](https://github.com/eBay/parallec/blob/master/README-brief-cn.md) ]\n \n \n [ [API Overview](http://www.parallec.io/docs/api-overview/) | [Generate & Submit Task](http://www.parallec.io/docs/submit-task/) | [Track Status & Examine Responses](http://www.parallec.io/docs/track-status/) | [Configurations](http://www.parallec.io/docs/configurations/) ]\n@@ -99,7 +99,7 @@ pc.prepareHttpGet(\"/userdata/sample_weather_$ZIP.txt\")\n \n ###More Readings\n \n-- [**More Examples**](https://github.com/ebay/parallec-samples#http) on setting context, send to Elastic Search / Kafka, async running, auto progress polling, track progress, TCP/SSH/Ping.  UDP example will be added soon. \n+- [**More Examples**](https://github.com/ebay/parallec-samples#http) on setting context, send to Elastic Search / Kafka, async running, auto progress polling, track progress, TCP/SSH/Ping.  UDP example are . \n - [**Set Target Hosts**](http://www.parallec.io/docs/submit-task/#set-target-hosts) from list, string, line by line text, json path, from local or remote URLs.\n - [**Full Documentation**](http://www.parallec.io/docs/)\n - [**Javadoc**](http://www.parallec.io/javadoc/index.html?io/parallec/core/package-summary.html)\n@@ -137,7 +137,7 @@ Parallec is built on Akka actors and [Async HTTP Client](https://github.com/Asyn\n 1. **Status-code-aggregation** is provided out of the box.\n 1. **Parallel Ping** supports both InetAddress.reachable ICMP (requires root) and Process based ping with retries.  Performance testing shows it is **2x the speed of** than best-effort tuned FPing on pinging on 1500 targets. (2.2 vs 4.5 sec)\n 1. **Parallel SSH** supports both key and password based login and task cancellation.\n-1. **Parallel TCP** supports idle timeout based channel closes.\n+1. **Parallel TCP/UDP** supports idle timeout based channel closes.\n \n \n \n@@ -207,7 +207,7 @@ For more related work review, please visit [here](http://www.ebaytechblog.com/20\n |                    Proven scalability and speed on 100,000+ target hosts in Production environment                    |    <img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/yes.png\" >   |       <img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/yes.png\" >      |              <img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/no.png\" >             |\n |   Generic request template with variable replacement for sending different requests to same/different target hosts    |    <img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/yes.png\" >   |       <img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/yes.png\" >      |              <img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/no.png\" >             |\n |   Scalable Ping with Retries    |    <img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/yes.png\" >   |       <img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/no.png\" >      |              <img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/no.png\" >             |\n-|   Scalable TCP with idle timeout    |    <img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/yes.png\" >   |       <img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/no.png\" >      |              <img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/no.png\" >             |\n+|   Scalable TCP/UDP with idle timeout    |    <img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/yes.png\" >   |       <img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/no.png\" >      |              <img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/no.png\" >             |\n |   Flexible handler location at either worker (in parallel) or manager thread    |    <img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/yes.png\" >   |       <img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/no.png\" >      |              <img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/no.png\" >             |\n |   Out-of-the-box two-level response aggregation on status code|    <img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/yes.png\" >   |       <img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/yes.png\" >      |              <img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/no.png\" >             |\n |  Configurable response log trimming on intervals|    <img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/yes.png\" >   |       <img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/no.png\" >      |              <img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/no.png\" >             |"
            }
        ]
    },
    {
        "sha": "a7e36988d0a5ca87f8b54e789cdd4a0d9a445644",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6YTdlMzY5ODhkMGE1Y2E4N2Y4YjU0ZTc4OWNkZDRhMGQ5YTQ0NTY0NA==",
        "commit": {
            "author": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2016-08-18T22:03:56Z"
            },
            "committer": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2016-08-18T22:03:56Z"
            },
            "message": "update readme with v0.10.0",
            "tree": {
                "sha": "d9807934350354d57428ece334335d6ea23e6424",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/d9807934350354d57428ece334335d6ea23e6424"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/a7e36988d0a5ca87f8b54e789cdd4a0d9a445644",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/a7e36988d0a5ca87f8b54e789cdd4a0d9a445644",
        "html_url": "https://github.com/eBay/parallec/commit/a7e36988d0a5ca87f8b54e789cdd4a0d9a445644",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/a7e36988d0a5ca87f8b54e789cdd4a0d9a445644/comments",
        "author": null,
        "committer": null,
        "parents": [
            {
                "sha": "a535ad9051ecc5349eb839cefe64e1895ed771e2",
                "url": "https://api.github.com/repos/eBay/parallec/commits/a535ad9051ecc5349eb839cefe64e1895ed771e2",
                "html_url": "https://github.com/eBay/parallec/commit/a535ad9051ecc5349eb839cefe64e1895ed771e2"
            }
        ],
        "stats": {
            "total": 2,
            "additions": 1,
            "deletions": 1
        },
        "files": [
            {
                "sha": "58e096f784a1092395f7185c172a5b04adc2430c",
                "filename": "README.md",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/a7e36988d0a5ca87f8b54e789cdd4a0d9a445644/README.md",
                "raw_url": "https://github.com/eBay/parallec/raw/a7e36988d0a5ca87f8b54e789cdd4a0d9a445644/README.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/README.md?ref=a7e36988d0a5ca87f8b54e789cdd4a0d9a445644",
                "patch": "@@ -4,7 +4,7 @@\n ![build status](https://img.shields.io/badge/build-info=>-green.svg) [![Build Status](https://travis-ci.org/eBay/parallec.svg?branch=master)](https://travis-ci.org/eBay/parallec) [![Coverage Status](https://img.shields.io/codecov/c/github/eBay/parallec.svg)](https://codecov.io/github/eBay/parallec) [![Apache V2.0 License](http://www.parallec.io/images/apache2.svg) ](https://github.com/eBay/parallec/blob/master/LICENSE)\n \n \n-![latest 0.9.x](http://img.shields.io/badge/latest_stable-0.9.x=>-green.svg) [ ![latest beta  maven central](https://maven-badges.herokuapp.com/maven-central/io.parallec/parallec-core/badge.svg?style=flat)](http://search.maven.org/#artifactdetails|io.parallec|parallec-core|0.9.3|) [![Gitter](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/eBay/parallec?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge)\n+![latest 0.10.x](http://img.shields.io/badge/latest_stable-0.10.x=>-green.svg) [ ![latest beta  maven central](https://maven-badges.herokuapp.com/maven-central/io.parallec/parallec-core/badge.svg?style=flat)](http://search.maven.org/#artifactdetails|io.parallec|parallec-core|0.10.0|) [![Gitter](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/eBay/parallec?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge)\n \n [![Javadoc](http://www.parallec.io/images/parallec-javadoc-blue.svg)](http://www.parallec.io/javadoc/index.html?io/parallec/core/ParallelClient.html) [![Documentation](http://www.parallec.io/images/parallec-documentation-red.svg)](http://www.parallec.io/docs/) [![Samples](http://www.parallec.io/images/parallec-samples-brightgreen.svg)](https://github.com/eBay/parallec-samples) [![Chinese](http://www.parallec.io/images/parallec-cnbrief-blue.svg)](https://github.com/eBay/parallec/blob/master/README-brief-cn.md) \n "
            }
        ]
    },
    {
        "sha": "a535ad9051ecc5349eb839cefe64e1895ed771e2",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6YTUzNWFkOTA1MWVjYzUzNDllYjgzOWNlZmU2NGUxODk1ZWQ3NzFlMg==",
        "commit": {
            "author": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2016-08-18T21:53:21Z"
            },
            "committer": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2016-08-18T21:53:21Z"
            },
            "message": "issue #41 support parallel UDP; release version 0.10.0",
            "tree": {
                "sha": "dce1cfbf862a2a7a0d846b6b7bb8ee18643d73a1",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/dce1cfbf862a2a7a0d846b6b7bb8ee18643d73a1"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/a535ad9051ecc5349eb839cefe64e1895ed771e2",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/a535ad9051ecc5349eb839cefe64e1895ed771e2",
        "html_url": "https://github.com/eBay/parallec/commit/a535ad9051ecc5349eb839cefe64e1895ed771e2",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/a535ad9051ecc5349eb839cefe64e1895ed771e2/comments",
        "author": null,
        "committer": null,
        "parents": [
            {
                "sha": "d75478a091801405e0d57882484ce4449785a040",
                "url": "https://api.github.com/repos/eBay/parallec/commits/d75478a091801405e0d57882484ce4449785a040",
                "html_url": "https://github.com/eBay/parallec/commit/d75478a091801405e0d57882484ce4449785a040"
            }
        ],
        "stats": {
            "total": 1935,
            "additions": 1823,
            "deletions": 112
        },
        "files": [
            {
                "sha": "ba90e1379a4c2b95e7a95f76452994069a9d0419",
                "filename": "CHANGELOG.md",
                "status": "modified",
                "additions": 10,
                "deletions": 1,
                "changes": 11,
                "blob_url": "https://github.com/eBay/parallec/blob/a535ad9051ecc5349eb839cefe64e1895ed771e2/CHANGELOG.md",
                "raw_url": "https://github.com/eBay/parallec/raw/a535ad9051ecc5349eb839cefe64e1895ed771e2/CHANGELOG.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/CHANGELOG.md?ref=a535ad9051ecc5349eb839cefe64e1895ed771e2",
                "patch": "@@ -1,14 +1,23 @@\n Parallec Change Log\n ==========\n \n-## Version 0.9.4\n+## Version 0.10.1\n \n \n _2016-??-??_\n \n * TBD\n \n \n+## Version 0.10.0\n+\n+\n+_2016-08-18_\n+\n+* Added main feature of parallel UDP based on async Netty, with `prepareUdp(String command)` API. Use `setUdpPort()` and `setUdpIdleTimeoutSec()` to set the port and read timeout.  Added tests. \n+* In udp/tcp/udp/http/ping/ssh worker, to check context before kill itself, as sometimes the msg is passed faster to the Op Worker which send msg to kill the worker already.  \n+* Improve test coverage. \n+\n ## Version 0.9.4-beta\n \n "
            },
            {
                "sha": "9c2a0ee3c3a7dc2fbf6dbfff7212d24e7099d557",
                "filename": "README-brief-cn.md",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/a535ad9051ecc5349eb839cefe64e1895ed771e2/README-brief-cn.md",
                "raw_url": "https://github.com/eBay/parallec/raw/a535ad9051ecc5349eb839cefe64e1895ed771e2/README-brief-cn.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/README-brief-cn.md?ref=a535ad9051ecc5349eb839cefe64e1895ed771e2",
                "patch": "@@ -8,7 +8,7 @@\n 主要用途： \n \n - 管理监控大量HTTP/TCP服务器，ping海量服务器\n-- 集群机器状态、配置探索，基于HTTP(S)/TCP Agent 或者 无agent 的大量远程任务执行，软件部署. HTTP支持SSL 客户端认证\n+- 集群机器状态、配置探索，基于HTTP(S)/TCP/UDP Agent 或者 无agent 的大量远程任务执行，软件部署, 网络监控. HTTP支持SSL 客户端认证\n - 海量API聚集到任意数据存储，数据流入口\n - 并行工作流，自动检测任务进度，以便支持并行处理异步API\n - 可控并行的，多个不同API请求到同一个HTTP服务器。HTTP请求模板可以在URL, HTTP Header, EntityBody不同地方进行变量替换。这样可以很方便的对那些有REST API的数据库或者网络服务器进行并行的CRUD操作。"
            },
            {
                "sha": "9405894d8b97bd78e75305b5f9ae0efab55935bc",
                "filename": "README.md",
                "status": "modified",
                "additions": 5,
                "deletions": 5,
                "changes": 10,
                "blob_url": "https://github.com/eBay/parallec/blob/a535ad9051ecc5349eb839cefe64e1895ed771e2/README.md",
                "raw_url": "https://github.com/eBay/parallec/raw/a535ad9051ecc5349eb839cefe64e1895ed771e2/README.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/README.md?ref=a535ad9051ecc5349eb839cefe64e1895ed771e2",
                "patch": "@@ -15,7 +15,7 @@\n \n [Tweeted](https://twitter.com/jboner/status/663618652063813632) by the Creator of Akka & Featured in [ [This Week in #Scala](http://www.cakesolutions.net/teamblogs/this-week-in-scala-16/11/2015) | [OSChina](http://www.oschina.net/p/parallec) - [2015 Top 100](http://www.oschina.net/news/69808/2015-annual-ranking-top-100-new-open-source-software) ]\n \n-Parallec is a fast parallel async HTTP(S)/SSH/TCP/Ping client java library based on [Akka](http://akka.io). Scalably aggregate and handle API responses **anyway** and send it **anywhere** by writing [20 lines](https://www.youtube.com/watch?v=QcavegPMDms) of code. A special super convenient **response context** let you pass in/out any object when handling the responses. Now you can conduct scalable API calls, then effortlessly pass aggregated data anywhere to elastic search, kafka, MongoDB, graphite, memcached, etc. Parallec means  **Paralle**l **C**lient, and is pronounced as \"Para-like\". Visit [www.parallec.io](http://www.parallec.io)\n+Parallec is a fast parallel async HTTP(S)/SSH/TCP/UDP/Ping client java library based on [Akka](http://akka.io). Scalably aggregate and handle API responses **anyway** and send it **anywhere** by writing [20 lines](https://www.youtube.com/watch?v=QcavegPMDms) of code. A special super convenient **response context** let you pass in/out any object when handling the responses. Now you can conduct scalable API calls, then effortlessly pass aggregated data anywhere to elastic search, kafka, MongoDB, graphite, memcached, etc. Parallec means  **Paralle**l **C**lient, and is pronounced as \"Para-like\". Visit [www.parallec.io](http://www.parallec.io)\n \n **[Watch Demo](https://github.com/eBay/parallec/wiki/Parallec-Aggregates-HTTP-Responses-from-8000-Servers)**: **8,000** web server HTTP response aggregation to memory in **12** seconds / to ElasticSearch in **16** seconds.\n \n@@ -28,21 +28,21 @@ Donwload [the latest JAR](https://search.maven.org/remote_content?g=io.parallec&\n <dependency>\n \t<groupId>io.parallec</groupId>\n \t<artifactId>parallec-core</artifactId>\n-\t<version>0.9.3</version>\n+\t<version>0.10.0</version>\n </dependency>\n ```\n Snapshots of the development version are available in [Sonatype's `snapshots` repository](https://oss.sonatype.org/content/repositories/snapshots/io/parallec/parallec-core/).\n \n or Gradle:\n ```xml\n-compile 'io.parallec:parallec-core:0.9.3'\n+compile 'io.parallec:parallec-core:0.10.0'\n ```\n \n \n **6 Line Example**\n \n \n-In the example below,  simply changing **prepareHttpGet()** to **prepareSsh()**, **prepareTcp()**, **preparePing()** enables you to conduct parallel SSH/TCP/Ping. Details please refer to the [Java Doc](http://www.parallec.io/javadoc/index.html?io/parallec/core/ParallelClient.html) and [Example Code](https://github.com/ebay/parallec-samples).\n+In the example below,  simply changing **prepareHttpGet()** to **prepareSsh()**, **prepareTcp()**, **prepareUdp()**, **preparePing()** enables you to conduct parallel SSH/TCP/Ping. Details please refer to the [Java Doc](http://www.parallec.io/javadoc/index.html?io/parallec/core/ParallelClient.html) and [Example Code](https://github.com/ebay/parallec-samples).\n \n \n ```java\n@@ -99,7 +99,7 @@ pc.prepareHttpGet(\"/userdata/sample_weather_$ZIP.txt\")\n \n ###More Readings\n \n-- [**More Examples**](https://github.com/ebay/parallec-samples#http) on setting context, send to Elastic Search / Kafka, async running, auto progress polling, track progress, TCP/SSH/Ping.\n+- [**More Examples**](https://github.com/ebay/parallec-samples#http) on setting context, send to Elastic Search / Kafka, async running, auto progress polling, track progress, TCP/SSH/Ping.  UDP example will be added soon. \n - [**Set Target Hosts**](http://www.parallec.io/docs/submit-task/#set-target-hosts) from list, string, line by line text, json path, from local or remote URLs.\n - [**Full Documentation**](http://www.parallec.io/docs/)\n - [**Javadoc**](http://www.parallec.io/javadoc/index.html?io/parallec/core/package-summary.html)"
            },
            {
                "sha": "561f9533412f1c900237df002b51d8dcfd6176ed",
                "filename": "pom.xml",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/a535ad9051ecc5349eb839cefe64e1895ed771e2/pom.xml",
                "raw_url": "https://github.com/eBay/parallec/raw/a535ad9051ecc5349eb839cefe64e1895ed771e2/pom.xml",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/pom.xml?ref=a535ad9051ecc5349eb839cefe64e1895ed771e2",
                "patch": "@@ -4,7 +4,7 @@\n \t<modelVersion>4.0.0</modelVersion>\n \t<groupId>io.parallec</groupId>\n \t<artifactId>parallec-core</artifactId>\n-\t<version>0.9.4-beta</version>\n+\t<version>0.10.0</version>\n \t<packaging>jar</packaging>\n \t<name>io.parallec:parallec-core</name>\n \t<url>https://github.com/eBay/parallec</url>"
            },
            {
                "sha": "d3b41d110d09bdc07c6462aeed98c2f20a134610",
                "filename": "src/main/java/io/parallec/core/ParallelClient.java",
                "status": "modified",
                "additions": 17,
                "deletions": 2,
                "changes": 19,
                "blob_url": "https://github.com/eBay/parallec/blob/a535ad9051ecc5349eb839cefe64e1895ed771e2/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FParallelClient.java",
                "raw_url": "https://github.com/eBay/parallec/raw/a535ad9051ecc5349eb839cefe64e1895ed771e2/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FParallelClient.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FParallelClient.java?ref=a535ad9051ecc5349eb839cefe64e1895ed771e2",
                "patch": "@@ -17,7 +17,7 @@\n import io.parallec.core.resources.HttpClientStore;\n import io.parallec.core.resources.HttpClientType;\n import io.parallec.core.resources.HttpMethod;\n-import io.parallec.core.resources.TcpSshPingResourceStore;\n+import io.parallec.core.resources.TcpUdpSshPingResourceStore;\n import io.parallec.core.task.ParallelTaskManager;\n \n import java.util.concurrent.atomic.AtomicBoolean;\n@@ -95,7 +95,7 @@ public class ParallelClient {\n     public HttpClientStore httpClientStore = HttpClientStore.getInstance();\n \n     /** The tcp client store. */\n-    public TcpSshPingResourceStore tcpSshPingResourceStore = TcpSshPingResourceStore.getInstance();\n+    public TcpUdpSshPingResourceStore tcpSshPingResourceStore = TcpUdpSshPingResourceStore.getInstance();\n \n     /** The is closed is marked when all resources are released/not initialized. */\n     public static AtomicBoolean isClosed = new AtomicBoolean(true);\n@@ -215,6 +215,21 @@ public ParallelTaskBuilder prepareTcp(String command) {\n         cb.getTcpMeta().setCommand(command);\n         return cb;\n     }\n+    \n+    /**\n+     * Prepare a parallel UDP Task.\n+     *\n+     * @param command\n+     *            the command\n+     * @return the parallel task builder\n+     */\n+    public ParallelTaskBuilder prepareUdp(String command) {\n+        reinitIfClosed();\n+        ParallelTaskBuilder cb = new ParallelTaskBuilder();\n+        cb.setProtocol(RequestProtocol.UDP);\n+        cb.getUdpMeta().setCommand(command);\n+        return cb;\n+    }\n \n     /**\n      * Prepare a parallel HTTP GET Task."
            },
            {
                "sha": "e5bf474de8ba8778a7f917485d468df301b23c33",
                "filename": "src/main/java/io/parallec/core/ParallelTask.java",
                "status": "modified",
                "additions": 40,
                "deletions": 1,
                "changes": 41,
                "blob_url": "https://github.com/eBay/parallec/blob/a535ad9051ecc5349eb839cefe64e1895ed771e2/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FParallelTask.java",
                "raw_url": "https://github.com/eBay/parallec/raw/a535ad9051ecc5349eb839cefe64e1895ed771e2/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FParallelTask.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FParallelTask.java?ref=a535ad9051ecc5349eb839cefe64e1895ed771e2",
                "patch": "@@ -22,6 +22,7 @@\n import io.parallec.core.bean.ping.PingMeta;\n import io.parallec.core.bean.ssh.SshMeta;\n import io.parallec.core.bean.tcp.TcpMeta;\n+import io.parallec.core.bean.udp.UdpMeta;\n import io.parallec.core.config.ParallecGlobalConfig;\n import io.parallec.core.config.ParallelTaskConfig;\n import io.parallec.core.exception.ParallelTaskInvalidException;\n@@ -139,6 +140,9 @@ public class ParallelTask {\n \n     /** The TCP meta. */\n     private TcpMeta tcpMeta;\n+\n+    /** The UDP meta. */\n+    private UdpMeta udpMeta;\n     \n     /** The ping meta. */\n     private PingMeta pingMeta;\n@@ -191,6 +195,7 @@ public ParallelTask() {\n      * @param targetHostMeta the target host meta\n      * @param sshMeta the ssh meta\n      * @param tcpMeta the tcp meta\n+     * @param udpMeta the udp meta\n      * @param pingMeta the ping meta\n      * @param handler the handler\n      * @param responseContext the response context\n@@ -200,7 +205,7 @@ public ParallelTask() {\n      * @param config the config\n      */\n     public ParallelTask(RequestProtocol requestProtocol, int concurrency, HttpMeta httpMeta, TargetHostMeta targetHostMeta,\n-            SshMeta sshMeta, TcpMeta tcpMeta, PingMeta pingMeta, ParallecResponseHandler handler,\n+            SshMeta sshMeta, TcpMeta tcpMeta, UdpMeta udpMeta, PingMeta pingMeta, ParallecResponseHandler handler,\n             Map<String, Object> responseContext,\n             Map<String, StrStrMap> replacementVarMapNodeSpecific,\n             Map<String, String> replacementVarMap,\n@@ -219,6 +224,7 @@ public ParallelTask(RequestProtocol requestProtocol, int concurrency, HttpMeta h\n \n         this.httpMeta = httpMeta;\n         this.tcpMeta = tcpMeta;\n+        this.udpMeta = udpMeta;\n         this.sshMeta = sshMeta;\n         this.pingMeta = pingMeta;\n         this.handler = handler;\n@@ -422,6 +428,8 @@ public boolean validateWithFillDefault()\n             this.tcpMeta = null;\n             // remove ping object\n             this.pingMeta = null;\n+            // remove udp object\n+            this.udpMeta = null;\n         }else if (this.requestProtocol==\n                 RequestProtocol.PING) {\n \n@@ -435,6 +443,8 @@ public boolean validateWithFillDefault()\n             this.sshMeta = null;\n             // remove tcp object\n             this.tcpMeta = null;\n+            // remove udp object\n+            this.udpMeta = null;            \n \n             \n         //TCP\n@@ -450,6 +460,23 @@ public boolean validateWithFillDefault()\n             this.sshMeta = null;\n             // remove ping object\n             this.pingMeta = null;            \n+            // remove udp object\n+            this.udpMeta = null;            \n+        //UDP\n+        }else if (this.requestProtocol==\n+                RequestProtocol.UDP) { \n+            if (this.httpMeta.isPollable())\n+                throw new ParallelTaskInvalidException(\n+                        \"Not support pollable job with UDP.\");\n+            this.httpMeta.initValuesNa();\n+            \n+            this.udpMeta.validation();\n+            // remove tcp object\n+            this.tcpMeta = null;\n+            // remove ssh object\n+            this.sshMeta = null;\n+            // remove ping object\n+            this.pingMeta = null;\n         //HTTP/HTTPS\n         } else {\n             \n@@ -460,6 +487,8 @@ public boolean validateWithFillDefault()\n             this.tcpMeta = null;\n             // remove ping object\n             this.pingMeta = null;\n+            // remove udp object\n+            this.udpMeta = null;\n         }// end else\n \n         return true;\n@@ -1092,4 +1121,14 @@ public void setPingMeta(PingMeta pingMeta) {\n         this.pingMeta = pingMeta;\n     }\n \n+\n+    public UdpMeta getUdpMeta() {\n+        return udpMeta;\n+    }\n+\n+\n+    public void setUdpMeta(UdpMeta udpMeta) {\n+        this.udpMeta = udpMeta;\n+    }\n+\n }"
            },
            {
                "sha": "0a10410dc11393d1cdd00cea7e1438dfca309d0d",
                "filename": "src/main/java/io/parallec/core/ParallelTaskBuilder.java",
                "status": "modified",
                "additions": 42,
                "deletions": 4,
                "changes": 46,
                "blob_url": "https://github.com/eBay/parallec/blob/a535ad9051ecc5349eb839cefe64e1895ed771e2/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FParallelTaskBuilder.java",
                "raw_url": "https://github.com/eBay/parallec/raw/a535ad9051ecc5349eb839cefe64e1895ed771e2/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FParallelTaskBuilder.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FParallelTaskBuilder.java?ref=a535ad9051ecc5349eb839cefe64e1895ed771e2",
                "patch": "@@ -22,6 +22,7 @@\n import io.parallec.core.bean.ssh.SshLoginType;\n import io.parallec.core.bean.ssh.SshMeta;\n import io.parallec.core.bean.tcp.TcpMeta;\n+import io.parallec.core.bean.udp.UdpMeta;\n import io.parallec.core.config.HandlerExecutionLocation;\n import io.parallec.core.config.ParallelTaskConfig;\n import io.parallec.core.exception.ParallelTaskInvalidException;\n@@ -73,7 +74,10 @@ public class ParallelTaskBuilder {\n \n     /** The TCP request meta data. */\n     private TcpMeta tcpMeta = new TcpMeta();\n-\n+    \n+    /** The UDP request meta data. */\n+    private UdpMeta udpMeta = new UdpMeta();\n+    \n     /** The ping meta data. */\n     private PingMeta pingMeta = new PingMeta();\n     \n@@ -223,7 +227,7 @@ public ParallelTask execute(ParallecResponseHandler handler) {\n             targetHostMeta = new TargetHostMeta(targetHosts);\n \n             final ParallelTask taskReal = new ParallelTask(requestProtocol,\n-                    concurrency, httpMeta, targetHostMeta, sshMeta, tcpMeta, pingMeta,\n+                    concurrency, httpMeta, targetHostMeta, sshMeta, tcpMeta, udpMeta, pingMeta,\n                     handler, responseContext, \n                     replacementVarMapNodeSpecific, replacementVarMap,\n                     requestReplacementType, \n@@ -318,7 +322,7 @@ public boolean validation() throws ParallelTaskInvalidException {\n         targetHostMeta = new TargetHostMeta(targetHosts);\n \n         task = new ParallelTask(requestProtocol, concurrency, httpMeta,\n-                targetHostMeta, sshMeta, tcpMeta, pingMeta, null, responseContext,\n+                targetHostMeta, sshMeta, tcpMeta, udpMeta, pingMeta, null, responseContext,\n                  replacementVarMapNodeSpecific,\n                 replacementVarMap, requestReplacementType, config);\n         boolean valid = false;\n@@ -404,7 +408,7 @@ public ParallelTaskBuilder setHttpPort(int port) {\n     /**\n      * Sets the port variable name such as $PORT\n      *\n-     * @param port\n+     * @param portVar\n      *            the port\n      * @return the parallel task builder\n      */\n@@ -1035,6 +1039,32 @@ public ParallelTaskBuilder setTcpChannelFactory(\n         this.tcpMeta.setChannelFactory(channelFactory);\n         return this;\n     }\n+    \n+    \n+    /**\n+     * Sets the udp port.\n+     *\n+     * @param udpPort\n+     *            the udp port\n+     * @return the parallel task builder\n+     */\n+    public ParallelTaskBuilder setUdpPort(int udpPort) {\n+        this.udpMeta.setUdpPort(udpPort);\n+        return this;\n+    }\n+\n+    /**\n+     * Sets the udp read(idle) timeout millis.\n+     *\n+     * @param udpIdleTimeoutSec\n+     *            the udp read timeout millis\n+     * @return the parallel task builder\n+     */\n+    public ParallelTaskBuilder setUdpIdleTimeoutSec(\n+            int udpIdleTimeoutSec) {\n+        this.udpMeta.setUdpIdleTimeoutSec(udpIdleTimeoutSec);\n+        return this;\n+    }\n \n     /**\n      * Sets the config.\n@@ -1174,6 +1204,14 @@ public ParallelTaskBuilder setPingNumRetries(int numRetries) {\n         this.pingMeta.setNumRetries(numRetries);\n         return this;\n     }\n+\n+    public UdpMeta getUdpMeta() {\n+        return udpMeta;\n+    }\n+\n+    public void setUdpMeta(UdpMeta udpMeta) {\n+        this.udpMeta = udpMeta;\n+    }\n     \n \n     "
            },
            {
                "sha": "d1906e6d61ec4458c9bc00310bac91dcad0d93ff",
                "filename": "src/main/java/io/parallec/core/RequestProtocol.java",
                "status": "modified",
                "additions": 3,
                "deletions": 2,
                "changes": 5,
                "blob_url": "https://github.com/eBay/parallec/blob/a535ad9051ecc5349eb839cefe64e1895ed771e2/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FRequestProtocol.java",
                "raw_url": "https://github.com/eBay/parallec/raw/a535ad9051ecc5349eb839cefe64e1895ed771e2/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FRequestProtocol.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FRequestProtocol.java?ref=a535ad9051ecc5349eb839cefe64e1895ed771e2",
                "patch": "@@ -31,8 +31,9 @@ public enum RequestProtocol {\n     /** The PING (ICMP). */\n     PING,\n     /** The TCP. */\n-    TCP;\n-    \n+    TCP,\n+    /** The UDP. */\n+    UDP;    \n     /*\n      * (non-Javadoc)\n      * "
            },
            {
                "sha": "0cca0d27ada5daaf38c95da3d6091e1bc134b3b3",
                "filename": "src/main/java/io/parallec/core/actor/ExecutionManager.java",
                "status": "modified",
                "additions": 4,
                "deletions": 1,
                "changes": 5,
                "blob_url": "https://github.com/eBay/parallec/blob/a535ad9051ecc5349eb839cefe64e1895ed771e2/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FExecutionManager.java",
                "raw_url": "https://github.com/eBay/parallec/raw/a535ad9051ecc5349eb839cefe64e1895ed771e2/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FExecutionManager.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FExecutionManager.java?ref=a535ad9051ecc5349eb839cefe64e1895ed771e2",
                "patch": "@@ -31,6 +31,7 @@\n import io.parallec.core.bean.ping.PingMeta;\n import io.parallec.core.bean.ssh.SshMeta;\n import io.parallec.core.bean.tcp.TcpMeta;\n+import io.parallec.core.bean.udp.UdpMeta;\n import io.parallec.core.commander.workflow.InternalDataProvider;\n import io.parallec.core.config.HandlerExecutionLocation;\n import io.parallec.core.config.ParallecGlobalConfig;\n@@ -345,6 +346,8 @@ public void onReceive(Object message) {\n \n                     final SshMeta sshMeta = task.getSshMeta();\n                     final TcpMeta tcpMeta = task.getTcpMeta();\n+                    final UdpMeta udpMeta = task.getUdpMeta();\n+                    \n                     final PingMeta pingMeta = task.getPingMeta();\n                     \n                     logger.debug(\"REQUEST GENERATED: \"\n@@ -368,7 +371,7 @@ public void onReceive(Object message) {\n                                                     , pollable,\n                                             httpHeaderMapLocal, \n                                             handler,responseContext,\n-                                            sshMeta, tcpMeta, pingMeta),\n+                                            sshMeta, tcpMeta, udpMeta, pingMeta),\n                                     asyncHttpClient, task.getHttpMeta()\n                                             .getHttpPollerProcessor()\n "
            },
            {
                "sha": "82d5d24ed0fd01d734b21526d488d240da97adcd",
                "filename": "src/main/java/io/parallec/core/actor/HttpWorker.java",
                "status": "modified",
                "additions": 3,
                "deletions": 2,
                "changes": 5,
                "blob_url": "https://github.com/eBay/parallec/blob/a535ad9051ecc5349eb839cefe64e1895ed771e2/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FHttpWorker.java",
                "raw_url": "https://github.com/eBay/parallec/raw/a535ad9051ecc5349eb839cefe64e1895ed771e2/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FHttpWorker.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FHttpWorker.java?ref=a535ad9051ecc5349eb839cefe64e1895ed771e2",
                "patch": "@@ -331,8 +331,9 @@ private void reply(final String response, final boolean error,\n             if (!getContext().system().deadLetters().equals(sender)) {\n                 sender.tell(res, getSelf());\n             }\n-            \n-            getContext().stop(getSelf());\n+            if (getContext() != null) {\n+                getContext().stop(getSelf());\n+            }\n         }\n \n     }"
            },
            {
                "sha": "961fe63db858d11ca93b0505e036ac6e25c06121",
                "filename": "src/main/java/io/parallec/core/actor/OperationWorker.java",
                "status": "modified",
                "additions": 4,
                "deletions": 0,
                "changes": 4,
                "blob_url": "https://github.com/eBay/parallec/blob/a535ad9051ecc5349eb839cefe64e1895ed771e2/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FOperationWorker.java",
                "raw_url": "https://github.com/eBay/parallec/raw/a535ad9051ecc5349eb839cefe64e1895ed771e2/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FOperationWorker.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FOperationWorker.java?ref=a535ad9051ecc5349eb839cefe64e1895ed771e2",
                "patch": "@@ -374,6 +374,10 @@ private final void processMainRequest() {\n             asyncWorker = getContext().actorOf(\n                     Props.create(TcpWorker.class, actorMaxOperationTimeoutSec,\n                             request.getTcpMeta(), trueTargetNode));            \n+        } else if (request.getProtocol() == RequestProtocol.UDP ){\n+            asyncWorker = getContext().actorOf(\n+                    Props.create(UdpWorker.class, actorMaxOperationTimeoutSec,\n+                            request.getUdpMeta(), trueTargetNode));                        \n         } else if (request.getProtocol() == RequestProtocol.PING ){\n             asyncWorker = getContext().actorOf(\n                     Props.create(PingWorker.class, actorMaxOperationTimeoutSec, request.getPingMeta(),"
            },
            {
                "sha": "95dd2096d07ce7cdcf4387f1182692f11cd72f96",
                "filename": "src/main/java/io/parallec/core/actor/PingWorker.java",
                "status": "modified",
                "additions": 5,
                "deletions": 4,
                "changes": 9,
                "blob_url": "https://github.com/eBay/parallec/blob/a535ad9051ecc5349eb839cefe64e1895ed771e2/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FPingWorker.java",
                "raw_url": "https://github.com/eBay/parallec/raw/a535ad9051ecc5349eb839cefe64e1895ed771e2/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FPingWorker.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FPingWorker.java?ref=a535ad9051ecc5349eb839cefe64e1895ed771e2",
                "patch": "@@ -18,7 +18,7 @@\n import io.parallec.core.commander.workflow.ping.PingProvider;\n import io.parallec.core.config.ParallecGlobalConfig;\n import io.parallec.core.exception.ActorMessageTypeInvalidException;\n-import io.parallec.core.resources.TcpSshPingResourceStore;\n+import io.parallec.core.resources.TcpUdpSshPingResourceStore;\n import io.parallec.core.util.PcConstants;\n import io.parallec.core.util.PcDateUtils;\n import io.parallec.core.util.PcErrorMsgUtils;\n@@ -125,7 +125,7 @@ public void onReceive(Object message) throws Exception {\n                                         getSelf());\n \n                         PingTask pingTask = new PingTask(targetHost, pingMeta);\n-                        setResponseFuture(TcpSshPingResourceStore.getInstance()\n+                        setResponseFuture(TcpUdpSshPingResourceStore.getInstance()\n                                 .getThreadPoolForSshPing().submit(pingTask));\n \n                         getContext()\n@@ -303,8 +303,9 @@ private void reply(final String response, final boolean failObtainResponse,\n             if (!getContext().system().deadLetters().equals(sender)) {\n                 sender.tell(res, getSelf());\n             }\n-\n-            getContext().stop(getSelf());\n+            if (getContext() != null) {\n+                getContext().stop(getSelf());\n+            }\n         }\n     }\n "
            },
            {
                "sha": "eca805e38c298064a6f2a197b36f3c51f15f5095",
                "filename": "src/main/java/io/parallec/core/actor/SshWorker.java",
                "status": "modified",
                "additions": 5,
                "deletions": 4,
                "changes": 9,
                "blob_url": "https://github.com/eBay/parallec/blob/a535ad9051ecc5349eb839cefe64e1895ed771e2/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FSshWorker.java",
                "raw_url": "https://github.com/eBay/parallec/raw/a535ad9051ecc5349eb839cefe64e1895ed771e2/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FSshWorker.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FSshWorker.java?ref=a535ad9051ecc5349eb839cefe64e1895ed771e2",
                "patch": "@@ -18,7 +18,7 @@\n import io.parallec.core.commander.workflow.ssh.SshProvider;\n import io.parallec.core.config.ParallecGlobalConfig;\n import io.parallec.core.exception.ActorMessageTypeInvalidException;\n-import io.parallec.core.resources.TcpSshPingResourceStore;\n+import io.parallec.core.resources.TcpUdpSshPingResourceStore;\n import io.parallec.core.util.PcConstants;\n import io.parallec.core.util.PcDateUtils;\n import io.parallec.core.util.PcErrorMsgUtils;\n@@ -128,7 +128,7 @@ public void onReceive(Object message) throws Exception {\n                                         getSelf());\n \n                         SshTask sshTask = new SshTask(sshMeta, targetHost);\n-                        setResponseFuture(TcpSshPingResourceStore.getInstance()\n+                        setResponseFuture(TcpUdpSshPingResourceStore.getInstance()\n                                 .getThreadPoolForSshPing().submit(sshTask));\n \n                         getContext()\n@@ -309,8 +309,9 @@ private void reply(final String response, final boolean failObtainResponse,\n             getLogger().debug(\n                     \"DEBUG: real response: \" + response + \" err: \"\n                             + errorMessage);\n-\n-            getContext().stop(getSelf());\n+            if (getContext() != null) {\n+                getContext().stop(getSelf());\n+            }\n         }\n     }\n "
            },
            {
                "sha": "f97b73b409b35bc17a93db2bb7ebb55883a9d930",
                "filename": "src/main/java/io/parallec/core/actor/TcpWorker.java",
                "status": "modified",
                "additions": 13,
                "deletions": 40,
                "changes": 53,
                "blob_url": "https://github.com/eBay/parallec/blob/a535ad9051ecc5349eb839cefe64e1895ed771e2/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FTcpWorker.java",
                "raw_url": "https://github.com/eBay/parallec/raw/a535ad9051ecc5349eb839cefe64e1895ed771e2/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FTcpWorker.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FTcpWorker.java?ref=a535ad9051ecc5349eb839cefe64e1895ed771e2",
                "patch": "@@ -17,8 +17,8 @@\n import io.parallec.core.bean.tcp.TcpMeta;\n import io.parallec.core.exception.ActorMessageTypeInvalidException;\n import io.parallec.core.exception.HttpRequestCreateException;\n-import io.parallec.core.exception.TcpRequestCreateException;\n-import io.parallec.core.resources.TcpSshPingResourceStore;\n+import io.parallec.core.exception.TcpUdpRequestCreateException;\n+import io.parallec.core.resources.TcpUdpSshPingResourceStore;\n import io.parallec.core.util.PcConstants;\n import io.parallec.core.util.PcDateUtils;\n import io.parallec.core.util.PcErrorMsgUtils;\n@@ -133,9 +133,8 @@ public ClientBootstrap bootStrapTcpClient()\n             // Configure the client.\n             tcpClient = new ClientBootstrap(tcpMeta.getChannelFactory());\n \n-\n             // Configure the pipeline factory.\n-            tcpClient.setPipelineFactory(new MyPipelineFactory(TcpSshPingResourceStore.getInstance().getTimer(),\n+            tcpClient.setPipelineFactory(new MyPipelineFactory(TcpUdpSshPingResourceStore.getInstance().getTimer(),\n                     this, tcpMeta.getTcpIdleTimeoutSec())\n             );\n \n@@ -145,7 +144,7 @@ public ClientBootstrap bootStrapTcpClient()\n           // tcpClient.setOption(\"keepAlive\", true);\n \n         } catch (Exception t) {\n-            throw new TcpRequestCreateException(\n+            throw new TcpUdpRequestCreateException(\n                     \"Error in creating request in Tcpworker. \"\n                             + \" If tcpClient is null. Then fail to create.\", t);\n         }\n@@ -251,6 +250,7 @@ public void onReceive(Object message) throws Exception {\n \n                 case CHECK_FUTURE_STATE:\n                 default:\n+                    sender = getSender();\n                     this.cause = new ActorMessageTypeInvalidException(\n                             \"ActorMessageTypeInvalidException error for on \"\n                                     + this.targetHost);\n@@ -320,8 +320,9 @@ private void reply(final String response, final boolean error,\n             if (!getContext().system().deadLetters().equals(sender)) {\n                 sender.tell(res, getSelf());\n             }\n-\n-            getContext().stop(getSelf());\n+            if (getContext() != null) {\n+                getContext().stop(getSelf());\n+            }\n         }\n \n     }\n@@ -344,17 +345,6 @@ public void onComplete(String response, boolean error,\n         reply(response, error, errorMessage, stackTrace, statusCode, statusCodeInt);\n     }\n \n-    /**\n-     * On throwable.\n-     *\n-     * @param cause the cause\n-     */\n-    public void onThrowable(Throwable cause) {\n-        this.cause = cause;\n-        getSelf().tell(RequestWorkerMsgType.PROCESS_ON_EXCEPTION, getSelf());\n-\n-    }\n-\n     /**\n      * Gets the logger.\n      *\n@@ -374,23 +364,6 @@ public static void setLogger(Logger logger) {\n         TcpWorker.logger = logger;\n     }\n \n-    /**\n-     * Gets the response sb.\n-     *\n-     * @return the response sb\n-     */\n-    public StringBuilder getResponseSb() {\n-        return responseSb;\n-    }\n-\n-    /**\n-     * Sets the response sb.\n-     *\n-     * @param responseSb the new response sb\n-     */\n-    public void setResponseSb(StringBuilder responseSb) {\n-        this.responseSb = responseSb;\n-    }\n \n     /**\n      * define the list of handlers for this channel.\n@@ -475,7 +448,7 @@ public void channelIdle(ChannelHandlerContext ctx, IdleStateEvent e) {\n                 String statusCode = statusCodeInt + \" SUCCESSFUL\";\n                 String errMsg=\"idleTimeout to finish\";\n                 \n-                tcpWorker.onComplete(tcpWorker.getResponseSb().toString(), false, \n+                tcpWorker.onComplete(tcpWorker.responseSb.toString(), false, \n                         errMsg, errMsg, statusCode, statusCodeInt);\n             }\n         }\n@@ -517,7 +490,7 @@ public TcpChannelHandler(TcpWorker tcpWorker) {\n         @Override\n         public void messageReceived(ChannelHandlerContext ctx, MessageEvent e) {\n             //add \\n to the end\n-            tcpWorker.getResponseSb().append(e.getMessage().toString()+\"\\n\");\n+            tcpWorker.responseSb.append(e.getMessage().toString()+\"\\n\");\n             logger.debug(\"DONE.\" + ++msgRecvCount);\n             logger.debug(\"MSG_RECEIVED_AT_TCP_CLIENT: {}\", e.getMessage().toString());\n         }\n@@ -538,7 +511,7 @@ public void channelDisconnected(ChannelHandlerContext ctx, ChannelStateEvent e)\n             int statusCodeInt = 0;\n             String statusCode = statusCodeInt + \" SUCCESSFUL\";\n             \n-            tcpWorker.onComplete(tcpWorker.getResponseSb().toString(), false, \n+            tcpWorker.onComplete(tcpWorker.responseSb.toString(), false, \n                     null, null, statusCode, statusCodeInt);\n \n         }\n@@ -554,12 +527,12 @@ public void exceptionCaught(ChannelHandlerContext ctx, ExceptionEvent e) {\n                 hasCaughtException=true;\n                 e.getChannel().close();\n                 String errMsg = e.getCause().getLocalizedMessage();\n-                logger.error(\"TCP Handler exceptionCaught: {} . \", errMsg);\n+                logger.debug(\"TCP Handler exceptionCaught: {} . \", errMsg);\n                 \n                 int statusCodeInt = 1;\n                 String statusCode = statusCodeInt + \" FAILURE\";\n                 \n-                tcpWorker.onComplete(tcpWorker.getResponseSb().toString(), true, \n+                tcpWorker.onComplete(tcpWorker.responseSb.toString(), true, \n                         errMsg, errMsg, statusCode, statusCodeInt);\n                 \n             }"
            },
            {
                "sha": "a410182aacee5263b19a3ed478180a9a66c3cb25",
                "filename": "src/main/java/io/parallec/core/actor/UdpWorker.java",
                "status": "added",
                "additions": 551,
                "deletions": 0,
                "changes": 551,
                "blob_url": "https://github.com/eBay/parallec/blob/a535ad9051ecc5349eb839cefe64e1895ed771e2/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FUdpWorker.java",
                "raw_url": "https://github.com/eBay/parallec/raw/a535ad9051ecc5349eb839cefe64e1895ed771e2/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FUdpWorker.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FUdpWorker.java?ref=a535ad9051ecc5349eb839cefe64e1895ed771e2",
                "patch": "@@ -0,0 +1,551 @@\n+/*  \n+Copyright [2013-2015] eBay Software Foundation\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+    http://www.apache.org/licenses/LICENSE-2.0\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+ */\n+package io.parallec.core.actor;\n+\n+import io.parallec.core.actor.message.ResponseOnSingeRequest;\n+import io.parallec.core.actor.message.type.RequestWorkerMsgType;\n+import io.parallec.core.bean.udp.UdpMeta;\n+import io.parallec.core.exception.ActorMessageTypeInvalidException;\n+import io.parallec.core.exception.HttpRequestCreateException;\n+import io.parallec.core.exception.TcpUdpRequestCreateException;\n+import io.parallec.core.resources.TcpUdpSshPingResourceStore;\n+import io.parallec.core.util.PcConstants;\n+import io.parallec.core.util.PcDateUtils;\n+import io.parallec.core.util.PcErrorMsgUtils;\n+import io.parallec.core.util.PcStringUtils;\n+\n+import java.net.InetSocketAddress;\n+import java.util.concurrent.TimeUnit;\n+\n+import org.jboss.netty.bootstrap.ConnectionlessBootstrap;\n+import org.jboss.netty.channel.Channel;\n+import org.jboss.netty.channel.ChannelFuture;\n+import org.jboss.netty.channel.ChannelHandler;\n+import org.jboss.netty.channel.ChannelHandlerContext;\n+import org.jboss.netty.channel.ChannelPipeline;\n+import org.jboss.netty.channel.ChannelPipelineFactory;\n+import org.jboss.netty.channel.Channels;\n+import org.jboss.netty.channel.ExceptionEvent;\n+import org.jboss.netty.channel.MessageEvent;\n+import org.jboss.netty.channel.SimpleChannelUpstreamHandler;\n+import org.jboss.netty.handler.timeout.IdleState;\n+import org.jboss.netty.handler.timeout.IdleStateAwareChannelHandler;\n+import org.jboss.netty.handler.timeout.IdleStateEvent;\n+import org.jboss.netty.handler.timeout.IdleStateHandler;\n+import org.jboss.netty.util.Timer;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import scala.concurrent.duration.Duration;\n+import scala.concurrent.duration.FiniteDuration;\n+import akka.actor.ActorRef;\n+import akka.actor.Cancellable;\n+//import akka.actor.PoisonPill;\n+import akka.actor.UntypedActor;\n+\n+/**\n+ * A worker for single UDP request class\n+ *\n+ * @author Yuanteng (Jeff) Pei\n+ */\n+public class UdpWorker extends UntypedActor {\n+\n+    /** The actor max operation timeout sec. */\n+    private int actorMaxOperationTimeoutSec;\n+\n+    /** The udp meta. */\n+    private final UdpMeta udpMeta;\n+\n+    /** The target host. */\n+    private String targetHost;\n+\n+    /** The logger. */\n+    private static Logger logger = LoggerFactory.getLogger(UdpWorker.class);\n+\n+    /** The sender. */\n+    private ActorRef sender = null;\n+\n+    /** The cause. */\n+    // cause will be the exception to log as in PROCESS_ON_EXCEPTION\n+    private Throwable cause;\n+\n+    /** The try count. */\n+    private int tryCount = 0;\n+\n+    /** The timeout message cancellable. */\n+    private Cancellable timeoutMessageCancellable = null;\n+\n+    /** The timeout duration. */\n+    private FiniteDuration timeoutDuration = null;\n+\n+    /** The sent reply. */\n+    // private FiniteDuration retryDuration = null;\n+    private boolean sentReply = false;\n+\n+    /** The channel. */\n+    private Channel channel = null;\n+\n+    /** The response sb. */\n+    private StringBuilder responseSb = new StringBuilder();\n+\n+    /**\n+     * Instantiates a new udp worker.\n+     *\n+     * @param actorMaxOperationTimeoutSec\n+     *            the actor max operation timeout sec\n+     * @param udpMeta\n+     *            the udp meta\n+     * @param targetHost\n+     *            the target host\n+     */\n+    public UdpWorker(final int actorMaxOperationTimeoutSec,\n+            final UdpMeta udpMeta, final String targetHost) {\n+        super();\n+        this.actorMaxOperationTimeoutSec = actorMaxOperationTimeoutSec;\n+        this.udpMeta = udpMeta;\n+        this.targetHost = targetHost;\n+    }\n+\n+    /**\n+     * Creates the udpClient with proper handler.\n+     *\n+     * @return the bound request builder\n+     * @throws HttpRequestCreateException\n+     *             the http request create exception\n+     */\n+    public ConnectionlessBootstrap bootStrapUdpClient()\n+            throws HttpRequestCreateException {\n+\n+        ConnectionlessBootstrap udpClient = null;\n+        try {\n+\n+            // Configure the client.\n+            udpClient = new ConnectionlessBootstrap(udpMeta.getChannelFactory());\n+\n+            udpClient.setPipeline(new UdpPipelineFactory(\n+                    TcpUdpSshPingResourceStore.getInstance().getTimer(), this)\n+                    .getPipeline());\n+\n+        } catch (Exception t) {\n+            throw new TcpUdpRequestCreateException(\n+                    \"Error in creating request in udp worker. \"\n+                            + \" If udpClient is null. Then fail to create.\", t);\n+        }\n+\n+        return udpClient;\n+\n+    }\n+\n+    /*\n+     * (non-Javadoc)\n+     * \n+     * @see akka.actor.UntypedActor#onReceive(java.lang.Object)\n+     */\n+    @Override\n+    public void onReceive(Object message) throws Exception {\n+        try {\n+            if (message instanceof RequestWorkerMsgType) {\n+                switch ((RequestWorkerMsgType) message) {\n+                case PROCESS_REQUEST:\n+                    tryCount++;\n+\n+                    if (tryCount == 1) {\n+                        sender = getSender();\n+\n+                        ConnectionlessBootstrap udpClient = bootStrapUdpClient();\n+\n+                        // Start the connection attempt.\n+                        ChannelFuture future = udpClient\n+                                .connect(new InetSocketAddress(targetHost,\n+                                        udpMeta.getUdpPort()));\n+\n+                        // first schedule timeout before the sync wait\n+                        timeoutDuration = Duration.create(\n+                                actorMaxOperationTimeoutSec, TimeUnit.SECONDS);\n+\n+                        timeoutMessageCancellable = getContext()\n+                                .system()\n+                                .scheduler()\n+                                .scheduleOnce(\n+                                        timeoutDuration,\n+                                        getSelf(),\n+                                        RequestWorkerMsgType.PROCESS_ON_TIMEOUT,\n+                                        getContext().system().dispatcher(),\n+                                        getSelf());\n+\n+                        // Wait until the connection attempt succeeds or fails.\n+                        channel = future.awaitUninterruptibly().getChannel();\n+                        ChannelFuture requestFuture = null;\n+\n+                        // Sends the line to server need. line ending\n+                        requestFuture = channel.write(udpMeta.getCommand()\n+                                + \"\\r\\n\");\n+\n+                        // Wait until all messages are flushed before closing\n+                        // the channel.\n+                        if (requestFuture != null) {\n+                            requestFuture.await();\n+                        }\n+                    } else {\n+                        getLogger().error(\n+                                \"duplicated PROCESS_REQUEST msg. ignore...\");\n+                    }\n+                    break;\n+\n+                case CANCEL:\n+                    if (sender == null)\n+                        sender = getSender();\n+                    getLogger().info(\n+                            \"UDP Request was CANCELLED.................{}\",\n+                            targetHost);\n+                    cancelCancellable();\n+                    reply(null, true, PcConstants.REQUEST_CANCELED,\n+                            PcConstants.REQUEST_CANCELED, PcConstants.NA,\n+                            PcConstants.NA_INT);\n+                    break;\n+\n+                case PROCESS_ON_EXCEPTION:\n+\n+                    String errorSummary = PcErrorMsgUtils.replaceErrorMsg(cause\n+                            .toString());\n+                    String stackTrace = PcStringUtils.printStackTrace(cause);\n+                    cancelCancellable();\n+                    reply(null, true, errorSummary, stackTrace, PcConstants.NA,\n+                            PcConstants.NA_INT);\n+\n+                    break;\n+\n+                case PROCESS_ON_TIMEOUT:\n+\n+                    getLogger().error(\"PROCESS_ON_TIMEOUT.................{}\",\n+                            targetHost);\n+                    cancelCancellable();\n+\n+                    String errorMsg = String\n+                            .format(\"UdpWorker Timedout after %d SEC (no response but no exception catched). Check URL: may be very slow or stuck.\",\n+                                    actorMaxOperationTimeoutSec);\n+\n+                    reply(null, true, errorMsg, errorMsg, PcConstants.NA,\n+                            PcConstants.NA_INT);\n+                    break;\n+\n+                case CHECK_FUTURE_STATE:\n+                default:\n+                    sender = getSender();\n+                    this.cause = new ActorMessageTypeInvalidException(\n+                            \"ActorMessageTypeInvalidException error for on \"\n+                                    + this.targetHost);\n+                    getSelf().tell(RequestWorkerMsgType.PROCESS_ON_EXCEPTION,\n+                            getSelf());\n+                    break;\n+                }\n+            } else {\n+                unhandled(message);\n+                sender = getSender();\n+                this.cause = new ActorMessageTypeInvalidException(\n+                        \"ActorMessageTypeInvalidException error for UDP on \"\n+                                + this.targetHost);\n+                getSelf().tell(RequestWorkerMsgType.PROCESS_ON_EXCEPTION,\n+                        getSelf());\n+            }\n+        } catch (Exception e) {\n+            this.cause = e;\n+            getSelf()\n+                    .tell(RequestWorkerMsgType.PROCESS_ON_EXCEPTION, getSelf());\n+        }\n+    }\n+\n+    /**\n+     * Cancel cancellable.\n+     */\n+    public void cancelCancellable() {\n+\n+        if (timeoutMessageCancellable != null) {\n+            timeoutMessageCancellable.cancel();\n+        }\n+\n+    }\n+\n+    /**\n+     * First close the connection. Then reply.\n+     *\n+     * @param response\n+     *            the response\n+     * @param error\n+     *            the error\n+     * @param errorMessage\n+     *            the error message\n+     * @param stackTrace\n+     *            the stack trace\n+     * @param statusCode\n+     *            the status code\n+     * @param statusCodeInt\n+     *            the status code int\n+     */\n+    private void reply(final String response, final boolean error,\n+            final String errorMessage, final String stackTrace,\n+            final String statusCode, final int statusCodeInt) {\n+\n+        if (!sentReply) {\n+\n+            // must update sentReply first to avoid duplicated msg.\n+            sentReply = true;\n+            // Close the connection. Make sure the close operation ends because\n+            // all I/O operations are asynchronous in Netty.\n+            if (channel != null && channel.isOpen())\n+                channel.close().awaitUninterruptibly();\n+            final ResponseOnSingeRequest res = new ResponseOnSingeRequest(\n+                    response, error, errorMessage, stackTrace, statusCode,\n+                    statusCodeInt, PcDateUtils.getNowDateTimeStrStandard());\n+            if (!getContext().system().deadLetters().equals(sender)) {\n+//                logger.debug(\"SEND_MSG {} from host {}\", res.toString(),\n+//                        this.targetHost);\n+                sender.tell(res, getSelf());\n+            }\n+            //sometimes msg already to Op; logger.debug(\"ERR_ALREADY_KILLED_{}\",this.targetHost);\n+            if (getContext() != null) {\n+                getContext().stop(getSelf());\n+            }\n+        }\n+\n+    }\n+\n+    /**\n+     * On complete.\n+     *\n+     * @param response\n+     *            the response\n+     * @param error\n+     *            the error\n+     * @param errorMessage\n+     *            the error message\n+     * @param stackTrace\n+     *            the stack trace\n+     * @param statusCode\n+     *            the status code\n+     * @param statusCodeInt\n+     *            the status code int\n+     */\n+    public void onComplete(String response, boolean error, String errorMessage,\n+            final String stackTrace, String statusCode, int statusCodeInt) {\n+        cancelCancellable();\n+        reply(response, error, errorMessage, stackTrace, statusCode,\n+                statusCodeInt);\n+    }\n+\n+    /**\n+     * Gets the logger.\n+     *\n+     * @return the logger\n+     */\n+    public static Logger getLogger() {\n+        return logger;\n+    }\n+\n+    /**\n+     * Sets the logger.\n+     *\n+     * @param logger\n+     *            the new logger\n+     */\n+    public static void setLogger(Logger logger) {\n+        UdpWorker.logger = logger;\n+    }\n+\n+    /**\n+     * define the list of handlers for this channel.\n+     *\n+     * @author Yuanteng (Jeff) Pei\n+     */\n+    public static class UdpPipelineFactory implements ChannelPipelineFactory {\n+\n+        /** The idle state handler. */\n+        private final ChannelHandler idleStateHandler;\n+\n+        /** The udp worker. */\n+        private final UdpWorker udpWorker;\n+\n+        /** The my idle handler. */\n+        private final MyIdleHandler myIdleHandler;\n+\n+        /**\n+         * Instantiates a new my pipeline factory.\n+         *\n+         * @param timer\n+         *            the timer\n+         * @param udpWorker\n+         *            the udp worker\n+         */\n+        public UdpPipelineFactory(Timer timer, UdpWorker udpWorker) {\n+            this.udpWorker = udpWorker;\n+            this.idleStateHandler = new IdleStateHandler(timer, 0, 0,\n+                    udpWorker.udpMeta.getUdpIdleTimeoutSec());\n+            this.myIdleHandler = new MyIdleHandler(udpWorker);\n+        }\n+\n+        /*\n+         * (non-Javadoc)\n+         * \n+         * @see org.jboss.netty.channel.ChannelPipelineFactory#getPipeline()\n+         */\n+        @Override\n+        public ChannelPipeline getPipeline() {\n+\n+            // cannot have the DelimiterBasedFrameDecoder! does not work with\n+            // UDP; make packet missing.\n+            ChannelPipeline pipeline = Channels.pipeline();\n+            // ORDER matters!!! put the channdler first\n+            pipeline.addLast(\"idleTimer\", idleStateHandler);\n+            pipeline.addLast(\"idleHandler\", myIdleHandler);\n+            pipeline.addLast(\"stringDecoder\", UdpMeta.stringDecoder);\n+            pipeline.addLast(\"stringEncoder\", UdpMeta.stringEncoder);\n+            pipeline.addLast(\"UDPUpstreamHandler\", new UdpChannelHandler(\n+                    udpWorker));\n+            return pipeline;\n+        }\n+\n+    }\n+\n+    /**\n+     * how to pass the idle event back to the worker.\n+     *\n+     * @author Yuanteng (Jeff) Pei\n+     */\n+    public static class MyIdleHandler extends IdleStateAwareChannelHandler {\n+\n+        /** The udp worker. */\n+        private final UdpWorker udpWorker;\n+\n+        /**\n+         * Instantiates a new my idle handler.\n+         *\n+         * @param udpWorker\n+         *            the UdpWorker worker\n+         */\n+        public MyIdleHandler(UdpWorker udpWorker) {\n+            super();\n+            this.udpWorker = udpWorker;\n+\n+        }\n+\n+        /**\n+         * this case is like a read timeout where did not get anything from the\n+         * server for a long time.\n+         * \n+         * For UDP need to mark as error\n+         * \n+         * @see org.jboss.netty.handler.timeout.IdleStateAwareChannelHandler#channelIdle\n+         *      (org.jboss.netty.channel.ChannelHandlerContext,\n+         *      org.jboss.netty.handler.timeout.IdleStateEvent)\n+         */\n+        @Override\n+        public void channelIdle(ChannelHandlerContext ctx, IdleStateEvent e) {\n+            logger.debug(\"In IDLE event handler for UDP..timeout.\");\n+\n+            // there are 3 states. READER/WRITER/ALL\n+            if (e.getState() == IdleState.ALL_IDLE) {\n+                int statusCodeInt = 1;\n+                String statusCode = statusCodeInt + \" FAILURE\";\n+                String errMsg = \"UDP idle (read) timeout\";\n+\n+                udpWorker.onComplete(udpWorker.responseSb.toString(), true,\n+                        errMsg, errMsg, statusCode, statusCodeInt);\n+            }\n+        }\n+    }\n+\n+    /**\n+     * The Netty response/channel handler.\n+     *\n+     * @author Yuanteng (Jeff) Pei\n+     */\n+    public static class UdpChannelHandler extends SimpleChannelUpstreamHandler {\n+\n+        /** The has caught exception. */\n+        public boolean hasCaughtException = false;\n+\n+        /** The udp worker. */\n+        private final UdpWorker udpWorker;\n+\n+        /**\n+         * Instantiates a new udp channel handler.\n+         *\n+         * @param udpWorker\n+         *            the udp worker\n+         */\n+        public UdpChannelHandler(UdpWorker udpWorker) {\n+            super();\n+            this.udpWorker = udpWorker;\n+\n+        }\n+\n+        /** The msg recv count. */\n+        private int msgRecvCount = 0;\n+\n+        /*\n+         * (non-Javadoc)\n+         * \n+         * @see\n+         * org.jboss.netty.channel.SimpleChannelHandler#messageReceived(org.\n+         * jboss.netty.channel.ChannelHandlerContext,\n+         * org.jboss.netty.channel.MessageEvent)\n+         */\n+        @Override\n+        public void messageReceived(ChannelHandlerContext ctx, MessageEvent e) {\n+            // add \\n to the end\n+            udpWorker.responseSb.append(e.getMessage().toString() + \"\\n\");\n+            logger.debug(\"DONE.\" + ++msgRecvCount);\n+            logger.debug(\"MSG_RECEIVED_AT_UDP_CLIENT: {}\", e.getMessage()\n+                    .toString());\n+\n+            /**\n+             * Assuming a single request. when receiving the response.\n+             * immediately return.\n+             */\n+            int statusCodeInt = 0;\n+            String statusCode = statusCodeInt + \" SUCCESSFUL\";\n+\n+            udpWorker.onComplete(udpWorker.responseSb.toString(), false, null,\n+                    null, statusCode, statusCodeInt);\n+\n+        }\n+\n+        /*\n+         * (non-Javadoc)\n+         * \n+         * @see\n+         * org.jboss.netty.channel.SimpleChannelHandler#exceptionCaught(org.\n+         * jboss.netty.channel.ChannelHandlerContext,\n+         * org.jboss.netty.channel.ExceptionEvent)\n+         */\n+        @Override\n+        public void exceptionCaught(ChannelHandlerContext ctx, ExceptionEvent e) {\n+\n+            if (!hasCaughtException) {\n+                hasCaughtException = true;\n+\n+                String errMsg = e.getCause().toString();\n+                logger.debug(\"UDP Handler exceptionCaught: {} . \", errMsg);\n+                e.getChannel().close();\n+\n+                int statusCodeInt = 1;\n+                String statusCode = statusCodeInt + \" FAILURE\";\n+\n+                udpWorker.onComplete(udpWorker.responseSb.toString(), true,\n+                        errMsg, errMsg, statusCode, statusCodeInt);\n+            }\n+        }\n+\n+    }// end handler class\n+\n+}"
            },
            {
                "sha": "a33515ba40f24e5438667a528a0cb87dddbc2c86",
                "filename": "src/main/java/io/parallec/core/bean/TaskRequest.java",
                "status": "modified",
                "additions": 10,
                "deletions": 1,
                "changes": 11,
                "blob_url": "https://github.com/eBay/parallec/blob/a535ad9051ecc5349eb839cefe64e1895ed771e2/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2FTaskRequest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/a535ad9051ecc5349eb839cefe64e1895ed771e2/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2FTaskRequest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2FTaskRequest.java?ref=a535ad9051ecc5349eb839cefe64e1895ed771e2",
                "patch": "@@ -17,6 +17,7 @@\n import io.parallec.core.bean.ping.PingMeta;\n import io.parallec.core.bean.ssh.SshMeta;\n import io.parallec.core.bean.tcp.TcpMeta;\n+import io.parallec.core.bean.udp.UdpMeta;\n import io.parallec.core.resources.HttpMethod;\n \n import java.util.HashMap;\n@@ -73,6 +74,9 @@ public class TaskRequest {\n     /** The tcp meta. */\n     private final TcpMeta tcpMeta;\n \n+    /** The tcp meta. */\n+    private final UdpMeta udpMeta;\n+    \n     /** The ping meta. */\n     private final PingMeta pingMeta;\n     \n@@ -90,7 +94,7 @@ public TaskRequest(\n             Map<String, String> httpHeaderMap, \n             ParallecResponseHandler handler, \n             Map<String, Object> responseContext,\n-            SshMeta sshMeta, TcpMeta tcpMeta, PingMeta pingMeta\n+            SshMeta sshMeta, TcpMeta tcpMeta, UdpMeta udpMeta, PingMeta pingMeta\n \n     ) {\n         this.actorMaxOperationTimeoutSec = actorMaxOperationTimeoutSec;\n@@ -110,6 +114,7 @@ public TaskRequest(\n         this.responseContext = responseContext;\n         this.sshMeta = sshMeta;\n         this.tcpMeta = tcpMeta;\n+        this.udpMeta = udpMeta;\n         this.pingMeta = pingMeta;\n \n     }\n@@ -244,4 +249,8 @@ public Map<String, Object> getResponseContext() {\n         return responseContext;\n     }\n \n+    public UdpMeta getUdpMeta() {\n+        return udpMeta;\n+    }\n+\n }"
            },
            {
                "sha": "b388c8c202054b56eb3c1cf5d3e02e38dfb4e2c6",
                "filename": "src/main/java/io/parallec/core/bean/ssh/SshMeta.java",
                "status": "modified",
                "additions": 3,
                "deletions": 2,
                "changes": 5,
                "blob_url": "https://github.com/eBay/parallec/blob/a535ad9051ecc5349eb839cefe64e1895ed771e2/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2Fssh%2FSshMeta.java",
                "raw_url": "https://github.com/eBay/parallec/raw/a535ad9051ecc5349eb839cefe64e1895ed771e2/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2Fssh%2FSshMeta.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2Fssh%2FSshMeta.java?ref=a535ad9051ecc5349eb839cefe64e1895ed771e2",
                "patch": "@@ -17,6 +17,7 @@\n \n \n \n+// TODO: Auto-generated Javadoc\n /**\n  * all ssh metadata except for the target host name. also those timeout configs\n  * and\n@@ -97,9 +98,9 @@ public void setPassphrase(String passphrase) {\n     }\n     \n     /**\n-     * get the runAsSuperUser.\n+     * Checks if is run as super user.\n      *\n-     * @param \n+     * @return true, if is run as super user\n      */\n     public boolean isRunAsSuperUser() {\n \t\treturn runAsSuperUser;"
            },
            {
                "sha": "5b21cbcfa959215ef81a78f7c7a7b9d76ed7161f",
                "filename": "src/main/java/io/parallec/core/bean/tcp/TcpMeta.java",
                "status": "modified",
                "additions": 2,
                "deletions": 2,
                "changes": 4,
                "blob_url": "https://github.com/eBay/parallec/blob/a535ad9051ecc5349eb839cefe64e1895ed771e2/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2Ftcp%2FTcpMeta.java",
                "raw_url": "https://github.com/eBay/parallec/raw/a535ad9051ecc5349eb839cefe64e1895ed771e2/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2Ftcp%2FTcpMeta.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2Ftcp%2FTcpMeta.java?ref=a535ad9051ecc5349eb839cefe64e1895ed771e2",
                "patch": "@@ -14,7 +14,7 @@\n \n import io.parallec.core.config.ParallecGlobalConfig;\n import io.parallec.core.exception.ParallelTaskInvalidException;\n-import io.parallec.core.resources.TcpSshPingResourceStore;\n+import io.parallec.core.resources.TcpUdpSshPingResourceStore;\n \n import org.jboss.netty.channel.ChannelFactory;\n import org.jboss.netty.channel.ChannelHandler;\n@@ -101,7 +101,7 @@ public boolean validation() throws ParallelTaskInvalidException {\n         \n         if (this.channelFactory == null) {\n             logger.info(\"SET DEFAULT TCP NETTY CHANNEL FACTORY: TCP channelFactory is set as default\");\n-            this.channelFactory=TcpSshPingResourceStore.getInstance().getChannelFactory();\n+            this.channelFactory=TcpUdpSshPingResourceStore.getInstance().getChannelFactory();\n         }\n \n         return true;"
            },
            {
                "sha": "1541ea75eeef9fee51291af66061de994a436a6a",
                "filename": "src/main/java/io/parallec/core/bean/udp/UdpMeta.java",
                "status": "added",
                "additions": 152,
                "deletions": 0,
                "changes": 152,
                "blob_url": "https://github.com/eBay/parallec/blob/a535ad9051ecc5349eb839cefe64e1895ed771e2/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2Fudp%2FUdpMeta.java",
                "raw_url": "https://github.com/eBay/parallec/raw/a535ad9051ecc5349eb839cefe64e1895ed771e2/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2Fudp%2FUdpMeta.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2Fudp%2FUdpMeta.java?ref=a535ad9051ecc5349eb839cefe64e1895ed771e2",
                "patch": "@@ -0,0 +1,152 @@\n+/*  \n+Copyright [2013-2015] eBay Software Foundation\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+    http://www.apache.org/licenses/LICENSE-2.0\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+ */\n+package io.parallec.core.bean.udp;\n+\n+import io.parallec.core.config.ParallecGlobalConfig;\n+import io.parallec.core.exception.ParallelTaskInvalidException;\n+import io.parallec.core.resources.TcpUdpSshPingResourceStore;\n+\n+import org.jboss.netty.channel.ChannelFactory;\n+import org.jboss.netty.channel.ChannelHandler;\n+import org.jboss.netty.channel.socket.DatagramChannelFactory;\n+import org.jboss.netty.handler.codec.string.StringDecoder;\n+import org.jboss.netty.handler.codec.string.StringEncoder;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+\n+\n+\n+/**\n+ * all ssh metadata except for the target host name. also those timeout configs\n+ * and\n+ * \n+ * @author Yuanteng (Jeff) Pei\n+ *\n+ */\n+public class UdpMeta {\n+    \n+    /** The logger. */\n+    private static Logger logger = LoggerFactory.getLogger(UdpMeta.class);\n+\n+    public static final ChannelHandler stringDecoder = new StringDecoder();\n+    public static final ChannelHandler stringEncoder = new StringEncoder();\n+    \n+\n+    /** The command */\n+    private String command;\n+\n+    /** The udp port. */\n+    private Integer udpPort;\n+\n+    private Integer udpIdleTimeoutSec;\n+    \n+    private DatagramChannelFactory channelFactory;\n+    \n+    public UdpMeta(String command, int udpPort, int udpIdleTimeoutSec,\n+            DatagramChannelFactory channelFactory) {\n+        super();\n+        this.command = command;\n+        this.udpPort = udpPort;\n+        this.udpIdleTimeoutSec = udpIdleTimeoutSec;\n+        this.channelFactory = channelFactory;\n+        \n+    }\n+\n+\n+    public UdpMeta() {\n+        super();\n+        this.command=null;\n+        this.udpPort=null;\n+        this.channelFactory=null;\n+        this.udpIdleTimeoutSec= null;\n+        \n+    }\n+\n+    public boolean validation() throws ParallelTaskInvalidException {\n+\n+        if (this.command == null) {\n+            throw new ParallelTaskInvalidException(\n+                    \"command is null for UDP\");\n+        }\n+\n+        if (this.udpPort == null) {\n+            throw new ParallelTaskInvalidException(\"udpPort is null. please set\");\n+        }\n+        \n+        if (this.udpIdleTimeoutSec == null) {\n+            logger.info(\"SET DEFAULT UDP CONNECT TIMEOUT: UDP connectTimeoutMillis is set as default\");\n+            this.udpIdleTimeoutSec= ParallecGlobalConfig.udpIdleTimeoutSecDefault;\n+        }\n+        \n+        \n+        if (this.channelFactory == null) {\n+            logger.info(\"SET DEFAULT UDP NETTY CHANNEL FACTORY: UDP channelFactory is set as default\");\n+            this.channelFactory=TcpUdpSshPingResourceStore.getInstance().getDatagramChannelFactory();\n+        }\n+\n+        return true;\n+\n+    }\n+    public String getCommand() {\n+        return command;\n+    }\n+\n+    public void setCommand(String command) {\n+        this.command = command;\n+    }\n+\n+\n+    public ChannelFactory getChannelFactory() {\n+        return channelFactory;\n+    }\n+\n+\n+    public void setChannelFactory(DatagramChannelFactory channelFactory) {\n+        this.channelFactory = channelFactory;\n+    }\n+\n+\n+    public Integer getUdpPort() {\n+        return udpPort;\n+    }\n+\n+\n+    public void setUdpPort(Integer udpPort) {\n+        this.udpPort = udpPort;\n+    }\n+\n+\n+    public Integer getUdpIdleTimeoutSec() {\n+        return udpIdleTimeoutSec;\n+    }\n+\n+\n+    public void setUdpIdleTimeoutSec(Integer udpIdleTimeoutSec) {\n+        this.udpIdleTimeoutSec = udpIdleTimeoutSec;\n+    }\n+\n+\n+    @Override\n+    public String toString() {\n+        return \"UdpMeta [command=\" + command + \", udpPort=\" + udpPort\n+                + \", udpIdleTimeoutSec=\" + udpIdleTimeoutSec\n+                + \", channelFactory=\" + channelFactory + \"]\";\n+    }\n+\n+\n+\n+\n+ \n+\n+}"
            },
            {
                "sha": "8282c38023457cc75677fd6ef3de47ae7df6895a",
                "filename": "src/main/java/io/parallec/core/bean/udp/package-info.java",
                "status": "added",
                "additions": 8,
                "deletions": 0,
                "changes": 8,
                "blob_url": "https://github.com/eBay/parallec/blob/a535ad9051ecc5349eb839cefe64e1895ed771e2/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2Fudp%2Fpackage-info.java",
                "raw_url": "https://github.com/eBay/parallec/raw/a535ad9051ecc5349eb839cefe64e1895ed771e2/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2Fudp%2Fpackage-info.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2Fudp%2Fpackage-info.java?ref=a535ad9051ecc5349eb839cefe64e1895ed771e2",
                "patch": "@@ -0,0 +1,8 @@\n+/**\n+ * \n+ */\n+/**\n+ * @author ypei\n+ *\n+ */\n+package io.parallec.core.bean.udp;\n\\ No newline at end of file"
            },
            {
                "sha": "551b098afedc2a44f0cbd781f8611ff0b1faddca",
                "filename": "src/main/java/io/parallec/core/config/ParallecGlobalConfig.java",
                "status": "modified",
                "additions": 3,
                "deletions": 0,
                "changes": 3,
                "blob_url": "https://github.com/eBay/parallec/blob/a535ad9051ecc5349eb839cefe64e1895ed771e2/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fconfig%2FParallecGlobalConfig.java",
                "raw_url": "https://github.com/eBay/parallec/raw/a535ad9051ecc5349eb839cefe64e1895ed771e2/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fconfig%2FParallecGlobalConfig.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fconfig%2FParallecGlobalConfig.java?ref=a535ad9051ecc5349eb839cefe64e1895ed771e2",
                "patch": "@@ -61,6 +61,9 @@ public class ParallecGlobalConfig {\n     \n     /** The tcp connection timeout millis default. */\n     public static int tcpConnectTimeoutMillisDefault = 2000;\n+\n+    /** The udp connection timeout millis default. */\n+    public static int udpIdleTimeoutSecDefault = 2;\n     \n     /** The tcp idle timeout seconds default. */\n     public static int tcpIdleTimeoutSecDefault = 5;"
            },
            {
                "sha": "97fcb844d77bf70cb48d036bffa69ceda193b74a",
                "filename": "src/main/java/io/parallec/core/exception/TcpUdpRequestCreateException.java",
                "status": "renamed",
                "additions": 3,
                "deletions": 3,
                "changes": 6,
                "blob_url": "https://github.com/eBay/parallec/blob/a535ad9051ecc5349eb839cefe64e1895ed771e2/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fexception%2FTcpUdpRequestCreateException.java",
                "raw_url": "https://github.com/eBay/parallec/raw/a535ad9051ecc5349eb839cefe64e1895ed771e2/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fexception%2FTcpUdpRequestCreateException.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fexception%2FTcpUdpRequestCreateException.java?ref=a535ad9051ecc5349eb839cefe64e1895ed771e2",
                "patch": "@@ -16,20 +16,20 @@\n /**\n  * The Class HttpRequestCreateException.\n  */\n-public class TcpRequestCreateException extends RuntimeException {\n+public class TcpUdpRequestCreateException extends RuntimeException {\n \n     /** The Constant serialVersionUID. */\n     private static final long serialVersionUID = 1L;\n \n     /**\n-     * Instantiates a new TCP request create exception.\n+     * Instantiates a new TCP / UDP request create exception.\n      *\n      * @param error\n      *            the error\n      * @param t\n      *            the t\n      */\n-    public TcpRequestCreateException(String error, Exception t) {\n+    public TcpUdpRequestCreateException(String error, Exception t) {\n         super(error, t);\n     }\n ",
                "previous_filename": "src/main/java/io/parallec/core/exception/TcpRequestCreateException.java"
            },
            {
                "sha": "2e6f4bff1935575e16f2528e8f3646f7c7165055",
                "filename": "src/main/java/io/parallec/core/resources/TcpUdpSshPingResourceStore.java",
                "status": "renamed",
                "additions": 41,
                "deletions": 17,
                "changes": 58,
                "blob_url": "https://github.com/eBay/parallec/blob/a535ad9051ecc5349eb839cefe64e1895ed771e2/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fresources%2FTcpUdpSshPingResourceStore.java",
                "raw_url": "https://github.com/eBay/parallec/raw/a535ad9051ecc5349eb839cefe64e1895ed771e2/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fresources%2FTcpUdpSshPingResourceStore.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fresources%2FTcpUdpSshPingResourceStore.java?ref=a535ad9051ecc5349eb839cefe64e1895ed771e2",
                "patch": "@@ -16,49 +16,63 @@\n import java.util.concurrent.Executors;\n \n import org.jboss.netty.channel.ChannelFactory;\n+import org.jboss.netty.channel.socket.DatagramChannelFactory;\n import org.jboss.netty.channel.socket.nio.NioClientSocketChannelFactory;\n+import org.jboss.netty.channel.socket.nio.NioDatagramChannelFactory;\n import org.jboss.netty.util.HashedWheelTimer;\n \n /**\n- * Provide external resources needed for netty based TCP worker:\n- * ChannelFactory and HashedWheelTimer timer\n+ * Provide external resources needed for netty based TCP/UDP worker: ChannelFactory\n+ * and HashedWheelTimer timer\n  *\n  * @author Yuanteng (Jeff) Pei\n  */\n-public class TcpSshPingResourceStore {\n-\n+public class TcpUdpSshPingResourceStore {\n \n     /** The singleton instance. */\n-    private final static TcpSshPingResourceStore instance = new TcpSshPingResourceStore();\n+    private final static TcpUdpSshPingResourceStore instance = new TcpUdpSshPingResourceStore();\n \n-    public static TcpSshPingResourceStore getInstance() {\n+    public static TcpUdpSshPingResourceStore getInstance() {\n         return instance;\n     }\n-    private ChannelFactory channelFactory; \n+\n+    private ChannelFactory channelFactory;\n+    private DatagramChannelFactory datagramChannelFactory;\n     private HashedWheelTimer timer = null;\n-    \n-    private ExecutorService threadPoolForSshPing = Executors.newCachedThreadPool();\n-    \n-    public void shutdown(){\n-        if(channelFactory!=null){\n+\n+    private ExecutorService threadPoolForSshPing = Executors\n+            .newCachedThreadPool();\n+\n+    public void shutdown() {\n+        if (channelFactory != null) {\n             channelFactory.releaseExternalResources();\n         }\n-        if(timer!=null) timer.stop();\n+        \n+        if (datagramChannelFactory != null) {\n+            channelFactory.releaseExternalResources();\n+        }\n+        if (timer != null)\n+            timer.stop();\n     }\n+\n     /**\n      * Instantiates a new http client store.\n      */\n-    private TcpSshPingResourceStore() {\n+    private TcpUdpSshPingResourceStore() {\n         init();\n     }\n \n     /**\n-     * Initialize\n+     * Initialize; cached threadpool is safe as it is releasing resources automatically if idle\n      */\n     public synchronized void init() {\n         channelFactory = new NioClientSocketChannelFactory(\n                 Executors.newCachedThreadPool(),\n                 Executors.newCachedThreadPool());\n+\n+        datagramChannelFactory = new NioDatagramChannelFactory(\n+                Executors.newCachedThreadPool());\n+\n         timer = new HashedWheelTimer();\n     }\n \n@@ -71,15 +85,19 @@ public synchronized void reinit() {\n         shutdown();\n         init();\n     }\n+\n     public ChannelFactory getChannelFactory() {\n         return channelFactory;\n     }\n+\n     public void setChannelFactory(ChannelFactory channelFactory) {\n         this.channelFactory = channelFactory;\n     }\n+\n     public HashedWheelTimer getTimer() {\n         return timer;\n     }\n+\n     public void setTimer(HashedWheelTimer timer) {\n         this.timer = timer;\n     }\n@@ -91,7 +109,13 @@ public ExecutorService getThreadPoolForSshPing() {\n     public void setThreadPoolForSshPing(ExecutorService threadPoolForSshPing) {\n         this.threadPoolForSshPing = threadPoolForSshPing;\n     }\n- \n-   \n+\n+    public DatagramChannelFactory getDatagramChannelFactory() {\n+        return datagramChannelFactory;\n+    }\n+\n+    public void setDatagramChannelFactory(DatagramChannelFactory datagramChannelFactory) {\n+        this.datagramChannelFactory = datagramChannelFactory;\n+    }\n \n }",
                "previous_filename": "src/main/java/io/parallec/core/resources/TcpSshPingResourceStore.java"
            },
            {
                "sha": "685974c2e4d62b7c5f22f989a368e6f951f476c1",
                "filename": "src/test/java/io/parallec/core/actor/OperationWorkerTest.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/a535ad9051ecc5349eb839cefe64e1895ed771e2/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FOperationWorkerTest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/a535ad9051ecc5349eb839cefe64e1895ed771e2/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FOperationWorkerTest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FOperationWorkerTest.java?ref=a535ad9051ecc5349eb839cefe64e1895ed771e2",
                "patch": "@@ -53,7 +53,7 @@ public void testOperationWorkerWrongMsgType() {\n                                     HttpMethod.GET, false, null, \n                                     null,\n                                     new HashMap<String, Object>(),\n-                                    null,null, null), HttpClientStore\n+                                    null,null, null,null), HttpClientStore\n                                     .getInstance().getEmbedClientFast(), null\n \n                     ));"
            },
            {
                "sha": "1e214bb519b7c21c9f84c5402e7481fcdb2d33e7",
                "filename": "src/test/java/io/parallec/core/client/ParallelTaskTest.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/a535ad9051ecc5349eb839cefe64e1895ed771e2/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fclient%2FParallelTaskTest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/a535ad9051ecc5349eb839cefe64e1895ed771e2/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fclient%2FParallelTaskTest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fclient%2FParallelTaskTest.java?ref=a535ad9051ecc5349eb839cefe64e1895ed771e2",
                "patch": "@@ -59,7 +59,7 @@ public static void setUp() throws Exception {\n     public static void shutdown() throws Exception {\n         pc.releaseExternalResources();\n     }\n-\n+    \n     @Test\n     public void testCancelException() {\n         ParallelTask task = ExecutionManagerTest.genParallelTask();"
            },
            {
                "sha": "45c4b6993162b9304e2901ca709340724c49cb93",
                "filename": "src/test/java/io/parallec/core/main/tcp/TcpClientTest.java",
                "status": "modified",
                "additions": 0,
                "deletions": 5,
                "changes": 5,
                "blob_url": "https://github.com/eBay/parallec/blob/a535ad9051ecc5349eb839cefe64e1895ed771e2/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Ftcp%2FTcpClientTest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/a535ad9051ecc5349eb839cefe64e1895ed771e2/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Ftcp%2FTcpClientTest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Ftcp%2FTcpClientTest.java?ref=a535ad9051ecc5349eb839cefe64e1895ed771e2",
                "patch": "@@ -57,10 +57,5 @@ public void telClientTest() {\n        \n     }\n \n-    //@Test(timeout = 20000)\n-    public void asyncPollerWrongJobIdRegexTest() {\n-\n-\n-    }\n \n }"
            },
            {
                "sha": "3b90f8e552cfe42124a60feb106b8bacadf44b0d",
                "filename": "src/test/java/io/parallec/core/main/tcp/TcpWorkerIdleTest.java",
                "status": "modified",
                "additions": 2,
                "deletions": 2,
                "changes": 4,
                "blob_url": "https://github.com/eBay/parallec/blob/a535ad9051ecc5349eb839cefe64e1895ed771e2/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Ftcp%2FTcpWorkerIdleTest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/a535ad9051ecc5349eb839cefe64e1895ed771e2/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Ftcp%2FTcpWorkerIdleTest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Ftcp%2FTcpWorkerIdleTest.java?ref=a535ad9051ecc5349eb839cefe64e1895ed771e2",
                "patch": "@@ -8,7 +8,7 @@\n import io.parallec.core.actor.message.type.RequestWorkerMsgType;\n import io.parallec.core.bean.tcp.TcpMeta;\n import io.parallec.core.main.tcp.sampleserver.TcpServerThread;\n-import io.parallec.core.resources.TcpSshPingResourceStore;\n+import io.parallec.core.resources.TcpUdpSshPingResourceStore;\n \n import java.util.concurrent.TimeUnit;\n \n@@ -65,7 +65,7 @@ public static void shutdown() throws Exception {\n \n     public TcpMeta getTcpMetaSample(){\n         TcpMeta tcpMeta = new TcpMeta(\"hadoop\", 10081,1000, 2 \n-                , TcpSshPingResourceStore.getInstance().getChannelFactory() );\n+                , TcpUdpSshPingResourceStore.getInstance().getChannelFactory() );\n         return tcpMeta;\n     }\n     "
            },
            {
                "sha": "13e7d88268486e5b680b5b42b9805b56528ddb5d",
                "filename": "src/test/java/io/parallec/core/main/tcp/TcpWorkerTest.java",
                "status": "modified",
                "additions": 62,
                "deletions": 2,
                "changes": 64,
                "blob_url": "https://github.com/eBay/parallec/blob/a535ad9051ecc5349eb839cefe64e1895ed771e2/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Ftcp%2FTcpWorkerTest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/a535ad9051ecc5349eb839cefe64e1895ed771e2/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Ftcp%2FTcpWorkerTest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Ftcp%2FTcpWorkerTest.java?ref=a535ad9051ecc5349eb839cefe64e1895ed771e2",
                "patch": "@@ -8,7 +8,7 @@\n import io.parallec.core.actor.message.type.RequestWorkerMsgType;\n import io.parallec.core.bean.tcp.TcpMeta;\n import io.parallec.core.main.tcp.sampleserver.TcpServerThread;\n-import io.parallec.core.resources.TcpSshPingResourceStore;\n+import io.parallec.core.resources.TcpUdpSshPingResourceStore;\n \n import java.util.concurrent.TimeUnit;\n \n@@ -59,7 +59,7 @@ public static void shutdown() throws Exception {\n \n     public TcpMeta getTcpMetaSample(){\n         TcpMeta tcpMeta = new TcpMeta(\"hadoop\", 10081,1000, 2 \n-                , TcpSshPingResourceStore.getInstance().getChannelFactory() );\n+                , TcpUdpSshPingResourceStore.getInstance().getChannelFactory() );\n         return tcpMeta;\n     }\n     \n@@ -161,8 +161,68 @@ public void testTcpWorkerException() {\n         }\n         TcpWorker.setLogger(LoggerFactory.getLogger(TcpWorker.class));\n     }// end func\n+    \n+    \n+    /**\n+     * fake a NPE in bootStrapTcpClient\n+     */\n+    @Test\n+    public void testBootStrapTcpClient() {\n+        logger.info(\"IN testTcpWorkerException\");\n+        ActorRef asyncWorker = null;\n+        try {\n+            \n+            // Start new job\n+            TcpMeta meta = getTcpMetaSample();\n+            meta.setChannelFactory(null);\n+            int actorMaxOperationTimeoutSec = 15;\n+            asyncWorker = ActorConfig.createAndGetActorSystem().actorOf(\n+                    Props.create(TcpWorker.class, actorMaxOperationTimeoutSec,\n+                            meta, LOCALHOST));\n+            \n+            final FiniteDuration duration = Duration.create(20,\n+                    TimeUnit.SECONDS);\n+            Future<Object> future = Patterns\n+                    .ask(asyncWorker, RequestWorkerMsgType.PROCESS_REQUEST,\n+                            new Timeout(duration));\n+            ResponseOnSingeRequest response = (ResponseOnSingeRequest) Await\n+                    .result(future, duration);\n+\n+            \n+\n+            logger.info(\"\\nWorker response:\" + response.toString());\n+        } catch (Throwable ex) {\n+        }\n+    }// end func\n+\n+\n+    @Test\n+    public void testTcpWorkerBadMsgTypeDefaultType() {\n+        \n+        logger.info(\"IN testUdpWorkerBadMsgTypeDefaultType\");\n+        ActorRef asyncWorker = null;\n+        try {\n+            // made a timeout\n+            int actorMaxOperationTimeoutSec = 15;\n+            asyncWorker = ActorConfig.createAndGetActorSystem().actorOf(\n+                    Props.create(TcpWorker.class, actorMaxOperationTimeoutSec,\n+                            getTcpMetaSample(), LOCALHOST));\n+            \n+            final FiniteDuration duration = Duration.create(20,\n+                    TimeUnit.SECONDS);\n+            Future<Object> future = Patterns\n+                    .ask(asyncWorker, RequestWorkerMsgType.CHECK_FUTURE_STATE,\n+                            new Timeout(duration));\n+            ResponseOnSingeRequest response = (ResponseOnSingeRequest) Await\n+                    .result(future, duration);\n \n+            logger.info(\"\\nWorker response:\" + response.toString());\n+        } catch (Throwable ex) {\n \n+            logger.error(\"Exception in test : \" + ex);\n+        }\n+    }// end func\n+    \n \n     @Test\n     public void testTcpWorkerBadMsgType() {"
            },
            {
                "sha": "45fb4cf3d3d5689a5f80a0cd36125c52785cee88",
                "filename": "src/test/java/io/parallec/core/main/udp/ParallelClientUdpBasicTest.java",
                "status": "added",
                "additions": 128,
                "deletions": 0,
                "changes": 128,
                "blob_url": "https://github.com/eBay/parallec/blob/a535ad9051ecc5349eb839cefe64e1895ed771e2/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fudp%2FParallelClientUdpBasicTest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/a535ad9051ecc5349eb839cefe64e1895ed771e2/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fudp%2FParallelClientUdpBasicTest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fudp%2FParallelClientUdpBasicTest.java?ref=a535ad9051ecc5349eb839cefe64e1895ed771e2",
                "patch": "@@ -0,0 +1,128 @@\n+package io.parallec.core.main.udp;\n+\n+import io.parallec.core.ParallecResponseHandler;\n+import io.parallec.core.ParallelClient;\n+import io.parallec.core.ResponseOnSingleTask;\n+import io.parallec.core.TestBase;\n+import io.parallec.core.exception.ParallelTaskInvalidException;\n+import io.parallec.core.main.udp.sampleserver.UdpServerThread;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import org.apache.http.util.Asserts;\n+import org.junit.AfterClass;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+\n+public class ParallelClientUdpBasicTest extends TestBase {\n+\n+    private static ParallelClient pc;\n+    private static UdpServerThread serverThread;\n+\n+    @BeforeClass\n+    public static void setUp() throws Exception {\n+        pc = new ParallelClient();\n+        boolean similateSlowResponse = false;\n+        serverThread = new UdpServerThread(similateSlowResponse);\n+        serverThread.start();\n+\n+        try {\n+            Thread.sleep(500L);\n+        } catch (Exception e) {\n+            ;\n+        }\n+    }\n+\n+    @AfterClass\n+    public static void shutdown() throws Exception {\n+        pc.releaseExternalResources();\n+        serverThread.setShutdown(true);\n+\n+        try {\n+            Thread.sleep(500L);\n+        } catch (Exception e) {\n+            ;\n+        }\n+    }\n+\n+\n+    /**\n+     * http://www.jeffpei.com/job_b.html http://www.restsuperman.com/job_c.html\n+     */\n+    @Test(timeout = 50000)\n+    public void UdpTest() {\n+        Map<String, Object> responseContext = new HashMap<String, Object>();\n+        pc.prepareUdp(\"hadoopmonudp\").setConcurrency(300)\n+                .setTargetHostsFromString(\"localhost\")\n+                .setUdpPort(10091)\n+                .setResponseContext(responseContext)\n+                .execute(new ParallecResponseHandler() {\n+\n+                    @Override\n+                    public void onCompleted(ResponseOnSingleTask res,\n+                            Map<String, Object> responseContext) {\n+                        logger.info(\"Responose:\" + res.getResponseContent() + \" host: \"\n+                                + res.getHost() + \" errmsg: \"\n+                                + res.getErrorMessage());\n+                        responseContext.put(\"resp\",\n+                                res.getResponseContent());\n+\n+                    }\n+\n+                });\n+\n+        String resp = (String) responseContext.get(\"resp\");\n+        Asserts.check(resp.contains(\"AT_UDP_SERVER\"),\n+                \"fail.UdpTest with whole PC flow\");\n+\n+       \n+    }\n+    \n+    @Test(timeout = 50000)\n+    public void UdpExpectedRefusedConnectionTest() {\n+        Map<String, Object> responseContext = new HashMap<String, Object>();\n+        pc.prepareUdp(\"hadoopmon\").setConcurrency(300)\n+                .setTargetHostsFromString(\"localhost\")\n+                .setUdpPort(10099)\n+                .setResponseContext(responseContext)\n+                .execute(new ParallecResponseHandler() {\n+\n+                    @Override\n+                    public void onCompleted(ResponseOnSingleTask res,\n+                            Map<String, Object> responseContext) {\n+                        logger.info(\"Responose:\" + res.getResponseContent() + \" host: \"\n+                                + res.getHost() + \" errmsg: \"\n+                                + res.getErrorMessage());\n+                        responseContext.put(\"resp\",\n+                                res.getStatusCode());\n+\n+                    }\n+\n+                });\n+\n+        String resp = (String) responseContext.get(\"resp\");\n+        Asserts.check(resp.contains(\"FAILURE\"),\n+                \"fail.TcpTest with expected wrong port\");\n+\n+       \n+    }\n+    \n+    @Test\n+    public void UdpTestFunctionsExceptions() {\n+        \n+        try{\n+            \n+            pc.prepareUdp(\"hadoopmonudp\").setConcurrency(300)\n+            .setTargetHostsFromString(\"localhost\")\n+            .setHttpPollable(true)\n+            .validation()\n+            ;\n+        }catch(ParallelTaskInvalidException e){\n+            logger.info(\"EXPECTED error\" + e.getLocalizedMessage());\n+        }\n+\n+       \n+    }\n+\n+}"
            },
            {
                "sha": "b6984d52d70d493b30273ad005111cbc4267d404",
                "filename": "src/test/java/io/parallec/core/main/udp/ParallelClientUdpSlowServerTest.java",
                "status": "added",
                "additions": 117,
                "deletions": 0,
                "changes": 117,
                "blob_url": "https://github.com/eBay/parallec/blob/a535ad9051ecc5349eb839cefe64e1895ed771e2/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fudp%2FParallelClientUdpSlowServerTest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/a535ad9051ecc5349eb839cefe64e1895ed771e2/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fudp%2FParallelClientUdpSlowServerTest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fudp%2FParallelClientUdpSlowServerTest.java?ref=a535ad9051ecc5349eb839cefe64e1895ed771e2",
                "patch": "@@ -0,0 +1,117 @@\n+package io.parallec.core.main.udp;\n+\n+import io.parallec.core.ParallecResponseHandler;\n+import io.parallec.core.ParallelClient;\n+import io.parallec.core.ResponseOnSingleTask;\n+import io.parallec.core.TestBase;\n+import io.parallec.core.main.udp.sampleserver.UdpServerThread;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import org.apache.http.util.Asserts;\n+import org.junit.AfterClass;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+\n+public class ParallelClientUdpSlowServerTest extends TestBase {\n+\n+    private static ParallelClient pc;\n+    private static UdpServerThread serverThread;\n+\n+    @BeforeClass\n+    public static void setUp() throws Exception {\n+        pc = new ParallelClient();\n+        boolean similateSlowResponse = true;\n+        serverThread = new UdpServerThread(similateSlowResponse);\n+        serverThread.start();\n+\n+        try {\n+            Thread.sleep(500L);\n+        } catch (Exception e) {\n+            ;\n+        }\n+    }\n+\n+    @AfterClass\n+    public static void shutdown() throws Exception {\n+        pc.releaseExternalResources();\n+        serverThread.setShutdown(true);\n+\n+        try {\n+            Thread.sleep(500L);\n+        } catch (Exception e) {\n+            ;\n+        }\n+    }\n+\n+    /**\n+     * should throw exception of idle timeout.\n+     * \n+     * UDP server will sleep 5 seconds.  however this \n+     */\n+    @Test(timeout = 50000)\n+    public void UdpTestWithSlowServer() {\n+        Map<String, Object> responseContext = new HashMap<String, Object>();\n+        pc.prepareUdp(\"hadoopmonudp\").setConcurrency(300)\n+                .setTargetHostsFromString(\"localhost\")\n+                .setUdpPort(10091)\n+                .setResponseContext(responseContext)\n+                .setUdpIdleTimeoutSec(1)\n+                .execute(new ParallecResponseHandler() {\n+\n+                    @Override\n+                    public void onCompleted(ResponseOnSingleTask res,\n+                            Map<String, Object> responseContext) {\n+                        logger.info(\"Responose:\" + res.getResponseContent() + \" host: \"\n+                                + res.getHost() + \" errmsg: \"\n+                                + res.getErrorMessage());\n+                        responseContext.put(\"respErrMsg\",\n+                                res.getErrorMessage());\n+\n+                    }\n+\n+                });\n+\n+        String respErrMsg = (String) responseContext.get(\"respErrMsg\");\n+        Asserts.check(respErrMsg.contains(\"UDP idle (read) timeout\"),\n+                \"fail.UdpTest with slow server idle timeout flow\");\n+       \n+    }\n+    \n+\n+    /**\n+     * should throw exception of idle timeout.\n+     * \n+     * UDP server will sleep 5 seconds.  now set idle timeout to be 12 sec\n+     */\n+    @Test(timeout = 50000)\n+    public void UdpTestWithSlowServerWithLongerIdleTimeout() {\n+        Map<String, Object> responseContext = new HashMap<String, Object>();\n+        pc.prepareUdp(\"hadoopmonudp\").setConcurrency(300)\n+                .setTargetHostsFromString(\"localhost\")\n+                .setUdpPort(10091)\n+                .setResponseContext(responseContext)\n+                .setUdpIdleTimeoutSec(10)\n+                .execute(new ParallecResponseHandler() {\n+\n+                    @Override\n+                    public void onCompleted(ResponseOnSingleTask res,\n+                            Map<String, Object> responseContext) {\n+                        logger.info(\"Responose:\" + res.getResponseContent() + \" host: \"\n+                                + res.getHost() + \" errmsg: \"\n+                                + res.getErrorMessage());\n+                        responseContext.put(\"resp\",\n+                                res.getResponseContent());\n+\n+                    }\n+\n+                });\n+        String resp = (String) responseContext.get(\"resp\");\n+        Asserts.check(resp.contains(\"hadoopmonudp\"),\n+                \"fail.UdpTest with slow server longer idle timeout flow\");\n+       \n+    }\n+ \n+   \n+}"
            },
            {
                "sha": "429e91be216bfea1206681e386e7d635b76d5674",
                "filename": "src/test/java/io/parallec/core/main/udp/UdpWorkerTest.java",
                "status": "added",
                "additions": 282,
                "deletions": 0,
                "changes": 282,
                "blob_url": "https://github.com/eBay/parallec/blob/a535ad9051ecc5349eb839cefe64e1895ed771e2/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fudp%2FUdpWorkerTest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/a535ad9051ecc5349eb839cefe64e1895ed771e2/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fudp%2FUdpWorkerTest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fudp%2FUdpWorkerTest.java?ref=a535ad9051ecc5349eb839cefe64e1895ed771e2",
                "patch": "@@ -0,0 +1,282 @@\n+package io.parallec.core.main.udp;\n+\n+import io.parallec.core.ParallelClient;\n+import io.parallec.core.TestBase;\n+import io.parallec.core.actor.ActorConfig;\n+import io.parallec.core.actor.UdpWorker;\n+import io.parallec.core.actor.message.ResponseOnSingeRequest;\n+import io.parallec.core.actor.message.type.RequestWorkerMsgType;\n+import io.parallec.core.bean.udp.UdpMeta;\n+import io.parallec.core.main.udp.sampleserver.UdpServerThread;\n+import io.parallec.core.resources.TcpUdpSshPingResourceStore;\n+\n+import java.util.concurrent.TimeUnit;\n+\n+import org.junit.AfterClass;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+import org.slf4j.LoggerFactory;\n+\n+import scala.concurrent.Await;\n+import scala.concurrent.Future;\n+import scala.concurrent.duration.Duration;\n+import scala.concurrent.duration.FiniteDuration;\n+import akka.actor.ActorRef;\n+import akka.actor.Props;\n+import akka.pattern.Patterns;\n+import akka.util.Timeout;\n+\n+public class UdpWorkerTest extends TestBase {\n+\n+    private static ParallelClient pc;\n+    private static UdpServerThread serverThread;\n+    \n+    @BeforeClass\n+    public static void setUp() throws Exception {\n+        pc = new ParallelClient();\n+\n+        serverThread = new UdpServerThread(false);\n+        serverThread.start();\n+\n+        try {\n+            Thread.sleep(500L);\n+        } catch (Exception e) {\n+            ;\n+        }\n+    }\n+\n+    @AfterClass\n+    public static void shutdown() throws Exception {\n+        pc.releaseExternalResources();\n+        serverThread.setShutdown(true);\n+\n+        try {\n+            Thread.sleep(2500L);\n+        } catch (Exception e) {\n+            ;\n+        }\n+    }\n+\n+    public UdpMeta getUdpMetaSample(){\n+        UdpMeta udpMeta = new UdpMeta(\"hadoop\", 10091,1000,  \n+                TcpUdpSshPingResourceStore.getInstance().getDatagramChannelFactory() );\n+        return udpMeta;\n+    }\n+    \n+    \n+    @Test\n+    public void testUdpWorkerNormalCheckComplete() {\n+        ActorRef asyncWorker = null;\n+        logger.info(\"IN testUdpWorkerNormalCheckComplete\");\n+        try {\n+            // Start new job\n+            \n+\n+            int actorMaxOperationTimeoutSec = 15;\n+            asyncWorker = ActorConfig.createAndGetActorSystem().actorOf(\n+                    Props.create(UdpWorker.class, actorMaxOperationTimeoutSec,\n+                            getUdpMetaSample(), LOCALHOST));\n+\n+            final FiniteDuration duration = Duration.create(20,\n+                    TimeUnit.SECONDS);\n+            Future<Object> future = Patterns\n+                    .ask(asyncWorker, RequestWorkerMsgType.PROCESS_REQUEST,\n+                            new Timeout(duration));\n+\n+            ResponseOnSingeRequest response = (ResponseOnSingeRequest) Await\n+                    .result(future, duration);\n+\n+            logger.info(\"\\nWorker response:\" + response.toString());\n+        } catch (Throwable ex) {\n+\n+            logger.error(\"Exception in test : \" + ex);\n+        }\n+    }// end func\n+    \n+    \n+    \n+    @Test\n+    public void testUdpWorkerActorTimeout() {\n+        ActorRef asyncWorker = null;\n+        logger.info(\"IN testUdpWorkerConnectionTimeout\");\n+        try {\n+            // Start new job\n+\n+            int actorMaxOperationTimeoutSec = 0;\n+            asyncWorker = ActorConfig.createAndGetActorSystem().actorOf(\n+                    Props.create(UdpWorker.class, actorMaxOperationTimeoutSec,\n+                            getUdpMetaSample(), LOCALHOST));\n+            \n+            final FiniteDuration duration = Duration.create(20,\n+                    TimeUnit.SECONDS);\n+            Future<Object> future = Patterns\n+                    .ask(asyncWorker, RequestWorkerMsgType.PROCESS_REQUEST,\n+                            new Timeout(duration));\n+\n+            ResponseOnSingeRequest response = (ResponseOnSingeRequest) Await\n+                    .result(future, duration);\n+\n+            logger.info(\"\\nWorker response:\" + response.toString());\n+        } catch (Throwable ex) {\n+\n+            logger.error(\"Exception in test : \" + ex);\n+        }\n+    }// end func\n+\n+    @Test\n+    public void testUdpWorkerDupAndCancel() {\n+        ActorRef asyncWorker = null;\n+        logger.info(\"IN testUdpWorkerDupAndCancel\");\n+        try {\n+            \n+            // Start new job\n+            \n+\n+            int actorMaxOperationTimeoutSec = 15;\n+            asyncWorker = ActorConfig.createAndGetActorSystem().actorOf(\n+                    Props.create(UdpWorker.class, actorMaxOperationTimeoutSec,\n+                            getUdpMetaSample(), LOCALHOST));\n+\n+            final FiniteDuration duration = Duration.create(20,\n+                    TimeUnit.SECONDS);\n+            Future<Object> future = Patterns\n+                    .ask(asyncWorker, RequestWorkerMsgType.PROCESS_REQUEST,\n+                            new Timeout(duration));\n+            // test dup\n+            asyncWorker.tell(RequestWorkerMsgType.PROCESS_REQUEST, asyncWorker);\n+\n+            // test cancel\n+            asyncWorker.tell(RequestWorkerMsgType.CANCEL, asyncWorker);\n+            ResponseOnSingeRequest response = (ResponseOnSingeRequest) Await\n+                    .result(future, duration);\n+\n+            \n+            logger.info(\"\\nWorker response:\" + response.toString());\n+            \n+        } catch (Throwable ex) {\n+\n+            logger.error(\"Exception in test : \" + ex);\n+        }\n+    }// end func\n+\n+    /**\n+     * fake a NPE of logger; do not forget to reset it or other tests will fail.\n+     */\n+    @Test\n+    public void testUdpWorkerException() {\n+        logger.info(\"IN testUdpWorkerException\");\n+        ActorRef asyncWorker = null;\n+        try {\n+            UdpWorker.setLogger(null);\n+            \n+            // Start new job\n+            int actorMaxOperationTimeoutSec = 15;\n+            asyncWorker = ActorConfig.createAndGetActorSystem().actorOf(\n+                    Props.create(UdpWorker.class, actorMaxOperationTimeoutSec,\n+                            getUdpMetaSample(), LOCALHOST));\n+            \n+            final FiniteDuration duration = Duration.create(20,\n+                    TimeUnit.SECONDS);\n+            Future<Object> future = Patterns\n+                    .ask(asyncWorker, RequestWorkerMsgType.CANCEL,\n+                            new Timeout(duration));\n+            ResponseOnSingeRequest response = (ResponseOnSingeRequest) Await\n+                    .result(future, duration);\n+\n+            \n+\n+            logger.info(\"\\nWorker response:\" + response.toString());\n+        } catch (Throwable ex) {\n+            logger.error(\"Exception in test : \" + ex);\n+        }\n+        UdpWorker.setLogger(LoggerFactory.getLogger(UdpWorker.class));\n+    }// end func\n+\n+    /**\n+     * fake a NPE in bootStrapTcpClient\n+     */\n+    @Test\n+    public void testBootStrapUdpClient() {\n+        logger.info(\"IN testTcpWorkerException\");\n+        ActorRef asyncWorker = null;\n+        try {\n+            \n+            // Start new job\n+            UdpMeta meta = getUdpMetaSample();\n+            meta.setChannelFactory(null);\n+            int actorMaxOperationTimeoutSec = 15;\n+            asyncWorker = ActorConfig.createAndGetActorSystem().actorOf(\n+                    Props.create(UdpWorker.class, actorMaxOperationTimeoutSec,\n+                            meta, LOCALHOST));\n+            \n+            final FiniteDuration duration = Duration.create(20,\n+                    TimeUnit.SECONDS);\n+            Future<Object> future = Patterns\n+                    .ask(asyncWorker, RequestWorkerMsgType.PROCESS_REQUEST,\n+                            new Timeout(duration));\n+            ResponseOnSingeRequest response = (ResponseOnSingeRequest) Await\n+                    .result(future, duration);\n+\n+            \n+\n+            logger.info(\"\\nWorker response:\" + response.toString());\n+        } catch (Throwable ex) {\n+        }\n+    }// end func\n+\n+    \n+    @Test\n+    public void testUdpWorkerBadMsgTypeDefaultType() {\n+        \n+        logger.info(\"IN testUdpWorkerBadMsgTypeDefaultType\");\n+        ActorRef asyncWorker = null;\n+        try {\n+            // made a timeout\n+            int actorMaxOperationTimeoutSec = 15;\n+            asyncWorker = ActorConfig.createAndGetActorSystem().actorOf(\n+                    Props.create(UdpWorker.class, actorMaxOperationTimeoutSec,\n+                            getUdpMetaSample(), LOCALHOST));\n+            \n+            final FiniteDuration duration = Duration.create(20,\n+                    TimeUnit.SECONDS);\n+            Future<Object> future = Patterns\n+                    .ask(asyncWorker, RequestWorkerMsgType.CHECK_FUTURE_STATE,\n+                            new Timeout(duration));\n+            ResponseOnSingeRequest response = (ResponseOnSingeRequest) Await\n+                    .result(future, duration);\n+\n+            logger.info(\"\\nWorker response:\" + response.toString());\n+        } catch (Throwable ex) {\n+\n+            logger.error(\"Exception in test : \" + ex);\n+        }\n+    }// end func\n+    \n+    @Test\n+    public void testUdpWorkerBadMsgType() {\n+        \n+        logger.info(\"IN testUdpWorkerBadMsgType\");\n+        ActorRef asyncWorker = null;\n+        try {\n+            // made a timeout\n+            int actorMaxOperationTimeoutSec = 15;\n+            asyncWorker = ActorConfig.createAndGetActorSystem().actorOf(\n+                    Props.create(UdpWorker.class, actorMaxOperationTimeoutSec,\n+                            getUdpMetaSample(), LOCALHOST));\n+            \n+            final FiniteDuration duration = Duration.create(20,\n+                    TimeUnit.SECONDS);\n+            Future<Object> future = Patterns\n+                    .ask(asyncWorker, new Integer(0),\n+                            new Timeout(duration));\n+            ResponseOnSingeRequest response = (ResponseOnSingeRequest) Await\n+                    .result(future, duration);\n+\n+            logger.info(\"\\nWorker response:\" + response.toString());\n+        } catch (Throwable ex) {\n+\n+            logger.error(\"Exception in test : \" + ex);\n+        }\n+    }// end func\n+\n+}"
            },
            {
                "sha": "baf1596359f87cae6587de89870fdc0aafa58b5f",
                "filename": "src/test/java/io/parallec/core/main/udp/package-info.java",
                "status": "added",
                "additions": 8,
                "deletions": 0,
                "changes": 8,
                "blob_url": "https://github.com/eBay/parallec/blob/a535ad9051ecc5349eb839cefe64e1895ed771e2/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fudp%2Fpackage-info.java",
                "raw_url": "https://github.com/eBay/parallec/raw/a535ad9051ecc5349eb839cefe64e1895ed771e2/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fudp%2Fpackage-info.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fudp%2Fpackage-info.java?ref=a535ad9051ecc5349eb839cefe64e1895ed771e2",
                "patch": "@@ -0,0 +1,8 @@\n+/**\n+ * \n+ */\n+/**\n+ * @author ypei\n+ *\n+ */\n+package io.parallec.core.main.udp;\n\\ No newline at end of file"
            },
            {
                "sha": "429d93747909e3e1fdcf2ac90cc41895eabff154",
                "filename": "src/test/java/io/parallec/core/main/udp/sampleserver/UdpEchoServer.java",
                "status": "added",
                "additions": 187,
                "deletions": 0,
                "changes": 187,
                "blob_url": "https://github.com/eBay/parallec/blob/a535ad9051ecc5349eb839cefe64e1895ed771e2/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fudp%2Fsampleserver%2FUdpEchoServer.java",
                "raw_url": "https://github.com/eBay/parallec/raw/a535ad9051ecc5349eb839cefe64e1895ed771e2/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fudp%2Fsampleserver%2FUdpEchoServer.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fudp%2Fsampleserver%2FUdpEchoServer.java?ref=a535ad9051ecc5349eb839cefe64e1895ed771e2",
                "patch": "@@ -0,0 +1,187 @@\n+/*  \n+Copyright [2013-2015] eBay Software Foundation\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+    http://www.apache.org/licenses/LICENSE-2.0\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+*/\n+package io.parallec.core.main.udp.sampleserver;\n+\n+\n+import io.parallec.core.util.PcStringUtils;\n+\n+import java.io.IOException;\n+import java.net.DatagramPacket;\n+import java.net.DatagramSocket;\n+import java.net.InetAddress;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * Sample TCP Echo Server on port 10081. \n+ * will echo back 3 lines of response that include the request string, \n+ * then auto close the connection\n+ * \n+ * @author Yuanteng (Jeff) Pei\n+ */\n+public class UdpEchoServer {\n+\n+    /** The Constant logger. */\n+    protected static final Logger logger = LoggerFactory\n+            .getLogger(UdpEchoServer.class);\n+\n+    /** The server socket. */\n+    private DatagramSocket serverSocket;\n+    \n+\n+    \n+    /** The port. */\n+    private int port = 10091;\n+\n+    /** The similateSlowResponse. */\n+    private boolean similateSlowResponse;\n+    \n+    /**\n+     * Instantiates a new tcp server.\n+     *\n+     * @param similateSlowResponse the similateSlowResponse\n+     */\n+    public UdpEchoServer(boolean similateSlowResponse) {\n+        try {\n+            \n+            this.similateSlowResponse = similateSlowResponse;\n+            \n+            setServer(new DatagramSocket(port));\n+        } catch (Exception ex) {\n+            System.err.println(\"Could not listen on port: \"\n+                    + port + \" \" + PcStringUtils.printStackTrace(ex));\n+        }\n+    }\n+\n+\n+    /**\n+     * The main method.\n+     *\n+     * @param args the arguments\n+     */\n+    public static void main(String[] args) {\n+        try {\n+            UdpEchoServer server = new UdpEchoServer(false);\n+            server.serve();\n+            \n+        } catch (Exception e) {\n+            System.err.println(\"Couldn't start server:\\n\" + e);\n+        }\n+    }\n+    \n+    /**\n+     * Stop.\n+     */\n+    public void stop() {\n+        try{\n+            \n+            getServerSocket().close();\n+        }catch(Exception e){\n+            logger.error(\"error in stop server socket \", e);\n+        }\n+    }\n+\n+    /**\n+     * Serve.\n+     *\n+     * @throws IOException Signals that an I/O exception has occurred.\n+     */\n+    public void serve() throws IOException {\n+        \n+        try {\n+            logger.info(\"UDP Echo Server Started on port \" \n+                    +port\n+                    + \" . \\nWaiting for connection.....\");\n+            while (true) {\n+                byte[] receiveData = new byte[512];\n+                byte[] sendData = new byte[512];\n+                \n+                if(this.similateSlowResponse ) {\n+                    logger.info(\"similateSlowResponse is on. start to sleep 4 sec\");\n+                    Thread.sleep(1000*4L);\n+                }\n+                \n+                \n+                DatagramPacket receivePacket = new DatagramPacket(receiveData, receiveData.length);\n+                serverSocket.receive(receivePacket);\n+\n+                logger.info(\"Waiting for input.....\");\n+                String inputLine = new String( receivePacket.getData());\n+                inputLine = inputLine.replaceAll(\"[\\n\\r]\", \"\");\n+                StringBuilder sendContentSb = new StringBuilder();\n+                if(inputLine!=null){\n+                    \n+                    logger.info(\"Server: \" + inputLine);\n+                    for(int i=1; i<=1; i++){\n+                        String msg =\"L: \"+i+ \" \" +inputLine +\" AT_UDP_SERVER  \";\n+                        sendContentSb.append(msg);\n+                        logger.info(msg);\n+                    }\n+                }\n+                \n+                int senderPort = receivePacket.getPort();\n+                \n+                InetAddress senderAddress = receivePacket.getAddress();\n+                \n+                sendData = sendContentSb.toString().getBytes();\n+                        \n+                DatagramPacket sendPacket =\n+                new DatagramPacket(sendData, sendData.length, senderAddress, senderPort);\n+                serverSocket.send(sendPacket);\n+                \n+                \n+\n+            }//end for loop\n+        } catch (IOException  e) {\n+            logger.error(\"Exception in echo server. \"\n+                    + \"\\nExpected when shutdown. {}\", e.getLocalizedMessage());\n+        } catch ( InterruptedException e) {\n+            logger.error(\"Exception in echo server. \"\n+                    + \"\\nExpected when shutdown. {}\", e.getLocalizedMessage());\n+        } finally{\n+            if(getServerSocket()!=null && !getServerSocket().isClosed())\n+                getServerSocket().close();\n+            \n+        }\n+\n+    }\n+\n+    /**\n+     * Gets the server.\n+     *\n+     * @return the server\n+     */\n+    public DatagramSocket getServer() {\n+        return getServerSocket();\n+    }\n+\n+    /**\n+     * Sets the server.\n+     *\n+     * @param server the new server\n+     */\n+    public void setServer(DatagramSocket server) {\n+        this.setServerSocket(server);\n+    }\n+\n+\n+    public DatagramSocket getServerSocket() {\n+        return serverSocket;\n+    }\n+\n+\n+    public void setServerSocket(DatagramSocket serverSocket) {\n+        this.serverSocket = serverSocket;\n+    }\n+}"
            },
            {
                "sha": "3b69f587f15d63b48b37143110b7195ed383c01f",
                "filename": "src/test/java/io/parallec/core/main/udp/sampleserver/UdpServerThread.java",
                "status": "added",
                "additions": 52,
                "deletions": 0,
                "changes": 52,
                "blob_url": "https://github.com/eBay/parallec/blob/a535ad9051ecc5349eb839cefe64e1895ed771e2/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fudp%2Fsampleserver%2FUdpServerThread.java",
                "raw_url": "https://github.com/eBay/parallec/raw/a535ad9051ecc5349eb839cefe64e1895ed771e2/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fudp%2Fsampleserver%2FUdpServerThread.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fudp%2Fsampleserver%2FUdpServerThread.java?ref=a535ad9051ecc5349eb839cefe64e1895ed771e2",
                "patch": "@@ -0,0 +1,52 @@\n+package io.parallec.core.main.udp.sampleserver;\n+\n+import io.parallec.core.util.PcStringUtils;\n+\n+import java.util.logging.Logger;\n+\n+public class UdpServerThread extends Thread {\n+    private static Logger logger = Logger.getLogger(UdpServerThread.class\n+            .getName());\n+    private volatile boolean shutdown = false;\n+\n+    private boolean similateSlowResponse;\n+    public UdpServerThread(boolean similateSlowResponse){\n+        this.similateSlowResponse = similateSlowResponse;\n+    }\n+    private UdpEchoServer server = null;\n+    @Override\n+    public void run() {\n+\n+        try {\n+            server = new UdpEchoServer(similateSlowResponse);\n+            server.serve();\n+            while (!this.isShutdown()) {\n+                ;\n+            }\n+            server.stop();\n+            logger.info(\"UDP Server Stopped..\");\n+        } catch (Exception e) {\n+            logger.info(\"Couldn't start UDP server: \" + PcStringUtils.printStackTrace(e));\n+        }\n+\n+    }\n+\n+    public boolean isShutdown() {\n+        return shutdown;\n+    }\n+\n+    //interrupt is useful\n+    public void setShutdown(boolean shutdown) {\n+        this.shutdown = shutdown;\n+        \n+        if(shutdown){\n+            try {\n+                this.server.getServerSocket().close();\n+            } catch (Exception e) {\n+                e.printStackTrace();\n+            }\n+        }\n+        this.interrupt();\n+    }\n+\n+}"
            },
            {
                "sha": "d82eb5633d723351afd775bbdcfaab777b3f46b1",
                "filename": "src/test/java/io/parallec/core/main/udp/sampleserver/package-info.java",
                "status": "added",
                "additions": 8,
                "deletions": 0,
                "changes": 8,
                "blob_url": "https://github.com/eBay/parallec/blob/a535ad9051ecc5349eb839cefe64e1895ed771e2/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fudp%2Fsampleserver%2Fpackage-info.java",
                "raw_url": "https://github.com/eBay/parallec/raw/a535ad9051ecc5349eb839cefe64e1895ed771e2/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fudp%2Fsampleserver%2Fpackage-info.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fudp%2Fsampleserver%2Fpackage-info.java?ref=a535ad9051ecc5349eb839cefe64e1895ed771e2",
                "patch": "@@ -0,0 +1,8 @@\n+/**\n+ * \n+ */\n+/**\n+ * @author Yuanteng (Jeff) Pei\n+ *\n+ */\n+package io.parallec.core.main.udp.sampleserver;\n\\ No newline at end of file"
            },
            {
                "sha": "41c1b92078db58ea01a86ba645e6d65831f5ab59",
                "filename": "src/test/java/io/parallec/core/pojo/ParallecPojoClassTest.java",
                "status": "modified",
                "additions": 9,
                "deletions": 4,
                "changes": 13,
                "blob_url": "https://github.com/eBay/parallec/blob/a535ad9051ecc5349eb839cefe64e1895ed771e2/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fpojo%2FParallecPojoClassTest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/a535ad9051ecc5349eb839cefe64e1895ed771e2/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fpojo%2FParallecPojoClassTest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fpojo%2FParallecPojoClassTest.java?ref=a535ad9051ecc5349eb839cefe64e1895ed771e2",
                "patch": "@@ -35,16 +35,17 @@\n import io.parallec.core.bean.ping.PingMeta;\n import io.parallec.core.bean.ssh.SshMeta;\n import io.parallec.core.bean.tcp.TcpMeta;\n+import io.parallec.core.bean.udp.UdpMeta;\n import io.parallec.core.commander.workflow.InternalDataProvider;\n import io.parallec.core.commander.workflow.VarReplacementProvider;\n import io.parallec.core.commander.workflow.ssh.SshProvider;\n import io.parallec.core.config.ParallelTaskConfig;\n import io.parallec.core.exception.ExecutionManagerExecutionException;\n-import io.parallec.core.exception.TcpRequestCreateException;\n+import io.parallec.core.exception.TcpUdpRequestCreateException;\n import io.parallec.core.main.http.pollable.sampleserver.HttpServerThread;\n import io.parallec.core.main.http.pollable.sampleserver.ServerWithPollableJobs.NanoJob;\n import io.parallec.core.resources.HttpClientStore;\n-import io.parallec.core.resources.TcpSshPingResourceStore;\n+import io.parallec.core.resources.TcpUdpSshPingResourceStore;\n import io.parallec.core.task.ParallelTaskBean;\n import io.parallec.core.task.TaskErrorMeta;\n \n@@ -151,12 +152,16 @@ public List<Class<?>> getPOJOClasses() throws ClassNotFoundException {\n         pojoClasses.add(TcpMeta.class);\n         pojoClasses.add(SshMeta.class);\n         pojoClasses.add(PingMeta.class);\n+        pojoClasses.add(UdpMeta.class);\n         \n         pojoClasses.add(SetAndCount.class);\n         \n         pojoClasses.add(ExecutionManagerExecutionException.class);\n-        pojoClasses.add(TcpRequestCreateException.class);\n-        pojoClasses.add(TcpSshPingResourceStore.class);\n+        pojoClasses.add(TcpUdpRequestCreateException.class);\n+        pojoClasses.add(TcpUdpSshPingResourceStore.class);\n+        \n+        \n+        \n         pojoClasses.add(HttpClientStore.class);\n         \n         return pojoClasses;"
            },
            {
                "sha": "6859c53e19a13672e912d355bc238b1cebf3f4cc",
                "filename": "src/test/java/io/parallec/core/pojo/ParallecPojoStrTest.java",
                "status": "modified",
                "additions": 40,
                "deletions": 3,
                "changes": 43,
                "blob_url": "https://github.com/eBay/parallec/blob/a535ad9051ecc5349eb839cefe64e1895ed771e2/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fpojo%2FParallecPojoStrTest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/a535ad9051ecc5349eb839cefe64e1895ed771e2/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fpojo%2FParallecPojoStrTest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fpojo%2FParallecPojoStrTest.java?ref=a535ad9051ecc5349eb839cefe64e1895ed771e2",
                "patch": "@@ -9,9 +9,10 @@\n import io.parallec.core.bean.SetAndCount;\n import io.parallec.core.bean.StrStrMap;\n import io.parallec.core.bean.tcp.TcpMeta;\n+import io.parallec.core.bean.udp.UdpMeta;\n import io.parallec.core.exception.ParallelTaskInvalidException;\n import io.parallec.core.resources.HttpMethod;\n-import io.parallec.core.resources.TcpSshPingResourceStore;\n+import io.parallec.core.resources.TcpUdpSshPingResourceStore;\n import io.parallec.core.task.TaskErrorMeta;\n import io.parallec.core.task.TaskErrorMeta.TaskErrorType;\n import io.parallec.core.util.BeanMapper;\n@@ -32,7 +33,7 @@\n public class ParallecPojoStrTest extends TestBase {\n \n     @Test\n-    public void testToString() {\n+    public void testMetaValidationToString() {\n \n         PollerData pollerData = new PollerData();\n         logger.info(pollerData.toString());\n@@ -55,7 +56,7 @@ public void testToString() {\n         //empty and all pass validation: test validation\n         TcpMeta tcpMeta2 = new TcpMeta();\n         TcpMeta tcpMeta3 = new TcpMeta(\"\", 80, 1000, 5,\n-                TcpSshPingResourceStore.getInstance().getChannelFactory());\n+                TcpUdpSshPingResourceStore.getInstance().getChannelFactory());\n         \n         try{\n             \n@@ -76,6 +77,42 @@ public void testToString() {\n         SetAndCount sc = new SetAndCount( new HashSet<String>());\n         sc.toString();\n \n+        \n+        //udp meta validation\n+        UdpMeta udpMeta = new UdpMeta(\"\", 80, 5, null);\n+        udpMeta.toString();\n+        \n+        //empty and all pass validation: test validation\n+        UdpMeta udpMeta2 = new UdpMeta();\n+        UdpMeta udpMeta3 = new UdpMeta(\"\", 80, 5,\n+                TcpUdpSshPingResourceStore.getInstance().getDatagramChannelFactory());\n+\n+        //null command\n+        try{\n+            \n+            udpMeta2.validation();\n+        }catch(ParallelTaskInvalidException e){\n+            logger.info(\"expected exception {}\", e.getLocalizedMessage());\n+        }\n+        //now null port\n+        udpMeta2.setCommand(\"\");\n+        try{\n+            \n+            udpMeta2.validation();\n+        }catch(ParallelTaskInvalidException e){\n+            logger.info(\"expected exception {}\", e.getLocalizedMessage());\n+        }\n+        //now with null idle\n+        udpMeta2.setUdpPort(40);\n+        try{\n+            udpMeta2.validation();\n+        }catch(ParallelTaskInvalidException e){\n+            logger.info(\"expected exception {}\", e.getLocalizedMessage());\n+        }\n+        \n+        udpMeta3.validation();\n+        \n+        \n     }\n \n     @Test"
            },
            {
                "sha": "02dd98554e1783e409b00bb1b29436809b1d3dd2",
                "filename": "src/test/java/io/parallec/core/task/ParallelTaskManagerTest.java",
                "status": "modified",
                "additions": 0,
                "deletions": 1,
                "changes": 1,
                "blob_url": "https://github.com/eBay/parallec/blob/a535ad9051ecc5349eb839cefe64e1895ed771e2/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Ftask%2FParallelTaskManagerTest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/a535ad9051ecc5349eb839cefe64e1895ed771e2/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Ftask%2FParallelTaskManagerTest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Ftask%2FParallelTaskManagerTest.java?ref=a535ad9051ecc5349eb839cefe64e1895ed771e2",
                "patch": "@@ -22,7 +22,6 @@ public static void shutdown() throws Exception {\n     }\n     \n \n-\n     @Test\n     public void testDirectorForException() {\n         try {"
            }
        ]
    },
    {
        "sha": "d75478a091801405e0d57882484ce4449785a040",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6ZDc1NDc4YTA5MTgwMTQwNWUwZDU3ODgyNDg0Y2U0NDQ5Nzg1YTA0MA==",
        "commit": {
            "author": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2016-07-23T06:05:10Z"
            },
            "committer": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2016-07-23T06:05:10Z"
            },
            "message": "update changelog for 0.9.4-beta",
            "tree": {
                "sha": "54fc6d564d3b9670f8011f7674f9d07daa133097",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/54fc6d564d3b9670f8011f7674f9d07daa133097"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/d75478a091801405e0d57882484ce4449785a040",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/d75478a091801405e0d57882484ce4449785a040",
        "html_url": "https://github.com/eBay/parallec/commit/d75478a091801405e0d57882484ce4449785a040",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/d75478a091801405e0d57882484ce4449785a040/comments",
        "author": null,
        "committer": null,
        "parents": [
            {
                "sha": "0a37b4193e5c8bc717fa89abed28645c9e471bf6",
                "url": "https://api.github.com/repos/eBay/parallec/commits/0a37b4193e5c8bc717fa89abed28645c9e471bf6",
                "html_url": "https://github.com/eBay/parallec/commit/0a37b4193e5c8bc717fa89abed28645c9e471bf6"
            }
        ],
        "stats": {
            "total": 15,
            "additions": 12,
            "deletions": 3
        },
        "files": [
            {
                "sha": "a4c740edaee1331e5903c2a4658c6bb6383c82c8",
                "filename": "CHANGELOG.md",
                "status": "modified",
                "additions": 9,
                "deletions": 0,
                "changes": 9,
                "blob_url": "https://github.com/eBay/parallec/blob/d75478a091801405e0d57882484ce4449785a040/CHANGELOG.md",
                "raw_url": "https://github.com/eBay/parallec/raw/d75478a091801405e0d57882484ce4449785a040/CHANGELOG.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/CHANGELOG.md?ref=d75478a091801405e0d57882484ce4449785a040",
                "patch": "@@ -8,6 +8,15 @@ _2016-??-??_\n \n * TBD\n \n+\n+## Version 0.9.4-beta\n+\n+\n+_2016-07-22_\n+\n+* Fix Issue [#25](https://github.com/eBay/parallec/issues/25), Enabled different ports replacements with different target hosts. Passed tests. Example check [here](https://github.com/eBay/parallec/issues/25). Key is ` .setHttpPortReplaceable(\"$PORT\")`\n+* Minor log refinement for ssh sudo user. \n+\n ## Version 0.9.3\n \n "
            },
            {
                "sha": "a4a0c5b8fc1902bfca0d4fd0ffad64e37ef571e7",
                "filename": "pom.xml",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/d75478a091801405e0d57882484ce4449785a040/pom.xml",
                "raw_url": "https://github.com/eBay/parallec/raw/d75478a091801405e0d57882484ce4449785a040/pom.xml",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/pom.xml?ref=d75478a091801405e0d57882484ce4449785a040",
                "patch": "@@ -4,7 +4,7 @@\n \t<modelVersion>4.0.0</modelVersion>\n \t<groupId>io.parallec</groupId>\n \t<artifactId>parallec-core</artifactId>\n-\t<version>0.9.4-SNAPSHOT</version>\n+\t<version>0.9.4-beta</version>\n \t<packaging>jar</packaging>\n \t<name>io.parallec:parallec-core</name>\n \t<url>https://github.com/eBay/parallec</url>"
            },
            {
                "sha": "b812378436cfe6173acc002c558214d96bb9486d",
                "filename": "src/main/java/io/parallec/core/util/PcErrorMsgUtils.java",
                "status": "modified",
                "additions": 2,
                "deletions": 2,
                "changes": 4,
                "blob_url": "https://github.com/eBay/parallec/blob/d75478a091801405e0d57882484ce4449785a040/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Futil%2FPcErrorMsgUtils.java",
                "raw_url": "https://github.com/eBay/parallec/raw/d75478a091801405e0d57882484ce4449785a040/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Futil%2FPcErrorMsgUtils.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Futil%2FPcErrorMsgUtils.java?ref=d75478a091801405e0d57882484ce4449785a040",
                "patch": "@@ -31,10 +31,10 @@ public enum ERROR_TYPE {\n     }\n \n     /** The Constant errorMapOrig. */\n-    public static final Map<ERROR_TYPE, String> errorMapOrig = new EnumMap<>(ERROR_TYPE.class);\n+    public static final Map<ERROR_TYPE, String> errorMapOrig = new EnumMap<ERROR_TYPE, String>(ERROR_TYPE.class);\n \n     /** The Constant errorMapReplace. */\n-    public static final Map<ERROR_TYPE, String> errorMapReplace = new EnumMap<>(ERROR_TYPE.class);\n+    public static final Map<ERROR_TYPE, String> errorMapReplace = new EnumMap<ERROR_TYPE, String>(ERROR_TYPE.class);\n \n     static {\n         errorMapOrig.put(ERROR_TYPE.CONNECTION_EXCEPTION,"
            }
        ]
    },
    {
        "sha": "0a37b4193e5c8bc717fa89abed28645c9e471bf6",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6MGEzN2I0MTkzZTVjOGJjNzE3ZmE4OWFiZWQyODY0NWM5ZTQ3MWJmNg==",
        "commit": {
            "author": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2016-07-23T04:42:57Z"
            },
            "committer": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2016-07-23T04:42:57Z"
            },
            "message": "#25 diff ports on diff hosts",
            "tree": {
                "sha": "00f08f2fcf29d815aabba2f4baf5bb0812634835",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/00f08f2fcf29d815aabba2f4baf5bb0812634835"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/0a37b4193e5c8bc717fa89abed28645c9e471bf6",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/0a37b4193e5c8bc717fa89abed28645c9e471bf6",
        "html_url": "https://github.com/eBay/parallec/commit/0a37b4193e5c8bc717fa89abed28645c9e471bf6",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/0a37b4193e5c8bc717fa89abed28645c9e471bf6/comments",
        "author": null,
        "committer": null,
        "parents": [
            {
                "sha": "0d1ed9bcb7671d16b45ebaceb39bf14c0054a5eb",
                "url": "https://api.github.com/repos/eBay/parallec/commits/0d1ed9bcb7671d16b45ebaceb39bf14c0054a5eb",
                "html_url": "https://github.com/eBay/parallec/commit/0d1ed9bcb7671d16b45ebaceb39bf14c0054a5eb"
            }
        ],
        "stats": {
            "total": 106,
            "additions": 99,
            "deletions": 7
        },
        "files": [
            {
                "sha": "873886c2a4706805e88e790043625b6fb625277e",
                "filename": "src/main/java/io/parallec/core/ParallelTaskBuilder.java",
                "status": "modified",
                "additions": 13,
                "deletions": 0,
                "changes": 13,
                "blob_url": "https://github.com/eBay/parallec/blob/0a37b4193e5c8bc717fa89abed28645c9e471bf6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FParallelTaskBuilder.java",
                "raw_url": "https://github.com/eBay/parallec/raw/0a37b4193e5c8bc717fa89abed28645c9e471bf6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FParallelTaskBuilder.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FParallelTaskBuilder.java?ref=0a37b4193e5c8bc717fa89abed28645c9e471bf6",
                "patch": "@@ -400,6 +400,19 @@ public ParallelTaskBuilder setHttpPort(int port) {\n \n     }\n \n+    \n+    /**\n+     * Sets the port variable name such as $PORT\n+     *\n+     * @param port\n+     *            the port\n+     * @return the parallel task builder\n+     */\n+    public ParallelTaskBuilder setHttpPortReplaceable(String portVar) {\n+        this.httpMeta.setRequestPort(portVar);\n+        return this;\n+\n+    }\n \n  \n "
            },
            {
                "sha": "a152f3593789a8f85bfef73921bb571c1fe944a7",
                "filename": "src/main/java/io/parallec/core/actor/ExecutionManager.java",
                "status": "modified",
                "additions": 17,
                "deletions": 3,
                "changes": 20,
                "blob_url": "https://github.com/eBay/parallec/blob/0a37b4193e5c8bc717fa89abed28645c9e471bf6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FExecutionManager.java",
                "raw_url": "https://github.com/eBay/parallec/raw/0a37b4193e5c8bc717fa89abed28645c9e471bf6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FExecutionManager.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FExecutionManager.java?ref=0a37b4193e5c8bc717fa89abed28645c9e471bf6",
                "patch": "@@ -173,8 +173,11 @@ public void onReceive(Object message) {\n                 final String requestUrlPrefixOrig = httpMeta\n                         .getRequestUrlPostfix();\n                 final HttpMethod httpMethod = httpMeta.getHttpMethod();\n-                final int requestPort = Integer.parseInt(httpMeta\n-                        .getRequestPort());\n+                \n+                String requestPortStrOrig = httpMeta\n+                        .getRequestPort();\n+                \n+                \n                 final boolean pollable = httpMeta.isPollable();\n \n                 final int maxConcurrency = task.getConcurrency();\n@@ -241,7 +244,18 @@ public void onReceive(Object message) {\n                             .replaceStrByMap(\n                                     nodeReqResponse.getRequestParameters(),\n                                     requestUrlPrefixOrig);\n-\n+                    //add support for port replacement\n+                    final String requestPortStr = NodeReqResponse\n+                            .replaceStrByMap(\n+                                    nodeReqResponse.getRequestParameters(),\n+                                    requestPortStrOrig);\n+                    int requestPort = 80;\n+                    try{\n+                        requestPort = Integer.parseInt(requestPortStr);\n+                    }catch(NumberFormatException nfe){\n+                        logger.error(\"Error parsing replacable port with NumberFormatException. \"\n+                                + \"No valid port for host {}. Now use default port 80\", targetHost);\n+                    }\n                     //only pass when it is not in manager\n                     final ParallecResponseHandler handler = \n                             task.getConfig().getHandlerExecutionLocation()==HandlerExecutionLocation.MANAGER"
            },
            {
                "sha": "693f46bb405bb3141bdb2203c8c61fc4c2870d2d",
                "filename": "src/main/java/io/parallec/core/commander/workflow/ssh/SshProvider.java",
                "status": "modified",
                "additions": 1,
                "deletions": 3,
                "changes": 4,
                "blob_url": "https://github.com/eBay/parallec/blob/0a37b4193e5c8bc717fa89abed28645c9e471bf6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fcommander%2Fworkflow%2Fssh%2FSshProvider.java",
                "raw_url": "https://github.com/eBay/parallec/raw/0a37b4193e5c8bc717fa89abed28645c9e471bf6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fcommander%2Fworkflow%2Fssh%2FSshProvider.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fcommander%2Fworkflow%2Fssh%2FSshProvider.java?ref=0a37b4193e5c8bc717fa89abed28645c9e471bf6",
                "patch": "@@ -166,8 +166,6 @@ public Channel sessionConnectGenerateChannel(Session session)\n         \n         ChannelExec channel = (ChannelExec) session.openChannel(\"exec\");\n         channel.setCommand(sshMeta.getCommandLine());\n-        // X Forwarding\n-        // channel.setXForwarding(true);\n \n         // if run as super user, assuming the input stream expecting a password\n         if (sshMeta.isRunAsSuperUser()) {\n@@ -183,7 +181,7 @@ public Channel sessionConnectGenerateChannel(Session session)\n \t            out.write((sshMeta.getPassword()+\"\\n\").getBytes());\n \t            out.flush();\n \t\t\t} catch (IOException e) {\n-\t\t\t\te.printStackTrace();\n+\t\t\t\tlogger.error(\"error in sessionConnectGenerateChannel for super user\", e);\n \t\t\t}\n         } else {\n         \tchannel.setInputStream(null);"
            },
            {
                "sha": "de70b1795de49c08435f4942417c80b63cd67b63",
                "filename": "src/main/java/io/parallec/core/util/PcErrorMsgUtils.java",
                "status": "modified",
                "additions": 0,
                "deletions": 1,
                "changes": 1,
                "blob_url": "https://github.com/eBay/parallec/blob/0a37b4193e5c8bc717fa89abed28645c9e471bf6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Futil%2FPcErrorMsgUtils.java",
                "raw_url": "https://github.com/eBay/parallec/raw/0a37b4193e5c8bc717fa89abed28645c9e471bf6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Futil%2FPcErrorMsgUtils.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Futil%2FPcErrorMsgUtils.java?ref=0a37b4193e5c8bc717fa89abed28645c9e471bf6",
                "patch": "@@ -13,7 +13,6 @@\n package io.parallec.core.util;\n \n import java.util.EnumMap;\n-import java.util.HashMap;\n import java.util.Map;\n \n "
            },
            {
                "sha": "ddccf8403ae414fc7dc895cf6b0857ebd007c436",
                "filename": "src/test/java/io/parallec/core/main/http/request/template/ParallelClientVarReplacementHostSpecificTest.java",
                "status": "modified",
                "additions": 68,
                "deletions": 0,
                "changes": 68,
                "blob_url": "https://github.com/eBay/parallec/blob/0a37b4193e5c8bc717fa89abed28645c9e471bf6/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2Frequest%2Ftemplate%2FParallelClientVarReplacementHostSpecificTest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/0a37b4193e5c8bc717fa89abed28645c9e471bf6/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2Frequest%2Ftemplate%2FParallelClientVarReplacementHostSpecificTest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2Frequest%2Ftemplate%2FParallelClientVarReplacementHostSpecificTest.java?ref=0a37b4193e5c8bc717fa89abed28645c9e471bf6",
                "patch": "@@ -17,6 +17,7 @@\n \n import org.apache.http.util.Asserts;\n import org.junit.AfterClass;\n+import org.junit.Assert;\n import org.junit.BeforeClass;\n import org.junit.Ignore;\n import org.junit.Test;\n@@ -35,6 +36,73 @@ public static void shutdown() throws Exception {\n         pc.releaseExternalResources();\n     }\n \n+    /**\n+     * TODO 20160721 git issue #25\n+     * different requests to different ports  \n+     * http://www.jeffpei.com:80/job_b.html http://www.portquiz.com:8080/job_b.html\n+     */\n+    @Test\n+    public void hitWebsitesMinTargetHostSpecificPortReplacement() {\n+\n+        Map<String, StrStrMap> replacementVarMapNodeSpecific = new HashMap<String, StrStrMap>();\n+        replacementVarMapNodeSpecific.put(\"portquiz.net\",\n+                new StrStrMap().addPair(\"PORT\", \"8080\"));\n+        replacementVarMapNodeSpecific.put(\"www.jeffpei.com\",\n+                new StrStrMap().addPair(\"PORT\", \"80\"));\n+\n+        pc.prepareHttpGet(\"/job_b.html\")\n+                .setHttpPortReplaceable(\"$PORT\")\n+                .setConcurrency(1700)\n+                .setTargetHostsFromString(\n+                        \"portquiz.net www.jeffpei.com\")\n+                .setReplacementVarMapNodeSpecific(replacementVarMapNodeSpecific)\n+                .execute(new ParallecResponseHandler() {\n+                    @Override\n+                    public void onCompleted(ResponseOnSingleTask res,\n+                            Map<String, Object> responseContext) {\n+                        if(res.getRequest().getHost()==\"portquiz.net\"){\n+                            Assert.assertTrue( \n+                                    res.getStatusCodeInt()==404);\n+                        }else if(res.getRequest().getHost()==\"www.jeffpei.com\"){\n+                            Assert.assertTrue(\n+                                    res.getStatusCodeInt()==200);\n+                        }\n+                        logger.info(res.toString());\n+                    }\n+                });\n+\n+    }\n+    \n+    /**\n+     * trigger the NumberFormatException in execution manager. \n+     */\n+    @Test\n+    public void hitWebsitesMinTargetHostSpecificPortReplacementErrorCase() {\n+\n+        Map<String, StrStrMap> replacementVarMapNodeSpecific = new HashMap<String, StrStrMap>();\n+        replacementVarMapNodeSpecific.put(\"portquiz.net\",\n+                new StrStrMap().addPair(\"PORT\", \"8080\"));\n+        replacementVarMapNodeSpecific.put(\"www.jeffpei.com\",\n+                new StrStrMap().addPair(\"PORT\", \"80\"));\n+\n+        pc.prepareHttpGet(\"/job_b.html\")\n+                .setHttpPortReplaceable(\"$PORT\")\n+                .setConcurrency(1700)\n+                .setTargetHostsFromString(\n+                        \"localhost www.jeffpei.com\")\n+                .setReplacementVarMapNodeSpecific(replacementVarMapNodeSpecific)\n+                .execute(new ParallecResponseHandler() {\n+                    @Override\n+                    public void onCompleted(ResponseOnSingleTask res,\n+                            Map<String, Object> responseContext) {\n+                        logger.info(\"\"+res.isError());\n+                    }\n+                });\n+\n+    }\n+    \n+    \n+    \n     /**\n      * different requests to different target URLs\n      * http://www.jeffpei.com/job_b.html http://www.restsuperman.com/job_c.html"
            }
        ]
    },
    {
        "sha": "0d1ed9bcb7671d16b45ebaceb39bf14c0054a5eb",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6MGQxZWQ5YmNiNzY3MWQxNmI0NWViYWNlYjM5YmYxNGMwMDU0YTVlYg==",
        "commit": {
            "author": {
                "name": "Yuanteng (Jeff) Pei",
                "email": "ypei@ebay.com",
                "date": "2016-06-26T21:53:24Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2016-06-26T21:53:24Z"
            },
            "message": "Merge pull request #29 from DevFactory/release/general-code-quality-fix-2\n\nGeneral code quality fix-2",
            "tree": {
                "sha": "741b29ed7ac0e20cd38630708066fdc6097f7a9d",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/741b29ed7ac0e20cd38630708066fdc6097f7a9d"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/0d1ed9bcb7671d16b45ebaceb39bf14c0054a5eb",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/0d1ed9bcb7671d16b45ebaceb39bf14c0054a5eb",
        "html_url": "https://github.com/eBay/parallec/commit/0d1ed9bcb7671d16b45ebaceb39bf14c0054a5eb",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/0d1ed9bcb7671d16b45ebaceb39bf14c0054a5eb/comments",
        "author": null,
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "8b5eabd2a072e0bc48f493945a1b44cfe4d61dd8",
                "url": "https://api.github.com/repos/eBay/parallec/commits/8b5eabd2a072e0bc48f493945a1b44cfe4d61dd8",
                "html_url": "https://github.com/eBay/parallec/commit/8b5eabd2a072e0bc48f493945a1b44cfe4d61dd8"
            },
            {
                "sha": "35cd592da5856c4f00ee54afd9ca0bb9a213ab48",
                "url": "https://api.github.com/repos/eBay/parallec/commits/35cd592da5856c4f00ee54afd9ca0bb9a213ab48",
                "html_url": "https://github.com/eBay/parallec/commit/35cd592da5856c4f00ee54afd9ca0bb9a213ab48"
            }
        ],
        "stats": {
            "total": 43,
            "additions": 15,
            "deletions": 28
        },
        "files": [
            {
                "sha": "0725065585b78ffc5a3d29963ac209a8ba40aac1",
                "filename": "src/main/java/io/parallec/core/ParallelTask.java",
                "status": "modified",
                "additions": 1,
                "deletions": 2,
                "changes": 3,
                "blob_url": "https://github.com/eBay/parallec/blob/0d1ed9bcb7671d16b45ebaceb39bf14c0054a5eb/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FParallelTask.java",
                "raw_url": "https://github.com/eBay/parallec/raw/0d1ed9bcb7671d16b45ebaceb39bf14c0054a5eb/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FParallelTask.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FParallelTask.java?ref=0d1ed9bcb7671d16b45ebaceb39bf14c0054a5eb",
                "patch": "@@ -462,8 +462,7 @@ public boolean validateWithFillDefault()\n             this.pingMeta = null;\n         }// end else\n \n-        boolean isValid = true;\n-        return isValid;\n+        return true;\n     }// end func\n \n     /**"
            },
            {
                "sha": "dbba27155871f6417856ec171431fe970d965722",
                "filename": "src/main/java/io/parallec/core/actor/SshWorker.java",
                "status": "modified",
                "additions": 1,
                "deletions": 3,
                "changes": 4,
                "blob_url": "https://github.com/eBay/parallec/blob/0d1ed9bcb7671d16b45ebaceb39bf14c0054a5eb/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FSshWorker.java",
                "raw_url": "https://github.com/eBay/parallec/raw/0d1ed9bcb7671d16b45ebaceb39bf14c0054a5eb/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FSshWorker.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FSshWorker.java?ref=0d1ed9bcb7671d16b45ebaceb39bf14c0054a5eb",
                "patch": "@@ -405,9 +405,7 @@ public SshTask(SshMeta sshMeta, String targetHost) {\n         @Override\n         public ResponseOnSingeRequest call() throws Exception {\n             SshProvider sshProvider = new SshProvider(sshMeta, targetHost);\n-            ResponseOnSingeRequest sshResponse = sshProvider\n-                    .executeSshCommand();\n-            return sshResponse;\n+            return sshProvider.executeSshCommand();\n         }\n     }// end class\n "
            },
            {
                "sha": "b2a8d004c158fcfe1c35bc957d404fa0b8c5137d",
                "filename": "src/main/java/io/parallec/core/actor/poll/HttpPollerProcessor.java",
                "status": "modified",
                "additions": 1,
                "deletions": 3,
                "changes": 4,
                "blob_url": "https://github.com/eBay/parallec/blob/0d1ed9bcb7671d16b45ebaceb39bf14c0054a5eb/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2Fpoll%2FHttpPollerProcessor.java",
                "raw_url": "https://github.com/eBay/parallec/raw/0d1ed9bcb7671d16b45ebaceb39bf14c0054a5eb/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2Fpoll%2FHttpPollerProcessor.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2Fpoll%2FHttpPollerProcessor.java?ref=0d1ed9bcb7671d16b45ebaceb39bf14c0054a5eb",
                "patch": "@@ -135,9 +135,7 @@ public HttpPollerProcessor(String pollerType, String successRegex,\n      * @return the poller request url\n      */\n     public String getPollerRequestUrl(String uuid) {\n-        String pollerUrl = pollerRequestTemplate\n-                .replace(jobIdPlaceHolder, uuid);\n-        return pollerUrl;\n+        return pollerRequestTemplate.replace(jobIdPlaceHolder, uuid);\n     }\n \n     /**"
            },
            {
                "sha": "efe30f8910fb669516fc5a60c9604c93a185424e",
                "filename": "src/main/java/io/parallec/core/bean/ssh/SshMeta.java",
                "status": "modified",
                "additions": 1,
                "deletions": 2,
                "changes": 3,
                "blob_url": "https://github.com/eBay/parallec/blob/0d1ed9bcb7671d16b45ebaceb39bf14c0054a5eb/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2Fssh%2FSshMeta.java",
                "raw_url": "https://github.com/eBay/parallec/raw/0d1ed9bcb7671d16b45ebaceb39bf14c0054a5eb/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2Fssh%2FSshMeta.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2Fssh%2FSshMeta.java?ref=0d1ed9bcb7671d16b45ebaceb39bf14c0054a5eb",
                "patch": "@@ -332,8 +332,7 @@ public void setUserName(String userName) {\n     public String getPrivKeyAbsPath() {\n \n         String workingDir = System.getProperty(\"user.dir\");\n-        String privKeyAbsPath = workingDir + \"/\" + getPrivKeyRelativePath();\n-        return privKeyAbsPath;\n+        return workingDir + \"/\" + getPrivKeyRelativePath();\n     }\n \n     /**"
            },
            {
                "sha": "23342e620fbb81baef1cb59b00a8eb93514f9d97",
                "filename": "src/main/java/io/parallec/core/monitor/MonitorProvider.java",
                "status": "modified",
                "additions": 1,
                "deletions": 2,
                "changes": 3,
                "blob_url": "https://github.com/eBay/parallec/blob/0d1ed9bcb7671d16b45ebaceb39bf14c0054a5eb/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fmonitor%2FMonitorProvider.java",
                "raw_url": "https://github.com/eBay/parallec/raw/0d1ed9bcb7671d16b45ebaceb39bf14c0054a5eb/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fmonitor%2FMonitorProvider.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fmonitor%2FMonitorProvider.java?ref=0d1ed9bcb7671d16b45ebaceb39bf14c0054a5eb",
                "patch": "@@ -228,7 +228,7 @@ public static class PerformUsage extends Jsonable {\n          * @return the summary\n          */\n         public String getSummary() {\n-            String summary = PcNumberUtils\n+            return PcNumberUtils\n                     .getStringFromDouble(memoryUsagePercent)\n                     + \"% (\"\n                     + PcNumberUtils.getStringFromDouble(usedMemory)\n@@ -237,7 +237,6 @@ public String getSummary() {\n                     + \") Max \"\n                     + PcNumberUtils.getStringFromDouble(maxMemory);\n \n-            return summary;\n         }\n \n     }"
            },
            {
                "sha": "0986f575e66df1a9ce5ab46024e00c2289059a40",
                "filename": "src/main/java/io/parallec/core/task/ParallelTaskManager.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/0d1ed9bcb7671d16b45ebaceb39bf14c0054a5eb/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Ftask%2FParallelTaskManager.java",
                "raw_url": "https://github.com/eBay/parallec/raw/0d1ed9bcb7671d16b45ebaceb39bf14c0054a5eb/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Ftask%2FParallelTaskManager.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Ftask%2FParallelTaskManager.java?ref=0d1ed9bcb7671d16b45ebaceb39bf14c0054a5eb",
                "patch": "@@ -319,7 +319,7 @@ public Queue<ParallelTask> getWaitQ() {\n      *\n      * @return the inprogress task map\n      */\n-    public ConcurrentHashMap<String, ParallelTask> getInprogressTaskMap() {\n+    public Map<String, ParallelTask> getInprogressTaskMap() {\n         return inprogressTaskMap;\n     }\n     "
            },
            {
                "sha": "26ad4b0a88530bfd3e69ef16b6197bc2fa901279",
                "filename": "src/main/java/io/parallec/core/util/PcDateUtils.java",
                "status": "modified",
                "additions": 4,
                "deletions": 8,
                "changes": 12,
                "blob_url": "https://github.com/eBay/parallec/blob/0d1ed9bcb7671d16b45ebaceb39bf14c0054a5eb/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Futil%2FPcDateUtils.java",
                "raw_url": "https://github.com/eBay/parallec/raw/0d1ed9bcb7671d16b45ebaceb39bf14c0054a5eb/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Futil%2FPcDateUtils.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Futil%2FPcDateUtils.java?ref=0d1ed9bcb7671d16b45ebaceb39bf14c0054a5eb",
                "patch": "@@ -40,8 +40,7 @@ public static String getDateTimeStr(Date d) {\n \n         SimpleDateFormat sdf = new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss.SSSZ\");\n         // 20140315 test will problem +0000\n-        String str = sdf.format(d);\n-        return str;\n+        return sdf.format(d);\n     }\n \n     /**\n@@ -60,8 +59,7 @@ public static String getDateTimeStrStandard(Date d) {\n \n         SimpleDateFormat sdf = new SimpleDateFormat(\"yyyy.MM.dd.HH.mm.ss.SSSZ\");\n \n-        String str = sdf.format(d);\n-        return str;\n+        return sdf.format(d);\n     }\n \n     /**\n@@ -76,8 +74,7 @@ public static String getDateTimeStrConcise(Date d) {\n             return \"\";\n \n         SimpleDateFormat sdf = new SimpleDateFormat(\"yyyyMMddHHmmssSSSZ\");\n-        String str = sdf.format(d);\n-        return str;\n+        return sdf.format(d);\n     }\n \n     /**\n@@ -92,8 +89,7 @@ public static String getDateTimeStrConciseNoZone(Date d) {\n             return \"\";\n \n         SimpleDateFormat sdf = new SimpleDateFormat(\"yyyyMMddHHmmssSSS\");\n-        String str = sdf.format(d);\n-        return str;\n+        return sdf.format(d);\n     }\n \n     /**"
            },
            {
                "sha": "e4c77e647f98ef919b3e3903032b1cb801b67453",
                "filename": "src/main/java/io/parallec/core/util/PcErrorMsgUtils.java",
                "status": "modified",
                "additions": 3,
                "deletions": 2,
                "changes": 5,
                "blob_url": "https://github.com/eBay/parallec/blob/0d1ed9bcb7671d16b45ebaceb39bf14c0054a5eb/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Futil%2FPcErrorMsgUtils.java",
                "raw_url": "https://github.com/eBay/parallec/raw/0d1ed9bcb7671d16b45ebaceb39bf14c0054a5eb/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Futil%2FPcErrorMsgUtils.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Futil%2FPcErrorMsgUtils.java?ref=0d1ed9bcb7671d16b45ebaceb39bf14c0054a5eb",
                "patch": "@@ -12,6 +12,7 @@\n  */\n package io.parallec.core.util;\n \n+import java.util.EnumMap;\n import java.util.HashMap;\n import java.util.Map;\n \n@@ -31,10 +32,10 @@ public enum ERROR_TYPE {\n     }\n \n     /** The Constant errorMapOrig. */\n-    public static final Map<ERROR_TYPE, String> errorMapOrig = new HashMap<ERROR_TYPE, String>();\n+    public static final Map<ERROR_TYPE, String> errorMapOrig = new EnumMap<>(ERROR_TYPE.class);\n \n     /** The Constant errorMapReplace. */\n-    public static final Map<ERROR_TYPE, String> errorMapReplace = new HashMap<ERROR_TYPE, String>();\n+    public static final Map<ERROR_TYPE, String> errorMapReplace = new EnumMap<>(ERROR_TYPE.class);\n \n     static {\n         errorMapOrig.put(ERROR_TYPE.CONNECTION_EXCEPTION,"
            },
            {
                "sha": "e5abeb8a35629b791a57b0fed7f0c88ff118f0e6",
                "filename": "src/main/java/io/parallec/core/util/PcFileNetworkIoUtils.java",
                "status": "modified",
                "additions": 1,
                "deletions": 2,
                "changes": 3,
                "blob_url": "https://github.com/eBay/parallec/blob/0d1ed9bcb7671d16b45ebaceb39bf14c0054a5eb/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Futil%2FPcFileNetworkIoUtils.java",
                "raw_url": "https://github.com/eBay/parallec/raw/0d1ed9bcb7671d16b45ebaceb39bf14c0054a5eb/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Futil%2FPcFileNetworkIoUtils.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Futil%2FPcFileNetworkIoUtils.java?ref=0d1ed9bcb7671d16b45ebaceb39bf14c0054a5eb",
                "patch": "@@ -85,8 +85,7 @@ public static boolean isFileExist(String filePath) {\n \n         File f = new File(filePath);\n \n-        boolean exists = f.exists() && !f.isDirectory();\n-        return exists;\n+        return f.exists() && !f.isDirectory();\n     }\n \n     /**"
            },
            {
                "sha": "490b10a41549826639b8dcb9c802df3612dfe00c",
                "filename": "src/main/java/io/parallec/core/util/PcStringUtils.java",
                "status": "modified",
                "additions": 1,
                "deletions": 3,
                "changes": 4,
                "blob_url": "https://github.com/eBay/parallec/blob/0d1ed9bcb7671d16b45ebaceb39bf14c0054a5eb/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Futil%2FPcStringUtils.java",
                "raw_url": "https://github.com/eBay/parallec/raw/0d1ed9bcb7671d16b45ebaceb39bf14c0054a5eb/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Futil%2FPcStringUtils.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Futil%2FPcStringUtils.java?ref=0d1ed9bcb7671d16b45ebaceb39bf14c0054a5eb",
                "patch": "@@ -102,9 +102,7 @@ public static String renderJson(Object o) {\n \n         Gson gson = new GsonBuilder().disableHtmlEscaping().setPrettyPrinting()\n                 .create();\n-        String jsonOutput = gson.toJson(o);\n-\n-        return jsonOutput;\n+        return gson.toJson(o);\n     }\n \n }"
            }
        ]
    },
    {
        "sha": "8b5eabd2a072e0bc48f493945a1b44cfe4d61dd8",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6OGI1ZWFiZDJhMDcyZTBiYzQ4ZjQ5Mzk0NWExYjQ0Y2ZlNGQ2MWRkOA==",
        "commit": {
            "author": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2016-06-23T18:17:36Z"
            },
            "committer": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2016-06-23T18:17:36Z"
            },
            "message": "bump version to 0.9.3; updated contributors and doc",
            "tree": {
                "sha": "9bbc5703008ab1181c888091b5c55ce0cbf51578",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/9bbc5703008ab1181c888091b5c55ce0cbf51578"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/8b5eabd2a072e0bc48f493945a1b44cfe4d61dd8",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/8b5eabd2a072e0bc48f493945a1b44cfe4d61dd8",
        "html_url": "https://github.com/eBay/parallec/commit/8b5eabd2a072e0bc48f493945a1b44cfe4d61dd8",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/8b5eabd2a072e0bc48f493945a1b44cfe4d61dd8/comments",
        "author": null,
        "committer": null,
        "parents": [
            {
                "sha": "4540230b17c4c0fef5798b72eecd713b11454943",
                "url": "https://api.github.com/repos/eBay/parallec/commits/4540230b17c4c0fef5798b72eecd713b11454943",
                "html_url": "https://github.com/eBay/parallec/commit/4540230b17c4c0fef5798b72eecd713b11454943"
            }
        ],
        "stats": {
            "total": 27,
            "additions": 21,
            "deletions": 6
        },
        "files": [
            {
                "sha": "c14eb8e9b22e45827497f5451de031da433190d9",
                "filename": "AUTHORS.txt",
                "status": "modified",
                "additions": 3,
                "deletions": 0,
                "changes": 3,
                "blob_url": "https://github.com/eBay/parallec/blob/8b5eabd2a072e0bc48f493945a1b44cfe4d61dd8/AUTHORS.txt",
                "raw_url": "https://github.com/eBay/parallec/raw/8b5eabd2a072e0bc48f493945a1b44cfe4d61dd8/AUTHORS.txt",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/AUTHORS.txt?ref=8b5eabd2a072e0bc48f493945a1b44cfe4d61dd8",
                "patch": "@@ -10,3 +10,6 @@ Core developers (in order of appearance):\n Contributors:\n \n - Lukasz Kryger  http://stackoverflow.com/users/1240557/kryger\n+- billzwu https://github.com/billzwu\n+- faisal-hameed https://github.com/faisal-hameed\n+- fivesmallq https://github.com/fivesmallq\n\\ No newline at end of file"
            },
            {
                "sha": "86aa10ccf874dbf8da97bdf1a49519aa3b61e199",
                "filename": "CHANGELOG.md",
                "status": "modified",
                "additions": 9,
                "deletions": 1,
                "changes": 10,
                "blob_url": "https://github.com/eBay/parallec/blob/8b5eabd2a072e0bc48f493945a1b44cfe4d61dd8/CHANGELOG.md",
                "raw_url": "https://github.com/eBay/parallec/raw/8b5eabd2a072e0bc48f493945a1b44cfe4d61dd8/CHANGELOG.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/CHANGELOG.md?ref=8b5eabd2a072e0bc48f493945a1b44cfe4d61dd8",
                "patch": "@@ -1,11 +1,19 @@\n Parallec Change Log\n ==========\n \n+## Version 0.9.4\n+\n+\n+_2016-??-??_\n+\n+* TBD\n+\n ## Version 0.9.3\n \n \n-_2015-??-??_\n+_2016-06-23_\n \n+* SSH: Allow run as super user for ssh: handle SSH commands where password is needed to sudo.  Auto apply the password. Thanks [billzwu](https://github.com/billzwu)\n * Test: add coverage: for get target hosts duplicate/empty for CMS.\n * Test/Build: update CI setting to enable test on process based Ping. \n "
            },
            {
                "sha": "d0236a7ba1a8706934d2e78a384e954f979784d7",
                "filename": "README.md",
                "status": "modified",
                "additions": 8,
                "deletions": 4,
                "changes": 12,
                "blob_url": "https://github.com/eBay/parallec/blob/8b5eabd2a072e0bc48f493945a1b44cfe4d61dd8/README.md",
                "raw_url": "https://github.com/eBay/parallec/raw/8b5eabd2a072e0bc48f493945a1b44cfe4d61dd8/README.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/README.md?ref=8b5eabd2a072e0bc48f493945a1b44cfe4d61dd8",
                "patch": "@@ -4,11 +4,11 @@\n ![build status](https://img.shields.io/badge/build-info=>-green.svg) [![Build Status](https://travis-ci.org/eBay/parallec.svg?branch=master)](https://travis-ci.org/eBay/parallec) [![Coverage Status](https://img.shields.io/codecov/c/github/eBay/parallec.svg)](https://codecov.io/github/eBay/parallec) [![Apache V2.0 License](http://www.parallec.io/images/apache2.svg) ](https://github.com/eBay/parallec/blob/master/LICENSE)\n \n \n-![latest 0.9.x](http://img.shields.io/badge/latest_stable-0.9.x=>-green.svg) [ ![latest beta  maven central](https://maven-badges.herokuapp.com/maven-central/io.parallec/parallec-core/badge.svg?style=flat)](http://search.maven.org/#artifactdetails|io.parallec|parallec-core|0.9.2|) [![Gitter](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/eBay/parallec?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge)\n+![latest 0.9.x](http://img.shields.io/badge/latest_stable-0.9.x=>-green.svg) [ ![latest beta  maven central](https://maven-badges.herokuapp.com/maven-central/io.parallec/parallec-core/badge.svg?style=flat)](http://search.maven.org/#artifactdetails|io.parallec|parallec-core|0.9.3|) [![Gitter](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/eBay/parallec?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge)\n \n [![Javadoc](http://www.parallec.io/images/parallec-javadoc-blue.svg)](http://www.parallec.io/javadoc/index.html?io/parallec/core/ParallelClient.html) [![Documentation](http://www.parallec.io/images/parallec-documentation-red.svg)](http://www.parallec.io/docs/) [![Samples](http://www.parallec.io/images/parallec-samples-brightgreen.svg)](https://github.com/eBay/parallec-samples) [![Chinese](http://www.parallec.io/images/parallec-cnbrief-blue.svg)](https://github.com/eBay/parallec/blob/master/README-brief-cn.md) \n \n-[ [Get-Started](https://github.com/eBay/parallec/blob/master/README.md#get-started) | [Features](https://github.com/eBay/parallec/blob/master/README.md#features) | [Use Cases](https://github.com/eBay/parallec/blob/master/README.md#use-cases) | [Motivation](https://github.com/eBay/parallec/blob/master/README.md#motivation) | [Demos](https://github.com/eBay/parallec/blob/master/README.md#demos) | [Performance](https://github.com/eBay/parallec/blob/master/README.md#performance) | [Compare](https://github.com/eBay/parallec/blob/master/README.md#compare) | [Contributors](https://github.com/eBay/parallec/blob/master/README.md#contributors) | [About](https://github.com/eBay/parallec/blob/master/README.md#authors) | [News](http://www.parallec.io/blog/) | [Change Log](https://github.com/eBay/parallec/blob/master/CHANGELOG.md) | [中文介绍](https://github.com/eBay/parallec/blob/master/README-brief-cn.md) ]\n+[ [Get-Started](https://github.com/eBay/parallec/blob/master/README.md#get-started) | [Features](https://github.com/eBay/parallec/blob/master/README.md#features) | [Use Cases](https://github.com/eBay/parallec/blob/master/README.md#use-cases) | [Samples](https://github.com/eBay/parallec-samples) | [Motivation](https://github.com/eBay/parallec/blob/master/README.md#motivation) | [Demos](https://github.com/eBay/parallec/blob/master/README.md#demos) | [Performance](https://github.com/eBay/parallec/blob/master/README.md#performance) | [Compare](https://github.com/eBay/parallec/blob/master/README.md#compare) | [Contributors](https://github.com/eBay/parallec/blob/master/README.md#contributors) | [About](https://github.com/eBay/parallec/blob/master/README.md#authors) | [News](http://www.parallec.io/blog/) | [Change Log](https://github.com/eBay/parallec/blob/master/CHANGELOG.md) | [中文介绍](https://github.com/eBay/parallec/blob/master/README-brief-cn.md) ]\n \n \n [ [API Overview](http://www.parallec.io/docs/api-overview/) | [Generate & Submit Task](http://www.parallec.io/docs/submit-task/) | [Track Status & Examine Responses](http://www.parallec.io/docs/track-status/) | [Configurations](http://www.parallec.io/docs/configurations/) ]\n@@ -28,14 +28,14 @@ Donwload [the latest JAR](https://search.maven.org/remote_content?g=io.parallec&\n <dependency>\n \t<groupId>io.parallec</groupId>\n \t<artifactId>parallec-core</artifactId>\n-\t<version>0.9.2</version>\n+\t<version>0.9.3</version>\n </dependency>\n ```\n Snapshots of the development version are available in [Sonatype's `snapshots` repository](https://oss.sonatype.org/content/repositories/snapshots/io/parallec/parallec-core/).\n \n or Gradle:\n ```xml\n-compile 'io.parallec:parallec-core:0.9.2'\n+compile 'io.parallec:parallec-core:0.9.3'\n ```\n \n \n@@ -226,6 +226,10 @@ For more related work review, please visit [here](http://www.ebaytechblog.com/20\n We deeply thank all contributors for their effort.\n \n - Lukasz Kryger  [http://stackoverflow.com/users/1240557/kryger](http://stackoverflow.com/users/1240557/kryger)\n+- [billzwu](https://github.com/billzwu)\n+- [faisal-hameed](https://github.com/faisal-hameed)\n+- [fivesmallq](https://github.com/fivesmallq)\n+\n \n ## Authors\n "
            },
            {
                "sha": "2d878d662aa2c6fb2456cdf7a8e7fbc7f28ba5b0",
                "filename": "pom.xml",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/8b5eabd2a072e0bc48f493945a1b44cfe4d61dd8/pom.xml",
                "raw_url": "https://github.com/eBay/parallec/raw/8b5eabd2a072e0bc48f493945a1b44cfe4d61dd8/pom.xml",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/pom.xml?ref=8b5eabd2a072e0bc48f493945a1b44cfe4d61dd8",
                "patch": "@@ -4,7 +4,7 @@\n \t<modelVersion>4.0.0</modelVersion>\n \t<groupId>io.parallec</groupId>\n \t<artifactId>parallec-core</artifactId>\n-\t<version>0.9.3-SNAPSHOT</version>\n+\t<version>0.9.4-SNAPSHOT</version>\n \t<packaging>jar</packaging>\n \t<name>io.parallec:parallec-core</name>\n \t<url>https://github.com/eBay/parallec</url>"
            }
        ]
    },
    {
        "sha": "4540230b17c4c0fef5798b72eecd713b11454943",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6NDU0MDIzMGIxN2M0YzBmZWY1Nzk4YjcyZWVjZDcxM2IxMTQ1NDk0Mw==",
        "commit": {
            "author": {
                "name": "Yuanteng (Jeff) Pei",
                "email": "ypei@ebay.com",
                "date": "2016-06-23T17:39:32Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2016-06-23T17:39:32Z"
            },
            "message": "Merge pull request #34 from billzwu/master\n\nAllow run as super user for ssh: handle SSH commands where password is needed to sudo.  Auto apply the password.",
            "tree": {
                "sha": "28925ec89e4160782516a1f30cc22cd2c445f92a",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/28925ec89e4160782516a1f30cc22cd2c445f92a"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/4540230b17c4c0fef5798b72eecd713b11454943",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/4540230b17c4c0fef5798b72eecd713b11454943",
        "html_url": "https://github.com/eBay/parallec/commit/4540230b17c4c0fef5798b72eecd713b11454943",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/4540230b17c4c0fef5798b72eecd713b11454943/comments",
        "author": null,
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "4eda56976d140d0d9c0169bc6f5ad29c2393ffc2",
                "url": "https://api.github.com/repos/eBay/parallec/commits/4eda56976d140d0d9c0169bc6f5ad29c2393ffc2",
                "html_url": "https://github.com/eBay/parallec/commit/4eda56976d140d0d9c0169bc6f5ad29c2393ffc2"
            },
            {
                "sha": "202353223aeb3112e0b91dd96a50f87b726d5949",
                "url": "https://api.github.com/repos/eBay/parallec/commits/202353223aeb3112e0b91dd96a50f87b726d5949",
                "html_url": "https://github.com/eBay/parallec/commit/202353223aeb3112e0b91dd96a50f87b726d5949"
            }
        ],
        "stats": {
            "total": 120,
            "additions": 99,
            "deletions": 21
        },
        "files": [
            {
                "sha": "068da0cede1acf185d9fc183798524cf1de6a2d6",
                "filename": "src/main/java/io/parallec/core/ParallelTaskBuilder.java",
                "status": "modified",
                "additions": 11,
                "deletions": 0,
                "changes": 11,
                "blob_url": "https://github.com/eBay/parallec/blob/4540230b17c4c0fef5798b72eecd713b11454943/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FParallelTaskBuilder.java",
                "raw_url": "https://github.com/eBay/parallec/raw/4540230b17c4c0fef5798b72eecd713b11454943/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FParallelTaskBuilder.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FParallelTaskBuilder.java?ref=4540230b17c4c0fef5798b72eecd713b11454943",
                "patch": "@@ -862,6 +862,17 @@ public ParallelTaskBuilder setSshCommandLine(String commandLine) {\n         this.sshMeta.setCommandLine(commandLine);\n         return this;\n     }\n+    \n+    /**\n+     * Sets the ssh runAsSuperUser\n+     * @param runAsSuperUser\n+     *            the runAsSuperUser\n+     * @return the parallel task builder\n+     */\n+    public ParallelTaskBuilder setRunAsSuperUser(Boolean runAsSuperUser) {\n+        this.sshMeta.setRunAsSuperUser(runAsSuperUser);\n+        return this;\n+    }\n \n     /**\n      * Sets the ssh port."
            },
            {
                "sha": "64f238ebe24dd292bd69ed738bc9650c03a4141c",
                "filename": "src/main/java/io/parallec/core/bean/ssh/SshMeta.java",
                "status": "modified",
                "additions": 27,
                "deletions": 2,
                "changes": 29,
                "blob_url": "https://github.com/eBay/parallec/blob/4540230b17c4c0fef5798b72eecd713b11454943/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2Fssh%2FSshMeta.java",
                "raw_url": "https://github.com/eBay/parallec/raw/4540230b17c4c0fef5798b72eecd713b11454943/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2Fssh%2FSshMeta.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2Fssh%2FSshMeta.java?ref=4540230b17c4c0fef5798b72eecd713b11454943",
                "patch": "@@ -47,6 +47,9 @@ public class SshMeta {\n \n     /** The priv key use passphrase. */\n     private boolean privKeyUsePassphrase;\n+    \n+    /** The priv key for runAsSuperUser. */\n+    private boolean runAsSuperUser;\n \n     /** The passphrase. */\n     private String passphrase;\n@@ -92,6 +95,25 @@ public String getPassphrase() {\n     public void setPassphrase(String passphrase) {\n         this.passphrase = passphrase;\n     }\n+    \n+    /**\n+     * get the runAsSuperUser.\n+     *\n+     * @param \n+     */\n+    public boolean isRunAsSuperUser() {\n+\t\treturn runAsSuperUser;\n+\t}\n+\n+    /**\n+     * Sets the runAsSuperUser.\n+     *\n+     * @param runAsSuperUser\n+     *            the new runAsSuperUser\n+     */\n+    public void setRunAsSuperUser(boolean runAsSuperUser) {\n+\t\tthis.runAsSuperUser = runAsSuperUser;\n+\t}\n \n \n     /**\n@@ -106,11 +128,12 @@ public void setPassphrase(String passphrase) {\n      * @param privKeyUsePassphrase the priv key use passphrase\n      * @param passphrase the passphrase\n      * @param sshConnectionTimeoutMillis the ssh connection timeout millis\n+     * @param runAsSuperUser if the ssh will be run as superuser.\n      */\n     public SshMeta(String commandLine, String userName, int sshPort,\n             SshLoginType sshLoginType, String privKeyRelativePath,\n             String password, boolean privKeyUsePassphrase, String passphrase,\n-            int sshConnectionTimeoutMillis) {\n+            int sshConnectionTimeoutMillis, boolean runAsSuperUser) {\n         super();\n         this.commandLine = commandLine;\n         this.userName = userName;\n@@ -121,6 +144,7 @@ public SshMeta(String commandLine, String userName, int sshPort,\n         this.privKeyUsePassphrase = privKeyUsePassphrase;\n         this.passphrase = passphrase;\n         this.sshConnectionTimeoutMillis = sshConnectionTimeoutMillis;\n+        this.runAsSuperUser = runAsSuperUser;\n     }\n \n     /**\n@@ -137,11 +161,12 @@ public SshMeta() {\n         this.password = null;\n         this.privKeyUsePassphrase = false;\n         this.passphrase = null;\n+        this.runAsSuperUser = false;\n         this.sshConnectionTimeoutMillis = ParallecGlobalConfig.sshConnectionTimeoutMillisDefault;\n \n     };\n \n-    /**\n+\t/**\n      * Validation.\n      *\n      * @return true, if successful"
            },
            {
                "sha": "147d80b831d1eebcc770a8eec6d35ef6701616f6",
                "filename": "src/main/java/io/parallec/core/commander/workflow/ssh/SshProvider.java",
                "status": "modified",
                "additions": 25,
                "deletions": 7,
                "changes": 32,
                "blob_url": "https://github.com/eBay/parallec/blob/4540230b17c4c0fef5798b72eecd713b11454943/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fcommander%2Fworkflow%2Fssh%2FSshProvider.java",
                "raw_url": "https://github.com/eBay/parallec/raw/4540230b17c4c0fef5798b72eecd713b11454943/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fcommander%2Fworkflow%2Fssh%2FSshProvider.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fcommander%2Fworkflow%2Fssh%2FSshProvider.java?ref=4540230b17c4c0fef5798b72eecd713b11454943",
                "patch": "@@ -21,6 +21,7 @@\n import io.parallec.core.util.PcStringUtils;\n \n import java.io.ByteArrayOutputStream;\n+import java.io.IOException;\n import java.io.InputStream;\n import java.io.OutputStream;\n \n@@ -160,17 +161,34 @@ public Session startSshSessionAndObtainSession() {\n      */\n     public Channel sessionConnectGenerateChannel(Session session)\n             throws JSchException {\n-        Channel channel = null;\n-        // set timeout\n+    \t// set timeout\n         session.connect(sshMeta.getSshConnectionTimeoutMillis());\n-\n-        channel = session.openChannel(\"exec\");\n-        ((ChannelExec) channel).setCommand(sshMeta.getCommandLine());\n+        \n+        ChannelExec channel = (ChannelExec) session.openChannel(\"exec\");\n+        channel.setCommand(sshMeta.getCommandLine());\n         // X Forwarding\n         // channel.setXForwarding(true);\n \n-        channel.setInputStream(null);\n-        channel.connect();\n+        // if run as super user, assuming the input stream expecting a password\n+        if (sshMeta.isRunAsSuperUser()) {\n+        \ttry {\n+                channel.setInputStream(null, true);\n+\n+                OutputStream out = channel.getOutputStream();\n+                channel.setOutputStream(System.out, true);\n+                channel.setExtOutputStream(System.err, true);\n+                channel.setPty(true);\n+                channel.connect();\n+                \n+\t            out.write((sshMeta.getPassword()+\"\\n\").getBytes());\n+\t            out.flush();\n+\t\t\t} catch (IOException e) {\n+\t\t\t\te.printStackTrace();\n+\t\t\t}\n+        } else {\n+        \tchannel.setInputStream(null);\n+        \tchannel.connect();\n+        }\n \n         return channel;\n "
            },
            {
                "sha": "0d401fe040ef9c3fbf8c5b0547cae123bc8c5221",
                "filename": "src/test/java/io/parallec/core/main/ssh/SshMetaTest.java",
                "status": "modified",
                "additions": 5,
                "deletions": 5,
                "changes": 10,
                "blob_url": "https://github.com/eBay/parallec/blob/4540230b17c4c0fef5798b72eecd713b11454943/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fssh%2FSshMetaTest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/4540230b17c4c0fef5798b72eecd713b11454943/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fssh%2FSshMetaTest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fssh%2FSshMetaTest.java?ref=4540230b17c4c0fef5798b72eecd713b11454943",
                "patch": "@@ -13,27 +13,27 @@ public class SshMetaTest extends TestBase {\n \n     public static SshMeta sshMetaPassword = new SshMeta(commandSshLineValid,\n             userName, PORT_DEFAULT, SshLoginType.PASSWORD, null, passwd, false,\n-            null, sshConnectionTimeoutMillis);\n+            null, sshConnectionTimeoutMillis, false);\n     public static SshMeta sshMetaKey = new SshMeta(commandSshLineValid,\n             userName, PORT_DEFAULT, SshLoginType.KEY,\n             \"userdata/fake-privkey.txt\", null, false, null,\n-            sshConnectionTimeoutMillis);\n+            sshConnectionTimeoutMillis, false);\n     public static SshMeta sshMetaKeyNotExist = new SshMeta(commandSshLineValid,\n             userName, PORT_DEFAULT, SshLoginType.KEY,\n             \"userdata/noneexisting.txt\", null, false, null,\n-            sshConnectionTimeoutMillis);\n+            sshConnectionTimeoutMillis, false);\n \n     private static void resetPass() {\n         sshMetaPassword = new SshMeta(commandSshLineValid, userName,\n                 PORT_DEFAULT, SshLoginType.PASSWORD, null, passwd, false, null,\n-                sshConnectionTimeoutMillis);\n+                sshConnectionTimeoutMillis, false);\n     }\n \n     private static void resetKey() {\n \n         sshMetaKey = new SshMeta(commandSshLineValid, userName, PORT_DEFAULT,\n                 SshLoginType.KEY, \"userdata/fake-privkey.txt\", null, false,\n-                null, sshConnectionTimeoutMillis);\n+                null, sshConnectionTimeoutMillis, false);\n     }\n \n     private static void expectException(SshMeta meta) {"
            },
            {
                "sha": "c0f4571ec2133c2922fd8f573387f6601ea6e4b5",
                "filename": "src/test/java/io/parallec/core/main/ssh/SshProviderMockTest.java",
                "status": "modified",
                "additions": 29,
                "deletions": 5,
                "changes": 34,
                "blob_url": "https://github.com/eBay/parallec/blob/4540230b17c4c0fef5798b72eecd713b11454943/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fssh%2FSshProviderMockTest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/4540230b17c4c0fef5798b72eecd713b11454943/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fssh%2FSshProviderMockTest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fssh%2FSshProviderMockTest.java?ref=4540230b17c4c0fef5798b72eecd713b11454943",
                "patch": "@@ -11,6 +11,7 @@\n import java.io.ByteArrayInputStream;\n import java.io.IOException;\n import java.io.InputStream;\n+import java.io.OutputStream;\n \n import org.apache.commons.io.Charsets;\n import org.junit.BeforeClass;\n@@ -26,21 +27,26 @@ public class SshProviderMockTest extends TestBase {\n \n     public static SshMeta sshMetaPassword = new SshMeta(commandSshLineValid,\n             userName, PORT_DEFAULT, SshLoginType.PASSWORD, null, passwd, false,\n-            null, sshConnectionTimeoutMillis);\n+            null, sshConnectionTimeoutMillis, false);\n+    \n+    public static SshMeta sshMetaPasswordSuperUser = new SshMeta(commandSshLineValid,\n+            userName, PORT_DEFAULT, SshLoginType.PASSWORD, null, passwd, false,\n+            null, sshConnectionTimeoutMillis, true);\n+    \n     public static SshMeta sshMetaKey = new SshMeta(commandSshLineValid,\n             userName, PORT_DEFAULT, SshLoginType.KEY,\n             \"userdata/fake-privkey.txt\", null, false, null,\n-            sshConnectionTimeoutMillis);\n+            sshConnectionTimeoutMillis, false);\n     \n     public static SshMeta sshMetaKeyWithPassphrase = new SshMeta(commandSshLineValid,\n             userName, PORT_DEFAULT, SshLoginType.KEY,\n             \"userdata/fake-privkey.txt\", null, true, \"changeit\",\n-            sshConnectionTimeoutMillis);\n+            sshConnectionTimeoutMillis, false);\n     \n     public static SshMeta sshMetaKeyNotExist = new SshMeta(commandSshLineValid,\n             userName, PORT_DEFAULT, SshLoginType.KEY,\n             \"userdata/noneexisting.txt\", null, false, null,\n-            sshConnectionTimeoutMillis);\n+            sshConnectionTimeoutMillis, false);\n \n     // @Ignore\n     @BeforeClass\n@@ -101,6 +107,25 @@ public void testExecuteSshCommandSubStepsMock() {\n         \n         \n \n+    }\n+    \n+    @Test\n+    public void sessionConnectGenerateChannelTestWithSuperUser() {\n+\n+        Session session = mock(Session.class);\n+        ChannelExec channel = mock(ChannelExec.class);\n+        OutputStream out = mock(OutputStream.class);\n+        \n+        sshProvider = new SshProvider(sshMetaPasswordSuperUser, hostIpSample);\n+        try {\n+\n+            when(session.openChannel(\"exec\")).thenReturn(channel);\n+            when(channel.getOutputStream()).thenReturn(out);\n+            sshProvider.sessionConnectGenerateChannel(session);\n+\n+        } catch (Exception e) {\n+            e.printStackTrace();\n+        }\n     }\n \n     @Test\n@@ -117,7 +142,6 @@ public void sessionConnectGenerateChannelTest() {\n         } catch (JSchException e) {\n             e.printStackTrace();\n         }\n-\n     }\n \n     @Test"
            },
            {
                "sha": "990d666e68d4bc2aa88fc89254c7e3eecd184e26",
                "filename": "src/test/java/io/parallec/core/main/ssh/SshProviderRealTest.java",
                "status": "modified",
                "additions": 2,
                "deletions": 2,
                "changes": 4,
                "blob_url": "https://github.com/eBay/parallec/blob/4540230b17c4c0fef5798b72eecd713b11454943/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fssh%2FSshProviderRealTest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/4540230b17c4c0fef5798b72eecd713b11454943/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fssh%2FSshProviderRealTest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fssh%2FSshProviderRealTest.java?ref=4540230b17c4c0fef5798b72eecd713b11454943",
                "patch": "@@ -20,7 +20,7 @@ public void testExecuteSshCommandRealHostPassword() {\n \n         SshMeta sshMeta = new SshMeta(\"date; ifconfig; ds\", \"parallec\",\n                 PORT_DEFAULT, SshLoginType.PASSWORD, null, \"parallec\", false,\n-                null, sshConnectionTimeoutMillis);\n+                null, sshConnectionTimeoutMillis, false);\n \n         SshProvider instance = new SshProvider(sshMeta, vmIp);\n         ResponseOnSingeRequest response = instance.executeSshCommand();\n@@ -33,7 +33,7 @@ public void testExecuteSshCommandRealHostKey() {\n \n         SshMeta sshMeta = new SshMeta(\" ps -ef; ds; ifconfig\", \"ubuntu\",\n                 PORT_DEFAULT, SshLoginType.KEY, \"userdata/vm-keys.pem\",\n-                null, false, null, sshConnectionTimeoutMillis);\n+                null, false, null, sshConnectionTimeoutMillis, false);\n         SshProvider instance = new SshProvider(sshMeta, vmIp);\n         ResponseOnSingeRequest response = instance.executeSshCommand();\n         logger.info(\"PrivKey absolute path: \" + sshMeta.getPrivKeyAbsPath());"
            }
        ]
    },
    {
        "sha": "202353223aeb3112e0b91dd96a50f87b726d5949",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6MjAyMzUzMjIzYWViMzExMmUwYjkxZGQ5NmE1MGY4N2I3MjZkNTk0OQ==",
        "commit": {
            "author": {
                "name": "Bill Wu",
                "email": "bilwu@paypal.com",
                "date": "2016-06-23T17:32:31Z"
            },
            "committer": {
                "name": "Bill Wu",
                "email": "bilwu@paypal.com",
                "date": "2016-06-23T17:32:31Z"
            },
            "message": "revise javadoc",
            "tree": {
                "sha": "28925ec89e4160782516a1f30cc22cd2c445f92a",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/28925ec89e4160782516a1f30cc22cd2c445f92a"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/202353223aeb3112e0b91dd96a50f87b726d5949",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/202353223aeb3112e0b91dd96a50f87b726d5949",
        "html_url": "https://github.com/eBay/parallec/commit/202353223aeb3112e0b91dd96a50f87b726d5949",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/202353223aeb3112e0b91dd96a50f87b726d5949/comments",
        "author": null,
        "committer": null,
        "parents": [
            {
                "sha": "fc57ee4a7b9d8d5f7b6811eb54190372c5e867b1",
                "url": "https://api.github.com/repos/eBay/parallec/commits/fc57ee4a7b9d8d5f7b6811eb54190372c5e867b1",
                "html_url": "https://github.com/eBay/parallec/commit/fc57ee4a7b9d8d5f7b6811eb54190372c5e867b1"
            }
        ],
        "stats": {
            "total": 3,
            "additions": 2,
            "deletions": 1
        },
        "files": [
            {
                "sha": "64f238ebe24dd292bd69ed738bc9650c03a4141c",
                "filename": "src/main/java/io/parallec/core/bean/ssh/SshMeta.java",
                "status": "modified",
                "additions": 2,
                "deletions": 1,
                "changes": 3,
                "blob_url": "https://github.com/eBay/parallec/blob/202353223aeb3112e0b91dd96a50f87b726d5949/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2Fssh%2FSshMeta.java",
                "raw_url": "https://github.com/eBay/parallec/raw/202353223aeb3112e0b91dd96a50f87b726d5949/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2Fssh%2FSshMeta.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2Fssh%2FSshMeta.java?ref=202353223aeb3112e0b91dd96a50f87b726d5949",
                "patch": "@@ -48,7 +48,7 @@ public class SshMeta {\n     /** The priv key use passphrase. */\n     private boolean privKeyUsePassphrase;\n     \n-    /** The priv key use passphrase. */\n+    /** The priv key for runAsSuperUser. */\n     private boolean runAsSuperUser;\n \n     /** The passphrase. */\n@@ -128,6 +128,7 @@ public void setRunAsSuperUser(boolean runAsSuperUser) {\n      * @param privKeyUsePassphrase the priv key use passphrase\n      * @param passphrase the passphrase\n      * @param sshConnectionTimeoutMillis the ssh connection timeout millis\n+     * @param runAsSuperUser if the ssh will be run as superuser.\n      */\n     public SshMeta(String commandLine, String userName, int sshPort,\n             SshLoginType sshLoginType, String privKeyRelativePath,"
            }
        ]
    },
    {
        "sha": "fc57ee4a7b9d8d5f7b6811eb54190372c5e867b1",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6ZmM1N2VlNGE3YjlkOGQ1ZjdiNjgxMWViNTQxOTAzNzJjNWU4NjdiMQ==",
        "commit": {
            "author": {
                "name": "Bill Wu",
                "email": "bilwu@paypal.com",
                "date": "2016-06-23T17:25:57Z"
            },
            "committer": {
                "name": "Bill Wu",
                "email": "bilwu@paypal.com",
                "date": "2016-06-23T17:25:57Z"
            },
            "message": "adding test case for runAsSuperUser",
            "tree": {
                "sha": "2114d326d855339965a44979db72e1b030f6c166",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/2114d326d855339965a44979db72e1b030f6c166"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/fc57ee4a7b9d8d5f7b6811eb54190372c5e867b1",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/fc57ee4a7b9d8d5f7b6811eb54190372c5e867b1",
        "html_url": "https://github.com/eBay/parallec/commit/fc57ee4a7b9d8d5f7b6811eb54190372c5e867b1",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/fc57ee4a7b9d8d5f7b6811eb54190372c5e867b1/comments",
        "author": null,
        "committer": null,
        "parents": [
            {
                "sha": "26b98bb65ba1772127c9019f8877cdd6c66df129",
                "url": "https://api.github.com/repos/eBay/parallec/commits/26b98bb65ba1772127c9019f8877cdd6c66df129",
                "html_url": "https://github.com/eBay/parallec/commit/26b98bb65ba1772127c9019f8877cdd6c66df129"
            }
        ],
        "stats": {
            "total": 26,
            "additions": 25,
            "deletions": 1
        },
        "files": [
            {
                "sha": "c0f4571ec2133c2922fd8f573387f6601ea6e4b5",
                "filename": "src/test/java/io/parallec/core/main/ssh/SshProviderMockTest.java",
                "status": "modified",
                "additions": 25,
                "deletions": 1,
                "changes": 26,
                "blob_url": "https://github.com/eBay/parallec/blob/fc57ee4a7b9d8d5f7b6811eb54190372c5e867b1/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fssh%2FSshProviderMockTest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/fc57ee4a7b9d8d5f7b6811eb54190372c5e867b1/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fssh%2FSshProviderMockTest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fssh%2FSshProviderMockTest.java?ref=fc57ee4a7b9d8d5f7b6811eb54190372c5e867b1",
                "patch": "@@ -11,6 +11,7 @@\n import java.io.ByteArrayInputStream;\n import java.io.IOException;\n import java.io.InputStream;\n+import java.io.OutputStream;\n \n import org.apache.commons.io.Charsets;\n import org.junit.BeforeClass;\n@@ -27,6 +28,11 @@ public class SshProviderMockTest extends TestBase {\n     public static SshMeta sshMetaPassword = new SshMeta(commandSshLineValid,\n             userName, PORT_DEFAULT, SshLoginType.PASSWORD, null, passwd, false,\n             null, sshConnectionTimeoutMillis, false);\n+    \n+    public static SshMeta sshMetaPasswordSuperUser = new SshMeta(commandSshLineValid,\n+            userName, PORT_DEFAULT, SshLoginType.PASSWORD, null, passwd, false,\n+            null, sshConnectionTimeoutMillis, true);\n+    \n     public static SshMeta sshMetaKey = new SshMeta(commandSshLineValid,\n             userName, PORT_DEFAULT, SshLoginType.KEY,\n             \"userdata/fake-privkey.txt\", null, false, null,\n@@ -101,6 +107,25 @@ public void testExecuteSshCommandSubStepsMock() {\n         \n         \n \n+    }\n+    \n+    @Test\n+    public void sessionConnectGenerateChannelTestWithSuperUser() {\n+\n+        Session session = mock(Session.class);\n+        ChannelExec channel = mock(ChannelExec.class);\n+        OutputStream out = mock(OutputStream.class);\n+        \n+        sshProvider = new SshProvider(sshMetaPasswordSuperUser, hostIpSample);\n+        try {\n+\n+            when(session.openChannel(\"exec\")).thenReturn(channel);\n+            when(channel.getOutputStream()).thenReturn(out);\n+            sshProvider.sessionConnectGenerateChannel(session);\n+\n+        } catch (Exception e) {\n+            e.printStackTrace();\n+        }\n     }\n \n     @Test\n@@ -117,7 +142,6 @@ public void sessionConnectGenerateChannelTest() {\n         } catch (JSchException e) {\n             e.printStackTrace();\n         }\n-\n     }\n \n     @Test"
            }
        ]
    },
    {
        "sha": "26b98bb65ba1772127c9019f8877cdd6c66df129",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6MjZiOThiYjY1YmExNzcyMTI3YzkwMTlmODg3N2NkZDZjNjZkZjEyOQ==",
        "commit": {
            "author": {
                "name": "Bill Wu",
                "email": "bilwu@paypal.com",
                "date": "2016-06-23T16:52:30Z"
            },
            "committer": {
                "name": "Bill Wu",
                "email": "bilwu@paypal.com",
                "date": "2016-06-23T16:52:30Z"
            },
            "message": "revise the format",
            "tree": {
                "sha": "521f58650a0e74a66cbf40257802126e93086482",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/521f58650a0e74a66cbf40257802126e93086482"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/26b98bb65ba1772127c9019f8877cdd6c66df129",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/26b98bb65ba1772127c9019f8877cdd6c66df129",
        "html_url": "https://github.com/eBay/parallec/commit/26b98bb65ba1772127c9019f8877cdd6c66df129",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/26b98bb65ba1772127c9019f8877cdd6c66df129/comments",
        "author": null,
        "committer": null,
        "parents": [
            {
                "sha": "f795109f3a9c1185227cf6534498a279358c398f",
                "url": "https://api.github.com/repos/eBay/parallec/commits/f795109f3a9c1185227cf6534498a279358c398f",
                "html_url": "https://github.com/eBay/parallec/commit/f795109f3a9c1185227cf6534498a279358c398f"
            }
        ],
        "stats": {
            "total": 25,
            "additions": 12,
            "deletions": 13
        },
        "files": [
            {
                "sha": "147d80b831d1eebcc770a8eec6d35ef6701616f6",
                "filename": "src/main/java/io/parallec/core/commander/workflow/ssh/SshProvider.java",
                "status": "modified",
                "additions": 12,
                "deletions": 13,
                "changes": 25,
                "blob_url": "https://github.com/eBay/parallec/blob/26b98bb65ba1772127c9019f8877cdd6c66df129/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fcommander%2Fworkflow%2Fssh%2FSshProvider.java",
                "raw_url": "https://github.com/eBay/parallec/raw/26b98bb65ba1772127c9019f8877cdd6c66df129/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fcommander%2Fworkflow%2Fssh%2FSshProvider.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fcommander%2Fworkflow%2Fssh%2FSshProvider.java?ref=26b98bb65ba1772127c9019f8877cdd6c66df129",
                "patch": "@@ -161,31 +161,30 @@ public Session startSshSessionAndObtainSession() {\n      */\n     public Channel sessionConnectGenerateChannel(Session session)\n             throws JSchException {\n-        Channel channel = null;\n-        // set timeout\n+    \t// set timeout\n         session.connect(sshMeta.getSshConnectionTimeoutMillis());\n-\n-        channel = session.openChannel(\"exec\");\n-        ((ChannelExec) channel).setCommand(sshMeta.getCommandLine());\n+        \n+        ChannelExec channel = (ChannelExec) session.openChannel(\"exec\");\n+        channel.setCommand(sshMeta.getCommandLine());\n         // X Forwarding\n         // channel.setXForwarding(true);\n \n         // if run as super user, assuming the input stream expecting a password\n         if (sshMeta.isRunAsSuperUser()) {\n         \ttry {\n-\t\t\t\tInputStream in=channel.getInputStream();\n-\t\t\t\tOutputStream out=channel.getOutputStream();\n-\t            ((ChannelExec)channel).setErrStream(System.err);\n-\n-\t            channel.connect();\n-\n+                channel.setInputStream(null, true);\n+\n+                OutputStream out = channel.getOutputStream();\n+                channel.setOutputStream(System.out, true);\n+                channel.setExtOutputStream(System.err, true);\n+                channel.setPty(true);\n+                channel.connect();\n+                \n \t            out.write((sshMeta.getPassword()+\"\\n\").getBytes());\n \t            out.flush();\n \t\t\t} catch (IOException e) {\n-\t\t\t\t// TODO Auto-generated catch block\n \t\t\t\te.printStackTrace();\n \t\t\t}\n-            \n         } else {\n         \tchannel.setInputStream(null);\n         \tchannel.connect();"
            }
        ]
    },
    {
        "sha": "f795109f3a9c1185227cf6534498a279358c398f",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6Zjc5NTEwOWYzYTljMTE4NTIyN2NmNjUzNDQ5OGEyNzkzNThjMzk4Zg==",
        "commit": {
            "author": {
                "name": "Bill Wu",
                "email": "bilwu@paypal.com",
                "date": "2016-06-23T00:53:33Z"
            },
            "committer": {
                "name": "Bill Wu",
                "email": "bilwu@paypal.com",
                "date": "2016-06-23T00:53:33Z"
            },
            "message": "adding run as super user",
            "tree": {
                "sha": "b779d425322a32f96765f20c537f8456a2b2b24c",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/b779d425322a32f96765f20c537f8456a2b2b24c"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/f795109f3a9c1185227cf6534498a279358c398f",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/f795109f3a9c1185227cf6534498a279358c398f",
        "html_url": "https://github.com/eBay/parallec/commit/f795109f3a9c1185227cf6534498a279358c398f",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/f795109f3a9c1185227cf6534498a279358c398f/comments",
        "author": null,
        "committer": null,
        "parents": [
            {
                "sha": "4eda56976d140d0d9c0169bc6f5ad29c2393ffc2",
                "url": "https://api.github.com/repos/eBay/parallec/commits/4eda56976d140d0d9c0169bc6f5ad29c2393ffc2",
                "html_url": "https://github.com/eBay/parallec/commit/4eda56976d140d0d9c0169bc6f5ad29c2393ffc2"
            }
        ],
        "stats": {
            "total": 84,
            "additions": 69,
            "deletions": 15
        },
        "files": [
            {
                "sha": "068da0cede1acf185d9fc183798524cf1de6a2d6",
                "filename": "src/main/java/io/parallec/core/ParallelTaskBuilder.java",
                "status": "modified",
                "additions": 11,
                "deletions": 0,
                "changes": 11,
                "blob_url": "https://github.com/eBay/parallec/blob/f795109f3a9c1185227cf6534498a279358c398f/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FParallelTaskBuilder.java",
                "raw_url": "https://github.com/eBay/parallec/raw/f795109f3a9c1185227cf6534498a279358c398f/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FParallelTaskBuilder.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FParallelTaskBuilder.java?ref=f795109f3a9c1185227cf6534498a279358c398f",
                "patch": "@@ -862,6 +862,17 @@ public ParallelTaskBuilder setSshCommandLine(String commandLine) {\n         this.sshMeta.setCommandLine(commandLine);\n         return this;\n     }\n+    \n+    /**\n+     * Sets the ssh runAsSuperUser\n+     * @param runAsSuperUser\n+     *            the runAsSuperUser\n+     * @return the parallel task builder\n+     */\n+    public ParallelTaskBuilder setRunAsSuperUser(Boolean runAsSuperUser) {\n+        this.sshMeta.setRunAsSuperUser(runAsSuperUser);\n+        return this;\n+    }\n \n     /**\n      * Sets the ssh port."
            },
            {
                "sha": "ff0b3a46444fe63e74a696ca1d7f90a67c60d0e6",
                "filename": "src/main/java/io/parallec/core/bean/ssh/SshMeta.java",
                "status": "modified",
                "additions": 26,
                "deletions": 2,
                "changes": 28,
                "blob_url": "https://github.com/eBay/parallec/blob/f795109f3a9c1185227cf6534498a279358c398f/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2Fssh%2FSshMeta.java",
                "raw_url": "https://github.com/eBay/parallec/raw/f795109f3a9c1185227cf6534498a279358c398f/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2Fssh%2FSshMeta.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2Fssh%2FSshMeta.java?ref=f795109f3a9c1185227cf6534498a279358c398f",
                "patch": "@@ -47,6 +47,9 @@ public class SshMeta {\n \n     /** The priv key use passphrase. */\n     private boolean privKeyUsePassphrase;\n+    \n+    /** The priv key use passphrase. */\n+    private boolean runAsSuperUser;\n \n     /** The passphrase. */\n     private String passphrase;\n@@ -92,6 +95,25 @@ public String getPassphrase() {\n     public void setPassphrase(String passphrase) {\n         this.passphrase = passphrase;\n     }\n+    \n+    /**\n+     * get the runAsSuperUser.\n+     *\n+     * @param \n+     */\n+    public boolean isRunAsSuperUser() {\n+\t\treturn runAsSuperUser;\n+\t}\n+\n+    /**\n+     * Sets the runAsSuperUser.\n+     *\n+     * @param runAsSuperUser\n+     *            the new runAsSuperUser\n+     */\n+    public void setRunAsSuperUser(boolean runAsSuperUser) {\n+\t\tthis.runAsSuperUser = runAsSuperUser;\n+\t}\n \n \n     /**\n@@ -110,7 +132,7 @@ public void setPassphrase(String passphrase) {\n     public SshMeta(String commandLine, String userName, int sshPort,\n             SshLoginType sshLoginType, String privKeyRelativePath,\n             String password, boolean privKeyUsePassphrase, String passphrase,\n-            int sshConnectionTimeoutMillis) {\n+            int sshConnectionTimeoutMillis, boolean runAsSuperUser) {\n         super();\n         this.commandLine = commandLine;\n         this.userName = userName;\n@@ -121,6 +143,7 @@ public SshMeta(String commandLine, String userName, int sshPort,\n         this.privKeyUsePassphrase = privKeyUsePassphrase;\n         this.passphrase = passphrase;\n         this.sshConnectionTimeoutMillis = sshConnectionTimeoutMillis;\n+        this.runAsSuperUser = runAsSuperUser;\n     }\n \n     /**\n@@ -137,11 +160,12 @@ public SshMeta() {\n         this.password = null;\n         this.privKeyUsePassphrase = false;\n         this.passphrase = null;\n+        this.runAsSuperUser = false;\n         this.sshConnectionTimeoutMillis = ParallecGlobalConfig.sshConnectionTimeoutMillisDefault;\n \n     };\n \n-    /**\n+\t/**\n      * Validation.\n      *\n      * @return true, if successful"
            },
            {
                "sha": "1919b800643ba85f4d0f3cb40f13d4e018377ccd",
                "filename": "src/main/java/io/parallec/core/commander/workflow/ssh/SshProvider.java",
                "status": "modified",
                "additions": 21,
                "deletions": 2,
                "changes": 23,
                "blob_url": "https://github.com/eBay/parallec/blob/f795109f3a9c1185227cf6534498a279358c398f/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fcommander%2Fworkflow%2Fssh%2FSshProvider.java",
                "raw_url": "https://github.com/eBay/parallec/raw/f795109f3a9c1185227cf6534498a279358c398f/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fcommander%2Fworkflow%2Fssh%2FSshProvider.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fcommander%2Fworkflow%2Fssh%2FSshProvider.java?ref=f795109f3a9c1185227cf6534498a279358c398f",
                "patch": "@@ -21,6 +21,7 @@\n import io.parallec.core.util.PcStringUtils;\n \n import java.io.ByteArrayOutputStream;\n+import java.io.IOException;\n import java.io.InputStream;\n import java.io.OutputStream;\n \n@@ -169,8 +170,26 @@ public Channel sessionConnectGenerateChannel(Session session)\n         // X Forwarding\n         // channel.setXForwarding(true);\n \n-        channel.setInputStream(null);\n-        channel.connect();\n+        // if run as super user, assuming the input stream expecting a password\n+        if (sshMeta.isRunAsSuperUser()) {\n+        \ttry {\n+\t\t\t\tInputStream in=channel.getInputStream();\n+\t\t\t\tOutputStream out=channel.getOutputStream();\n+\t            ((ChannelExec)channel).setErrStream(System.err);\n+\n+\t            channel.connect();\n+\n+\t            out.write((sshMeta.getPassword()+\"\\n\").getBytes());\n+\t            out.flush();\n+\t\t\t} catch (IOException e) {\n+\t\t\t\t// TODO Auto-generated catch block\n+\t\t\t\te.printStackTrace();\n+\t\t\t}\n+            \n+        } else {\n+        \tchannel.setInputStream(null);\n+        \tchannel.connect();\n+        }\n \n         return channel;\n "
            },
            {
                "sha": "0d401fe040ef9c3fbf8c5b0547cae123bc8c5221",
                "filename": "src/test/java/io/parallec/core/main/ssh/SshMetaTest.java",
                "status": "modified",
                "additions": 5,
                "deletions": 5,
                "changes": 10,
                "blob_url": "https://github.com/eBay/parallec/blob/f795109f3a9c1185227cf6534498a279358c398f/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fssh%2FSshMetaTest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/f795109f3a9c1185227cf6534498a279358c398f/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fssh%2FSshMetaTest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fssh%2FSshMetaTest.java?ref=f795109f3a9c1185227cf6534498a279358c398f",
                "patch": "@@ -13,27 +13,27 @@ public class SshMetaTest extends TestBase {\n \n     public static SshMeta sshMetaPassword = new SshMeta(commandSshLineValid,\n             userName, PORT_DEFAULT, SshLoginType.PASSWORD, null, passwd, false,\n-            null, sshConnectionTimeoutMillis);\n+            null, sshConnectionTimeoutMillis, false);\n     public static SshMeta sshMetaKey = new SshMeta(commandSshLineValid,\n             userName, PORT_DEFAULT, SshLoginType.KEY,\n             \"userdata/fake-privkey.txt\", null, false, null,\n-            sshConnectionTimeoutMillis);\n+            sshConnectionTimeoutMillis, false);\n     public static SshMeta sshMetaKeyNotExist = new SshMeta(commandSshLineValid,\n             userName, PORT_DEFAULT, SshLoginType.KEY,\n             \"userdata/noneexisting.txt\", null, false, null,\n-            sshConnectionTimeoutMillis);\n+            sshConnectionTimeoutMillis, false);\n \n     private static void resetPass() {\n         sshMetaPassword = new SshMeta(commandSshLineValid, userName,\n                 PORT_DEFAULT, SshLoginType.PASSWORD, null, passwd, false, null,\n-                sshConnectionTimeoutMillis);\n+                sshConnectionTimeoutMillis, false);\n     }\n \n     private static void resetKey() {\n \n         sshMetaKey = new SshMeta(commandSshLineValid, userName, PORT_DEFAULT,\n                 SshLoginType.KEY, \"userdata/fake-privkey.txt\", null, false,\n-                null, sshConnectionTimeoutMillis);\n+                null, sshConnectionTimeoutMillis, false);\n     }\n \n     private static void expectException(SshMeta meta) {"
            },
            {
                "sha": "d5f8930d44d592e6916e925b8d8be3d5aae705c6",
                "filename": "src/test/java/io/parallec/core/main/ssh/SshProviderMockTest.java",
                "status": "modified",
                "additions": 4,
                "deletions": 4,
                "changes": 8,
                "blob_url": "https://github.com/eBay/parallec/blob/f795109f3a9c1185227cf6534498a279358c398f/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fssh%2FSshProviderMockTest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/f795109f3a9c1185227cf6534498a279358c398f/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fssh%2FSshProviderMockTest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fssh%2FSshProviderMockTest.java?ref=f795109f3a9c1185227cf6534498a279358c398f",
                "patch": "@@ -26,21 +26,21 @@ public class SshProviderMockTest extends TestBase {\n \n     public static SshMeta sshMetaPassword = new SshMeta(commandSshLineValid,\n             userName, PORT_DEFAULT, SshLoginType.PASSWORD, null, passwd, false,\n-            null, sshConnectionTimeoutMillis);\n+            null, sshConnectionTimeoutMillis, false);\n     public static SshMeta sshMetaKey = new SshMeta(commandSshLineValid,\n             userName, PORT_DEFAULT, SshLoginType.KEY,\n             \"userdata/fake-privkey.txt\", null, false, null,\n-            sshConnectionTimeoutMillis);\n+            sshConnectionTimeoutMillis, false);\n     \n     public static SshMeta sshMetaKeyWithPassphrase = new SshMeta(commandSshLineValid,\n             userName, PORT_DEFAULT, SshLoginType.KEY,\n             \"userdata/fake-privkey.txt\", null, true, \"changeit\",\n-            sshConnectionTimeoutMillis);\n+            sshConnectionTimeoutMillis, false);\n     \n     public static SshMeta sshMetaKeyNotExist = new SshMeta(commandSshLineValid,\n             userName, PORT_DEFAULT, SshLoginType.KEY,\n             \"userdata/noneexisting.txt\", null, false, null,\n-            sshConnectionTimeoutMillis);\n+            sshConnectionTimeoutMillis, false);\n \n     // @Ignore\n     @BeforeClass"
            },
            {
                "sha": "990d666e68d4bc2aa88fc89254c7e3eecd184e26",
                "filename": "src/test/java/io/parallec/core/main/ssh/SshProviderRealTest.java",
                "status": "modified",
                "additions": 2,
                "deletions": 2,
                "changes": 4,
                "blob_url": "https://github.com/eBay/parallec/blob/f795109f3a9c1185227cf6534498a279358c398f/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fssh%2FSshProviderRealTest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/f795109f3a9c1185227cf6534498a279358c398f/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fssh%2FSshProviderRealTest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fssh%2FSshProviderRealTest.java?ref=f795109f3a9c1185227cf6534498a279358c398f",
                "patch": "@@ -20,7 +20,7 @@ public void testExecuteSshCommandRealHostPassword() {\n \n         SshMeta sshMeta = new SshMeta(\"date; ifconfig; ds\", \"parallec\",\n                 PORT_DEFAULT, SshLoginType.PASSWORD, null, \"parallec\", false,\n-                null, sshConnectionTimeoutMillis);\n+                null, sshConnectionTimeoutMillis, false);\n \n         SshProvider instance = new SshProvider(sshMeta, vmIp);\n         ResponseOnSingeRequest response = instance.executeSshCommand();\n@@ -33,7 +33,7 @@ public void testExecuteSshCommandRealHostKey() {\n \n         SshMeta sshMeta = new SshMeta(\" ps -ef; ds; ifconfig\", \"ubuntu\",\n                 PORT_DEFAULT, SshLoginType.KEY, \"userdata/vm-keys.pem\",\n-                null, false, null, sshConnectionTimeoutMillis);\n+                null, false, null, sshConnectionTimeoutMillis, false);\n         SshProvider instance = new SshProvider(sshMeta, vmIp);\n         ResponseOnSingeRequest response = instance.executeSshCommand();\n         logger.info(\"PrivKey absolute path: \" + sshMeta.getPrivKeyAbsPath());"
            }
        ]
    },
    {
        "sha": "4eda56976d140d0d9c0169bc6f5ad29c2393ffc2",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6NGVkYTU2OTc2ZDE0MGQwZDljMDE2OWJjNmY1YWQyOWMyMzkzZmZjMg==",
        "commit": {
            "author": {
                "name": "Yuanteng (Jeff) Pei",
                "email": "ypei@ebay.com",
                "date": "2016-05-10T00:26:13Z"
            },
            "committer": {
                "name": "Yuanteng (Jeff) Pei",
                "email": "ypei@ebay.com",
                "date": "2016-05-10T00:26:13Z"
            },
            "message": "Merge pull request #28 from DevFactory/release/general-code-quality-fix-1\n\nGeneral code quality fix-1",
            "tree": {
                "sha": "88cbcb6765edcd53737c588cfbc1d535fde12b0f",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/88cbcb6765edcd53737c588cfbc1d535fde12b0f"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/4eda56976d140d0d9c0169bc6f5ad29c2393ffc2",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/4eda56976d140d0d9c0169bc6f5ad29c2393ffc2",
        "html_url": "https://github.com/eBay/parallec/commit/4eda56976d140d0d9c0169bc6f5ad29c2393ffc2",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/4eda56976d140d0d9c0169bc6f5ad29c2393ffc2/comments",
        "author": null,
        "committer": null,
        "parents": [
            {
                "sha": "03b063fbaef5a39cfcaa0e2cf988336e5d5caf52",
                "url": "https://api.github.com/repos/eBay/parallec/commits/03b063fbaef5a39cfcaa0e2cf988336e5d5caf52",
                "html_url": "https://github.com/eBay/parallec/commit/03b063fbaef5a39cfcaa0e2cf988336e5d5caf52"
            },
            {
                "sha": "c5d503ffc80ac45cfc570a077e470bbe62ea7561",
                "url": "https://api.github.com/repos/eBay/parallec/commits/c5d503ffc80ac45cfc570a077e470bbe62ea7561",
                "html_url": "https://github.com/eBay/parallec/commit/c5d503ffc80ac45cfc570a077e470bbe62ea7561"
            }
        ],
        "stats": {
            "total": 28,
            "additions": 14,
            "deletions": 14
        },
        "files": [
            {
                "sha": "7fc75d8ccbffef19bb216e5d9eb220c84948e2fe",
                "filename": "src/main/java/io/parallec/core/ParallelClient.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/4eda56976d140d0d9c0169bc6f5ad29c2393ffc2/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FParallelClient.java",
                "raw_url": "https://github.com/eBay/parallec/raw/4eda56976d140d0d9c0169bc6f5ad29c2393ffc2/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FParallelClient.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FParallelClient.java?ref=4eda56976d140d0d9c0169bc6f5ad29c2393ffc2",
                "patch": "@@ -159,7 +159,7 @@ public void releaseExternalResources() {\n      * if resources have been already released.\n      */\n     public void reinitIfClosed() {\n-        if (isClosed.get() == true) {\n+        if (isClosed.get()) {\n             logger.info(\"External Resource was released. Now Re-initializing resources ...\");\n \n             ActorConfig.createAndGetActorSystem();"
            },
            {
                "sha": "896aa9368a07860136883c7f1eda055fcb093bb8",
                "filename": "src/main/java/io/parallec/core/ParallelTask.java",
                "status": "modified",
                "additions": 3,
                "deletions": 3,
                "changes": 6,
                "blob_url": "https://github.com/eBay/parallec/blob/4eda56976d140d0d9c0169bc6f5ad29c2393ffc2/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FParallelTask.java",
                "raw_url": "https://github.com/eBay/parallec/raw/4eda56976d140d0d9c0169bc6f5ad29c2393ffc2/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FParallelTask.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FParallelTask.java?ref=4eda56976d140d0d9c0169bc6f5ad29c2393ffc2",
                "patch": "@@ -413,7 +413,7 @@ public boolean validateWithFillDefault()\n                         + ParallecGlobalConfig.concurrencySshLimit);\n                 this.setConcurrency(ParallecGlobalConfig.concurrencySshLimit);\n             }\n-            if (this.httpMeta.isPollable() == true)\n+            if (this.httpMeta.isPollable())\n                 throw new ParallelTaskInvalidException(\n                         \"Not support pollable job with SSH.\");\n \n@@ -425,7 +425,7 @@ public boolean validateWithFillDefault()\n         }else if (this.requestProtocol==\n                 RequestProtocol.PING) {\n \n-            if (this.httpMeta.isPollable() == true)\n+            if (this.httpMeta.isPollable())\n                 throw new ParallelTaskInvalidException(\n                         \"Not support pollable job with PING.\");\n             this.httpMeta.initValuesNa();\n@@ -440,7 +440,7 @@ public boolean validateWithFillDefault()\n         //TCP\n         }else if (this.requestProtocol==\n                 RequestProtocol.TCP) { \n-            if (this.httpMeta.isPollable() == true)\n+            if (this.httpMeta.isPollable())\n                 throw new ParallelTaskInvalidException(\n                         \"Not support pollable job with TCP.\");\n             this.httpMeta.initValuesNa();"
            },
            {
                "sha": "4d84e9144de80e9737bdd97b102ba410e6652210",
                "filename": "src/main/java/io/parallec/core/actor/ExecutionManager.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/4eda56976d140d0d9c0169bc6f5ad29c2393ffc2/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FExecutionManager.java",
                "raw_url": "https://github.com/eBay/parallec/raw/4eda56976d140d0d9c0169bc6f5ad29c2393ffc2/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FExecutionManager.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FExecutionManager.java?ref=4eda56976d140d0d9c0169bc6f5ad29c2393ffc2",
                "patch": "@@ -334,7 +334,7 @@ public void onReceive(Object message) {\n                     final PingMeta pingMeta = task.getPingMeta();\n                     \n                     logger.debug(\"REQUEST GENERATED: \"\n-                            + (int) (sentRequestCounter + 1)\n+                            + (sentRequestCounter + 1)\n                             + \" / \"\n                             + requestCount\n                             + \" after \""
            },
            {
                "sha": "f9be8eab69b25c465e50c87868ad9ee1b48c5e5d",
                "filename": "src/main/java/io/parallec/core/bean/HttpMeta.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/4eda56976d140d0d9c0169bc6f5ad29c2393ffc2/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2FHttpMeta.java",
                "raw_url": "https://github.com/eBay/parallec/raw/4eda56976d140d0d9c0169bc6f5ad29c2393ffc2/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2FHttpMeta.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2FHttpMeta.java?ref=4eda56976d140d0d9c0169bc6f5ad29c2393ffc2",
                "patch": "@@ -130,7 +130,7 @@ public boolean validation() throws ParallelTaskInvalidException {\n             setRequestUrlPostfix(\"\");\n             logger.info(\"USE DEFAULT URL: RequestUrlPostfix is null or empty. SET as empty \\\"\\\". e.g. just want to GET http://parallec.io\");\n         }\n-        if (this.isPollable() == true &&\n+        if (this.isPollable() &&\n                 this.getHttpPollerProcessor() == null) {\n                 throw new ParallelTaskInvalidException(\n                         \"set pollable but httpPollerProcessor is null!! Invalid. please set httpPollerProcessor() \");"
            },
            {
                "sha": "44876a6d08c954c15d4a45d042c5a8bfaa98c016",
                "filename": "src/main/java/io/parallec/core/bean/ssh/SshMeta.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/4eda56976d140d0d9c0169bc6f5ad29c2393ffc2/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2Fssh%2FSshMeta.java",
                "raw_url": "https://github.com/eBay/parallec/raw/4eda56976d140d0d9c0169bc6f5ad29c2393ffc2/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2Fssh%2FSshMeta.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2Fssh%2FSshMeta.java?ref=4eda56976d140d0d9c0169bc6f5ad29c2393ffc2",
                "patch": "@@ -176,7 +176,7 @@ public boolean validation() throws ParallelTaskInvalidException {\n         }\n \n         if (this.sshLoginType == SshLoginType.KEY\n-                && this.privKeyUsePassphrase == true && this.passphrase == null) {\n+                && this.privKeyUsePassphrase && this.passphrase == null) {\n             throw new ParallelTaskInvalidException(\n                     \"use public key and also with private key passphrase but it is null for ssh\");\n         }"
            },
            {
                "sha": "e9caba1487fc9d5bafc06dc945aff6bd7fb45464",
                "filename": "src/main/java/io/parallec/core/commander/workflow/InternalDataProvider.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/4eda56976d140d0d9c0169bc6f5ad29c2393ffc2/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fcommander%2Fworkflow%2FInternalDataProvider.java",
                "raw_url": "https://github.com/eBay/parallec/raw/4eda56976d140d0d9c0169bc6f5ad29c2393ffc2/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fcommander%2Fworkflow%2FInternalDataProvider.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fcommander%2Fworkflow%2FInternalDataProvider.java?ref=4eda56976d140d0d9c0169bc6f5ad29c2393ffc2",
                "patch": "@@ -115,7 +115,7 @@ public void filterUnsafeOrUnnecessaryRequest(\n                 Boolean willExecute = Boolean.parseBoolean(map\n                         .get(PcConstants.NODE_REQUEST_WILL_EXECUTE));\n \n-                if (willExecute == false) {\n+                if (!willExecute) {\n                     logger.info(\"NOT_EXECUTE_COMMAND \"\n                              + \" on target: \" + hostName + \" at \"\n                             + PcDateUtils.getNowDateTimeStrStandard());"
            },
            {
                "sha": "ee1daffa1a2434b4f909de216b932bd894a1e0ab",
                "filename": "src/main/java/io/parallec/core/commander/workflow/VarReplacementProvider.java",
                "status": "modified",
                "additions": 2,
                "deletions": 2,
                "changes": 4,
                "blob_url": "https://github.com/eBay/parallec/blob/4eda56976d140d0d9c0169bc6f5ad29c2393ffc2/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fcommander%2Fworkflow%2FVarReplacementProvider.java",
                "raw_url": "https://github.com/eBay/parallec/raw/4eda56976d140d0d9c0169bc6f5ad29c2393ffc2/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fcommander%2Fworkflow%2FVarReplacementProvider.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fcommander%2Fworkflow%2FVarReplacementProvider.java?ref=4eda56976d140d0d9c0169bc6f5ad29c2393ffc2",
                "patch": "@@ -90,7 +90,7 @@ public void updateRequestWithReplacement(\n              * ENABLE CRETIRIA: useReplacementVarMap==true\n              * \n              */\n-            if (useReplacementVarMap == true && replacementVarMap != null) {\n+            if (useReplacementVarMap && replacementVarMap != null) {\n \n                 for (Entry<String, String> entry : replacementVarMap.entrySet()) {\n \n@@ -108,7 +108,7 @@ public void updateRequestWithReplacement(\n             /**\n              * ENABLE CRETIRIA: useReplacementVarMap==true\n              */\n-            if (useReplacementVarMapNodeSpecific == true\n+            if (useReplacementVarMapNodeSpecific \n                     && replacementVarMapNodeSpecific != null) {\n                 VarReplacementProvider.getInstance()\n                         .updateRequestByAddingReplaceVarPairNodeSpecific(task,"
            },
            {
                "sha": "241d97351b76b7e315cebf7ead6e03e8091471db",
                "filename": "src/main/java/io/parallec/core/commander/workflow/ssh/SshProvider.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/4eda56976d140d0d9c0169bc6f5ad29c2393ffc2/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fcommander%2Fworkflow%2Fssh%2FSshProvider.java",
                "raw_url": "https://github.com/eBay/parallec/raw/4eda56976d140d0d9c0169bc6f5ad29c2393ffc2/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fcommander%2Fworkflow%2Fssh%2FSshProvider.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fcommander%2Fworkflow%2Fssh%2FSshProvider.java?ref=4eda56976d140d0d9c0169bc6f5ad29c2393ffc2",
                "patch": "@@ -194,7 +194,7 @@ public ResponseOnSingeRequest executeAndGenResponse(ChannelExec channel) {\n         try {\n \n             in = channel.getInputStream();\n-            ((ChannelExec) channel).setErrStream(outputStreamStdErr);\n+            channel.setErrStream(outputStreamStdErr);\n \n             byte[] tmp = new byte[ParallecGlobalConfig.sshBufferSize];\n             while (true) {"
            },
            {
                "sha": "34a03bdb881b1bf6a9e18287d63228b0fb6bd3d9",
                "filename": "src/main/java/io/parallec/core/resources/AsyncHttpClientFactoryEmbed.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/4eda56976d140d0d9c0169bc6f5ad29c2393ffc2/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fresources%2FAsyncHttpClientFactoryEmbed.java",
                "raw_url": "https://github.com/eBay/parallec/raw/4eda56976d140d0d9c0169bc6f5ad29c2393ffc2/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fresources%2FAsyncHttpClientFactoryEmbed.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fresources%2FAsyncHttpClientFactoryEmbed.java?ref=4eda56976d140d0d9c0169bc6f5ad29c2393ffc2",
                "patch": "@@ -164,7 +164,7 @@ private static class CustomTrustManager implements X509TrustManager {\n          * @return certificate.\n          */\n         public X509Certificate[] getAcceptedIssuers() {\n-            return (X509Certificate[]) null;\n+            return null;\n         }\n \n         /**"
            },
            {
                "sha": "b7356165578c26cba91fae13742a3849afeac2c2",
                "filename": "src/main/java/io/parallec/core/task/ParallelTaskManager.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/4eda56976d140d0d9c0169bc6f5ad29c2393ffc2/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Ftask%2FParallelTaskManager.java",
                "raw_url": "https://github.com/eBay/parallec/raw/4eda56976d140d0d9c0169bc6f5ad29c2393ffc2/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Ftask%2FParallelTaskManager.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Ftask%2FParallelTaskManager.java?ref=4eda56976d140d0d9c0169bc6f5ad29c2393ffc2",
                "patch": "@@ -139,7 +139,7 @@ public synchronized void shutdownTaskScheduler(){\n      * @return the task from in progress map\n      */\n     public ParallelTask getTaskFromInProgressMap(String jobId) {\n-        if (inprogressTaskMap.containsKey(jobId) == false)\n+        if (!inprogressTaskMap.containsKey(jobId))\n             return null;\n         return inprogressTaskMap.get(jobId);\n     }"
            },
            {
                "sha": "40b0dd6f35e3a24a683a088930f87e9924ceceb9",
                "filename": "src/main/java/io/parallec/core/util/PcHttpUtils.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/4eda56976d140d0d9c0169bc6f5ad29c2393ffc2/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Futil%2FPcHttpUtils.java",
                "raw_url": "https://github.com/eBay/parallec/raw/4eda56976d140d0d9c0169bc6f5ad29c2393ffc2/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Futil%2FPcHttpUtils.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Futil%2FPcHttpUtils.java?ref=4eda56976d140d0d9c0169bc6f5ad29c2393ffc2",
                "patch": "@@ -79,7 +79,7 @@ public static void replaceHttpHeaderMapNodeSpecific(\n             }\n         }\n \n-        if (needToReplaceVarInHttpHeader == false) {\n+        if (!needToReplaceVarInHttpHeader) {\n             logger.debug(\"No need to replace. Since there are no HTTP header variables. \");\n             return;\n         }"
            }
        ]
    },
    {
        "sha": "03b063fbaef5a39cfcaa0e2cf988336e5d5caf52",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6MDNiMDYzZmJhZWY1YTM5Y2ZjYWEwZTJjZjk4ODMzNmU1ZDVjYWY1Mg==",
        "commit": {
            "author": {
                "name": "Yuanteng (Jeff) Pei",
                "email": "ypei@ebay.com",
                "date": "2016-04-23T06:07:19Z"
            },
            "committer": {
                "name": "Yuanteng (Jeff) Pei",
                "email": "ypei@ebay.com",
                "date": "2016-04-23T06:07:19Z"
            },
            "message": "Merge pull request #31 from DevFactory/release/primitivies-should-not-be-boxed-fix-1\n\nCode quality fix - Primitives should not be boxed just for \"String\" conversion.",
            "tree": {
                "sha": "64bdf4fc2d15e337a938cfd0ebb1cbc59d43295a",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/64bdf4fc2d15e337a938cfd0ebb1cbc59d43295a"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/03b063fbaef5a39cfcaa0e2cf988336e5d5caf52",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/03b063fbaef5a39cfcaa0e2cf988336e5d5caf52",
        "html_url": "https://github.com/eBay/parallec/commit/03b063fbaef5a39cfcaa0e2cf988336e5d5caf52",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/03b063fbaef5a39cfcaa0e2cf988336e5d5caf52/comments",
        "author": null,
        "committer": null,
        "parents": [
            {
                "sha": "666d69d8c735a4fa8a9e4145aabd5d46556f3b03",
                "url": "https://api.github.com/repos/eBay/parallec/commits/666d69d8c735a4fa8a9e4145aabd5d46556f3b03",
                "html_url": "https://github.com/eBay/parallec/commit/666d69d8c735a4fa8a9e4145aabd5d46556f3b03"
            },
            {
                "sha": "8399c982bcfa16ab8d12cc2fdae242df4a5706d3",
                "url": "https://api.github.com/repos/eBay/parallec/commits/8399c982bcfa16ab8d12cc2fdae242df4a5706d3",
                "html_url": "https://github.com/eBay/parallec/commit/8399c982bcfa16ab8d12cc2fdae242df4a5706d3"
            }
        ],
        "stats": {
            "total": 19,
            "additions": 8,
            "deletions": 11
        },
        "files": [
            {
                "sha": "488de497872b30070aa160048f820b590249d6cb",
                "filename": "src/main/java/io/parallec/core/actor/ExecutionManager.java",
                "status": "modified",
                "additions": 2,
                "deletions": 5,
                "changes": 7,
                "blob_url": "https://github.com/eBay/parallec/blob/03b063fbaef5a39cfcaa0e2cf988336e5d5caf52/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FExecutionManager.java",
                "raw_url": "https://github.com/eBay/parallec/raw/03b063fbaef5a39cfcaa0e2cf988336e5d5caf52/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FExecutionManager.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FExecutionManager.java?ref=03b063fbaef5a39cfcaa0e2cf988336e5d5caf52",
                "patch": "@@ -338,9 +338,7 @@ public void onReceive(Object message) {\n                             + \" / \"\n                             + requestCount\n                             + \" after \"\n-                            + new Double(\n-                                    (prepareRequestTime - startTime) / 1000.0)\n-                                    .toString() + \" secs\"\n+                            + Double.toString((prepareRequestTime - startTime) / 1000.0) + \" secs\"\n                             + \":  (NOT SEND YET) \" + targetHost + \" at \"\n                             + prepareRequestTimeStr);\n \n@@ -456,8 +454,7 @@ public void onReceive(Object message) {\n                         / (double) (requestCount) * 100.0;\n                 String responseReceiveTimeStr = PcDateUtils\n                         .getDateTimeStrStandard(new Date(responseReceiveTime));\n-                String secondElapsedStr = new Double(\n-                        (responseReceiveTime - startTime) / 1000.0).toString();\n+                String secondElapsedStr = Double.toString((responseReceiveTime - startTime) / 1000.0);\n                 \n                 // log the first/ last 5 percent; then sample the middle\n                 if(requestCount < ParallecGlobalConfig.logAllResponseIfTotalLessThan"
            },
            {
                "sha": "b1bb10ee98504646eb0a60cc976d2b15071bc4cc",
                "filename": "src/main/java/io/parallec/core/commander/workflow/VarReplacementProvider.java",
                "status": "modified",
                "additions": 4,
                "deletions": 4,
                "changes": 8,
                "blob_url": "https://github.com/eBay/parallec/blob/03b063fbaef5a39cfcaa0e2cf988336e5d5caf52/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fcommander%2Fworkflow%2FVarReplacementProvider.java",
                "raw_url": "https://github.com/eBay/parallec/raw/03b063fbaef5a39cfcaa0e2cf988336e5d5caf52/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fcommander%2Fworkflow%2FVarReplacementProvider.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fcommander%2Fworkflow%2FVarReplacementProvider.java?ref=03b063fbaef5a39cfcaa0e2cf988336e5d5caf52",
                "patch": "@@ -150,7 +150,7 @@ public void updateRequestByAddingReplaceVarPair(\n                             + replaceVarKey, replaceVarValue);\n             nodeReqResponse.getRequestParameters().put(\n                     PcConstants.NODE_REQUEST_WILL_EXECUTE,\n-                    new Boolean(true).toString());\n+                    Boolean.toString(true));\n \n         }// end for loop\n \n@@ -216,7 +216,7 @@ public void updateRequestByAddingReplaceVarPairNodeSpecific(\n \n                     nodeReqResponse.getRequestParameters().put(\n                             PcConstants.NODE_REQUEST_WILL_EXECUTE,\n-                            new Boolean(false).toString());\n+                            Boolean.toString(false));\n \n                     /**\n                      * 20130828: make it generic to check NULL KEY/VALUE\n@@ -239,11 +239,11 @@ public void updateRequestByAddingReplaceVarPairNodeSpecific(\n                             .contains(PcConstants.NA)) {\n                         nodeReqResponse.getRequestParameters().put(\n                                 PcConstants.NODE_REQUEST_WILL_EXECUTE,\n-                                new Boolean(false).toString());\n+                                Boolean.toString(false));\n                     } else {\n                         nodeReqResponse.getRequestParameters().put(\n                                 PcConstants.NODE_REQUEST_WILL_EXECUTE,\n-                                new Boolean(true).toString());\n+                                Boolean.toString(true));\n                     }\n \n                 }"
            },
            {
                "sha": "b6a0fbdb48a4238a5e8bea8b754587058807b63a",
                "filename": "src/main/java/io/parallec/core/commander/workflow/ssh/SshProvider.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/03b063fbaef5a39cfcaa0e2cf988336e5d5caf52/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fcommander%2Fworkflow%2Fssh%2FSshProvider.java",
                "raw_url": "https://github.com/eBay/parallec/raw/03b063fbaef5a39cfcaa0e2cf988336e5d5caf52/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fcommander%2Fworkflow%2Fssh%2FSshProvider.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fcommander%2Fworkflow%2Fssh%2FSshProvider.java?ref=03b063fbaef5a39cfcaa0e2cf988336e5d5caf52",
                "patch": "@@ -214,7 +214,7 @@ public ResponseOnSingeRequest executeAndGenResponse(ChannelExec channel) {\n                     // exit 0 is good\n                     int exitStatus = channel.getExitStatus();\n                     sshResponse.setStatusCodeInt(exitStatus);\n-                    sshResponse.setStatusCode(\"\" + exitStatus);\n+                    sshResponse.setStatusCode(Integer.toString(exitStatus));\n                     break;\n                 }\n "
            },
            {
                "sha": "bffda07c7a2cb66a0b67229b24cc0e60392e6b06",
                "filename": "src/main/java/io/parallec/core/monitor/MonitorProvider.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/03b063fbaef5a39cfcaa0e2cf988336e5d5caf52/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fmonitor%2FMonitorProvider.java",
                "raw_url": "https://github.com/eBay/parallec/raw/03b063fbaef5a39cfcaa0e2cf988336e5d5caf52/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fmonitor%2FMonitorProvider.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fmonitor%2FMonitorProvider.java?ref=03b063fbaef5a39cfcaa0e2cf988336e5d5caf52",
                "patch": "@@ -119,7 +119,7 @@ public ThreadUsage getThreadUsage() {\n             ThreadInfo threadInfo = threadMxBean.getThreadInfo(tId);\n             if(threadInfo==null) continue;\n             threadUsage.threadData.put(\n-                    Long.valueOf(tId).toString(),\n+                    Long.toString(tId),\n                     new ThreadData(threadInfo.getThreadName(), threadInfo\n                             .getThreadState().name(), threadMxBean\n                             .getThreadCpuTime(tId)));"
            }
        ]
    },
    {
        "sha": "c5d503ffc80ac45cfc570a077e470bbe62ea7561",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6YzVkNTAzZmZjODBhYzQ1Y2ZjNTcwYTA3N2U0NzBiYmU2MmVhNzU2MQ==",
        "commit": {
            "author": {
                "name": "Faisal Hameed",
                "email": "faisal.hameed@devfactory.com",
                "date": "2016-04-22T06:14:13Z"
            },
            "committer": {
                "name": "Faisal Hameed",
                "email": "faisal.hameed@devfactory.com",
                "date": "2016-04-22T11:56:02Z"
            },
            "message": "Fixing squid:S1125, squid:S1905",
            "tree": {
                "sha": "49e0af081b34a1ae4fca96974bfbb7fa92aafe99",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/49e0af081b34a1ae4fca96974bfbb7fa92aafe99"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/c5d503ffc80ac45cfc570a077e470bbe62ea7561",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/c5d503ffc80ac45cfc570a077e470bbe62ea7561",
        "html_url": "https://github.com/eBay/parallec/commit/c5d503ffc80ac45cfc570a077e470bbe62ea7561",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/c5d503ffc80ac45cfc570a077e470bbe62ea7561/comments",
        "author": {
            "login": "the-best-dev",
            "id": 18755099,
            "node_id": "MDQ6VXNlcjE4NzU1MDk5",
            "avatar_url": "https://avatars.githubusercontent.com/u/18755099?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/the-best-dev",
            "html_url": "https://github.com/the-best-dev",
            "followers_url": "https://api.github.com/users/the-best-dev/followers",
            "following_url": "https://api.github.com/users/the-best-dev/following{/other_user}",
            "gists_url": "https://api.github.com/users/the-best-dev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/the-best-dev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/the-best-dev/subscriptions",
            "organizations_url": "https://api.github.com/users/the-best-dev/orgs",
            "repos_url": "https://api.github.com/users/the-best-dev/repos",
            "events_url": "https://api.github.com/users/the-best-dev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/the-best-dev/received_events",
            "type": "User",
            "site_admin": false
        },
        "committer": {
            "login": "the-best-dev",
            "id": 18755099,
            "node_id": "MDQ6VXNlcjE4NzU1MDk5",
            "avatar_url": "https://avatars.githubusercontent.com/u/18755099?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/the-best-dev",
            "html_url": "https://github.com/the-best-dev",
            "followers_url": "https://api.github.com/users/the-best-dev/followers",
            "following_url": "https://api.github.com/users/the-best-dev/following{/other_user}",
            "gists_url": "https://api.github.com/users/the-best-dev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/the-best-dev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/the-best-dev/subscriptions",
            "organizations_url": "https://api.github.com/users/the-best-dev/orgs",
            "repos_url": "https://api.github.com/users/the-best-dev/repos",
            "events_url": "https://api.github.com/users/the-best-dev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/the-best-dev/received_events",
            "type": "User",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "666d69d8c735a4fa8a9e4145aabd5d46556f3b03",
                "url": "https://api.github.com/repos/eBay/parallec/commits/666d69d8c735a4fa8a9e4145aabd5d46556f3b03",
                "html_url": "https://github.com/eBay/parallec/commit/666d69d8c735a4fa8a9e4145aabd5d46556f3b03"
            }
        ],
        "stats": {
            "total": 28,
            "additions": 14,
            "deletions": 14
        },
        "files": [
            {
                "sha": "7fc75d8ccbffef19bb216e5d9eb220c84948e2fe",
                "filename": "src/main/java/io/parallec/core/ParallelClient.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/c5d503ffc80ac45cfc570a077e470bbe62ea7561/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FParallelClient.java",
                "raw_url": "https://github.com/eBay/parallec/raw/c5d503ffc80ac45cfc570a077e470bbe62ea7561/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FParallelClient.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FParallelClient.java?ref=c5d503ffc80ac45cfc570a077e470bbe62ea7561",
                "patch": "@@ -159,7 +159,7 @@ public void releaseExternalResources() {\n      * if resources have been already released.\n      */\n     public void reinitIfClosed() {\n-        if (isClosed.get() == true) {\n+        if (isClosed.get()) {\n             logger.info(\"External Resource was released. Now Re-initializing resources ...\");\n \n             ActorConfig.createAndGetActorSystem();"
            },
            {
                "sha": "896aa9368a07860136883c7f1eda055fcb093bb8",
                "filename": "src/main/java/io/parallec/core/ParallelTask.java",
                "status": "modified",
                "additions": 3,
                "deletions": 3,
                "changes": 6,
                "blob_url": "https://github.com/eBay/parallec/blob/c5d503ffc80ac45cfc570a077e470bbe62ea7561/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FParallelTask.java",
                "raw_url": "https://github.com/eBay/parallec/raw/c5d503ffc80ac45cfc570a077e470bbe62ea7561/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FParallelTask.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FParallelTask.java?ref=c5d503ffc80ac45cfc570a077e470bbe62ea7561",
                "patch": "@@ -413,7 +413,7 @@ public boolean validateWithFillDefault()\n                         + ParallecGlobalConfig.concurrencySshLimit);\n                 this.setConcurrency(ParallecGlobalConfig.concurrencySshLimit);\n             }\n-            if (this.httpMeta.isPollable() == true)\n+            if (this.httpMeta.isPollable())\n                 throw new ParallelTaskInvalidException(\n                         \"Not support pollable job with SSH.\");\n \n@@ -425,7 +425,7 @@ public boolean validateWithFillDefault()\n         }else if (this.requestProtocol==\n                 RequestProtocol.PING) {\n \n-            if (this.httpMeta.isPollable() == true)\n+            if (this.httpMeta.isPollable())\n                 throw new ParallelTaskInvalidException(\n                         \"Not support pollable job with PING.\");\n             this.httpMeta.initValuesNa();\n@@ -440,7 +440,7 @@ public boolean validateWithFillDefault()\n         //TCP\n         }else if (this.requestProtocol==\n                 RequestProtocol.TCP) { \n-            if (this.httpMeta.isPollable() == true)\n+            if (this.httpMeta.isPollable())\n                 throw new ParallelTaskInvalidException(\n                         \"Not support pollable job with TCP.\");\n             this.httpMeta.initValuesNa();"
            },
            {
                "sha": "08d62f3a06bdf1fdc7de8891c3388a7b272bf7a4",
                "filename": "src/main/java/io/parallec/core/actor/ExecutionManager.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/c5d503ffc80ac45cfc570a077e470bbe62ea7561/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FExecutionManager.java",
                "raw_url": "https://github.com/eBay/parallec/raw/c5d503ffc80ac45cfc570a077e470bbe62ea7561/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FExecutionManager.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FExecutionManager.java?ref=c5d503ffc80ac45cfc570a077e470bbe62ea7561",
                "patch": "@@ -334,7 +334,7 @@ public void onReceive(Object message) {\n                     final PingMeta pingMeta = task.getPingMeta();\n                     \n                     logger.debug(\"REQUEST GENERATED: \"\n-                            + (int) (sentRequestCounter + 1)\n+                            + (sentRequestCounter + 1)\n                             + \" / \"\n                             + requestCount\n                             + \" after \""
            },
            {
                "sha": "f9be8eab69b25c465e50c87868ad9ee1b48c5e5d",
                "filename": "src/main/java/io/parallec/core/bean/HttpMeta.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/c5d503ffc80ac45cfc570a077e470bbe62ea7561/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2FHttpMeta.java",
                "raw_url": "https://github.com/eBay/parallec/raw/c5d503ffc80ac45cfc570a077e470bbe62ea7561/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2FHttpMeta.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2FHttpMeta.java?ref=c5d503ffc80ac45cfc570a077e470bbe62ea7561",
                "patch": "@@ -130,7 +130,7 @@ public boolean validation() throws ParallelTaskInvalidException {\n             setRequestUrlPostfix(\"\");\n             logger.info(\"USE DEFAULT URL: RequestUrlPostfix is null or empty. SET as empty \\\"\\\". e.g. just want to GET http://parallec.io\");\n         }\n-        if (this.isPollable() == true &&\n+        if (this.isPollable() &&\n                 this.getHttpPollerProcessor() == null) {\n                 throw new ParallelTaskInvalidException(\n                         \"set pollable but httpPollerProcessor is null!! Invalid. please set httpPollerProcessor() \");"
            },
            {
                "sha": "44876a6d08c954c15d4a45d042c5a8bfaa98c016",
                "filename": "src/main/java/io/parallec/core/bean/ssh/SshMeta.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/c5d503ffc80ac45cfc570a077e470bbe62ea7561/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2Fssh%2FSshMeta.java",
                "raw_url": "https://github.com/eBay/parallec/raw/c5d503ffc80ac45cfc570a077e470bbe62ea7561/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2Fssh%2FSshMeta.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2Fssh%2FSshMeta.java?ref=c5d503ffc80ac45cfc570a077e470bbe62ea7561",
                "patch": "@@ -176,7 +176,7 @@ public boolean validation() throws ParallelTaskInvalidException {\n         }\n \n         if (this.sshLoginType == SshLoginType.KEY\n-                && this.privKeyUsePassphrase == true && this.passphrase == null) {\n+                && this.privKeyUsePassphrase && this.passphrase == null) {\n             throw new ParallelTaskInvalidException(\n                     \"use public key and also with private key passphrase but it is null for ssh\");\n         }"
            },
            {
                "sha": "e9caba1487fc9d5bafc06dc945aff6bd7fb45464",
                "filename": "src/main/java/io/parallec/core/commander/workflow/InternalDataProvider.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/c5d503ffc80ac45cfc570a077e470bbe62ea7561/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fcommander%2Fworkflow%2FInternalDataProvider.java",
                "raw_url": "https://github.com/eBay/parallec/raw/c5d503ffc80ac45cfc570a077e470bbe62ea7561/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fcommander%2Fworkflow%2FInternalDataProvider.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fcommander%2Fworkflow%2FInternalDataProvider.java?ref=c5d503ffc80ac45cfc570a077e470bbe62ea7561",
                "patch": "@@ -115,7 +115,7 @@ public void filterUnsafeOrUnnecessaryRequest(\n                 Boolean willExecute = Boolean.parseBoolean(map\n                         .get(PcConstants.NODE_REQUEST_WILL_EXECUTE));\n \n-                if (willExecute == false) {\n+                if (!willExecute) {\n                     logger.info(\"NOT_EXECUTE_COMMAND \"\n                              + \" on target: \" + hostName + \" at \"\n                             + PcDateUtils.getNowDateTimeStrStandard());"
            },
            {
                "sha": "03e86ee8831c8a30c3619b78f656626e0e7351f0",
                "filename": "src/main/java/io/parallec/core/commander/workflow/VarReplacementProvider.java",
                "status": "modified",
                "additions": 2,
                "deletions": 2,
                "changes": 4,
                "blob_url": "https://github.com/eBay/parallec/blob/c5d503ffc80ac45cfc570a077e470bbe62ea7561/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fcommander%2Fworkflow%2FVarReplacementProvider.java",
                "raw_url": "https://github.com/eBay/parallec/raw/c5d503ffc80ac45cfc570a077e470bbe62ea7561/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fcommander%2Fworkflow%2FVarReplacementProvider.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fcommander%2Fworkflow%2FVarReplacementProvider.java?ref=c5d503ffc80ac45cfc570a077e470bbe62ea7561",
                "patch": "@@ -90,7 +90,7 @@ public void updateRequestWithReplacement(\n              * ENABLE CRETIRIA: useReplacementVarMap==true\n              * \n              */\n-            if (useReplacementVarMap == true && replacementVarMap != null) {\n+            if (useReplacementVarMap && replacementVarMap != null) {\n \n                 for (Entry<String, String> entry : replacementVarMap.entrySet()) {\n \n@@ -108,7 +108,7 @@ public void updateRequestWithReplacement(\n             /**\n              * ENABLE CRETIRIA: useReplacementVarMap==true\n              */\n-            if (useReplacementVarMapNodeSpecific == true\n+            if (useReplacementVarMapNodeSpecific \n                     && replacementVarMapNodeSpecific != null) {\n                 VarReplacementProvider.getInstance()\n                         .updateRequestByAddingReplaceVarPairNodeSpecific(task,"
            },
            {
                "sha": "0343a3a2bdd4d73dd21abbf9faf876c1c56c3664",
                "filename": "src/main/java/io/parallec/core/commander/workflow/ssh/SshProvider.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/c5d503ffc80ac45cfc570a077e470bbe62ea7561/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fcommander%2Fworkflow%2Fssh%2FSshProvider.java",
                "raw_url": "https://github.com/eBay/parallec/raw/c5d503ffc80ac45cfc570a077e470bbe62ea7561/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fcommander%2Fworkflow%2Fssh%2FSshProvider.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fcommander%2Fworkflow%2Fssh%2FSshProvider.java?ref=c5d503ffc80ac45cfc570a077e470bbe62ea7561",
                "patch": "@@ -194,7 +194,7 @@ public ResponseOnSingeRequest executeAndGenResponse(ChannelExec channel) {\n         try {\n \n             in = channel.getInputStream();\n-            ((ChannelExec) channel).setErrStream(outputStreamStdErr);\n+            channel.setErrStream(outputStreamStdErr);\n \n             byte[] tmp = new byte[ParallecGlobalConfig.sshBufferSize];\n             while (true) {"
            },
            {
                "sha": "34a03bdb881b1bf6a9e18287d63228b0fb6bd3d9",
                "filename": "src/main/java/io/parallec/core/resources/AsyncHttpClientFactoryEmbed.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/c5d503ffc80ac45cfc570a077e470bbe62ea7561/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fresources%2FAsyncHttpClientFactoryEmbed.java",
                "raw_url": "https://github.com/eBay/parallec/raw/c5d503ffc80ac45cfc570a077e470bbe62ea7561/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fresources%2FAsyncHttpClientFactoryEmbed.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fresources%2FAsyncHttpClientFactoryEmbed.java?ref=c5d503ffc80ac45cfc570a077e470bbe62ea7561",
                "patch": "@@ -164,7 +164,7 @@ private static class CustomTrustManager implements X509TrustManager {\n          * @return certificate.\n          */\n         public X509Certificate[] getAcceptedIssuers() {\n-            return (X509Certificate[]) null;\n+            return null;\n         }\n \n         /**"
            },
            {
                "sha": "b7356165578c26cba91fae13742a3849afeac2c2",
                "filename": "src/main/java/io/parallec/core/task/ParallelTaskManager.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/c5d503ffc80ac45cfc570a077e470bbe62ea7561/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Ftask%2FParallelTaskManager.java",
                "raw_url": "https://github.com/eBay/parallec/raw/c5d503ffc80ac45cfc570a077e470bbe62ea7561/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Ftask%2FParallelTaskManager.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Ftask%2FParallelTaskManager.java?ref=c5d503ffc80ac45cfc570a077e470bbe62ea7561",
                "patch": "@@ -139,7 +139,7 @@ public synchronized void shutdownTaskScheduler(){\n      * @return the task from in progress map\n      */\n     public ParallelTask getTaskFromInProgressMap(String jobId) {\n-        if (inprogressTaskMap.containsKey(jobId) == false)\n+        if (!inprogressTaskMap.containsKey(jobId))\n             return null;\n         return inprogressTaskMap.get(jobId);\n     }"
            },
            {
                "sha": "40b0dd6f35e3a24a683a088930f87e9924ceceb9",
                "filename": "src/main/java/io/parallec/core/util/PcHttpUtils.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/c5d503ffc80ac45cfc570a077e470bbe62ea7561/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Futil%2FPcHttpUtils.java",
                "raw_url": "https://github.com/eBay/parallec/raw/c5d503ffc80ac45cfc570a077e470bbe62ea7561/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Futil%2FPcHttpUtils.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Futil%2FPcHttpUtils.java?ref=c5d503ffc80ac45cfc570a077e470bbe62ea7561",
                "patch": "@@ -79,7 +79,7 @@ public static void replaceHttpHeaderMapNodeSpecific(\n             }\n         }\n \n-        if (needToReplaceVarInHttpHeader == false) {\n+        if (!needToReplaceVarInHttpHeader) {\n             logger.debug(\"No need to replace. Since there are no HTTP header variables. \");\n             return;\n         }"
            }
        ]
    },
    {
        "sha": "35cd592da5856c4f00ee54afd9ca0bb9a213ab48",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6MzVjZDU5MmRhNTg1NmM0ZjAwZWU1NGFmZDljYTBiYjlhMjEzYWI0OA==",
        "commit": {
            "author": {
                "name": "Faisal Hameed",
                "email": "faisal.hameed@devfactory.com",
                "date": "2016-04-22T06:36:39Z"
            },
            "committer": {
                "name": "Faisal Hameed",
                "email": "faisal.hameed@devfactory.com",
                "date": "2016-04-22T06:36:39Z"
            },
            "message": "Fixing squid:S1488, squid:S1640, squid:S1319",
            "tree": {
                "sha": "cc95c04701ed84da2bb9068afd98c53da2d61b87",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/cc95c04701ed84da2bb9068afd98c53da2d61b87"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/35cd592da5856c4f00ee54afd9ca0bb9a213ab48",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/35cd592da5856c4f00ee54afd9ca0bb9a213ab48",
        "html_url": "https://github.com/eBay/parallec/commit/35cd592da5856c4f00ee54afd9ca0bb9a213ab48",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/35cd592da5856c4f00ee54afd9ca0bb9a213ab48/comments",
        "author": {
            "login": "the-best-dev",
            "id": 18755099,
            "node_id": "MDQ6VXNlcjE4NzU1MDk5",
            "avatar_url": "https://avatars.githubusercontent.com/u/18755099?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/the-best-dev",
            "html_url": "https://github.com/the-best-dev",
            "followers_url": "https://api.github.com/users/the-best-dev/followers",
            "following_url": "https://api.github.com/users/the-best-dev/following{/other_user}",
            "gists_url": "https://api.github.com/users/the-best-dev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/the-best-dev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/the-best-dev/subscriptions",
            "organizations_url": "https://api.github.com/users/the-best-dev/orgs",
            "repos_url": "https://api.github.com/users/the-best-dev/repos",
            "events_url": "https://api.github.com/users/the-best-dev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/the-best-dev/received_events",
            "type": "User",
            "site_admin": false
        },
        "committer": {
            "login": "the-best-dev",
            "id": 18755099,
            "node_id": "MDQ6VXNlcjE4NzU1MDk5",
            "avatar_url": "https://avatars.githubusercontent.com/u/18755099?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/the-best-dev",
            "html_url": "https://github.com/the-best-dev",
            "followers_url": "https://api.github.com/users/the-best-dev/followers",
            "following_url": "https://api.github.com/users/the-best-dev/following{/other_user}",
            "gists_url": "https://api.github.com/users/the-best-dev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/the-best-dev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/the-best-dev/subscriptions",
            "organizations_url": "https://api.github.com/users/the-best-dev/orgs",
            "repos_url": "https://api.github.com/users/the-best-dev/repos",
            "events_url": "https://api.github.com/users/the-best-dev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/the-best-dev/received_events",
            "type": "User",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "666d69d8c735a4fa8a9e4145aabd5d46556f3b03",
                "url": "https://api.github.com/repos/eBay/parallec/commits/666d69d8c735a4fa8a9e4145aabd5d46556f3b03",
                "html_url": "https://github.com/eBay/parallec/commit/666d69d8c735a4fa8a9e4145aabd5d46556f3b03"
            }
        ],
        "stats": {
            "total": 43,
            "additions": 15,
            "deletions": 28
        },
        "files": [
            {
                "sha": "7dc7c1b02381b1a2fbd80c40ffafa1c52a41c58b",
                "filename": "src/main/java/io/parallec/core/ParallelTask.java",
                "status": "modified",
                "additions": 1,
                "deletions": 2,
                "changes": 3,
                "blob_url": "https://github.com/eBay/parallec/blob/35cd592da5856c4f00ee54afd9ca0bb9a213ab48/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FParallelTask.java",
                "raw_url": "https://github.com/eBay/parallec/raw/35cd592da5856c4f00ee54afd9ca0bb9a213ab48/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FParallelTask.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FParallelTask.java?ref=35cd592da5856c4f00ee54afd9ca0bb9a213ab48",
                "patch": "@@ -462,8 +462,7 @@ public boolean validateWithFillDefault()\n             this.pingMeta = null;\n         }// end else\n \n-        boolean isValid = true;\n-        return isValid;\n+        return true;\n     }// end func\n \n     /**"
            },
            {
                "sha": "dbba27155871f6417856ec171431fe970d965722",
                "filename": "src/main/java/io/parallec/core/actor/SshWorker.java",
                "status": "modified",
                "additions": 1,
                "deletions": 3,
                "changes": 4,
                "blob_url": "https://github.com/eBay/parallec/blob/35cd592da5856c4f00ee54afd9ca0bb9a213ab48/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FSshWorker.java",
                "raw_url": "https://github.com/eBay/parallec/raw/35cd592da5856c4f00ee54afd9ca0bb9a213ab48/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FSshWorker.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FSshWorker.java?ref=35cd592da5856c4f00ee54afd9ca0bb9a213ab48",
                "patch": "@@ -405,9 +405,7 @@ public SshTask(SshMeta sshMeta, String targetHost) {\n         @Override\n         public ResponseOnSingeRequest call() throws Exception {\n             SshProvider sshProvider = new SshProvider(sshMeta, targetHost);\n-            ResponseOnSingeRequest sshResponse = sshProvider\n-                    .executeSshCommand();\n-            return sshResponse;\n+            return sshProvider.executeSshCommand();\n         }\n     }// end class\n "
            },
            {
                "sha": "b2a8d004c158fcfe1c35bc957d404fa0b8c5137d",
                "filename": "src/main/java/io/parallec/core/actor/poll/HttpPollerProcessor.java",
                "status": "modified",
                "additions": 1,
                "deletions": 3,
                "changes": 4,
                "blob_url": "https://github.com/eBay/parallec/blob/35cd592da5856c4f00ee54afd9ca0bb9a213ab48/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2Fpoll%2FHttpPollerProcessor.java",
                "raw_url": "https://github.com/eBay/parallec/raw/35cd592da5856c4f00ee54afd9ca0bb9a213ab48/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2Fpoll%2FHttpPollerProcessor.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2Fpoll%2FHttpPollerProcessor.java?ref=35cd592da5856c4f00ee54afd9ca0bb9a213ab48",
                "patch": "@@ -135,9 +135,7 @@ public HttpPollerProcessor(String pollerType, String successRegex,\n      * @return the poller request url\n      */\n     public String getPollerRequestUrl(String uuid) {\n-        String pollerUrl = pollerRequestTemplate\n-                .replace(jobIdPlaceHolder, uuid);\n-        return pollerUrl;\n+        return pollerRequestTemplate.replace(jobIdPlaceHolder, uuid);\n     }\n \n     /**"
            },
            {
                "sha": "64cd03b673a4bd5c6362e6566bb4868279fa4c16",
                "filename": "src/main/java/io/parallec/core/bean/ssh/SshMeta.java",
                "status": "modified",
                "additions": 1,
                "deletions": 2,
                "changes": 3,
                "blob_url": "https://github.com/eBay/parallec/blob/35cd592da5856c4f00ee54afd9ca0bb9a213ab48/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2Fssh%2FSshMeta.java",
                "raw_url": "https://github.com/eBay/parallec/raw/35cd592da5856c4f00ee54afd9ca0bb9a213ab48/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2Fssh%2FSshMeta.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2Fssh%2FSshMeta.java?ref=35cd592da5856c4f00ee54afd9ca0bb9a213ab48",
                "patch": "@@ -307,8 +307,7 @@ public void setUserName(String userName) {\n     public String getPrivKeyAbsPath() {\n \n         String workingDir = System.getProperty(\"user.dir\");\n-        String privKeyAbsPath = workingDir + \"/\" + getPrivKeyRelativePath();\n-        return privKeyAbsPath;\n+        return workingDir + \"/\" + getPrivKeyRelativePath();\n     }\n \n     /**"
            },
            {
                "sha": "0aa85d1ebd762d51b23fdf8eaffb30daa3176b0b",
                "filename": "src/main/java/io/parallec/core/monitor/MonitorProvider.java",
                "status": "modified",
                "additions": 1,
                "deletions": 2,
                "changes": 3,
                "blob_url": "https://github.com/eBay/parallec/blob/35cd592da5856c4f00ee54afd9ca0bb9a213ab48/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fmonitor%2FMonitorProvider.java",
                "raw_url": "https://github.com/eBay/parallec/raw/35cd592da5856c4f00ee54afd9ca0bb9a213ab48/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fmonitor%2FMonitorProvider.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fmonitor%2FMonitorProvider.java?ref=35cd592da5856c4f00ee54afd9ca0bb9a213ab48",
                "patch": "@@ -228,7 +228,7 @@ public static class PerformUsage extends Jsonable {\n          * @return the summary\n          */\n         public String getSummary() {\n-            String summary = PcNumberUtils\n+            return PcNumberUtils\n                     .getStringFromDouble(memoryUsagePercent)\n                     + \"% (\"\n                     + PcNumberUtils.getStringFromDouble(usedMemory)\n@@ -237,7 +237,6 @@ public String getSummary() {\n                     + \") Max \"\n                     + PcNumberUtils.getStringFromDouble(maxMemory);\n \n-            return summary;\n         }\n \n     }"
            },
            {
                "sha": "c43cebdb23120e10d0bad484076cad06cbe55e67",
                "filename": "src/main/java/io/parallec/core/task/ParallelTaskManager.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/35cd592da5856c4f00ee54afd9ca0bb9a213ab48/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Ftask%2FParallelTaskManager.java",
                "raw_url": "https://github.com/eBay/parallec/raw/35cd592da5856c4f00ee54afd9ca0bb9a213ab48/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Ftask%2FParallelTaskManager.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Ftask%2FParallelTaskManager.java?ref=35cd592da5856c4f00ee54afd9ca0bb9a213ab48",
                "patch": "@@ -319,7 +319,7 @@ public Queue<ParallelTask> getWaitQ() {\n      *\n      * @return the inprogress task map\n      */\n-    public ConcurrentHashMap<String, ParallelTask> getInprogressTaskMap() {\n+    public Map<String, ParallelTask> getInprogressTaskMap() {\n         return inprogressTaskMap;\n     }\n     "
            },
            {
                "sha": "26ad4b0a88530bfd3e69ef16b6197bc2fa901279",
                "filename": "src/main/java/io/parallec/core/util/PcDateUtils.java",
                "status": "modified",
                "additions": 4,
                "deletions": 8,
                "changes": 12,
                "blob_url": "https://github.com/eBay/parallec/blob/35cd592da5856c4f00ee54afd9ca0bb9a213ab48/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Futil%2FPcDateUtils.java",
                "raw_url": "https://github.com/eBay/parallec/raw/35cd592da5856c4f00ee54afd9ca0bb9a213ab48/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Futil%2FPcDateUtils.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Futil%2FPcDateUtils.java?ref=35cd592da5856c4f00ee54afd9ca0bb9a213ab48",
                "patch": "@@ -40,8 +40,7 @@ public static String getDateTimeStr(Date d) {\n \n         SimpleDateFormat sdf = new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss.SSSZ\");\n         // 20140315 test will problem +0000\n-        String str = sdf.format(d);\n-        return str;\n+        return sdf.format(d);\n     }\n \n     /**\n@@ -60,8 +59,7 @@ public static String getDateTimeStrStandard(Date d) {\n \n         SimpleDateFormat sdf = new SimpleDateFormat(\"yyyy.MM.dd.HH.mm.ss.SSSZ\");\n \n-        String str = sdf.format(d);\n-        return str;\n+        return sdf.format(d);\n     }\n \n     /**\n@@ -76,8 +74,7 @@ public static String getDateTimeStrConcise(Date d) {\n             return \"\";\n \n         SimpleDateFormat sdf = new SimpleDateFormat(\"yyyyMMddHHmmssSSSZ\");\n-        String str = sdf.format(d);\n-        return str;\n+        return sdf.format(d);\n     }\n \n     /**\n@@ -92,8 +89,7 @@ public static String getDateTimeStrConciseNoZone(Date d) {\n             return \"\";\n \n         SimpleDateFormat sdf = new SimpleDateFormat(\"yyyyMMddHHmmssSSS\");\n-        String str = sdf.format(d);\n-        return str;\n+        return sdf.format(d);\n     }\n \n     /**"
            },
            {
                "sha": "e4c77e647f98ef919b3e3903032b1cb801b67453",
                "filename": "src/main/java/io/parallec/core/util/PcErrorMsgUtils.java",
                "status": "modified",
                "additions": 3,
                "deletions": 2,
                "changes": 5,
                "blob_url": "https://github.com/eBay/parallec/blob/35cd592da5856c4f00ee54afd9ca0bb9a213ab48/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Futil%2FPcErrorMsgUtils.java",
                "raw_url": "https://github.com/eBay/parallec/raw/35cd592da5856c4f00ee54afd9ca0bb9a213ab48/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Futil%2FPcErrorMsgUtils.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Futil%2FPcErrorMsgUtils.java?ref=35cd592da5856c4f00ee54afd9ca0bb9a213ab48",
                "patch": "@@ -12,6 +12,7 @@\n  */\n package io.parallec.core.util;\n \n+import java.util.EnumMap;\n import java.util.HashMap;\n import java.util.Map;\n \n@@ -31,10 +32,10 @@ public enum ERROR_TYPE {\n     }\n \n     /** The Constant errorMapOrig. */\n-    public static final Map<ERROR_TYPE, String> errorMapOrig = new HashMap<ERROR_TYPE, String>();\n+    public static final Map<ERROR_TYPE, String> errorMapOrig = new EnumMap<>(ERROR_TYPE.class);\n \n     /** The Constant errorMapReplace. */\n-    public static final Map<ERROR_TYPE, String> errorMapReplace = new HashMap<ERROR_TYPE, String>();\n+    public static final Map<ERROR_TYPE, String> errorMapReplace = new EnumMap<>(ERROR_TYPE.class);\n \n     static {\n         errorMapOrig.put(ERROR_TYPE.CONNECTION_EXCEPTION,"
            },
            {
                "sha": "e5abeb8a35629b791a57b0fed7f0c88ff118f0e6",
                "filename": "src/main/java/io/parallec/core/util/PcFileNetworkIoUtils.java",
                "status": "modified",
                "additions": 1,
                "deletions": 2,
                "changes": 3,
                "blob_url": "https://github.com/eBay/parallec/blob/35cd592da5856c4f00ee54afd9ca0bb9a213ab48/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Futil%2FPcFileNetworkIoUtils.java",
                "raw_url": "https://github.com/eBay/parallec/raw/35cd592da5856c4f00ee54afd9ca0bb9a213ab48/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Futil%2FPcFileNetworkIoUtils.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Futil%2FPcFileNetworkIoUtils.java?ref=35cd592da5856c4f00ee54afd9ca0bb9a213ab48",
                "patch": "@@ -85,8 +85,7 @@ public static boolean isFileExist(String filePath) {\n \n         File f = new File(filePath);\n \n-        boolean exists = f.exists() && !f.isDirectory();\n-        return exists;\n+        return f.exists() && !f.isDirectory();\n     }\n \n     /**"
            },
            {
                "sha": "490b10a41549826639b8dcb9c802df3612dfe00c",
                "filename": "src/main/java/io/parallec/core/util/PcStringUtils.java",
                "status": "modified",
                "additions": 1,
                "deletions": 3,
                "changes": 4,
                "blob_url": "https://github.com/eBay/parallec/blob/35cd592da5856c4f00ee54afd9ca0bb9a213ab48/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Futil%2FPcStringUtils.java",
                "raw_url": "https://github.com/eBay/parallec/raw/35cd592da5856c4f00ee54afd9ca0bb9a213ab48/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Futil%2FPcStringUtils.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Futil%2FPcStringUtils.java?ref=35cd592da5856c4f00ee54afd9ca0bb9a213ab48",
                "patch": "@@ -102,9 +102,7 @@ public static String renderJson(Object o) {\n \n         Gson gson = new GsonBuilder().disableHtmlEscaping().setPrettyPrinting()\n                 .create();\n-        String jsonOutput = gson.toJson(o);\n-\n-        return jsonOutput;\n+        return gson.toJson(o);\n     }\n \n }"
            }
        ]
    },
    {
        "sha": "8399c982bcfa16ab8d12cc2fdae242df4a5706d3",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6ODM5OWM5ODJiY2ZhMTZhYjhkMTJjYzJmZGFlMjQyZGY0YTU3MDZkMw==",
        "commit": {
            "author": {
                "name": "Faisal Hameed",
                "email": "faisal.hameed@devfactory.com",
                "date": "2016-04-22T04:45:11Z"
            },
            "committer": {
                "name": "Faisal Hameed",
                "email": "faisal.hameed@devfactory.com",
                "date": "2016-04-22T04:45:11Z"
            },
            "message": "Fixing squid:S2131- Primitives should not be boxed just for \"String\" conversion.",
            "tree": {
                "sha": "64bdf4fc2d15e337a938cfd0ebb1cbc59d43295a",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/64bdf4fc2d15e337a938cfd0ebb1cbc59d43295a"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/8399c982bcfa16ab8d12cc2fdae242df4a5706d3",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/8399c982bcfa16ab8d12cc2fdae242df4a5706d3",
        "html_url": "https://github.com/eBay/parallec/commit/8399c982bcfa16ab8d12cc2fdae242df4a5706d3",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/8399c982bcfa16ab8d12cc2fdae242df4a5706d3/comments",
        "author": {
            "login": "the-best-dev",
            "id": 18755099,
            "node_id": "MDQ6VXNlcjE4NzU1MDk5",
            "avatar_url": "https://avatars.githubusercontent.com/u/18755099?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/the-best-dev",
            "html_url": "https://github.com/the-best-dev",
            "followers_url": "https://api.github.com/users/the-best-dev/followers",
            "following_url": "https://api.github.com/users/the-best-dev/following{/other_user}",
            "gists_url": "https://api.github.com/users/the-best-dev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/the-best-dev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/the-best-dev/subscriptions",
            "organizations_url": "https://api.github.com/users/the-best-dev/orgs",
            "repos_url": "https://api.github.com/users/the-best-dev/repos",
            "events_url": "https://api.github.com/users/the-best-dev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/the-best-dev/received_events",
            "type": "User",
            "site_admin": false
        },
        "committer": {
            "login": "the-best-dev",
            "id": 18755099,
            "node_id": "MDQ6VXNlcjE4NzU1MDk5",
            "avatar_url": "https://avatars.githubusercontent.com/u/18755099?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/the-best-dev",
            "html_url": "https://github.com/the-best-dev",
            "followers_url": "https://api.github.com/users/the-best-dev/followers",
            "following_url": "https://api.github.com/users/the-best-dev/following{/other_user}",
            "gists_url": "https://api.github.com/users/the-best-dev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/the-best-dev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/the-best-dev/subscriptions",
            "organizations_url": "https://api.github.com/users/the-best-dev/orgs",
            "repos_url": "https://api.github.com/users/the-best-dev/repos",
            "events_url": "https://api.github.com/users/the-best-dev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/the-best-dev/received_events",
            "type": "User",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "666d69d8c735a4fa8a9e4145aabd5d46556f3b03",
                "url": "https://api.github.com/repos/eBay/parallec/commits/666d69d8c735a4fa8a9e4145aabd5d46556f3b03",
                "html_url": "https://github.com/eBay/parallec/commit/666d69d8c735a4fa8a9e4145aabd5d46556f3b03"
            }
        ],
        "stats": {
            "total": 19,
            "additions": 8,
            "deletions": 11
        },
        "files": [
            {
                "sha": "488de497872b30070aa160048f820b590249d6cb",
                "filename": "src/main/java/io/parallec/core/actor/ExecutionManager.java",
                "status": "modified",
                "additions": 2,
                "deletions": 5,
                "changes": 7,
                "blob_url": "https://github.com/eBay/parallec/blob/8399c982bcfa16ab8d12cc2fdae242df4a5706d3/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FExecutionManager.java",
                "raw_url": "https://github.com/eBay/parallec/raw/8399c982bcfa16ab8d12cc2fdae242df4a5706d3/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FExecutionManager.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FExecutionManager.java?ref=8399c982bcfa16ab8d12cc2fdae242df4a5706d3",
                "patch": "@@ -338,9 +338,7 @@ public void onReceive(Object message) {\n                             + \" / \"\n                             + requestCount\n                             + \" after \"\n-                            + new Double(\n-                                    (prepareRequestTime - startTime) / 1000.0)\n-                                    .toString() + \" secs\"\n+                            + Double.toString((prepareRequestTime - startTime) / 1000.0) + \" secs\"\n                             + \":  (NOT SEND YET) \" + targetHost + \" at \"\n                             + prepareRequestTimeStr);\n \n@@ -456,8 +454,7 @@ public void onReceive(Object message) {\n                         / (double) (requestCount) * 100.0;\n                 String responseReceiveTimeStr = PcDateUtils\n                         .getDateTimeStrStandard(new Date(responseReceiveTime));\n-                String secondElapsedStr = new Double(\n-                        (responseReceiveTime - startTime) / 1000.0).toString();\n+                String secondElapsedStr = Double.toString((responseReceiveTime - startTime) / 1000.0);\n                 \n                 // log the first/ last 5 percent; then sample the middle\n                 if(requestCount < ParallecGlobalConfig.logAllResponseIfTotalLessThan"
            },
            {
                "sha": "b1bb10ee98504646eb0a60cc976d2b15071bc4cc",
                "filename": "src/main/java/io/parallec/core/commander/workflow/VarReplacementProvider.java",
                "status": "modified",
                "additions": 4,
                "deletions": 4,
                "changes": 8,
                "blob_url": "https://github.com/eBay/parallec/blob/8399c982bcfa16ab8d12cc2fdae242df4a5706d3/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fcommander%2Fworkflow%2FVarReplacementProvider.java",
                "raw_url": "https://github.com/eBay/parallec/raw/8399c982bcfa16ab8d12cc2fdae242df4a5706d3/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fcommander%2Fworkflow%2FVarReplacementProvider.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fcommander%2Fworkflow%2FVarReplacementProvider.java?ref=8399c982bcfa16ab8d12cc2fdae242df4a5706d3",
                "patch": "@@ -150,7 +150,7 @@ public void updateRequestByAddingReplaceVarPair(\n                             + replaceVarKey, replaceVarValue);\n             nodeReqResponse.getRequestParameters().put(\n                     PcConstants.NODE_REQUEST_WILL_EXECUTE,\n-                    new Boolean(true).toString());\n+                    Boolean.toString(true));\n \n         }// end for loop\n \n@@ -216,7 +216,7 @@ public void updateRequestByAddingReplaceVarPairNodeSpecific(\n \n                     nodeReqResponse.getRequestParameters().put(\n                             PcConstants.NODE_REQUEST_WILL_EXECUTE,\n-                            new Boolean(false).toString());\n+                            Boolean.toString(false));\n \n                     /**\n                      * 20130828: make it generic to check NULL KEY/VALUE\n@@ -239,11 +239,11 @@ public void updateRequestByAddingReplaceVarPairNodeSpecific(\n                             .contains(PcConstants.NA)) {\n                         nodeReqResponse.getRequestParameters().put(\n                                 PcConstants.NODE_REQUEST_WILL_EXECUTE,\n-                                new Boolean(false).toString());\n+                                Boolean.toString(false));\n                     } else {\n                         nodeReqResponse.getRequestParameters().put(\n                                 PcConstants.NODE_REQUEST_WILL_EXECUTE,\n-                                new Boolean(true).toString());\n+                                Boolean.toString(true));\n                     }\n \n                 }"
            },
            {
                "sha": "b6a0fbdb48a4238a5e8bea8b754587058807b63a",
                "filename": "src/main/java/io/parallec/core/commander/workflow/ssh/SshProvider.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/8399c982bcfa16ab8d12cc2fdae242df4a5706d3/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fcommander%2Fworkflow%2Fssh%2FSshProvider.java",
                "raw_url": "https://github.com/eBay/parallec/raw/8399c982bcfa16ab8d12cc2fdae242df4a5706d3/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fcommander%2Fworkflow%2Fssh%2FSshProvider.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fcommander%2Fworkflow%2Fssh%2FSshProvider.java?ref=8399c982bcfa16ab8d12cc2fdae242df4a5706d3",
                "patch": "@@ -214,7 +214,7 @@ public ResponseOnSingeRequest executeAndGenResponse(ChannelExec channel) {\n                     // exit 0 is good\n                     int exitStatus = channel.getExitStatus();\n                     sshResponse.setStatusCodeInt(exitStatus);\n-                    sshResponse.setStatusCode(\"\" + exitStatus);\n+                    sshResponse.setStatusCode(Integer.toString(exitStatus));\n                     break;\n                 }\n "
            },
            {
                "sha": "bffda07c7a2cb66a0b67229b24cc0e60392e6b06",
                "filename": "src/main/java/io/parallec/core/monitor/MonitorProvider.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/8399c982bcfa16ab8d12cc2fdae242df4a5706d3/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fmonitor%2FMonitorProvider.java",
                "raw_url": "https://github.com/eBay/parallec/raw/8399c982bcfa16ab8d12cc2fdae242df4a5706d3/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fmonitor%2FMonitorProvider.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fmonitor%2FMonitorProvider.java?ref=8399c982bcfa16ab8d12cc2fdae242df4a5706d3",
                "patch": "@@ -119,7 +119,7 @@ public ThreadUsage getThreadUsage() {\n             ThreadInfo threadInfo = threadMxBean.getThreadInfo(tId);\n             if(threadInfo==null) continue;\n             threadUsage.threadData.put(\n-                    Long.valueOf(tId).toString(),\n+                    Long.toString(tId),\n                     new ThreadData(threadInfo.getThreadName(), threadInfo\n                             .getThreadState().name(), threadMxBean\n                             .getThreadCpuTime(tId)));"
            }
        ]
    },
    {
        "sha": "666d69d8c735a4fa8a9e4145aabd5d46556f3b03",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6NjY2ZDY5ZDhjNzM1YTRmYThhOWU0MTQ1YWFiZDVkNDY1NTZmM2IwMw==",
        "commit": {
            "author": {
                "name": "Yuanteng (Jeff) Pei",
                "email": "ypei@ebay.com",
                "date": "2016-04-15T06:56:23Z"
            },
            "committer": {
                "name": "Yuanteng (Jeff) Pei",
                "email": "ypei@ebay.com",
                "date": "2016-04-15T06:56:23Z"
            },
            "message": "Merge pull request #27 from fivesmallq/patch-1\n\nfix typo in readme",
            "tree": {
                "sha": "794403e0e89376dfcfbdbfb450e63f0ba127dd21",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/794403e0e89376dfcfbdbfb450e63f0ba127dd21"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/666d69d8c735a4fa8a9e4145aabd5d46556f3b03",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/666d69d8c735a4fa8a9e4145aabd5d46556f3b03",
        "html_url": "https://github.com/eBay/parallec/commit/666d69d8c735a4fa8a9e4145aabd5d46556f3b03",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/666d69d8c735a4fa8a9e4145aabd5d46556f3b03/comments",
        "author": null,
        "committer": null,
        "parents": [
            {
                "sha": "314dd4e17a2b4b8d2f7926e301bcf03d83397614",
                "url": "https://api.github.com/repos/eBay/parallec/commits/314dd4e17a2b4b8d2f7926e301bcf03d83397614",
                "html_url": "https://github.com/eBay/parallec/commit/314dd4e17a2b4b8d2f7926e301bcf03d83397614"
            },
            {
                "sha": "5f3f6b7cf1cdff8beed5b4150261eec71f9d3a5d",
                "url": "https://api.github.com/repos/eBay/parallec/commits/5f3f6b7cf1cdff8beed5b4150261eec71f9d3a5d",
                "html_url": "https://github.com/eBay/parallec/commit/5f3f6b7cf1cdff8beed5b4150261eec71f9d3a5d"
            }
        ],
        "stats": {
            "total": 2,
            "additions": 1,
            "deletions": 1
        },
        "files": [
            {
                "sha": "e4ae368b3e1d86bf9663033e3ce8263a8a73826b",
                "filename": "README-brief-cn.md",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/666d69d8c735a4fa8a9e4145aabd5d46556f3b03/README-brief-cn.md",
                "raw_url": "https://github.com/eBay/parallec/raw/666d69d8c735a4fa8a9e4145aabd5d46556f3b03/README-brief-cn.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/README-brief-cn.md?ref=666d69d8c735a4fa8a9e4145aabd5d46556f3b03",
                "patch": "@@ -14,7 +14,7 @@\n - 可控并行的，多个不同API请求到同一个HTTP服务器。HTTP请求模板可以在URL, HTTP Header, EntityBody不同地方进行变量替换。这样可以很方便的对那些有REST API的数据库或者网络服务器进行并行的CRUD操作。\n - 灵活的Web服务器的压力测试，并将结果传到任何地方。 \n \n-Parallec内置特别的响应上下文（response context），在处理服务器回复（Response）时能方便快捷的传入，传出任何对象，比如各种客户端（比如elastic search, graphite, kafka, mongodb etc），以便汇集处理数据到任何地方。 [样例程序](http://www.parallec.io/#code-sample)**仅需20行代码**，就可以汇总10000隔API的回复以简单可控的并行速度发送汇总到Elastic Search。\n+Parallec内置特别的响应上下文（response context），在处理服务器回复（Response）时能方便快捷的传入，传出任何对象，比如各种客户端（比如elastic search, graphite, kafka, mongodb etc），以便汇集处理数据到任何地方。 [样例程序](http://www.parallec.io/#code-sample)**仅需20行代码**，就可以汇总10000个API的回复以简单可控的并行速度发送汇总到Elastic Search。\n \n 和REST Commander类似，Parallec非常高效并且可以处理大量响应。 比如其Ping服务器的速度是目前使用最广泛**并行Ping 软件[FPing](http://fping.org/)的2倍**，仅用12秒就可以ping 8000服务器。（[**请看Ping视频演示**](https://github.com/eBay/parallec/wiki/Parallec-pings-8000-servers-in-11.1-seconds)) 同样的对于**并行HTTP**， Parallec发送HTTP请求到8000 Web服务器 并聚集响应只需**12秒** （聚集到内存），或**16秒**（聚集到Elastic Search）（[**请看HTTP视频演示**](https://github.com/eBay/parallec/wiki/Parallec-Aggregates-HTTP-Responses-from-8000-Servers))\n "
            }
        ]
    },
    {
        "sha": "5f3f6b7cf1cdff8beed5b4150261eec71f9d3a5d",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6NWYzZjZiN2NmMWNkZmY4YmVlZDViNDE1MDI2MWVlYzcxZjlkM2E1ZA==",
        "commit": {
            "author": {
                "name": "fivesmallq",
                "email": "fivesmallq@gmail.com",
                "date": "2016-04-15T06:50:15Z"
            },
            "committer": {
                "name": "fivesmallq",
                "email": "fivesmallq@gmail.com",
                "date": "2016-04-15T06:50:15Z"
            },
            "message": "fix typo",
            "tree": {
                "sha": "794403e0e89376dfcfbdbfb450e63f0ba127dd21",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/794403e0e89376dfcfbdbfb450e63f0ba127dd21"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/5f3f6b7cf1cdff8beed5b4150261eec71f9d3a5d",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/5f3f6b7cf1cdff8beed5b4150261eec71f9d3a5d",
        "html_url": "https://github.com/eBay/parallec/commit/5f3f6b7cf1cdff8beed5b4150261eec71f9d3a5d",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/5f3f6b7cf1cdff8beed5b4150261eec71f9d3a5d/comments",
        "author": {
            "login": "fivesmallq",
            "id": 745063,
            "node_id": "MDQ6VXNlcjc0NTA2Mw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/745063?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fivesmallq",
            "html_url": "https://github.com/fivesmallq",
            "followers_url": "https://api.github.com/users/fivesmallq/followers",
            "following_url": "https://api.github.com/users/fivesmallq/following{/other_user}",
            "gists_url": "https://api.github.com/users/fivesmallq/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fivesmallq/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fivesmallq/subscriptions",
            "organizations_url": "https://api.github.com/users/fivesmallq/orgs",
            "repos_url": "https://api.github.com/users/fivesmallq/repos",
            "events_url": "https://api.github.com/users/fivesmallq/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fivesmallq/received_events",
            "type": "User",
            "site_admin": false
        },
        "committer": {
            "login": "fivesmallq",
            "id": 745063,
            "node_id": "MDQ6VXNlcjc0NTA2Mw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/745063?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fivesmallq",
            "html_url": "https://github.com/fivesmallq",
            "followers_url": "https://api.github.com/users/fivesmallq/followers",
            "following_url": "https://api.github.com/users/fivesmallq/following{/other_user}",
            "gists_url": "https://api.github.com/users/fivesmallq/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fivesmallq/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fivesmallq/subscriptions",
            "organizations_url": "https://api.github.com/users/fivesmallq/orgs",
            "repos_url": "https://api.github.com/users/fivesmallq/repos",
            "events_url": "https://api.github.com/users/fivesmallq/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fivesmallq/received_events",
            "type": "User",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "314dd4e17a2b4b8d2f7926e301bcf03d83397614",
                "url": "https://api.github.com/repos/eBay/parallec/commits/314dd4e17a2b4b8d2f7926e301bcf03d83397614",
                "html_url": "https://github.com/eBay/parallec/commit/314dd4e17a2b4b8d2f7926e301bcf03d83397614"
            }
        ],
        "stats": {
            "total": 2,
            "additions": 1,
            "deletions": 1
        },
        "files": [
            {
                "sha": "e4ae368b3e1d86bf9663033e3ce8263a8a73826b",
                "filename": "README-brief-cn.md",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/5f3f6b7cf1cdff8beed5b4150261eec71f9d3a5d/README-brief-cn.md",
                "raw_url": "https://github.com/eBay/parallec/raw/5f3f6b7cf1cdff8beed5b4150261eec71f9d3a5d/README-brief-cn.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/README-brief-cn.md?ref=5f3f6b7cf1cdff8beed5b4150261eec71f9d3a5d",
                "patch": "@@ -14,7 +14,7 @@\n - 可控并行的，多个不同API请求到同一个HTTP服务器。HTTP请求模板可以在URL, HTTP Header, EntityBody不同地方进行变量替换。这样可以很方便的对那些有REST API的数据库或者网络服务器进行并行的CRUD操作。\n - 灵活的Web服务器的压力测试，并将结果传到任何地方。 \n \n-Parallec内置特别的响应上下文（response context），在处理服务器回复（Response）时能方便快捷的传入，传出任何对象，比如各种客户端（比如elastic search, graphite, kafka, mongodb etc），以便汇集处理数据到任何地方。 [样例程序](http://www.parallec.io/#code-sample)**仅需20行代码**，就可以汇总10000隔API的回复以简单可控的并行速度发送汇总到Elastic Search。\n+Parallec内置特别的响应上下文（response context），在处理服务器回复（Response）时能方便快捷的传入，传出任何对象，比如各种客户端（比如elastic search, graphite, kafka, mongodb etc），以便汇集处理数据到任何地方。 [样例程序](http://www.parallec.io/#code-sample)**仅需20行代码**，就可以汇总10000个API的回复以简单可控的并行速度发送汇总到Elastic Search。\n \n 和REST Commander类似，Parallec非常高效并且可以处理大量响应。 比如其Ping服务器的速度是目前使用最广泛**并行Ping 软件[FPing](http://fping.org/)的2倍**，仅用12秒就可以ping 8000服务器。（[**请看Ping视频演示**](https://github.com/eBay/parallec/wiki/Parallec-pings-8000-servers-in-11.1-seconds)) 同样的对于**并行HTTP**， Parallec发送HTTP请求到8000 Web服务器 并聚集响应只需**12秒** （聚集到内存），或**16秒**（聚集到Elastic Search）（[**请看HTTP视频演示**](https://github.com/eBay/parallec/wiki/Parallec-Aggregates-HTTP-Responses-from-8000-Servers))\n "
            }
        ]
    },
    {
        "sha": "314dd4e17a2b4b8d2f7926e301bcf03d83397614",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6MzE0ZGQ0ZTE3YTJiNGI4ZDJmNzkyNmUzMDFiY2YwM2Q4MzM5NzYxNA==",
        "commit": {
            "author": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2016-04-02T04:53:10Z"
            },
            "committer": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2016-04-02T04:53:10Z"
            },
            "message": "update readme [skip ci]",
            "tree": {
                "sha": "f6890814bef7d1283a29567cab570a185dedb2e6",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/f6890814bef7d1283a29567cab570a185dedb2e6"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/314dd4e17a2b4b8d2f7926e301bcf03d83397614",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/314dd4e17a2b4b8d2f7926e301bcf03d83397614",
        "html_url": "https://github.com/eBay/parallec/commit/314dd4e17a2b4b8d2f7926e301bcf03d83397614",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/314dd4e17a2b4b8d2f7926e301bcf03d83397614/comments",
        "author": null,
        "committer": null,
        "parents": [
            {
                "sha": "5354d167fb16de201fd740287b3e8e98323a561c",
                "url": "https://api.github.com/repos/eBay/parallec/commits/5354d167fb16de201fd740287b3e8e98323a561c",
                "html_url": "https://github.com/eBay/parallec/commit/5354d167fb16de201fd740287b3e8e98323a561c"
            }
        ],
        "stats": {
            "total": 2,
            "additions": 1,
            "deletions": 1
        },
        "files": [
            {
                "sha": "235e7f4a3444a6c7adafd11f28fcb6777d672df5",
                "filename": "README.md",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/314dd4e17a2b4b8d2f7926e301bcf03d83397614/README.md",
                "raw_url": "https://github.com/eBay/parallec/raw/314dd4e17a2b4b8d2f7926e301bcf03d83397614/README.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/README.md?ref=314dd4e17a2b4b8d2f7926e301bcf03d83397614",
                "patch": "@@ -249,5 +249,5 @@ Any helpful feedback is more than welcome. This includes feature requests, bug r\n \n Code licensed under Apache License v2.0\n \n-© 2015 eBay Software Foundation\n+© 2015-2016 eBay Software Foundation\n "
            }
        ]
    },
    {
        "sha": "5354d167fb16de201fd740287b3e8e98323a561c",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6NTM1NGQxNjdmYjE2ZGUyMDFmZDc0MDI4N2IzZThlOTgzMjNhNTYxYw==",
        "commit": {
            "author": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2016-01-12T07:30:30Z"
            },
            "committer": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2016-01-12T07:30:30Z"
            },
            "message": "update readme [skip ci]",
            "tree": {
                "sha": "de0c05a6c64730444352f7efe2b8858721283fc0",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/de0c05a6c64730444352f7efe2b8858721283fc0"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/5354d167fb16de201fd740287b3e8e98323a561c",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/5354d167fb16de201fd740287b3e8e98323a561c",
        "html_url": "https://github.com/eBay/parallec/commit/5354d167fb16de201fd740287b3e8e98323a561c",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/5354d167fb16de201fd740287b3e8e98323a561c/comments",
        "author": null,
        "committer": null,
        "parents": [
            {
                "sha": "4c13fd3442e213897f8c1c0b81e9cec1bdc63d76",
                "url": "https://api.github.com/repos/eBay/parallec/commits/4c13fd3442e213897f8c1c0b81e9cec1bdc63d76",
                "html_url": "https://github.com/eBay/parallec/commit/4c13fd3442e213897f8c1c0b81e9cec1bdc63d76"
            }
        ],
        "stats": {
            "total": 2,
            "additions": 1,
            "deletions": 1
        },
        "files": [
            {
                "sha": "9e56251ccb7f9aaf3dd3b1a1a9bdf9c369742768",
                "filename": "README.md",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/5354d167fb16de201fd740287b3e8e98323a561c/README.md",
                "raw_url": "https://github.com/eBay/parallec/raw/5354d167fb16de201fd740287b3e8e98323a561c/README.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/README.md?ref=5354d167fb16de201fd740287b3e8e98323a561c",
                "patch": "@@ -13,7 +13,7 @@\n \n [ [API Overview](http://www.parallec.io/docs/api-overview/) | [Generate & Submit Task](http://www.parallec.io/docs/submit-task/) | [Track Status & Examine Responses](http://www.parallec.io/docs/track-status/) | [Configurations](http://www.parallec.io/docs/configurations/) ]\n \n-Noticed by [the Author of Akka](https://twitter.com/jboner/status/663618652063813632) & Featured in [ [This Week in #Scala](http://www.cakesolutions.net/teamblogs/this-week-in-scala-16/11/2015) | [OSChina](http://www.oschina.net/p/parallec) - [2015 Top 100](http://www.oschina.net/news/69808/2015-annual-ranking-top-100-new-open-source-software) ]\n+[Tweeted](https://twitter.com/jboner/status/663618652063813632) by the Creator of Akka & Featured in [ [This Week in #Scala](http://www.cakesolutions.net/teamblogs/this-week-in-scala-16/11/2015) | [OSChina](http://www.oschina.net/p/parallec) - [2015 Top 100](http://www.oschina.net/news/69808/2015-annual-ranking-top-100-new-open-source-software) ]\n \n Parallec is a fast parallel async HTTP(S)/SSH/TCP/Ping client java library based on [Akka](http://akka.io). Scalably aggregate and handle API responses **anyway** and send it **anywhere** by writing [20 lines](https://www.youtube.com/watch?v=QcavegPMDms) of code. A special super convenient **response context** let you pass in/out any object when handling the responses. Now you can conduct scalable API calls, then effortlessly pass aggregated data anywhere to elastic search, kafka, MongoDB, graphite, memcached, etc. Parallec means  **Paralle**l **C**lient, and is pronounced as \"Para-like\". Visit [www.parallec.io](http://www.parallec.io)\n "
            }
        ]
    },
    {
        "sha": "4c13fd3442e213897f8c1c0b81e9cec1bdc63d76",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6NGMxM2ZkMzQ0MmUyMTM4OTdmOGMxYzBiODFlOWNlYzFiZGM2M2Q3Ng==",
        "commit": {
            "author": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2016-01-12T07:02:34Z"
            },
            "committer": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2016-01-12T07:02:34Z"
            },
            "message": "update readme [skip ci]",
            "tree": {
                "sha": "4742dc84383bf20aef29100a1716205948fa828a",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/4742dc84383bf20aef29100a1716205948fa828a"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/4c13fd3442e213897f8c1c0b81e9cec1bdc63d76",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/4c13fd3442e213897f8c1c0b81e9cec1bdc63d76",
        "html_url": "https://github.com/eBay/parallec/commit/4c13fd3442e213897f8c1c0b81e9cec1bdc63d76",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/4c13fd3442e213897f8c1c0b81e9cec1bdc63d76/comments",
        "author": null,
        "committer": null,
        "parents": [
            {
                "sha": "ecfd7bf1110cf2ec5fdfad2740c561ff9937cc81",
                "url": "https://api.github.com/repos/eBay/parallec/commits/ecfd7bf1110cf2ec5fdfad2740c561ff9937cc81",
                "html_url": "https://github.com/eBay/parallec/commit/ecfd7bf1110cf2ec5fdfad2740c561ff9937cc81"
            }
        ],
        "stats": {
            "total": 2,
            "additions": 1,
            "deletions": 1
        },
        "files": [
            {
                "sha": "a3e6dfa989e7c3ada5900f3a7a58b2fd0d270bca",
                "filename": "README.md",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/4c13fd3442e213897f8c1c0b81e9cec1bdc63d76/README.md",
                "raw_url": "https://github.com/eBay/parallec/raw/4c13fd3442e213897f8c1c0b81e9cec1bdc63d76/README.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/README.md?ref=4c13fd3442e213897f8c1c0b81e9cec1bdc63d76",
                "patch": "@@ -13,7 +13,7 @@\n \n [ [API Overview](http://www.parallec.io/docs/api-overview/) | [Generate & Submit Task](http://www.parallec.io/docs/submit-task/) | [Track Status & Examine Responses](http://www.parallec.io/docs/track-status/) | [Configurations](http://www.parallec.io/docs/configurations/) ]\n \n-Noticed by [the Author of Akka](https://twitter.com/jboner/status/663618652063813632) & Featured in [ [This Week in #Scala](http://www.cakesolutions.net/teamblogs/this-week-in-scala-16/11/2015) | [OSChina](http://www.oschina.net/p/parallec) ]\n+Noticed by [the Author of Akka](https://twitter.com/jboner/status/663618652063813632) & Featured in [ [This Week in #Scala](http://www.cakesolutions.net/teamblogs/this-week-in-scala-16/11/2015) | [OSChina](http://www.oschina.net/p/parallec) - [2015 Top 100](http://www.oschina.net/news/69808/2015-annual-ranking-top-100-new-open-source-software) ]\n \n Parallec is a fast parallel async HTTP(S)/SSH/TCP/Ping client java library based on [Akka](http://akka.io). Scalably aggregate and handle API responses **anyway** and send it **anywhere** by writing [20 lines](https://www.youtube.com/watch?v=QcavegPMDms) of code. A special super convenient **response context** let you pass in/out any object when handling the responses. Now you can conduct scalable API calls, then effortlessly pass aggregated data anywhere to elastic search, kafka, MongoDB, graphite, memcached, etc. Parallec means  **Paralle**l **C**lient, and is pronounced as \"Para-like\". Visit [www.parallec.io](http://www.parallec.io)\n "
            }
        ]
    },
    {
        "sha": "ecfd7bf1110cf2ec5fdfad2740c561ff9937cc81",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6ZWNmZDdiZjExMTBjZjJlYzVmZGZhZDI3NDBjNTYxZmY5OTM3Y2M4MQ==",
        "commit": {
            "author": {
                "name": "Yuanteng (Jeff) Pei",
                "email": "ypei@ebay.com",
                "date": "2015-12-22T21:37:11Z"
            },
            "committer": {
                "name": "Yuanteng (Jeff) Pei",
                "email": "ypei@ebay.com",
                "date": "2015-12-22T21:37:11Z"
            },
            "message": "Update .travis.yml",
            "tree": {
                "sha": "9154b6cd7e251733a4a064a7469ef1cd62655887",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/9154b6cd7e251733a4a064a7469ef1cd62655887"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/ecfd7bf1110cf2ec5fdfad2740c561ff9937cc81",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/ecfd7bf1110cf2ec5fdfad2740c561ff9937cc81",
        "html_url": "https://github.com/eBay/parallec/commit/ecfd7bf1110cf2ec5fdfad2740c561ff9937cc81",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/ecfd7bf1110cf2ec5fdfad2740c561ff9937cc81/comments",
        "author": null,
        "committer": null,
        "parents": [
            {
                "sha": "d00d9d1079982029232e2df73a644d4f5a560e87",
                "url": "https://api.github.com/repos/eBay/parallec/commits/d00d9d1079982029232e2df73a644d4f5a560e87",
                "html_url": "https://github.com/eBay/parallec/commit/d00d9d1079982029232e2df73a644d4f5a560e87"
            }
        ],
        "stats": {
            "total": 2,
            "additions": 1,
            "deletions": 1
        },
        "files": [
            {
                "sha": "94277a3e398be45bbec4a9f989307dcf4b7b59f8",
                "filename": ".travis.yml",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/ecfd7bf1110cf2ec5fdfad2740c561ff9937cc81/.travis.yml",
                "raw_url": "https://github.com/eBay/parallec/raw/ecfd7bf1110cf2ec5fdfad2740c561ff9937cc81/.travis.yml",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/.travis.yml?ref=ecfd7bf1110cf2ec5fdfad2740c561ff9937cc81",
                "patch": "@@ -1,7 +1,7 @@\n language: java\n sudo: true\n jdk:\n-  - openjdk8\n+  - oraclejdk7\n \n before_install:\n   - sudo apt-get install iputils-ping"
            }
        ]
    },
    {
        "sha": "d00d9d1079982029232e2df73a644d4f5a560e87",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6ZDAwZDlkMTA3OTk4MjAyOTIzMmUyZGY3M2E2NDRkNGY1YTU2MGU4Nw==",
        "commit": {
            "author": {
                "name": "Yuanteng (Jeff) Pei",
                "email": "ypei@ebay.com",
                "date": "2015-12-22T21:23:48Z"
            },
            "committer": {
                "name": "Yuanteng (Jeff) Pei",
                "email": "ypei@ebay.com",
                "date": "2015-12-22T21:23:48Z"
            },
            "message": "change CI to jdk8",
            "tree": {
                "sha": "64c23daf624335bc60994f090cbefa5ced53656c",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/64c23daf624335bc60994f090cbefa5ced53656c"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/d00d9d1079982029232e2df73a644d4f5a560e87",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/d00d9d1079982029232e2df73a644d4f5a560e87",
        "html_url": "https://github.com/eBay/parallec/commit/d00d9d1079982029232e2df73a644d4f5a560e87",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/d00d9d1079982029232e2df73a644d4f5a560e87/comments",
        "author": null,
        "committer": null,
        "parents": [
            {
                "sha": "ca10d03e329d2fb8abd48622718ba3ecd5c71364",
                "url": "https://api.github.com/repos/eBay/parallec/commits/ca10d03e329d2fb8abd48622718ba3ecd5c71364",
                "html_url": "https://github.com/eBay/parallec/commit/ca10d03e329d2fb8abd48622718ba3ecd5c71364"
            }
        ],
        "stats": {
            "total": 2,
            "additions": 1,
            "deletions": 1
        },
        "files": [
            {
                "sha": "f0179072ad36612a13b870ac59d2128e676bb2f5",
                "filename": ".travis.yml",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/d00d9d1079982029232e2df73a644d4f5a560e87/.travis.yml",
                "raw_url": "https://github.com/eBay/parallec/raw/d00d9d1079982029232e2df73a644d4f5a560e87/.travis.yml",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/.travis.yml?ref=d00d9d1079982029232e2df73a644d4f5a560e87",
                "patch": "@@ -1,7 +1,7 @@\n language: java\n sudo: true\n jdk:\n-  - openjdk7\n+  - openjdk8\n \n before_install:\n   - sudo apt-get install iputils-ping"
            }
        ]
    },
    {
        "sha": "ca10d03e329d2fb8abd48622718ba3ecd5c71364",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6Y2ExMGQwM2UzMjlkMmZiOGFiZDQ4NjIyNzE4YmEzZWNkNWM3MTM2NA==",
        "commit": {
            "author": {
                "name": "Yuanteng (Jeff) Pei",
                "email": "ypei@ebay.com",
                "date": "2015-12-22T08:44:45Z"
            },
            "committer": {
                "name": "Yuanteng (Jeff) Pei",
                "email": "ypei@ebay.com",
                "date": "2015-12-22T08:44:45Z"
            },
            "message": "Update README-brief-cn.md",
            "tree": {
                "sha": "dd4b0ad1775ee5a0da5b60540251a95aa5cdfe50",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/dd4b0ad1775ee5a0da5b60540251a95aa5cdfe50"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/ca10d03e329d2fb8abd48622718ba3ecd5c71364",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/ca10d03e329d2fb8abd48622718ba3ecd5c71364",
        "html_url": "https://github.com/eBay/parallec/commit/ca10d03e329d2fb8abd48622718ba3ecd5c71364",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/ca10d03e329d2fb8abd48622718ba3ecd5c71364/comments",
        "author": null,
        "committer": null,
        "parents": [
            {
                "sha": "1c623421e447fcc92c167678474f9953b7cae40e",
                "url": "https://api.github.com/repos/eBay/parallec/commits/1c623421e447fcc92c167678474f9953b7cae40e",
                "html_url": "https://github.com/eBay/parallec/commit/1c623421e447fcc92c167678474f9953b7cae40e"
            }
        ],
        "stats": {
            "total": 2,
            "additions": 1,
            "deletions": 1
        },
        "files": [
            {
                "sha": "2b1be3351bf1ded6a218c3c3567de3a4d5ae8974",
                "filename": "README-brief-cn.md",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/ca10d03e329d2fb8abd48622718ba3ecd5c71364/README-brief-cn.md",
                "raw_url": "https://github.com/eBay/parallec/raw/ca10d03e329d2fb8abd48622718ba3ecd5c71364/README-brief-cn.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/README-brief-cn.md?ref=ca10d03e329d2fb8abd48622718ba3ecd5c71364",
                "patch": "@@ -20,4 +20,4 @@ Parallec内置特别的响应上下文（response context），在处理服务\n \n 通过过去一年内部使用和开源REST Superman/ REST Commander的开发， 反馈，经验教训，我们现在做把REST Commander的核心做成一个易于使用的独立库 （便于从Maven导入，让所有程序都写20行代码变成REST Commander）。在此基础上，我们添加超过[**15个新的功能**](https://github.com/eBay/parallec/blob/master/README.md#compare)，**改写超过70%的代码**，**以90%以上的测试覆盖率**，确保了用户和开源贡献者能够更加放心的开发和使用。与此同时，我们也把整体软件结构进行了优化，使得大部分内部开发可以直接在github开源平台上直接进行。\n \n-您可以用5分钟按照[样例程序](http://www.parallec.io/#code-sample)试试Parallec去给多个服务器（网站）发送相同或者不同的请求。我们渴望收到您的意见和建议。您可以通过[提交Github Issue](https://github.com/eBay/parallec/issues/new)或者发邮件至 ypei@ebay.com 进行反馈。谢谢！\n+您可以用5分钟按照[样例程序](http://www.parallec.io/#code-sample)试试Parallec去给多个服务器（网站）发送相同或者不同的请求。我们渴望收到您的意见和建议。您可以通过[提交Github Issue](https://github.com/eBay/parallec/issues/new)或者发邮件至 ypei@ebay.com 进行反馈或者提问。谢谢！"
            }
        ]
    },
    {
        "sha": "1c623421e447fcc92c167678474f9953b7cae40e",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6MWM2MjM0MjFlNDQ3ZmNjOTJjMTY3Njc4NDc0Zjk5NTNiN2NhZTQwZQ==",
        "commit": {
            "author": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2015-12-15T20:13:20Z"
            },
            "committer": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2015-12-15T20:13:20Z"
            },
            "message": "add contact",
            "tree": {
                "sha": "5c4e35a5f8eb47e9fffb41c4bc155a2580d4e34e",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/5c4e35a5f8eb47e9fffb41c4bc155a2580d4e34e"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/1c623421e447fcc92c167678474f9953b7cae40e",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/1c623421e447fcc92c167678474f9953b7cae40e",
        "html_url": "https://github.com/eBay/parallec/commit/1c623421e447fcc92c167678474f9953b7cae40e",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/1c623421e447fcc92c167678474f9953b7cae40e/comments",
        "author": null,
        "committer": null,
        "parents": [
            {
                "sha": "19ecae875128f5e4258096be9b4f561d3abead43",
                "url": "https://api.github.com/repos/eBay/parallec/commits/19ecae875128f5e4258096be9b4f561d3abead43",
                "html_url": "https://github.com/eBay/parallec/commit/19ecae875128f5e4258096be9b4f561d3abead43"
            }
        ],
        "stats": {
            "total": 2,
            "additions": 1,
            "deletions": 1
        },
        "files": [
            {
                "sha": "940ee30583d2fb4fe5ce31021f66d2e0da045f3b",
                "filename": "README-brief-cn.md",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/1c623421e447fcc92c167678474f9953b7cae40e/README-brief-cn.md",
                "raw_url": "https://github.com/eBay/parallec/raw/1c623421e447fcc92c167678474f9953b7cae40e/README-brief-cn.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/README-brief-cn.md?ref=1c623421e447fcc92c167678474f9953b7cae40e",
                "patch": "@@ -20,4 +20,4 @@ Parallec内置特别的响应上下文（response context），在处理服务\n \n 通过过去一年内部使用和开源REST Superman/ REST Commander的开发， 反馈，经验教训，我们现在做把REST Commander的核心做成一个易于使用的独立库 （便于从Maven导入，让所有程序都写20行代码变成REST Commander）。在此基础上，我们添加超过[**15个新的功能**](https://github.com/eBay/parallec/blob/master/README.md#compare)，**改写超过70%的代码**，**以90%以上的测试覆盖率**，确保了用户和开源贡献者能够更加放心的开发和使用。与此同时，我们也把整体软件结构进行了优化，使得大部分内部开发可以直接在github开源平台上直接进行。\n \n-您可以用5分钟按照[样例程序](http://www.parallec.io/#code-sample)试试Parallec去给多个服务器（网站）发送相同或者不同的请求。我们渴望收到您的意见和建议。您可以通过[提交Github Issue](https://github.com/eBay/parallec/issues/new)进行反馈。谢谢！\n+您可以用5分钟按照[样例程序](http://www.parallec.io/#code-sample)试试Parallec去给多个服务器（网站）发送相同或者不同的请求。我们渴望收到您的意见和建议。您可以通过[提交Github Issue](https://github.com/eBay/parallec/issues/new)或者发邮件至 ypei@ebay.com 进行反馈。谢谢！"
            }
        ]
    },
    {
        "sha": "19ecae875128f5e4258096be9b4f561d3abead43",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6MTllY2FlODc1MTI4ZjVlNDI1ODA5NmJlOWI0ZjU2MWQzYWJlYWQ0Mw==",
        "commit": {
            "author": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2015-12-05T15:31:15Z"
            },
            "committer": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2015-12-05T15:31:15Z"
            },
            "message": "update readme. [skip ci]",
            "tree": {
                "sha": "fd6a24c62f82c60d6b6226c0ab76f9704015dbd5",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/fd6a24c62f82c60d6b6226c0ab76f9704015dbd5"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/19ecae875128f5e4258096be9b4f561d3abead43",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/19ecae875128f5e4258096be9b4f561d3abead43",
        "html_url": "https://github.com/eBay/parallec/commit/19ecae875128f5e4258096be9b4f561d3abead43",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/19ecae875128f5e4258096be9b4f561d3abead43/comments",
        "author": null,
        "committer": null,
        "parents": [
            {
                "sha": "1f2593834bb9abc573d8eb4c3b3286f1748e2c01",
                "url": "https://api.github.com/repos/eBay/parallec/commits/1f2593834bb9abc573d8eb4c3b3286f1748e2c01",
                "html_url": "https://github.com/eBay/parallec/commit/1f2593834bb9abc573d8eb4c3b3286f1748e2c01"
            }
        ],
        "stats": {
            "total": 2,
            "additions": 2,
            "deletions": 0
        },
        "files": [
            {
                "sha": "3bc526de4292ef44619f9051b663f906b9f7d523",
                "filename": "README.md",
                "status": "modified",
                "additions": 2,
                "deletions": 0,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/19ecae875128f5e4258096be9b4f561d3abead43/README.md",
                "raw_url": "https://github.com/eBay/parallec/raw/19ecae875128f5e4258096be9b4f561d3abead43/README.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/README.md?ref=19ecae875128f5e4258096be9b4f561d3abead43",
                "patch": "@@ -187,6 +187,8 @@ As usual, don't rely on these numbers and perform your own benchmarks.\n In Parallec, you may handle response either in Worker (before aggregation: in parallel) or in Manager (after aggregation: single thread). [Read More..](http://www.parallec.io/docs/submit-task/#apis-on-response-handling)\n \n \n+For more related work review, please visit [here](http://www.ebaytechblog.com/2014/03/11/rest-commander-scalable-web-server-management-and-monitoring/#relatedwork).\n+\n |                                                        Features                                                       | Parallec | REST Commander | Thread Pools + Async Client |\n |:---------------------------------------------------------------------------------------------------------------------:|:--------:|:--------------:|:---------------------------:|\n |                               Embedded library with intuitive builder pattern interface                               |    <img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/yes.png\" >   |       <img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/no.png\" >       |              <img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/no.png\" >             |"
            }
        ]
    },
    {
        "sha": "1f2593834bb9abc573d8eb4c3b3286f1748e2c01",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6MWYyNTkzODM0YmI5YWJjNTczZDhlYjRjM2IzMjg2ZjE3NDhlMmMwMQ==",
        "commit": {
            "author": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2015-12-02T07:14:36Z"
            },
            "committer": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2015-12-02T07:14:36Z"
            },
            "message": "update readme. [skip ci]",
            "tree": {
                "sha": "1a78fc0772c410344a735bdcf8286cfe5d28191c",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/1a78fc0772c410344a735bdcf8286cfe5d28191c"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/1f2593834bb9abc573d8eb4c3b3286f1748e2c01",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/1f2593834bb9abc573d8eb4c3b3286f1748e2c01",
        "html_url": "https://github.com/eBay/parallec/commit/1f2593834bb9abc573d8eb4c3b3286f1748e2c01",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/1f2593834bb9abc573d8eb4c3b3286f1748e2c01/comments",
        "author": null,
        "committer": null,
        "parents": [
            {
                "sha": "14bca673af7308da2a11281542c70d4141f58d20",
                "url": "https://api.github.com/repos/eBay/parallec/commits/14bca673af7308da2a11281542c70d4141f58d20",
                "html_url": "https://github.com/eBay/parallec/commit/14bca673af7308da2a11281542c70d4141f58d20"
            }
        ],
        "stats": {
            "total": 6,
            "additions": 3,
            "deletions": 3
        },
        "files": [
            {
                "sha": "49d44d935b6a7a2a203bbd6a96d9c1584519e679",
                "filename": "CHANGELOG.md",
                "status": "modified",
                "additions": 2,
                "deletions": 2,
                "changes": 4,
                "blob_url": "https://github.com/eBay/parallec/blob/1f2593834bb9abc573d8eb4c3b3286f1748e2c01/CHANGELOG.md",
                "raw_url": "https://github.com/eBay/parallec/raw/1f2593834bb9abc573d8eb4c3b3286f1748e2c01/CHANGELOG.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/CHANGELOG.md?ref=1f2593834bb9abc573d8eb4c3b3286f1748e2c01",
                "patch": "@@ -14,8 +14,8 @@ _2015-??-??_\n \n _2015-11-27_\n \n-* Build/Maven/Logback: exclude logback.xml in the built jar.  \n-* Test: add sleep to make sure server starts first; should fix build issue related to #7\n+* Build/Maven/Logback: exclude logback.xml in the built jar, thanks to [xmpp](http://stackoverflow.com/users/5178636/xmpp) for raising the [issue](http://stackoverflow.com/questions/33897196/how-to-disable-inherited-logback/33900287#33900287), close [#21](https://github.com/eBay/parallec/issues/21).\n+* Test: add sleep to make sure server starts first; should fix build issue related to [#7](https://github.com/eBay/parallec/issues/7)\n * Test: add coverage: updateRequestByAddingReplaceVarPairNodeSpecific() check null, add some other minor coverage\n * Test: fix TcpServerThread (tcp sample server) not closed in test, thus skip idle TCP tests. \n "
            },
            {
                "sha": "756134a0c739489173da306618e2b1846aa6c3ce",
                "filename": "README.md",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/1f2593834bb9abc573d8eb4c3b3286f1748e2c01/README.md",
                "raw_url": "https://github.com/eBay/parallec/raw/1f2593834bb9abc573d8eb4c3b3286f1748e2c01/README.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/README.md?ref=1f2593834bb9abc573d8eb4c3b3286f1748e2c01",
                "patch": "@@ -221,7 +221,7 @@ In Parallec, you may handle response either in Worker (before aggregation: in pa\n \n ## [Contributors](https://github.com/eBay/parallec/blob/master/AUTHORS.txt)\n \n-Contributors are critical. We will try to put all the contributors here unless it goes crazy.\n+We deeply thank all contributors for their effort.\n \n - Lukasz Kryger  [http://stackoverflow.com/users/1240557/kryger](http://stackoverflow.com/users/1240557/kryger)\n "
            }
        ]
    },
    {
        "sha": "14bca673af7308da2a11281542c70d4141f58d20",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6MTRiY2E2NzNhZjczMDhkYTJhMTEyODE1NDJjNzBkNDE0MWY1OGQyMA==",
        "commit": {
            "author": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2015-12-02T05:18:29Z"
            },
            "committer": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2015-12-02T05:18:29Z"
            },
            "message": "update readme with url. [skip ci]",
            "tree": {
                "sha": "b22a5995f0cc19fbe5df68b4b1ad7f7dc258e09c",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/b22a5995f0cc19fbe5df68b4b1ad7f7dc258e09c"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/14bca673af7308da2a11281542c70d4141f58d20",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/14bca673af7308da2a11281542c70d4141f58d20",
        "html_url": "https://github.com/eBay/parallec/commit/14bca673af7308da2a11281542c70d4141f58d20",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/14bca673af7308da2a11281542c70d4141f58d20/comments",
        "author": null,
        "committer": null,
        "parents": [
            {
                "sha": "c56b03b18d29f705a7dc1a660cf8dde07bd48e28",
                "url": "https://api.github.com/repos/eBay/parallec/commits/c56b03b18d29f705a7dc1a660cf8dde07bd48e28",
                "html_url": "https://github.com/eBay/parallec/commit/c56b03b18d29f705a7dc1a660cf8dde07bd48e28"
            }
        ],
        "stats": {
            "total": 2,
            "additions": 1,
            "deletions": 1
        },
        "files": [
            {
                "sha": "ef769bb1280a2732e70172e4df68f9c7409cb26c",
                "filename": "README.md",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/14bca673af7308da2a11281542c70d4141f58d20/README.md",
                "raw_url": "https://github.com/eBay/parallec/raw/14bca673af7308da2a11281542c70d4141f58d20/README.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/README.md?ref=14bca673af7308da2a11281542c70d4141f58d20",
                "patch": "@@ -15,7 +15,7 @@\n \n Noticed by [the Author of Akka](https://twitter.com/jboner/status/663618652063813632) & Featured in [ [This Week in #Scala](http://www.cakesolutions.net/teamblogs/this-week-in-scala-16/11/2015) | [OSChina](http://www.oschina.net/p/parallec) ]\n \n-Parallec is a fast parallel async HTTP(S)/SSH/TCP/Ping client java library based on [Akka](http://akka.io). Scalably aggregate and handle API responses **anyway** and send it **anywhere** by writing [20 lines](https://www.youtube.com/watch?v=QcavegPMDms) of code. A special super convenient **response context** let you pass in/out any object when handling the responses. Now you can conduct scalable API calls, then effortlessly pass aggregated data anywhere to elastic search, kafka, MongoDB, graphite, memcached, etc. Parallec means  **Paralle**l **C**lient, and is pronounced as \"Para-like\".\n+Parallec is a fast parallel async HTTP(S)/SSH/TCP/Ping client java library based on [Akka](http://akka.io). Scalably aggregate and handle API responses **anyway** and send it **anywhere** by writing [20 lines](https://www.youtube.com/watch?v=QcavegPMDms) of code. A special super convenient **response context** let you pass in/out any object when handling the responses. Now you can conduct scalable API calls, then effortlessly pass aggregated data anywhere to elastic search, kafka, MongoDB, graphite, memcached, etc. Parallec means  **Paralle**l **C**lient, and is pronounced as \"Para-like\". Visit [www.parallec.io](http://www.parallec.io)\n \n **[Watch Demo](https://github.com/eBay/parallec/wiki/Parallec-Aggregates-HTTP-Responses-from-8000-Servers)**: **8,000** web server HTTP response aggregation to memory in **12** seconds / to ElasticSearch in **16** seconds.\n "
            }
        ]
    },
    {
        "sha": "c56b03b18d29f705a7dc1a660cf8dde07bd48e28",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6YzU2YjAzYjE4ZDI5ZjcwNWE3ZGMxYTY2MGNmOGRkZTA3YmQ0OGUyOA==",
        "commit": {
            "author": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2015-11-30T07:39:17Z"
            },
            "committer": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2015-11-30T07:39:17Z"
            },
            "message": "add coverage",
            "tree": {
                "sha": "b938f8ecb93f4ae6f440b7103517c6e1afba4acf",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/b938f8ecb93f4ae6f440b7103517c6e1afba4acf"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/c56b03b18d29f705a7dc1a660cf8dde07bd48e28",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/c56b03b18d29f705a7dc1a660cf8dde07bd48e28",
        "html_url": "https://github.com/eBay/parallec/commit/c56b03b18d29f705a7dc1a660cf8dde07bd48e28",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/c56b03b18d29f705a7dc1a660cf8dde07bd48e28/comments",
        "author": null,
        "committer": null,
        "parents": [
            {
                "sha": "58e686227477619d43602ffc80be1be260fd7ef3",
                "url": "https://api.github.com/repos/eBay/parallec/commits/58e686227477619d43602ffc80be1be260fd7ef3",
                "html_url": "https://github.com/eBay/parallec/commit/58e686227477619d43602ffc80be1be260fd7ef3"
            }
        ],
        "stats": {
            "total": 43,
            "additions": 40,
            "deletions": 3
        },
        "files": [
            {
                "sha": "4196588cc98d800ae3ee0470c29ac9a0876fac3a",
                "filename": "src/main/java/io/parallec/core/bean/tcp/TcpMeta.java",
                "status": "modified",
                "additions": 0,
                "deletions": 1,
                "changes": 1,
                "blob_url": "https://github.com/eBay/parallec/blob/c56b03b18d29f705a7dc1a660cf8dde07bd48e28/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2Ftcp%2FTcpMeta.java",
                "raw_url": "https://github.com/eBay/parallec/raw/c56b03b18d29f705a7dc1a660cf8dde07bd48e28/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2Ftcp%2FTcpMeta.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2Ftcp%2FTcpMeta.java?ref=c56b03b18d29f705a7dc1a660cf8dde07bd48e28",
                "patch": "@@ -76,7 +76,6 @@ public TcpMeta() {\n         this.tcpConnectTimeoutMillis= null;\n         this.tcpIdleTimeoutSec=null;\n         \n-        // TODO Auto-generated constructor stub\n     }\n \n     public boolean validation() throws ParallelTaskInvalidException {"
            },
            {
                "sha": "b97a16b6db070c4321df7fa2f0418c1f94fea532",
                "filename": "src/test/java/io/parallec/core/client/ParallelTaskTest.java",
                "status": "modified",
                "additions": 3,
                "deletions": 0,
                "changes": 3,
                "blob_url": "https://github.com/eBay/parallec/blob/c56b03b18d29f705a7dc1a660cf8dde07bd48e28/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fclient%2FParallelTaskTest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/c56b03b18d29f705a7dc1a660cf8dde07bd48e28/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fclient%2FParallelTaskTest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fclient%2FParallelTaskTest.java?ref=c56b03b18d29f705a7dc1a660cf8dde07bd48e28",
                "patch": "@@ -17,6 +17,7 @@\n import io.parallec.core.TestBase;\n import io.parallec.core.actor.ExecutionManagerTest;\n import io.parallec.core.exception.ParallelTaskInvalidException;\n+import io.parallec.core.resources.HttpClientStore;\n import io.parallec.core.task.ParallelTaskState;\n \n import org.junit.AfterClass;\n@@ -79,6 +80,8 @@ public void testValidation() {\n         ParallelTask task = ExecutionManagerTest.genParallelTask();\n         logger.info(task.toString());\n         task.setConfig(null);\n+        task.setAsyncHttpClient( HttpClientStore.getInstance()\n+                    .getCurrentDefaultClient());\n         task.getHttpMeta().setHttpMethod(null);\n         try {\n "
            },
            {
                "sha": "16fed2d69c2662fd0a1d7449950e026afc439a6e",
                "filename": "src/test/java/io/parallec/core/pojo/ParallecPojoStrTest.java",
                "status": "modified",
                "additions": 37,
                "deletions": 2,
                "changes": 39,
                "blob_url": "https://github.com/eBay/parallec/blob/c56b03b18d29f705a7dc1a660cf8dde07bd48e28/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fpojo%2FParallecPojoStrTest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/c56b03b18d29f705a7dc1a660cf8dde07bd48e28/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fpojo%2FParallecPojoStrTest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fpojo%2FParallecPojoStrTest.java?ref=c56b03b18d29f705a7dc1a660cf8dde07bd48e28",
                "patch": "@@ -6,8 +6,12 @@\n import io.parallec.core.actor.poll.PollerData;\n import io.parallec.core.app.ParallecAppMin;\n import io.parallec.core.bean.HttpMeta;\n+import io.parallec.core.bean.SetAndCount;\n+import io.parallec.core.bean.StrStrMap;\n import io.parallec.core.bean.tcp.TcpMeta;\n+import io.parallec.core.exception.ParallelTaskInvalidException;\n import io.parallec.core.resources.HttpMethod;\n+import io.parallec.core.resources.TcpSshPingResourceStore;\n import io.parallec.core.task.TaskErrorMeta;\n import io.parallec.core.task.TaskErrorMeta.TaskErrorType;\n import io.parallec.core.util.BeanMapper;\n@@ -20,6 +24,9 @@\n import io.parallec.core.util.PcStringUtils;\n import io.parallec.core.util.PcTargetHostsUtils;\n \n+import java.util.HashMap;\n+import java.util.HashSet;\n+\n import org.junit.Test;\n \n public class ParallecPojoStrTest extends TestBase {\n@@ -42,10 +49,32 @@ public void testToString() {\n         HttpMeta httpMeta2 = new HttpMeta(HttpMethod.GET, \"\", \"\", \"\", null);\n         httpMeta2.toString();\n         \n-        TcpMeta tcpMeta = new TcpMeta(\"\", 80, 5, 1000, null);\n-        \n+        TcpMeta tcpMeta = new TcpMeta(\"\", 80, 1000, 5, null);\n         tcpMeta.toString();\n         \n+        //empty and all pass validation: test validation\n+        TcpMeta tcpMeta2 = new TcpMeta();\n+        TcpMeta tcpMeta3 = new TcpMeta(\"\", 80, 1000, 5,\n+                TcpSshPingResourceStore.getInstance().getChannelFactory());\n+        \n+        try{\n+            \n+            tcpMeta2.validation();\n+        }catch(ParallelTaskInvalidException e){\n+            logger.info(\"expected exception {}\", e.getLocalizedMessage());\n+        }\n+        tcpMeta2.setCommand(\"\");\n+        try{\n+            \n+            tcpMeta2.validation();\n+        }catch(ParallelTaskInvalidException e){\n+            logger.info(\"expected exception {}\", e.getLocalizedMessage());\n+        }\n+        \n+        tcpMeta3.validation();\n+        \n+        SetAndCount sc = new SetAndCount( new HashSet<String>());\n+        sc.toString();\n \n     }\n \n@@ -65,6 +94,12 @@ public void testStaticFuncAndUtilsClass() {\n         new PcFileNetworkIoUtils();\n         new PcNumberUtils();\n         new TaskErrorMeta(TaskErrorType.COMMAND_MANAGER_ERROR, \"\", null);\n+        StrStrMap ssm = new StrStrMap(new HashMap<String,String>());\n+        ssm.addPair(null, \"\");\n+        ssm.addPair(\"\", null);\n+        ssm.addPair(\"k\", \"v\");\n+        \n+       \n     }\n \n }"
            }
        ]
    },
    {
        "sha": "58e686227477619d43602ffc80be1be260fd7ef3",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6NThlNjg2MjI3NDc3NjE5ZDQzNjAyZmZjODBiZTFiZTI2MGZkN2VmMw==",
        "commit": {
            "author": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2015-11-30T07:02:54Z"
            },
            "committer": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2015-11-30T07:02:54Z"
            },
            "message": "ci with testing",
            "tree": {
                "sha": "5b450f2f751c434df406ad62b2dd7eaa33887637",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/5b450f2f751c434df406ad62b2dd7eaa33887637"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/58e686227477619d43602ffc80be1be260fd7ef3",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/58e686227477619d43602ffc80be1be260fd7ef3",
        "html_url": "https://github.com/eBay/parallec/commit/58e686227477619d43602ffc80be1be260fd7ef3",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/58e686227477619d43602ffc80be1be260fd7ef3/comments",
        "author": null,
        "committer": null,
        "parents": [
            {
                "sha": "e975373a42610dd2c68b2ac8e535c5485933d26d",
                "url": "https://api.github.com/repos/eBay/parallec/commits/e975373a42610dd2c68b2ac8e535c5485933d26d",
                "html_url": "https://github.com/eBay/parallec/commit/e975373a42610dd2c68b2ac8e535c5485933d26d"
            }
        ],
        "stats": {
            "total": 6,
            "additions": 3,
            "deletions": 3
        },
        "files": [
            {
                "sha": "52784c898f60949f38320194662c3f0e7ff4d9d3",
                "filename": "src/test/java/io/parallec/core/main/http/ParallelClientHttpInvalidInputTest.java",
                "status": "renamed",
                "additions": 3,
                "deletions": 3,
                "changes": 6,
                "blob_url": "https://github.com/eBay/parallec/blob/58e686227477619d43602ffc80be1be260fd7ef3/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2FParallelClientHttpInvalidInputTest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/58e686227477619d43602ffc80be1be260fd7ef3/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2FParallelClientHttpInvalidInputTest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2FParallelClientHttpInvalidInputTest.java?ref=58e686227477619d43602ffc80be1be260fd7ef3",
                "patch": "@@ -13,7 +13,7 @@\n import org.junit.BeforeClass;\n import org.junit.Test;\n \n-public class ParallelClientHttpBasicTestInvalidInput extends TestBase {\n+public class ParallelClientHttpInvalidInputTest extends TestBase {\n \n     private static ParallelClient pc;\n \n@@ -52,7 +52,7 @@ public void hitWebsitesUrlWithValidation() {\n     @Test\n     public void hitWebsitesUrlEndingWSInput() {\n \n-        // miss target hosts\n+        // hitWebsitesUrlEndingWSInput\n         pc.prepareHttpGet(\" /validateInternals.html \")\n                 .setConcurrency(1700)\n                 .setTargetHostsFromString(\n@@ -95,7 +95,7 @@ public void onCompleted(ResponseOnSingleTask res,\n                     }\n                 });\n \n-        // space in between singel target host\n+        // space in between single target host\n \n         List<String> badHostList = new ArrayList<String>();\n         badHostList.add(\"www.restco mmander.com\");",
                "previous_filename": "src/test/java/io/parallec/core/main/http/ParallelClientHttpBasicTestInvalidInput.java"
            }
        ]
    },
    {
        "sha": "e975373a42610dd2c68b2ac8e535c5485933d26d",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6ZTk3NTM3M2E0MjYxMGRkMmM2OGIyYWM4ZTUzNWM1NDg1OTMzZDI2ZA==",
        "commit": {
            "author": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2015-11-30T06:46:47Z"
            },
            "committer": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2015-11-30T06:46:47Z"
            },
            "message": "test ci config changes",
            "tree": {
                "sha": "e92d2433a9a7174f10ae0f2fbcd98c039b2ec100",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/e92d2433a9a7174f10ae0f2fbcd98c039b2ec100"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/e975373a42610dd2c68b2ac8e535c5485933d26d",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/e975373a42610dd2c68b2ac8e535c5485933d26d",
        "html_url": "https://github.com/eBay/parallec/commit/e975373a42610dd2c68b2ac8e535c5485933d26d",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/e975373a42610dd2c68b2ac8e535c5485933d26d/comments",
        "author": null,
        "committer": null,
        "parents": [
            {
                "sha": "2ec2d6ff6e328c51c9eb44bb8aa02e99d4b329f1",
                "url": "https://api.github.com/repos/eBay/parallec/commits/2ec2d6ff6e328c51c9eb44bb8aa02e99d4b329f1",
                "html_url": "https://github.com/eBay/parallec/commit/2ec2d6ff6e328c51c9eb44bb8aa02e99d4b329f1"
            }
        ],
        "stats": {
            "total": 40,
            "additions": 30,
            "deletions": 10
        },
        "files": [
            {
                "sha": "e5131b34bbc9fe793e51cab945fa66bc90e2e05b",
                "filename": ".travis.yml",
                "status": "modified",
                "additions": 3,
                "deletions": 2,
                "changes": 5,
                "blob_url": "https://github.com/eBay/parallec/blob/e975373a42610dd2c68b2ac8e535c5485933d26d/.travis.yml",
                "raw_url": "https://github.com/eBay/parallec/raw/e975373a42610dd2c68b2ac8e535c5485933d26d/.travis.yml",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/.travis.yml?ref=e975373a42610dd2c68b2ac8e535c5485933d26d",
                "patch": "@@ -1,10 +1,11 @@\n language: java\n-\n+sudo: true\n jdk:\n   - openjdk7\n \n before_install:\n+  - sudo apt-get install iputils-ping\n   - pip install --user codecov  \n-\n+  \n after_success:\n   - codecov"
            },
            {
                "sha": "deed0edf4027e3349033580663a32a785a153cb9",
                "filename": "CHANGELOG.md",
                "status": "modified",
                "additions": 6,
                "deletions": 1,
                "changes": 7,
                "blob_url": "https://github.com/eBay/parallec/blob/e975373a42610dd2c68b2ac8e535c5485933d26d/CHANGELOG.md",
                "raw_url": "https://github.com/eBay/parallec/raw/e975373a42610dd2c68b2ac8e535c5485933d26d/CHANGELOG.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/CHANGELOG.md?ref=e975373a42610dd2c68b2ac8e535c5485933d26d",
                "patch": "@@ -1,13 +1,18 @@\n Parallec Change Log\n ==========\n \n+## Version 0.9.3\n \n \n+_2015-??-??_\n+\n+* Test: add coverage: for get target hosts duplicate/empty for CMS.\n+* Test/Build: update CI setting to enable test on process based Ping. \n \n ## Version 0.9.2\n \n \n-_2015-11-29_\n+_2015-11-27_\n \n * Build/Maven/Logback: exclude logback.xml in the built jar.  \n * Test: add sleep to make sure server starts first; should fix build issue related to #7"
            },
            {
                "sha": "7556263e21b9753042157a28fb4e75a5092abb03",
                "filename": "pom.xml",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/e975373a42610dd2c68b2ac8e535c5485933d26d/pom.xml",
                "raw_url": "https://github.com/eBay/parallec/raw/e975373a42610dd2c68b2ac8e535c5485933d26d/pom.xml",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/pom.xml?ref=e975373a42610dd2c68b2ac8e535c5485933d26d",
                "patch": "@@ -4,7 +4,7 @@\n \t<modelVersion>4.0.0</modelVersion>\n \t<groupId>io.parallec</groupId>\n \t<artifactId>parallec-core</artifactId>\n-\t<version>0.9.2</version>\n+\t<version>0.9.3-SNAPSHOT</version>\n \t<packaging>jar</packaging>\n \t<name>io.parallec:parallec-core</name>\n \t<url>https://github.com/eBay/parallec</url>"
            },
            {
                "sha": "ffcf346d5cd24bffb501c2acbb9f6c91600ba033",
                "filename": "src/main/java/io/parallec/core/taskbuilder/targethosts/TargetHostsBuilderHelperCms.java",
                "status": "modified",
                "additions": 0,
                "deletions": 5,
                "changes": 5,
                "blob_url": "https://github.com/eBay/parallec/blob/e975373a42610dd2c68b2ac8e535c5485933d26d/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Ftaskbuilder%2Ftargethosts%2FTargetHostsBuilderHelperCms.java",
                "raw_url": "https://github.com/eBay/parallec/raw/e975373a42610dd2c68b2ac8e535c5485933d26d/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Ftaskbuilder%2Ftargethosts%2FTargetHostsBuilderHelperCms.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Ftaskbuilder%2Ftargethosts%2FTargetHostsBuilderHelperCms.java?ref=e975373a42610dd2c68b2ac8e535c5485933d26d",
                "patch": "@@ -66,11 +66,6 @@ static List<String> getFQDNValueListCMS(JSONObject jObj,\n             String projectionStr) throws JSONException {\n         final List<String> labelList = new ArrayList<String>();\n \n-        // default\n-        if (projectionStr == null || projectionStr.equalsIgnoreCase(\"NA\")) {\n-            projectionStr = \"resourceId\";\n-        }\n-\n         if (!jObj.has(\"result\")) {\n             logger.error(\"!!CMS_ERROR! result key is not in jOBJ in getFQDNValueListCMS!!: \\njObj:\"\n                     + PcStringUtils.renderJson(jObj));"
            },
            {
                "sha": "993ceb290d490ed31721c9d74f1abed758b8a3b9",
                "filename": "src/test/java/io/parallec/core/TestBase.java",
                "status": "modified",
                "additions": 5,
                "deletions": 0,
                "changes": 5,
                "blob_url": "https://github.com/eBay/parallec/blob/e975373a42610dd2c68b2ac8e535c5485933d26d/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2FTestBase.java",
                "raw_url": "https://github.com/eBay/parallec/raw/e975373a42610dd2c68b2ac8e535c5485933d26d/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2FTestBase.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2FTestBase.java?ref=e975373a42610dd2c68b2ac8e535c5485933d26d",
                "patch": "@@ -27,6 +27,11 @@ public class TestBase {\n     public final String URL_CMS_QUERY_SINGLE_PAGE = \"http://www.parallec.io/cms/repositories/cmsdb/branches/main/query/sample_cms_query_results_single_page.json\";\n     public final String URL_CMS_QUERY_MULTI_PAGE = \"http://www.parallec.io/cms/repositories/cmsdb/branches/main/query/sample_cms_query_results_multi_page_1.json\";\n \n+    public final String URL_CMS_QUERY_SINGLE_PAGE_DUPLICATE = \"http://www.parallec.io/cms/repositories/cmsdb/branches/main/query/sample_cms_query_results_single_page_duplicate.json\";\n+    public final String URL_CMS_QUERY_SINGLE_PAGE_EMPTY = \"http://www.parallec.io/cms/repositories/cmsdb/branches/main/query/sample_cms_query_results_single_page_empty.json\";\n+\n+    \n+    \n     public final HostsSourceType SOURCE_LOCAL = HostsSourceType.LOCAL_FILE;\n     public final HostsSourceType SOURCE_URL = HostsSourceType.URL;\n "
            },
            {
                "sha": "489caefa9ad97ccc0dee3c7edb1c574575fd06e5",
                "filename": "src/test/java/io/parallec/core/taskbuilder/targethosts/TargetHostsBuilderTest.java",
                "status": "modified",
                "additions": 15,
                "deletions": 1,
                "changes": 16,
                "blob_url": "https://github.com/eBay/parallec/blob/e975373a42610dd2c68b2ac8e535c5485933d26d/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Ftaskbuilder%2Ftargethosts%2FTargetHostsBuilderTest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/e975373a42610dd2c68b2ac8e535c5485933d26d/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Ftaskbuilder%2Ftargethosts%2FTargetHostsBuilderTest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Ftaskbuilder%2Ftargethosts%2FTargetHostsBuilderTest.java?ref=e975373a42610dd2c68b2ac8e535c5485933d26d",
                "patch": "@@ -142,6 +142,16 @@ public void setTargetHostsFromCmsQueryUrTest() {\n         } catch (TargetHostsLoadException e) {\n             logger.info(\"expected exception: \" + e);\n         }\n+        \n+        //  duplicate hosts\n+        thb.setTargetHostsFromCmsQueryUrl(\n+                \"http://www.parallec.io/cms/repositories/cmsdb/branches\"\n+                        + \"/main/query/sample_cms_query_results_single_page_duplicate.json\");\n+\n+        //  empty hosts\n+        thb.setTargetHostsFromCmsQueryUrl(\n+                \"http://www.parallec.io/cms/repositories/cmsdb/branches\"\n+                        + \"/main/query/sample_cms_query_results_single_page_duplicate_empty.json\");\n \n         // bad query\n         try {\n@@ -152,7 +162,7 @@ public void setTargetHostsFromCmsQueryUrTest() {\n             logger.info(\"expected exception: \" + e);\n         }\n \n-        // with projection null/empty\n+        // with projection null/empty/wrong projection\n         thb.setTargetHostsFromCmsQueryUrl(\n                 \"http://www.parallec.io/cms/repositories/cmsdb/branches\"\n                         + \"/main/query/sample_cms_query_results_single_page.json\",\n@@ -161,6 +171,10 @@ public void setTargetHostsFromCmsQueryUrTest() {\n                 \"http://www.parallec.io/cms/repositories/cmsdb/branches\"\n                         + \"/main/query/sample_cms_query_results_single_page.json\",\n                 \"\");\n+        thb.setTargetHostsFromCmsQueryUrl(\n+                \"http://www.parallec.io/cms/repositories/cmsdb/branches\"\n+                        + \"/main/query/sample_cms_query_results_single_page.json\",\n+                \"labelbad\");\n \n     }\n "
            }
        ]
    },
    {
        "sha": "2ec2d6ff6e328c51c9eb44bb8aa02e99d4b329f1",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6MmVjMmQ2ZmY2ZTMyOGM1MWM5ZWI0NGJiOGFhMDJlOTlkNGIzMjlmMQ==",
        "commit": {
            "author": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2015-11-28T06:13:21Z"
            },
            "committer": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2015-11-28T06:13:21Z"
            },
            "message": "update readme: add changelog to menu [skip ci]",
            "tree": {
                "sha": "8bf60b4eb083af1ef9bf466be26b2200b465be52",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/8bf60b4eb083af1ef9bf466be26b2200b465be52"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/2ec2d6ff6e328c51c9eb44bb8aa02e99d4b329f1",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/2ec2d6ff6e328c51c9eb44bb8aa02e99d4b329f1",
        "html_url": "https://github.com/eBay/parallec/commit/2ec2d6ff6e328c51c9eb44bb8aa02e99d4b329f1",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/2ec2d6ff6e328c51c9eb44bb8aa02e99d4b329f1/comments",
        "author": null,
        "committer": null,
        "parents": [
            {
                "sha": "1f5c9a746870e4653fc7a8d010e42cc6b035c97a",
                "url": "https://api.github.com/repos/eBay/parallec/commits/1f5c9a746870e4653fc7a8d010e42cc6b035c97a",
                "html_url": "https://github.com/eBay/parallec/commit/1f5c9a746870e4653fc7a8d010e42cc6b035c97a"
            }
        ],
        "stats": {
            "total": 3,
            "additions": 2,
            "deletions": 1
        },
        "files": [
            {
                "sha": "5168ae774fb83733cceaac79ecf9420d1dea01c9",
                "filename": "README.md",
                "status": "modified",
                "additions": 2,
                "deletions": 1,
                "changes": 3,
                "blob_url": "https://github.com/eBay/parallec/blob/2ec2d6ff6e328c51c9eb44bb8aa02e99d4b329f1/README.md",
                "raw_url": "https://github.com/eBay/parallec/raw/2ec2d6ff6e328c51c9eb44bb8aa02e99d4b329f1/README.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/README.md?ref=2ec2d6ff6e328c51c9eb44bb8aa02e99d4b329f1",
                "patch": "@@ -8,7 +8,8 @@\n \n [![Javadoc](http://www.parallec.io/images/parallec-javadoc-blue.svg)](http://www.parallec.io/javadoc/index.html?io/parallec/core/ParallelClient.html) [![Documentation](http://www.parallec.io/images/parallec-documentation-red.svg)](http://www.parallec.io/docs/) [![Samples](http://www.parallec.io/images/parallec-samples-brightgreen.svg)](https://github.com/eBay/parallec-samples) [![Chinese](http://www.parallec.io/images/parallec-cnbrief-blue.svg)](https://github.com/eBay/parallec/blob/master/README-brief-cn.md) \n \n-[ [Get-Started](https://github.com/eBay/parallec/blob/master/README.md#get-started) | [Features](https://github.com/eBay/parallec/blob/master/README.md#features) | [Use Cases](https://github.com/eBay/parallec/blob/master/README.md#use-cases) | [Motivation](https://github.com/eBay/parallec/blob/master/README.md#motivation) | [Demos](https://github.com/eBay/parallec/blob/master/README.md#demos) | [Performance](https://github.com/eBay/parallec/blob/master/README.md#performance) | [Compare](https://github.com/eBay/parallec/blob/master/README.md#compare) | [Contributors](https://github.com/eBay/parallec/blob/master/README.md#contributors) | [About](https://github.com/eBay/parallec/blob/master/README.md#authors) | [News](http://www.parallec.io/blog/) | [中文介绍](https://github.com/eBay/parallec/blob/master/README-brief-cn.md) ]\n+[ [Get-Started](https://github.com/eBay/parallec/blob/master/README.md#get-started) | [Features](https://github.com/eBay/parallec/blob/master/README.md#features) | [Use Cases](https://github.com/eBay/parallec/blob/master/README.md#use-cases) | [Motivation](https://github.com/eBay/parallec/blob/master/README.md#motivation) | [Demos](https://github.com/eBay/parallec/blob/master/README.md#demos) | [Performance](https://github.com/eBay/parallec/blob/master/README.md#performance) | [Compare](https://github.com/eBay/parallec/blob/master/README.md#compare) | [Contributors](https://github.com/eBay/parallec/blob/master/README.md#contributors) | [About](https://github.com/eBay/parallec/blob/master/README.md#authors) | [News](http://www.parallec.io/blog/) | [Change Log](https://github.com/eBay/parallec/blob/master/CHANGELOG.md) | [中文介绍](https://github.com/eBay/parallec/blob/master/README-brief-cn.md) ]\n+\n \n [ [API Overview](http://www.parallec.io/docs/api-overview/) | [Generate & Submit Task](http://www.parallec.io/docs/submit-task/) | [Track Status & Examine Responses](http://www.parallec.io/docs/track-status/) | [Configurations](http://www.parallec.io/docs/configurations/) ]\n "
            }
        ]
    },
    {
        "sha": "1f5c9a746870e4653fc7a8d010e42cc6b035c97a",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6MWY1YzlhNzQ2ODcwZTQ2NTNmYzdhOGQwMTBlNDJjYzZiMDM1Yzk3YQ==",
        "commit": {
            "author": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2015-11-28T05:57:50Z"
            },
            "committer": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2015-11-28T05:57:50Z"
            },
            "message": "fix #21; remove logback.xml from jar; release 0.9.2",
            "tree": {
                "sha": "f3d5255b7abfc47965e68667bb62d8b6499dc7a4",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/f3d5255b7abfc47965e68667bb62d8b6499dc7a4"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/1f5c9a746870e4653fc7a8d010e42cc6b035c97a",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/1f5c9a746870e4653fc7a8d010e42cc6b035c97a",
        "html_url": "https://github.com/eBay/parallec/commit/1f5c9a746870e4653fc7a8d010e42cc6b035c97a",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/1f5c9a746870e4653fc7a8d010e42cc6b035c97a/comments",
        "author": null,
        "committer": null,
        "parents": [
            {
                "sha": "3b0989b279b208faea108c01fc946b5fb1b71979",
                "url": "https://api.github.com/repos/eBay/parallec/commits/3b0989b279b208faea108c01fc946b5fb1b71979",
                "html_url": "https://github.com/eBay/parallec/commit/3b0989b279b208faea108c01fc946b5fb1b71979"
            }
        ],
        "stats": {
            "total": 26,
            "additions": 18,
            "deletions": 8
        },
        "files": [
            {
                "sha": "6b5e1d8b136202ddec3f8bea315b26b26b551936",
                "filename": "CHANGELOG.md",
                "status": "modified",
                "additions": 3,
                "deletions": 1,
                "changes": 4,
                "blob_url": "https://github.com/eBay/parallec/blob/1f5c9a746870e4653fc7a8d010e42cc6b035c97a/CHANGELOG.md",
                "raw_url": "https://github.com/eBay/parallec/raw/1f5c9a746870e4653fc7a8d010e42cc6b035c97a/CHANGELOG.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/CHANGELOG.md?ref=1f5c9a746870e4653fc7a8d010e42cc6b035c97a",
                "patch": "@@ -6,8 +6,10 @@ Parallec Change Log\n \n ## Version 0.9.2\n \n-_2015-11-?_\n \n+_2015-11-29_\n+\n+* Build/Maven/Logback: exclude logback.xml in the built jar.  \n * Test: add sleep to make sure server starts first; should fix build issue related to #7\n * Test: add coverage: updateRequestByAddingReplaceVarPairNodeSpecific() check null, add some other minor coverage\n * Test: fix TcpServerThread (tcp sample server) not closed in test, thus skip idle TCP tests. "
            },
            {
                "sha": "5a55ad04140082e98514acae2d3b467f2d35cef7",
                "filename": "README.md",
                "status": "modified",
                "additions": 4,
                "deletions": 3,
                "changes": 7,
                "blob_url": "https://github.com/eBay/parallec/blob/1f5c9a746870e4653fc7a8d010e42cc6b035c97a/README.md",
                "raw_url": "https://github.com/eBay/parallec/raw/1f5c9a746870e4653fc7a8d010e42cc6b035c97a/README.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/README.md?ref=1f5c9a746870e4653fc7a8d010e42cc6b035c97a",
                "patch": "@@ -4,7 +4,7 @@\n ![build status](https://img.shields.io/badge/build-info=>-green.svg) [![Build Status](https://travis-ci.org/eBay/parallec.svg?branch=master)](https://travis-ci.org/eBay/parallec) [![Coverage Status](https://img.shields.io/codecov/c/github/eBay/parallec.svg)](https://codecov.io/github/eBay/parallec) [![Apache V2.0 License](http://www.parallec.io/images/apache2.svg) ](https://github.com/eBay/parallec/blob/master/LICENSE)\n \n \n-![latest 0.9.x](http://img.shields.io/badge/latest_stable-0.9.x=>-green.svg) [ ![latest beta  maven central](https://maven-badges.herokuapp.com/maven-central/io.parallec/parallec-core/badge.svg?style=flat)](http://search.maven.org/#artifactdetails|io.parallec|parallec-core|0.9.1|) [![Gitter](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/eBay/parallec?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge)\n+![latest 0.9.x](http://img.shields.io/badge/latest_stable-0.9.x=>-green.svg) [ ![latest beta  maven central](https://maven-badges.herokuapp.com/maven-central/io.parallec/parallec-core/badge.svg?style=flat)](http://search.maven.org/#artifactdetails|io.parallec|parallec-core|0.9.2|) [![Gitter](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/eBay/parallec?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge)\n \n [![Javadoc](http://www.parallec.io/images/parallec-javadoc-blue.svg)](http://www.parallec.io/javadoc/index.html?io/parallec/core/ParallelClient.html) [![Documentation](http://www.parallec.io/images/parallec-documentation-red.svg)](http://www.parallec.io/docs/) [![Samples](http://www.parallec.io/images/parallec-samples-brightgreen.svg)](https://github.com/eBay/parallec-samples) [![Chinese](http://www.parallec.io/images/parallec-cnbrief-blue.svg)](https://github.com/eBay/parallec/blob/master/README-brief-cn.md) \n \n@@ -27,14 +27,14 @@ Donwload [the latest JAR](https://search.maven.org/remote_content?g=io.parallec&\n <dependency>\n \t<groupId>io.parallec</groupId>\n \t<artifactId>parallec-core</artifactId>\n-\t<version>0.9.1</version>\n+\t<version>0.9.2</version>\n </dependency>\n ```\n Snapshots of the development version are available in [Sonatype's `snapshots` repository](https://oss.sonatype.org/content/repositories/snapshots/io/parallec/parallec-core/).\n \n or Gradle:\n ```xml\n-compile 'io.parallec:parallec-core:0.9.1'\n+compile 'io.parallec:parallec-core:0.9.2'\n ```\n \n \n@@ -144,6 +144,7 @@ Parallec is built on Akka actors and [Async HTTP Client](https://github.com/Asyn\n - Flexible response handling and immediate processing embedded in other applications.\n - Handle async APIs with auto progress polling for task level concurrency control.\n - Support of other protocols, and [more](https://github.com/eBay/parallec/blob/master/README.md#features)..\n+- Anyone can write 20 lines to make his/her application become [REST Commander](http://www.restcommander.com/).\n \n With the feedbacks, lessons, and improvements from the past year of internal usage and open source of **[REST Commander](http://www.restcommander.com)**, we now made the core of REST Commander as an easy to use standalone library. We added [**15+ new**](https://github.com/eBay/parallec/blob/master/README.md#compare) features, rewritten 70%+ of the code, with [**90%+ test coverage**](https://codecov.io/github/eBay/parallec) for confident usage and contribution. This time we also structure it better so that most internal development can be directly made here.\n "
            },
            {
                "sha": "d7cdddc20eacf2ce1f56fdc854972dd106aead9c",
                "filename": "pom.xml",
                "status": "modified",
                "additions": 11,
                "deletions": 4,
                "changes": 15,
                "blob_url": "https://github.com/eBay/parallec/blob/1f5c9a746870e4653fc7a8d010e42cc6b035c97a/pom.xml",
                "raw_url": "https://github.com/eBay/parallec/raw/1f5c9a746870e4653fc7a8d010e42cc6b035c97a/pom.xml",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/pom.xml?ref=1f5c9a746870e4653fc7a8d010e42cc6b035c97a",
                "patch": "@@ -4,7 +4,7 @@\n \t<modelVersion>4.0.0</modelVersion>\n \t<groupId>io.parallec</groupId>\n \t<artifactId>parallec-core</artifactId>\n-\t<version>0.9.2-SNAPSHOT</version>\n+\t<version>0.9.2</version>\n \t<packaging>jar</packaging>\n \t<name>io.parallec:parallec-core</name>\n \t<url>https://github.com/eBay/parallec</url>\n@@ -231,10 +231,17 @@\n \t\t\t\t\t</execution>\n \t\t\t\t</executions>\n \t\t\t</plugin>\n-\n+\t\t\t<plugin>\n+\t\t        <groupId>org.apache.maven.plugins</groupId>\n+\t\t        <artifactId>maven-jar-plugin</artifactId>\n+\t\t        <configuration>\n+\t\t                <!-- exclude logback.xml -->\n+\t\t            <excludes>\n+\t\t                <exclude>**/logback.xml</exclude>\n+\t\t            </excludes>\n+\t\t        </configuration>\n+            </plugin>\n \t\t</plugins>\n-\n-\n \t</build>\n \n \t<profiles>"
            }
        ]
    },
    {
        "sha": "3b0989b279b208faea108c01fc946b5fb1b71979",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6M2IwOTg5YjI3OWIyMDhmYWVhMTA4YzAxZmM5NDZiNWZiMWI3MTk3OQ==",
        "commit": {
            "author": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2015-11-24T06:28:20Z"
            },
            "committer": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2015-11-24T06:28:20Z"
            },
            "message": "update readme with urls. [skip ci]",
            "tree": {
                "sha": "478428584a2093b55c46b157fe6e1d1c10dc8069",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/478428584a2093b55c46b157fe6e1d1c10dc8069"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/3b0989b279b208faea108c01fc946b5fb1b71979",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/3b0989b279b208faea108c01fc946b5fb1b71979",
        "html_url": "https://github.com/eBay/parallec/commit/3b0989b279b208faea108c01fc946b5fb1b71979",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/3b0989b279b208faea108c01fc946b5fb1b71979/comments",
        "author": null,
        "committer": null,
        "parents": [
            {
                "sha": "a3aeb8bdafe380a9262754016083d7c996704c91",
                "url": "https://api.github.com/repos/eBay/parallec/commits/a3aeb8bdafe380a9262754016083d7c996704c91",
                "html_url": "https://github.com/eBay/parallec/commit/a3aeb8bdafe380a9262754016083d7c996704c91"
            }
        ],
        "stats": {
            "total": 2,
            "additions": 1,
            "deletions": 1
        },
        "files": [
            {
                "sha": "a2fef5500767d4d094b8d2866d0703b3f81453a2",
                "filename": "README.md",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/3b0989b279b208faea108c01fc946b5fb1b71979/README.md",
                "raw_url": "https://github.com/eBay/parallec/raw/3b0989b279b208faea108c01fc946b5fb1b71979/README.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/README.md?ref=3b0989b279b208faea108c01fc946b5fb1b71979",
                "patch": "@@ -12,7 +12,7 @@\n \n [ [API Overview](http://www.parallec.io/docs/api-overview/) | [Generate & Submit Task](http://www.parallec.io/docs/submit-task/) | [Track Status & Examine Responses](http://www.parallec.io/docs/track-status/) | [Configurations](http://www.parallec.io/docs/configurations/) ]\n \n-Noticed by [the Author of Akka](https://twitter.com/jboner/status/663618652063813632) Featured in [ [This Week in #Scala](http://www.cakesolutions.net/teamblogs/this-week-in-scala-16/11/2015) | [OSChina](http://www.oschina.net/p/parallec) ]\n+Noticed by [the Author of Akka](https://twitter.com/jboner/status/663618652063813632) & Featured in [ [This Week in #Scala](http://www.cakesolutions.net/teamblogs/this-week-in-scala-16/11/2015) | [OSChina](http://www.oschina.net/p/parallec) ]\n \n Parallec is a fast parallel async HTTP(S)/SSH/TCP/Ping client java library based on [Akka](http://akka.io). Scalably aggregate and handle API responses **anyway** and send it **anywhere** by writing [20 lines](https://www.youtube.com/watch?v=QcavegPMDms) of code. A special super convenient **response context** let you pass in/out any object when handling the responses. Now you can conduct scalable API calls, then effortlessly pass aggregated data anywhere to elastic search, kafka, MongoDB, graphite, memcached, etc. Parallec means  **Paralle**l **C**lient, and is pronounced as \"Para-like\".\n "
            }
        ]
    },
    {
        "sha": "a3aeb8bdafe380a9262754016083d7c996704c91",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6YTNhZWI4YmRhZmUzODBhOTI2Mjc1NDAxNjA4M2Q3Yzk5NjcwNGM5MQ==",
        "commit": {
            "author": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2015-11-24T06:19:10Z"
            },
            "committer": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2015-11-24T06:19:10Z"
            },
            "message": "update readme with usecases. [skip ci]",
            "tree": {
                "sha": "31af11bfdad31de1d78ccba023fcd3b3b0073dd8",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/31af11bfdad31de1d78ccba023fcd3b3b0073dd8"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/a3aeb8bdafe380a9262754016083d7c996704c91",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/a3aeb8bdafe380a9262754016083d7c996704c91",
        "html_url": "https://github.com/eBay/parallec/commit/a3aeb8bdafe380a9262754016083d7c996704c91",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/a3aeb8bdafe380a9262754016083d7c996704c91/comments",
        "author": null,
        "committer": null,
        "parents": [
            {
                "sha": "215869ea3a8fd496cdabf6c56f7f41605da66a9f",
                "url": "https://api.github.com/repos/eBay/parallec/commits/215869ea3a8fd496cdabf6c56f7f41605da66a9f",
                "html_url": "https://github.com/eBay/parallec/commit/215869ea3a8fd496cdabf6c56f7f41605da66a9f"
            }
        ],
        "stats": {
            "total": 2,
            "additions": 2,
            "deletions": 0
        },
        "files": [
            {
                "sha": "44755f0524a8e6655d7a7cfb2556f1a17d393311",
                "filename": "README.md",
                "status": "modified",
                "additions": 2,
                "deletions": 0,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/a3aeb8bdafe380a9262754016083d7c996704c91/README.md",
                "raw_url": "https://github.com/eBay/parallec/raw/a3aeb8bdafe380a9262754016083d7c996704c91/README.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/README.md?ref=a3aeb8bdafe380a9262754016083d7c996704c91",
                "patch": "@@ -12,6 +12,8 @@\n \n [ [API Overview](http://www.parallec.io/docs/api-overview/) | [Generate & Submit Task](http://www.parallec.io/docs/submit-task/) | [Track Status & Examine Responses](http://www.parallec.io/docs/track-status/) | [Configurations](http://www.parallec.io/docs/configurations/) ]\n \n+Noticed by [the Author of Akka](https://twitter.com/jboner/status/663618652063813632) Featured in [ [This Week in #Scala](http://www.cakesolutions.net/teamblogs/this-week-in-scala-16/11/2015) | [OSChina](http://www.oschina.net/p/parallec) ]\n+\n Parallec is a fast parallel async HTTP(S)/SSH/TCP/Ping client java library based on [Akka](http://akka.io). Scalably aggregate and handle API responses **anyway** and send it **anywhere** by writing [20 lines](https://www.youtube.com/watch?v=QcavegPMDms) of code. A special super convenient **response context** let you pass in/out any object when handling the responses. Now you can conduct scalable API calls, then effortlessly pass aggregated data anywhere to elastic search, kafka, MongoDB, graphite, memcached, etc. Parallec means  **Paralle**l **C**lient, and is pronounced as \"Para-like\".\n \n **[Watch Demo](https://github.com/eBay/parallec/wiki/Parallec-Aggregates-HTTP-Responses-from-8000-Servers)**: **8,000** web server HTTP response aggregation to memory in **12** seconds / to ElasticSearch in **16** seconds."
            }
        ]
    },
    {
        "sha": "215869ea3a8fd496cdabf6c56f7f41605da66a9f",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6MjE1ODY5ZWEzYThmZDQ5NmNkYWJmNmM1NmY3ZjQxNjA1ZGE2NmE5Zg==",
        "commit": {
            "author": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2015-11-23T05:42:39Z"
            },
            "committer": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2015-11-23T05:42:39Z"
            },
            "message": "update readme with usecases. [skip ci]",
            "tree": {
                "sha": "51de2a332c6816bdf259e6aeeed49e9ab8cf1cf8",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/51de2a332c6816bdf259e6aeeed49e9ab8cf1cf8"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/215869ea3a8fd496cdabf6c56f7f41605da66a9f",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/215869ea3a8fd496cdabf6c56f7f41605da66a9f",
        "html_url": "https://github.com/eBay/parallec/commit/215869ea3a8fd496cdabf6c56f7f41605da66a9f",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/215869ea3a8fd496cdabf6c56f7f41605da66a9f/comments",
        "author": null,
        "committer": null,
        "parents": [
            {
                "sha": "fbc4bbb6381a80717c81a5f591e124faacf0aed5",
                "url": "https://api.github.com/repos/eBay/parallec/commits/fbc4bbb6381a80717c81a5f591e124faacf0aed5",
                "html_url": "https://github.com/eBay/parallec/commit/fbc4bbb6381a80717c81a5f591e124faacf0aed5"
            }
        ],
        "stats": {
            "total": 9,
            "additions": 5,
            "deletions": 4
        },
        "files": [
            {
                "sha": "0b59abc9f07a451c5c825095657e143f462764c1",
                "filename": "README-brief-cn.md",
                "status": "modified",
                "additions": 3,
                "deletions": 2,
                "changes": 5,
                "blob_url": "https://github.com/eBay/parallec/blob/215869ea3a8fd496cdabf6c56f7f41605da66a9f/README-brief-cn.md",
                "raw_url": "https://github.com/eBay/parallec/raw/215869ea3a8fd496cdabf6c56f7f41605da66a9f/README-brief-cn.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/README-brief-cn.md?ref=215869ea3a8fd496cdabf6c56f7f41605da66a9f",
                "patch": "@@ -11,9 +11,10 @@\n - 集群机器状态、配置探索，基于HTTP(S)/TCP Agent 或者 无agent 的大量远程任务执行，软件部署. HTTP支持SSL 客户端认证\n - 海量API聚集到任意数据存储，数据流入口\n - 并行工作流，自动检测任务进度，以便支持并行处理异步API\n-- 可控并行的，多个不同API请求到同一个HTTP服务器。HTTP请求模板可以在URL, HTTP Header, EntityBody不同地方进行变量替换。 \n+- 可控并行的，多个不同API请求到同一个HTTP服务器。HTTP请求模板可以在URL, HTTP Header, EntityBody不同地方进行变量替换。这样可以很方便的对那些有REST API的数据库或者网络服务器进行并行的CRUD操作。\n+- 灵活的Web服务器的压力测试，并将结果传到任何地方。 \n \n-Parallec内置特别的响应上下文（response context），在处理服务器回复（Response）时能方便快捷的传入，传出任何对象，比如各种客户端（比如elastic search, kafka, mongodb etc），以便汇集处理数据到任何地方。 [样例程序](http://www.parallec.io/#code-sample)**仅需20行代码**，就可以汇总10000隔API的回复以简单可控的并行速度发送汇总到Elastic Search。\n+Parallec内置特别的响应上下文（response context），在处理服务器回复（Response）时能方便快捷的传入，传出任何对象，比如各种客户端（比如elastic search, graphite, kafka, mongodb etc），以便汇集处理数据到任何地方。 [样例程序](http://www.parallec.io/#code-sample)**仅需20行代码**，就可以汇总10000隔API的回复以简单可控的并行速度发送汇总到Elastic Search。\n \n 和REST Commander类似，Parallec非常高效并且可以处理大量响应。 比如其Ping服务器的速度是目前使用最广泛**并行Ping 软件[FPing](http://fping.org/)的2倍**，仅用12秒就可以ping 8000服务器。（[**请看Ping视频演示**](https://github.com/eBay/parallec/wiki/Parallec-pings-8000-servers-in-11.1-seconds)) 同样的对于**并行HTTP**， Parallec发送HTTP请求到8000 Web服务器 并聚集响应只需**12秒** （聚集到内存），或**16秒**（聚集到Elastic Search）（[**请看HTTP视频演示**](https://github.com/eBay/parallec/wiki/Parallec-Aggregates-HTTP-Responses-from-8000-Servers))\n "
            },
            {
                "sha": "d541f469fa353f57075be54845be5dcb97ed5c4a",
                "filename": "README.md",
                "status": "modified",
                "additions": 2,
                "deletions": 2,
                "changes": 4,
                "blob_url": "https://github.com/eBay/parallec/blob/215869ea3a8fd496cdabf6c56f7f41605da66a9f/README.md",
                "raw_url": "https://github.com/eBay/parallec/raw/215869ea3a8fd496cdabf6c56f7f41605da66a9f/README.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/README.md?ref=215869ea3a8fd496cdabf6c56f7f41605da66a9f",
                "patch": "@@ -82,7 +82,7 @@ node.close(); pc.releaseExternalResources();\n \n **Different Requests to the Same Target**\n \n-Now see **how easy** to use the request template to send multiple different requests to the same target. [Read more..](http://www.parallec.io/docs/submit-task/#apis-on-variable-replacement-for-heterogeneous-requests)\n+Now see **how easy** to use the request template to send multiple different requests to the same target. Variable replacement is allowed in post body, url and headers. [Read more..](http://www.parallec.io/docs/submit-task/#apis-on-variable-replacement-for-heterogeneous-requests)\n \n ```java\n pc.prepareHttpGet(\"/userdata/sample_weather_$ZIP.txt\")\n@@ -109,7 +109,7 @@ pc.prepareHttpGet(\"/userdata/sample_weather_$ZIP.txt\")\n 1. Asset / server status discovery, remote task execution in agent-less(parallel SSH) or agent based (parallel HTTP/TCP) method.\n 1. Scalable API aggregation and processing with flexible destination with your favorate message queue / storage / alert engine.\n 1. Orchestration and work flows on multiple web servers. \n-1. Parallel different requests with controlled concurrency to a single server: as a parallec client for REST API enabled Database / Web Server CRUD operations.\n+1. Parallel different requests with controlled concurrency to a single server: as a parallec client for REST API enabled Database / Web Server CRUD operations. Variable replacement allowed in post body, url and headers.\n 1. Load testing with request template. \n \n "
            }
        ]
    },
    {
        "sha": "fbc4bbb6381a80717c81a5f591e124faacf0aed5",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6ZmJjNGJiYjYzODFhODA3MTdjODFhNWY1OTFlMTI0ZmFhY2YwYWVkNQ==",
        "commit": {
            "author": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2015-11-23T02:56:42Z"
            },
            "committer": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2015-11-23T02:56:42Z"
            },
            "message": "update readme with usecases. [skip ci]",
            "tree": {
                "sha": "048d232a4a87fde1b147004409ae4d99baef733e",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/048d232a4a87fde1b147004409ae4d99baef733e"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/fbc4bbb6381a80717c81a5f591e124faacf0aed5",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/fbc4bbb6381a80717c81a5f591e124faacf0aed5",
        "html_url": "https://github.com/eBay/parallec/commit/fbc4bbb6381a80717c81a5f591e124faacf0aed5",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/fbc4bbb6381a80717c81a5f591e124faacf0aed5/comments",
        "author": null,
        "committer": null,
        "parents": [
            {
                "sha": "b1d3ceb5008a3045f91d48fc2ad9ebbfaab504e3",
                "url": "https://api.github.com/repos/eBay/parallec/commits/b1d3ceb5008a3045f91d48fc2ad9ebbfaab504e3",
                "html_url": "https://github.com/eBay/parallec/commit/b1d3ceb5008a3045f91d48fc2ad9ebbfaab504e3"
            }
        ],
        "stats": {
            "total": 4,
            "additions": 3,
            "deletions": 1
        },
        "files": [
            {
                "sha": "8629570d5b208d40d62ee5759fa20a5cada7d4d6",
                "filename": "README.md",
                "status": "modified",
                "additions": 3,
                "deletions": 1,
                "changes": 4,
                "blob_url": "https://github.com/eBay/parallec/blob/fbc4bbb6381a80717c81a5f591e124faacf0aed5/README.md",
                "raw_url": "https://github.com/eBay/parallec/raw/fbc4bbb6381a80717c81a5f591e124faacf0aed5/README.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/README.md?ref=fbc4bbb6381a80717c81a5f591e124faacf0aed5",
                "patch": "@@ -109,7 +109,9 @@ pc.prepareHttpGet(\"/userdata/sample_weather_$ZIP.txt\")\n 1. Asset / server status discovery, remote task execution in agent-less(parallel SSH) or agent based (parallel HTTP/TCP) method.\n 1. Scalable API aggregation and processing with flexible destination with your favorate message queue / storage / alert engine.\n 1. Orchestration and work flows on multiple web servers. \n-1. Parallel different requests with controlled concurrency to a single server. \n+1. Parallel different requests with controlled concurrency to a single server: as a parallec client for REST API enabled Database / Web Server CRUD operations.\n+1. Load testing with request template. \n+\n \n \n ## Features<a name=\"features\"></a>"
            }
        ]
    },
    {
        "sha": "b1d3ceb5008a3045f91d48fc2ad9ebbfaab504e3",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6YjFkM2NlYjUwMDhhMzA0NWY5MWQ0OGZjMmFkOWViYmZhYWI1MDRlMw==",
        "commit": {
            "author": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2015-11-22T20:15:42Z"
            },
            "committer": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2015-11-22T20:15:42Z"
            },
            "message": "update doc snapshot url [skip ci]",
            "tree": {
                "sha": "f2baf0d27b021bd36d40d410ea70f4be18124a80",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/f2baf0d27b021bd36d40d410ea70f4be18124a80"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/b1d3ceb5008a3045f91d48fc2ad9ebbfaab504e3",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/b1d3ceb5008a3045f91d48fc2ad9ebbfaab504e3",
        "html_url": "https://github.com/eBay/parallec/commit/b1d3ceb5008a3045f91d48fc2ad9ebbfaab504e3",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/b1d3ceb5008a3045f91d48fc2ad9ebbfaab504e3/comments",
        "author": null,
        "committer": null,
        "parents": [
            {
                "sha": "dcdc0a4a471d0c8223bf38505b60a76e66a9a6b3",
                "url": "https://api.github.com/repos/eBay/parallec/commits/dcdc0a4a471d0c8223bf38505b60a76e66a9a6b3",
                "html_url": "https://github.com/eBay/parallec/commit/dcdc0a4a471d0c8223bf38505b60a76e66a9a6b3"
            }
        ],
        "stats": {
            "total": 3,
            "additions": 2,
            "deletions": 1
        },
        "files": [
            {
                "sha": "f4e4772c1b0066889c16bb7b4b72efd617f62140",
                "filename": "README.md",
                "status": "modified",
                "additions": 2,
                "deletions": 1,
                "changes": 3,
                "blob_url": "https://github.com/eBay/parallec/blob/b1d3ceb5008a3045f91d48fc2ad9ebbfaab504e3/README.md",
                "raw_url": "https://github.com/eBay/parallec/raw/b1d3ceb5008a3045f91d48fc2ad9ebbfaab504e3/README.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/README.md?ref=b1d3ceb5008a3045f91d48fc2ad9ebbfaab504e3",
                "patch": "@@ -28,6 +28,7 @@ Donwload [the latest JAR](https://search.maven.org/remote_content?g=io.parallec&\n \t<version>0.9.1</version>\n </dependency>\n ```\n+Snapshots of the development version are available in [Sonatype's `snapshots` repository](https://oss.sonatype.org/content/repositories/snapshots/io/parallec/parallec-core/).\n \n or Gradle:\n ```xml\n@@ -158,7 +159,7 @@ With the feedbacks, lessons, and improvements from the past year of internal usa\n \n ## Performance\n \n-Note that speed varies based on network speed, API response time, the slowest servers, and concurrency settings.\n+Note that speed varies based on network speed, API response time, the slowest servers, timeout, and concurrency settings.\n \n #####HTTP\n "
            }
        ]
    },
    {
        "sha": "dcdc0a4a471d0c8223bf38505b60a76e66a9a6b3",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6ZGNkYzBhNGE0NzFkMGM4MjIzYmYzODUwNWI2MGE3NmU2NmE5YTZiMw==",
        "commit": {
            "author": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2015-11-17T08:48:00Z"
            },
            "committer": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2015-11-17T08:48:00Z"
            },
            "message": "update doc [skip ci]",
            "tree": {
                "sha": "9184d6562067c460cdaa1792819317bf1de7eec8",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/9184d6562067c460cdaa1792819317bf1de7eec8"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/dcdc0a4a471d0c8223bf38505b60a76e66a9a6b3",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/dcdc0a4a471d0c8223bf38505b60a76e66a9a6b3",
        "html_url": "https://github.com/eBay/parallec/commit/dcdc0a4a471d0c8223bf38505b60a76e66a9a6b3",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/dcdc0a4a471d0c8223bf38505b60a76e66a9a6b3/comments",
        "author": null,
        "committer": null,
        "parents": [
            {
                "sha": "f9c0b32593254386c921c4de8cae1762596c20d0",
                "url": "https://api.github.com/repos/eBay/parallec/commits/f9c0b32593254386c921c4de8cae1762596c20d0",
                "html_url": "https://github.com/eBay/parallec/commit/f9c0b32593254386c921c4de8cae1762596c20d0"
            }
        ],
        "stats": {
            "total": 4,
            "additions": 2,
            "deletions": 2
        },
        "files": [
            {
                "sha": "8364854b250c9dcccf5600c49c886adf91563bf0",
                "filename": "README.md",
                "status": "modified",
                "additions": 2,
                "deletions": 2,
                "changes": 4,
                "blob_url": "https://github.com/eBay/parallec/blob/dcdc0a4a471d0c8223bf38505b60a76e66a9a6b3/README.md",
                "raw_url": "https://github.com/eBay/parallec/raw/dcdc0a4a471d0c8223bf38505b60a76e66a9a6b3/README.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/README.md?ref=dcdc0a4a471d0c8223bf38505b60a76e66a9a6b3",
                "patch": "@@ -8,7 +8,7 @@\n \n [![Javadoc](http://www.parallec.io/images/parallec-javadoc-blue.svg)](http://www.parallec.io/javadoc/index.html?io/parallec/core/ParallelClient.html) [![Documentation](http://www.parallec.io/images/parallec-documentation-red.svg)](http://www.parallec.io/docs/) [![Samples](http://www.parallec.io/images/parallec-samples-brightgreen.svg)](https://github.com/eBay/parallec-samples) [![Chinese](http://www.parallec.io/images/parallec-cnbrief-blue.svg)](https://github.com/eBay/parallec/blob/master/README-brief-cn.md) \n \n-[ [Get-Started](https://github.com/eBay/parallec/blob/master/README.md#get-started) | [Features](https://github.com/eBay/parallec/blob/master/README.md#features) | [Use Cases](https://github.com/eBay/parallec/blob/master/README.md#use-cases) | [Motivation](https://github.com/eBay/parallec/blob/master/README.md#motivation) | [Demos](https://github.com/eBay/parallec/blob/master/README.md#demos) | [Performance](https://github.com/eBay/parallec/blob/master/README.md#performance) | [Compare](https://github.com/eBay/parallec/blob/master/README.md#compare) | [Contributors](https://github.com/eBay/parallec/blob/master/README.md#contributors) | [About](https://github.com/eBay/parallec/blob/master/README.md#authors) | [中文介绍](https://github.com/eBay/parallec/blob/master/README-brief-cn.md) ]\n+[ [Get-Started](https://github.com/eBay/parallec/blob/master/README.md#get-started) | [Features](https://github.com/eBay/parallec/blob/master/README.md#features) | [Use Cases](https://github.com/eBay/parallec/blob/master/README.md#use-cases) | [Motivation](https://github.com/eBay/parallec/blob/master/README.md#motivation) | [Demos](https://github.com/eBay/parallec/blob/master/README.md#demos) | [Performance](https://github.com/eBay/parallec/blob/master/README.md#performance) | [Compare](https://github.com/eBay/parallec/blob/master/README.md#compare) | [Contributors](https://github.com/eBay/parallec/blob/master/README.md#contributors) | [About](https://github.com/eBay/parallec/blob/master/README.md#authors) | [News](http://www.parallec.io/blog/) | [中文介绍](https://github.com/eBay/parallec/blob/master/README-brief-cn.md) ]\n \n [ [API Overview](http://www.parallec.io/docs/api-overview/) | [Generate & Submit Task](http://www.parallec.io/docs/submit-task/) | [Track Status & Examine Responses](http://www.parallec.io/docs/track-status/) | [Configurations](http://www.parallec.io/docs/configurations/) ]\n \n@@ -214,7 +214,7 @@ In Parallec, you may handle response either in Worker (before aggregation: in pa\n \n ## [Contributors](https://github.com/eBay/parallec/blob/master/AUTHORS.txt)\n \n-To Parallec, Contributors are way more important than the original authors for the community. We will try to put all the contributors here unless it goes crazy :-)\n+Contributors are critical. We will try to put all the contributors here unless it goes crazy.\n \n - Lukasz Kryger  [http://stackoverflow.com/users/1240557/kryger](http://stackoverflow.com/users/1240557/kryger)\n "
            }
        ]
    },
    {
        "sha": "f9c0b32593254386c921c4de8cae1762596c20d0",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6ZjljMGIzMjU5MzI1NDM4NmM5MjFjNGRlOGNhZTE3NjI1OTZjMjBkMA==",
        "commit": {
            "author": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2015-11-17T06:15:09Z"
            },
            "committer": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2015-11-17T06:15:09Z"
            },
            "message": "update doc [skip ci]",
            "tree": {
                "sha": "b7da72f706d334aa5dc41e4518df71797ec8d198",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/b7da72f706d334aa5dc41e4518df71797ec8d198"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/f9c0b32593254386c921c4de8cae1762596c20d0",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/f9c0b32593254386c921c4de8cae1762596c20d0",
        "html_url": "https://github.com/eBay/parallec/commit/f9c0b32593254386c921c4de8cae1762596c20d0",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/f9c0b32593254386c921c4de8cae1762596c20d0/comments",
        "author": null,
        "committer": null,
        "parents": [
            {
                "sha": "b6a44dd7f8096d4acc605e50801cfa906d4081fb",
                "url": "https://api.github.com/repos/eBay/parallec/commits/b6a44dd7f8096d4acc605e50801cfa906d4081fb",
                "html_url": "https://github.com/eBay/parallec/commit/b6a44dd7f8096d4acc605e50801cfa906d4081fb"
            }
        ],
        "stats": {
            "total": 2,
            "additions": 1,
            "deletions": 1
        },
        "files": [
            {
                "sha": "b66ba6ce339e1a1d906b239d16e7f61da0016129",
                "filename": "README.md",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/f9c0b32593254386c921c4de8cae1762596c20d0/README.md",
                "raw_url": "https://github.com/eBay/parallec/raw/f9c0b32593254386c921c4de8cae1762596c20d0/README.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/README.md?ref=f9c0b32593254386c921c4de8cae1762596c20d0",
                "patch": "@@ -113,7 +113,7 @@ pc.prepareHttpGet(\"/userdata/sample_weather_$ZIP.txt\")\n \n ## Features<a name=\"features\"></a>\n \n-Parallec is built on Akka actors and Async HTTP Client / Netty / Jsch.  The library focuses on HTTP while also enables scalable communication over SSH/Ping/TCP.\n+Parallec is built on Akka actors and [Async HTTP Client](https://github.com/AsyncHttpClient/async-http-client) / [Netty](http://netty.io/) / [Jsch](http://www.jcraft.com/jsch/).  The library focuses on HTTP while also enables scalable communication over SSH/Ping/TCP.\n \n **90%+ Test coverage** assures you always find an example of each of feature.\n "
            }
        ]
    },
    {
        "sha": "b6a44dd7f8096d4acc605e50801cfa906d4081fb",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6YjZhNDRkZDdmODA5NmQ0YWNjNjA1ZTUwODAxY2ZhOTA2ZDQwODFmYg==",
        "commit": {
            "author": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2015-11-16T06:22:52Z"
            },
            "committer": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2015-11-16T06:22:52Z"
            },
            "message": "update doc [skip ci]",
            "tree": {
                "sha": "29c32a5f6e5892e544161aa7d7b107682f78e97e",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/29c32a5f6e5892e544161aa7d7b107682f78e97e"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/b6a44dd7f8096d4acc605e50801cfa906d4081fb",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/b6a44dd7f8096d4acc605e50801cfa906d4081fb",
        "html_url": "https://github.com/eBay/parallec/commit/b6a44dd7f8096d4acc605e50801cfa906d4081fb",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/b6a44dd7f8096d4acc605e50801cfa906d4081fb/comments",
        "author": null,
        "committer": null,
        "parents": [
            {
                "sha": "5410cf2f4ae8c844bc09c370c2413649f76f3ddf",
                "url": "https://api.github.com/repos/eBay/parallec/commits/5410cf2f4ae8c844bc09c370c2413649f76f3ddf",
                "html_url": "https://github.com/eBay/parallec/commit/5410cf2f4ae8c844bc09c370c2413649f76f3ddf"
            }
        ],
        "stats": {
            "total": 2,
            "additions": 1,
            "deletions": 1
        },
        "files": [
            {
                "sha": "2e59e774842b23532436ae08957f39b1e59f3929",
                "filename": "README.md",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/b6a44dd7f8096d4acc605e50801cfa906d4081fb/README.md",
                "raw_url": "https://github.com/eBay/parallec/raw/b6a44dd7f8096d4acc605e50801cfa906d4081fb/README.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/README.md?ref=b6a44dd7f8096d4acc605e50801cfa906d4081fb",
                "patch": "@@ -185,7 +185,7 @@ In Parallec, you may handle response either in Worker (before aggregation: in pa\n |                               Embedded library with intuitive builder pattern interface                               |    <img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/yes.png\" >   |       <img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/no.png\" >       |              <img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/no.png\" >             |\n |               Ready to use application with GUI wizard based request submission and response aggregation              |    <img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/no.png\" >    |       <img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/yes.png\" >      |              <img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/no.png\" >             |\n |                                 Simple concurrency control not limited by thread size                                 |    <img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/yes.png\" >   |       <img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/yes.png\" >      |              <img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/no.png\" >             |\n-|                             Immediate response handler without waiting all response return                            |   ![yes](http://www.parallec.io/images/yes.png)    |       <img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/no.png\" >       |             <img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/yes.png\" >             |\n+|                             Immediate response handler without waiting all response return                            |    <img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/yes.png\" >   |       <img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/no.png\" >       |             <img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/yes.png\" >             |\n |                               Capacity aware task scheduler and global capacity control                               |    <img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/yes.png\" >   |       <img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/no.png\" >       |              <img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/no.png\" >             |\n | Total freedom of response processing and API aggregation: Pluggable and generic response handler and response context |    <img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/yes.png\" >   |       <img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/no.png\" >       |             <img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/no.png\" >             |\n |                                        1 line plugin to enable SSL Client auth                                        |    <img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/yes.png\" >   |       <img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/no.png\" >       |              <img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/no.png\" >             |"
            }
        ]
    },
    {
        "sha": "5410cf2f4ae8c844bc09c370c2413649f76f3ddf",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6NTQxMGNmMmY0YWU4Yzg0NGJjMDljMzcwYzI0MTM2NDlmNzZmM2RkZg==",
        "commit": {
            "author": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2015-11-16T06:19:04Z"
            },
            "committer": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2015-11-16T06:19:04Z"
            },
            "message": "update doc [skip ci]",
            "tree": {
                "sha": "8c173c0e53f5fc34e4dbdd42ec7dda7d1a0db6f7",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/8c173c0e53f5fc34e4dbdd42ec7dda7d1a0db6f7"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/5410cf2f4ae8c844bc09c370c2413649f76f3ddf",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/5410cf2f4ae8c844bc09c370c2413649f76f3ddf",
        "html_url": "https://github.com/eBay/parallec/commit/5410cf2f4ae8c844bc09c370c2413649f76f3ddf",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/5410cf2f4ae8c844bc09c370c2413649f76f3ddf/comments",
        "author": null,
        "committer": null,
        "parents": [
            {
                "sha": "0abafa6b881410aa1682cb8ca4cac2d3aa891dc6",
                "url": "https://api.github.com/repos/eBay/parallec/commits/0abafa6b881410aa1682cb8ca4cac2d3aa891dc6",
                "html_url": "https://github.com/eBay/parallec/commit/0abafa6b881410aa1682cb8ca4cac2d3aa891dc6"
            }
        ],
        "stats": {
            "total": 2,
            "additions": 1,
            "deletions": 1
        },
        "files": [
            {
                "sha": "3fdc5d1a73526b9bcb53adadaa2662bc67ed4878",
                "filename": "README.md",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/5410cf2f4ae8c844bc09c370c2413649f76f3ddf/README.md",
                "raw_url": "https://github.com/eBay/parallec/raw/5410cf2f4ae8c844bc09c370c2413649f76f3ddf/README.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/README.md?ref=5410cf2f4ae8c844bc09c370c2413649f76f3ddf",
                "patch": "@@ -185,7 +185,7 @@ In Parallec, you may handle response either in Worker (before aggregation: in pa\n |                               Embedded library with intuitive builder pattern interface                               |    <img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/yes.png\" >   |       <img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/no.png\" >       |              <img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/no.png\" >             |\n |               Ready to use application with GUI wizard based request submission and response aggregation              |    <img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/no.png\" >    |       <img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/yes.png\" >      |              <img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/no.png\" >             |\n |                                 Simple concurrency control not limited by thread size                                 |    <img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/yes.png\" >   |       <img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/yes.png\" >      |              <img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/no.png\" >             |\n-|                             Immediate response handler without waiting all response return                            |    <img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/yes.png\" >   |       <img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/no.png\" >       |             <img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/yes.png\" >             |\n+|                             Immediate response handler without waiting all response return                            |   ![yes](http://www.parallec.io/images/yes.png)    |       <img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/no.png\" >       |             <img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/yes.png\" >             |\n |                               Capacity aware task scheduler and global capacity control                               |    <img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/yes.png\" >   |       <img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/no.png\" >       |              <img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/no.png\" >             |\n | Total freedom of response processing and API aggregation: Pluggable and generic response handler and response context |    <img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/yes.png\" >   |       <img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/no.png\" >       |             <img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/no.png\" >             |\n |                                        1 line plugin to enable SSL Client auth                                        |    <img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/yes.png\" >   |       <img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/no.png\" >       |              <img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/no.png\" >             |"
            }
        ]
    },
    {
        "sha": "0abafa6b881410aa1682cb8ca4cac2d3aa891dc6",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6MGFiYWZhNmI4ODE0MTBhYTE2ODJjYjhjYTRjYWMyZDNhYTg5MWRjNg==",
        "commit": {
            "author": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2015-11-16T06:05:49Z"
            },
            "committer": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2015-11-16T06:05:49Z"
            },
            "message": "update doc [skip ci]",
            "tree": {
                "sha": "29c32a5f6e5892e544161aa7d7b107682f78e97e",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/29c32a5f6e5892e544161aa7d7b107682f78e97e"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/0abafa6b881410aa1682cb8ca4cac2d3aa891dc6",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/0abafa6b881410aa1682cb8ca4cac2d3aa891dc6",
        "html_url": "https://github.com/eBay/parallec/commit/0abafa6b881410aa1682cb8ca4cac2d3aa891dc6",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/0abafa6b881410aa1682cb8ca4cac2d3aa891dc6/comments",
        "author": null,
        "committer": null,
        "parents": [
            {
                "sha": "2769d559b41c2db0e52045b8434fc6bb76a18313",
                "url": "https://api.github.com/repos/eBay/parallec/commits/2769d559b41c2db0e52045b8434fc6bb76a18313",
                "html_url": "https://github.com/eBay/parallec/commit/2769d559b41c2db0e52045b8434fc6bb76a18313"
            }
        ],
        "stats": {
            "total": 43,
            "additions": 22,
            "deletions": 21
        },
        "files": [
            {
                "sha": "2e59e774842b23532436ae08957f39b1e59f3929",
                "filename": "README.md",
                "status": "modified",
                "additions": 22,
                "deletions": 21,
                "changes": 43,
                "blob_url": "https://github.com/eBay/parallec/blob/0abafa6b881410aa1682cb8ca4cac2d3aa891dc6/README.md",
                "raw_url": "https://github.com/eBay/parallec/raw/0abafa6b881410aa1682cb8ca4cac2d3aa891dc6/README.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/README.md?ref=0abafa6b881410aa1682cb8ca4cac2d3aa891dc6",
                "patch": "@@ -149,6 +149,7 @@ With the feedbacks, lessons, and improvements from the past year of internal usa\n \n <a title=\"Click to Watch HD version in Youtube\" href=\"https://www.youtube.com/watch?v=QcavegPMDms\"><img alt=\"20 lines parallec to elastic search demo\" src=\"http://www.parallec.io/demos/elastic-web100-v3.gif\" /></a>\n \n+**[Watch Demo on HTTP Calls on 8000 Servers](https://github.com/eBay/parallec/wiki/Parallec-Aggregates-HTTP-Responses-from-8000-Servers)**: **8,000** web server HTTP response aggregation to memory in **12** seconds / to ElasticSearch in **16** seconds.\n \n [**Watch Ping Demo**](https://www.youtube.com/watch?v=9m1TFuO1Mys\"Parallec Ping vs FPing demo - Click to Watch!\"): Parallec is **2x Speed** of best-efforted tuned [FPing](http://fping.org) with same accurate results and pings 8000 servers within 11.1 seconds, details check [here](https://github.com/eBay/parallec/wiki/Parallec-pings-8000-servers-in-11.1-seconds).\n \n@@ -181,27 +182,27 @@ In Parallec, you may handle response either in Worker (before aggregation: in pa\n \n |                                                        Features                                                       | Parallec | REST Commander | Thread Pools + Async Client |\n |:---------------------------------------------------------------------------------------------------------------------:|:--------:|:--------------:|:---------------------------:|\n-|                               Embedded library with intuitive builder pattern interface                               |    Yes   |       No       |              No             |\n-|               Ready to use application with GUI wizard based request submission and response aggregation              |    No    |       Yes      |              No             |\n-|                                 Simple concurrency control not limited by thread size                                 |    Yes   |       Yes      |              No             |\n-|                             Immediate response handler without waiting all response return                            |    Yes   |       No       |             Yes             |\n-|                               Capacity aware task scheduler and global capacity control                               |    Yes   |       No       |              No             |\n-| Total freedom of response processing and API aggregation: Pluggable and generic response handler and response context |    Yes   |       No       |             No*             |\n-|                                        1 line plugin to enable SSL Client auth                                        |    Yes   |       No       |              No             |\n-|                                                   90% Test Coverage                                                   |    Yes   |       No       |              No             |\n-|                     Load target hosts from CMS query, JSON Path, text, list, string from URL/local                    |    Yes   |       No       |              No             |\n-|                  Task level concurrency and orchestration for Async APIs: auto polling task progress                  |    Yes   |       No       |              No             |\n-|                                          Task level configuration on timeout and replacing Async HTTP Client                                          |    Yes   |       No       |              No             |\n-|                           Async and sync task control with progress polling and cancellation                          |    Yes   |       No       |              No             |\n-|                                Scalable Parallel SSH with password and key based login                                |    Yes   |       No       |              No             |\n-|                    Proven scalability and speed on 100,000+ target hosts in Production environment                    |    Yes   |       Yes      |              No             |\n-|   Generic request template with variable replacement for sending different requests to same/different target hosts    |    Yes   |       Yes      |              No             |\n-|   Scalable Ping with Retries    |    Yes   |       No      |              No             |\n-|   Scalable TCP with idle timeout    |    Yes   |       No      |              No             |\n-|   Flexible handler location at either worker (in parallel) or manager thread    |    Yes   |       No      |              No             |\n-|   Out-of-the-box two-level response aggregation on status code|    Yes   |       Yes      |              No             |\n-|  Configurable response log trimming on intervals|    Yes   |       No      |              No             |\n-|  Cancel task on a list of target hosts |    Yes   |       No      |              No             |\n+|                               Embedded library with intuitive builder pattern interface                               |    <img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/yes.png\" >   |       <img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/no.png\" >       |              <img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/no.png\" >             |\n+|               Ready to use application with GUI wizard based request submission and response aggregation              |    <img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/no.png\" >    |       <img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/yes.png\" >      |              <img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/no.png\" >             |\n+|                                 Simple concurrency control not limited by thread size                                 |    <img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/yes.png\" >   |       <img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/yes.png\" >      |              <img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/no.png\" >             |\n+|                             Immediate response handler without waiting all response return                            |    <img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/yes.png\" >   |       <img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/no.png\" >       |             <img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/yes.png\" >             |\n+|                               Capacity aware task scheduler and global capacity control                               |    <img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/yes.png\" >   |       <img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/no.png\" >       |              <img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/no.png\" >             |\n+| Total freedom of response processing and API aggregation: Pluggable and generic response handler and response context |    <img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/yes.png\" >   |       <img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/no.png\" >       |             <img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/no.png\" >             |\n+|                                        1 line plugin to enable SSL Client auth                                        |    <img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/yes.png\" >   |       <img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/no.png\" >       |              <img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/no.png\" >             |\n+|                                                   90% Test Coverage                                                   |    <img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/yes.png\" >   |       <img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/no.png\" >       |              <img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/no.png\" >             |\n+|                     Load target hosts from CMS query, JSON Path, text, list, string from URL/local                    |    <img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/yes.png\" >   |       <img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/no.png\" >       |              <img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/no.png\" >             |\n+|                  Task level concurrency and orchestration for Async APIs: auto polling task progress                  |    <img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/yes.png\" >   |       <img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/no.png\" >       |              <img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/no.png\" >             |\n+|                                          Task level configuration on timeout and replacing Async HTTP Client                                          |    <img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/yes.png\" >   |       <img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/no.png\" >       |              <img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/no.png\" >             |\n+|                           Async and sync task control with progress polling and cancellation                          |    <img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/yes.png\" >   |       <img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/no.png\" >       |              <img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/no.png\" >             |\n+|                                Scalable Parallel SSH with password and key based login                                |    <img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/yes.png\" >   |       <img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/no.png\" >       |              <img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/no.png\" >             |\n+|                    Proven scalability and speed on 100,000+ target hosts in Production environment                    |    <img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/yes.png\" >   |       <img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/yes.png\" >      |              <img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/no.png\" >             |\n+|   Generic request template with variable replacement for sending different requests to same/different target hosts    |    <img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/yes.png\" >   |       <img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/yes.png\" >      |              <img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/no.png\" >             |\n+|   Scalable Ping with Retries    |    <img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/yes.png\" >   |       <img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/no.png\" >      |              <img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/no.png\" >             |\n+|   Scalable TCP with idle timeout    |    <img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/yes.png\" >   |       <img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/no.png\" >      |              <img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/no.png\" >             |\n+|   Flexible handler location at either worker (in parallel) or manager thread    |    <img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/yes.png\" >   |       <img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/no.png\" >      |              <img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/no.png\" >             |\n+|   Out-of-the-box two-level response aggregation on status code|    <img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/yes.png\" >   |       <img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/yes.png\" >      |              <img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/no.png\" >             |\n+|  Configurable response log trimming on intervals|    <img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/yes.png\" >   |       <img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/no.png\" >      |              <img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/no.png\" >             |\n+|  Cancel task on a list of target hosts |    <img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/yes.png\" >   |       <img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/no.png\" >      |              <img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/no.png\" >             |\n \n \n ## Plugins"
            }
        ]
    },
    {
        "sha": "2769d559b41c2db0e52045b8434fc6bb76a18313",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6Mjc2OWQ1NTliNDFjMmRiMGU1MjA0NWI4NDM0ZmM2YmI3NmExODMxMw==",
        "commit": {
            "author": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2015-11-15T22:58:43Z"
            },
            "committer": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2015-11-15T22:58:43Z"
            },
            "message": "update doc [skip ci]",
            "tree": {
                "sha": "b60bff2ae504670ca28a74bda35aa44e72f6ecd1",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/b60bff2ae504670ca28a74bda35aa44e72f6ecd1"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/2769d559b41c2db0e52045b8434fc6bb76a18313",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/2769d559b41c2db0e52045b8434fc6bb76a18313",
        "html_url": "https://github.com/eBay/parallec/commit/2769d559b41c2db0e52045b8434fc6bb76a18313",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/2769d559b41c2db0e52045b8434fc6bb76a18313/comments",
        "author": null,
        "committer": null,
        "parents": [
            {
                "sha": "4bd4481c351bac9197eca92f57e3e3b9e8e86a19",
                "url": "https://api.github.com/repos/eBay/parallec/commits/4bd4481c351bac9197eca92f57e3e3b9e8e86a19",
                "html_url": "https://github.com/eBay/parallec/commit/4bd4481c351bac9197eca92f57e3e3b9e8e86a19"
            }
        ],
        "stats": {
            "total": 4,
            "additions": 2,
            "deletions": 2
        },
        "files": [
            {
                "sha": "01d00b944a48114bfab6f2085f795c9065ebb166",
                "filename": "README-brief-cn.md",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/2769d559b41c2db0e52045b8434fc6bb76a18313/README-brief-cn.md",
                "raw_url": "https://github.com/eBay/parallec/raw/2769d559b41c2db0e52045b8434fc6bb76a18313/README-brief-cn.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/README-brief-cn.md?ref=2769d559b41c2db0e52045b8434fc6bb76a18313",
                "patch": "@@ -15,7 +15,7 @@\n \n Parallec内置特别的响应上下文（response context），在处理服务器回复（Response）时能方便快捷的传入，传出任何对象，比如各种客户端（比如elastic search, kafka, mongodb etc），以便汇集处理数据到任何地方。 [样例程序](http://www.parallec.io/#code-sample)**仅需20行代码**，就可以汇总10000隔API的回复以简单可控的并行速度发送汇总到Elastic Search。\n \n-和REST Commander类似，Parallec非常高效并且可以处理大量响应。 比如其Ping服务器的速度是目前使用最广泛**并行Ping 软件[FPing](http://fping.org/)的2倍**，仅用12秒就可以ping 8000服务器。（[**请看视频演示**](https://github.com/eBay/parallec/wiki/Parallec-pings-8000-servers-in-11.1-seconds))\n+和REST Commander类似，Parallec非常高效并且可以处理大量响应。 比如其Ping服务器的速度是目前使用最广泛**并行Ping 软件[FPing](http://fping.org/)的2倍**，仅用12秒就可以ping 8000服务器。（[**请看Ping视频演示**](https://github.com/eBay/parallec/wiki/Parallec-pings-8000-servers-in-11.1-seconds)) 同样的对于**并行HTTP**， Parallec发送HTTP请求到8000 Web服务器 并聚集响应只需**12秒** （聚集到内存），或**16秒**（聚集到Elastic Search）（[**请看HTTP视频演示**](https://github.com/eBay/parallec/wiki/Parallec-Aggregates-HTTP-Responses-from-8000-Servers))\n \n 通过过去一年内部使用和开源REST Superman/ REST Commander的开发， 反馈，经验教训，我们现在做把REST Commander的核心做成一个易于使用的独立库 （便于从Maven导入，让所有程序都写20行代码变成REST Commander）。在此基础上，我们添加超过[**15个新的功能**](https://github.com/eBay/parallec/blob/master/README.md#compare)，**改写超过70%的代码**，**以90%以上的测试覆盖率**，确保了用户和开源贡献者能够更加放心的开发和使用。与此同时，我们也把整体软件结构进行了优化，使得大部分内部开发可以直接在github开源平台上直接进行。\n "
            },
            {
                "sha": "223b0a1a6ed5513e9bfd2fd590a0573d19ff217c",
                "filename": "README.md",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/2769d559b41c2db0e52045b8434fc6bb76a18313/README.md",
                "raw_url": "https://github.com/eBay/parallec/raw/2769d559b41c2db0e52045b8434fc6bb76a18313/README.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/README.md?ref=2769d559b41c2db0e52045b8434fc6bb76a18313",
                "patch": "@@ -14,7 +14,7 @@\n \n Parallec is a fast parallel async HTTP(S)/SSH/TCP/Ping client java library based on [Akka](http://akka.io). Scalably aggregate and handle API responses **anyway** and send it **anywhere** by writing [20 lines](https://www.youtube.com/watch?v=QcavegPMDms) of code. A special super convenient **response context** let you pass in/out any object when handling the responses. Now you can conduct scalable API calls, then effortlessly pass aggregated data anywhere to elastic search, kafka, MongoDB, graphite, memcached, etc. Parallec means  **Paralle**l **C**lient, and is pronounced as \"Para-like\".\n \n-**Demo**: **8,000** web server HTTP response aggregation [to memory in **12** seconds](https://youtu.be/Ecnpa0afO6Y) / [to ElasticSearch in **16** seconds](https://youtu.be/HetfWOHIPNI).\n+**[Watch Demo](https://github.com/eBay/parallec/wiki/Parallec-Aggregates-HTTP-Responses-from-8000-Servers)**: **8,000** web server HTTP response aggregation to memory in **12** seconds / to ElasticSearch in **16** seconds.\n \n ![Workflow Overview](http://www.parallec.io/images/parallec-flow.svg)\n "
            }
        ]
    },
    {
        "sha": "4bd4481c351bac9197eca92f57e3e3b9e8e86a19",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6NGJkNDQ4MWMzNTFiYWM5MTk3ZWNhOTJmNTdlM2UzYjllOGU4NmExOQ==",
        "commit": {
            "author": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2015-11-15T08:57:47Z"
            },
            "committer": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2015-11-15T08:57:47Z"
            },
            "message": "update doc [skip ci]",
            "tree": {
                "sha": "679e27b504218b879cd2531b2fbe1d1ba0a90546",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/679e27b504218b879cd2531b2fbe1d1ba0a90546"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/4bd4481c351bac9197eca92f57e3e3b9e8e86a19",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/4bd4481c351bac9197eca92f57e3e3b9e8e86a19",
        "html_url": "https://github.com/eBay/parallec/commit/4bd4481c351bac9197eca92f57e3e3b9e8e86a19",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/4bd4481c351bac9197eca92f57e3e3b9e8e86a19/comments",
        "author": null,
        "committer": null,
        "parents": [
            {
                "sha": "f729b524f210b75992fc36fcddc08644f6b20007",
                "url": "https://api.github.com/repos/eBay/parallec/commits/f729b524f210b75992fc36fcddc08644f6b20007",
                "html_url": "https://github.com/eBay/parallec/commit/f729b524f210b75992fc36fcddc08644f6b20007"
            }
        ],
        "stats": {
            "total": 8,
            "additions": 5,
            "deletions": 3
        },
        "files": [
            {
                "sha": "5d65bd350dc035ee46158b3d6469730d1a50e233",
                "filename": "README.md",
                "status": "modified",
                "additions": 4,
                "deletions": 2,
                "changes": 6,
                "blob_url": "https://github.com/eBay/parallec/blob/4bd4481c351bac9197eca92f57e3e3b9e8e86a19/README.md",
                "raw_url": "https://github.com/eBay/parallec/raw/4bd4481c351bac9197eca92f57e3e3b9e8e86a19/README.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/README.md?ref=4bd4481c351bac9197eca92f57e3e3b9e8e86a19",
                "patch": "@@ -12,7 +12,9 @@\n \n [ [API Overview](http://www.parallec.io/docs/api-overview/) | [Generate & Submit Task](http://www.parallec.io/docs/submit-task/) | [Track Status & Examine Responses](http://www.parallec.io/docs/track-status/) | [Configurations](http://www.parallec.io/docs/configurations/) ]\n \n-Parallec is a fast parallel async HTTP(S)/SSH/TCP/Ping client java library based on [Akka](http://akka.io). Scalably aggregate and handle API responses **anyway** and send it **anywhere** by writing [20 lines](https://www.youtube.com/watch?v=QcavegPMDms) of code. A special super convenient **response context** let you pass in/out any object when handling the responses. Now you can conduct scalable API calls, then effortlessly pass aggregated data anywhere to elastic search, kafka, MongoDB, graphite, memcached, etc. Parallec means **Paralle**l **C**lient, and is pronounced as \"Para-like\".\n+Parallec is a fast parallel async HTTP(S)/SSH/TCP/Ping client java library based on [Akka](http://akka.io). Scalably aggregate and handle API responses **anyway** and send it **anywhere** by writing [20 lines](https://www.youtube.com/watch?v=QcavegPMDms) of code. A special super convenient **response context** let you pass in/out any object when handling the responses. Now you can conduct scalable API calls, then effortlessly pass aggregated data anywhere to elastic search, kafka, MongoDB, graphite, memcached, etc. Parallec means  **Paralle**l **C**lient, and is pronounced as \"Para-like\".\n+\n+**Demo**: **8,000** web server HTTP response aggregation [to memory in **12** seconds](https://youtu.be/Ecnpa0afO6Y) / [to ElasticSearch in **16** seconds](https://youtu.be/HetfWOHIPNI).\n \n ![Workflow Overview](http://www.parallec.io/images/parallec-flow.svg)\n \n@@ -127,7 +129,7 @@ Parallec is built on Akka actors and Async HTTP Client / Netty / Jsch.  The libr\n 1. **Fine-grained task progress tracking** helps you track the the progress each individual task status. Of a parallel task on 1000 target hosts, you may check status on any single host task, and percentage progress on how many are completed.\n 1. **Fine-grained task cancelation** on whole/individual request level. Of a parallel task on 1000 target hosts, you may cancel a subset of target hosts or cancel the whole parallel task anytime.\n 1. **Status-code-aggregation** is provided out of the box.\n-1. **Parallel Ping** supports both InetAddress.reachable ICMP (requires root) and Process based ping with retries.  Performance testing shows it is ** 2x the speed of** than best-effort tuned FPing on pinging on 1500 targets. (2.2 vs 4.5 sec)\n+1. **Parallel Ping** supports both InetAddress.reachable ICMP (requires root) and Process based ping with retries.  Performance testing shows it is **2x the speed of** than best-effort tuned FPing on pinging on 1500 targets. (2.2 vs 4.5 sec)\n 1. **Parallel SSH** supports both key and password based login and task cancellation.\n 1. **Parallel TCP** supports idle timeout based channel closes.\n "
            },
            {
                "sha": "523e1d2ebd4aba47d042d3e508a5374995323d3c",
                "filename": "pom.xml",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/4bd4481c351bac9197eca92f57e3e3b9e8e86a19/pom.xml",
                "raw_url": "https://github.com/eBay/parallec/raw/4bd4481c351bac9197eca92f57e3e3b9e8e86a19/pom.xml",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/pom.xml?ref=4bd4481c351bac9197eca92f57e3e3b9e8e86a19",
                "patch": "@@ -4,7 +4,7 @@\n \t<modelVersion>4.0.0</modelVersion>\n \t<groupId>io.parallec</groupId>\n \t<artifactId>parallec-core</artifactId>\n-\t<version>0.9.1</version>\n+\t<version>0.9.2-SNAPSHOT</version>\n \t<packaging>jar</packaging>\n \t<name>io.parallec:parallec-core</name>\n \t<url>https://github.com/eBay/parallec</url>"
            }
        ]
    },
    {
        "sha": "f729b524f210b75992fc36fcddc08644f6b20007",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6ZjcyOWI1MjRmMjEwYjc1OTkyZmMzNmZjZGRjMDg2NDRmNmIyMDAwNw==",
        "commit": {
            "author": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2015-11-15T04:42:52Z"
            },
            "committer": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2015-11-15T04:42:52Z"
            },
            "message": "fix text; TcpServerThread; #14",
            "tree": {
                "sha": "d29258f1337ce530d6309d0ddd155e4552dc7d07",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/d29258f1337ce530d6309d0ddd155e4552dc7d07"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/f729b524f210b75992fc36fcddc08644f6b20007",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/f729b524f210b75992fc36fcddc08644f6b20007",
        "html_url": "https://github.com/eBay/parallec/commit/f729b524f210b75992fc36fcddc08644f6b20007",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/f729b524f210b75992fc36fcddc08644f6b20007/comments",
        "author": null,
        "committer": null,
        "parents": [
            {
                "sha": "6af351a911fb4f47e47b64a761f16a8a298c2a52",
                "url": "https://api.github.com/repos/eBay/parallec/commits/6af351a911fb4f47e47b64a761f16a8a298c2a52",
                "html_url": "https://github.com/eBay/parallec/commit/6af351a911fb4f47e47b64a761f16a8a298c2a52"
            }
        ],
        "stats": {
            "total": 171,
            "additions": 128,
            "deletions": 43
        },
        "files": [
            {
                "sha": "eb02a88ac5b61f90a31a20c88cbdf7271f36a993",
                "filename": "CHANGELOG.md",
                "status": "modified",
                "additions": 4,
                "deletions": 1,
                "changes": 5,
                "blob_url": "https://github.com/eBay/parallec/blob/f729b524f210b75992fc36fcddc08644f6b20007/CHANGELOG.md",
                "raw_url": "https://github.com/eBay/parallec/raw/f729b524f210b75992fc36fcddc08644f6b20007/CHANGELOG.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/CHANGELOG.md?ref=f729b524f210b75992fc36fcddc08644f6b20007",
                "patch": "@@ -2,12 +2,15 @@ Parallec Change Log\n ==========\n \n \n+\n+\n ## Version 0.9.2\n \n _2015-11-?_\n \n * Test: add sleep to make sure server starts first; should fix build issue related to #7\n- \n+* Test: add coverage: updateRequestByAddingReplaceVarPairNodeSpecific() check null, add some other minor coverage\n+* Test: fix TcpServerThread (tcp sample server) not closed in test, thus skip idle TCP tests. \n \n ## Version 0.9.1\n "
            },
            {
                "sha": "9660220f766c3d583f7a3358c88fa66bdd36d451",
                "filename": "README-brief-cn.md",
                "status": "modified",
                "additions": 2,
                "deletions": 2,
                "changes": 4,
                "blob_url": "https://github.com/eBay/parallec/blob/f729b524f210b75992fc36fcddc08644f6b20007/README-brief-cn.md",
                "raw_url": "https://github.com/eBay/parallec/raw/f729b524f210b75992fc36fcddc08644f6b20007/README-brief-cn.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/README-brief-cn.md?ref=f729b524f210b75992fc36fcddc08644f6b20007",
                "patch": "@@ -7,11 +7,11 @@\n \n 主要用途： \n \n-- 管理监控大量HTTP/TCP服务器，ping海量量服务器\n+- 管理监控大量HTTP/TCP服务器，ping海量服务器\n - 集群机器状态、配置探索，基于HTTP(S)/TCP Agent 或者 无agent 的大量远程任务执行，软件部署. HTTP支持SSL 客户端认证\n - 海量API聚集到任意数据存储，数据流入口\n - 并行工作流，自动检测任务进度，以便支持并行处理异步API\n-- 可控并行的，多个不同API请求到同一个HTTP服务器\n+- 可控并行的，多个不同API请求到同一个HTTP服务器。HTTP请求模板可以在URL, HTTP Header, EntityBody不同地方进行变量替换。 \n \n Parallec内置特别的响应上下文（response context），在处理服务器回复（Response）时能方便快捷的传入，传出任何对象，比如各种客户端（比如elastic search, kafka, mongodb etc），以便汇集处理数据到任何地方。 [样例程序](http://www.parallec.io/#code-sample)**仅需20行代码**，就可以汇总10000隔API的回复以简单可控的并行速度发送汇总到Elastic Search。\n "
            },
            {
                "sha": "aa289239a6de47d19f5860b06e4a702cc32af136",
                "filename": "src/main/java/io/parallec/core/actor/ActorConfig.java",
                "status": "modified",
                "additions": 0,
                "deletions": 11,
                "changes": 11,
                "blob_url": "https://github.com/eBay/parallec/blob/f729b524f210b75992fc36fcddc08644f6b20007/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FActorConfig.java",
                "raw_url": "https://github.com/eBay/parallec/raw/f729b524f210b75992fc36fcddc08644f6b20007/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FActorConfig.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FActorConfig.java?ref=f729b524f210b75992fc36fcddc08644f6b20007",
                "patch": "@@ -15,7 +15,6 @@\n import io.parallec.core.util.PcConstants;\n \n import java.util.concurrent.TimeUnit;\n-import java.util.concurrent.atomic.AtomicInteger;\n \n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n@@ -39,8 +38,6 @@ public final class ActorConfig {\n     /** The actor system. */\n     private static ActorSystem actorSystem = null;\n \n-    private static AtomicInteger runningJobCount = new AtomicInteger(0);\n-\n     /** The logger. */\n     private static Logger logger = LoggerFactory.getLogger(ActorConfig.class);\n     static {\n@@ -64,14 +61,6 @@ public static ActorSystem createAndGetActorSystem() {\n         return actorSystem;\n     }\n \n-    /**\n-     * Shut down actor system when no job running.\n-     */\n-    public static void shutDownActorSystemWhenNoJobRunning() {\n-        if (!actorSystem.isTerminated() && runningJobCount.get() == 0) {\n-            actorSystem.shutdown();\n-        }\n-    }\n \n     /** The Constant timeOutDuration. */\n     // wait for 10 seconds"
            },
            {
                "sha": "199901ff52752a711a256c83d234b4adead379ec",
                "filename": "src/main/java/io/parallec/core/actor/TcpWorker.java",
                "status": "modified",
                "additions": 0,
                "deletions": 2,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/f729b524f210b75992fc36fcddc08644f6b20007/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FTcpWorker.java",
                "raw_url": "https://github.com/eBay/parallec/raw/f729b524f210b75992fc36fcddc08644f6b20007/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FTcpWorker.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FTcpWorker.java?ref=f729b524f210b75992fc36fcddc08644f6b20007",
                "patch": "@@ -441,8 +441,6 @@ public ChannelPipeline getPipeline() {\n         \n     }\n     \n-    \n-    \n     /**\n      * how to pass the idle event back to the worker.\n      *"
            },
            {
                "sha": "4bb26c112af36f2f100151084406517301e37085",
                "filename": "src/main/java/io/parallec/core/commander/workflow/VarReplacementProvider.java",
                "status": "modified",
                "additions": 4,
                "deletions": 8,
                "changes": 12,
                "blob_url": "https://github.com/eBay/parallec/blob/f729b524f210b75992fc36fcddc08644f6b20007/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fcommander%2Fworkflow%2FVarReplacementProvider.java",
                "raw_url": "https://github.com/eBay/parallec/raw/f729b524f210b75992fc36fcddc08644f6b20007/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fcommander%2Fworkflow%2FVarReplacementProvider.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fcommander%2Fworkflow%2FVarReplacementProvider.java?ref=f729b524f210b75992fc36fcddc08644f6b20007",
                "patch": "@@ -184,14 +184,10 @@ public void updateRequestByAddingReplaceVarPairNodeSpecific(\n             StrStrMap replacementVarMapForThisNode = replacementVarMapNodeSpecific\n                     .get(fqdn);\n \n-            // 20140105: fix NPE.\n-            if (replacementVarMapForThisNode == null\n-                    || replacementVarMapForThisNode.getMap() == null) {\n-                logger.error(\"replacementVarMapForThisNode is null in \"\n-                        + \"genericUpdateRequestByAddingReplaceVarKeyValuePairHelperNodeSpecific for fqnd \"\n-                        + fqdn + \" at \"\n-                        + PcDateUtils.getNowDateTimeStrStandard());\n-\n+            if (replacementVarMapForThisNode == null) {\n+                logger.info(\"replacementVarMapForThisNode is null in \"\n+                        + \" for host \"\n+                        + fqdn );\n                 continue;\n             }\n "
            },
            {
                "sha": "742baffd0186cff48299e2e8f0754c36dd43861c",
                "filename": "src/main/java/io/parallec/core/util/DaemonThreadFactory.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/f729b524f210b75992fc36fcddc08644f6b20007/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Futil%2FDaemonThreadFactory.java",
                "raw_url": "https://github.com/eBay/parallec/raw/f729b524f210b75992fc36fcddc08644f6b20007/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Futil%2FDaemonThreadFactory.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Futil%2FDaemonThreadFactory.java?ref=f729b524f210b75992fc36fcddc08644f6b20007",
                "patch": "@@ -46,7 +46,7 @@ private DaemonThreadFactory() {\n      */\n     @Override\n     public Thread newThread(Runnable arg0) {\n-        Thread t = new Thread(arg0); // NOSONAR\n+        Thread t = new Thread(arg0); \n         t.setDaemon(true);\n         if (t.getPriority() != Thread.NORM_PRIORITY) {\n             t.setPriority(Thread.NORM_PRIORITY);"
            },
            {
                "sha": "6cdb13161830911524a907cb6e07315438d28fc5",
                "filename": "src/test/java/io/parallec/core/commander/workflow/VarReplacementProviderTest.java",
                "status": "added",
                "additions": 60,
                "deletions": 0,
                "changes": 60,
                "blob_url": "https://github.com/eBay/parallec/blob/f729b524f210b75992fc36fcddc08644f6b20007/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fcommander%2Fworkflow%2FVarReplacementProviderTest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/f729b524f210b75992fc36fcddc08644f6b20007/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fcommander%2Fworkflow%2FVarReplacementProviderTest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fcommander%2Fworkflow%2FVarReplacementProviderTest.java?ref=f729b524f210b75992fc36fcddc08644f6b20007",
                "patch": "@@ -0,0 +1,60 @@\n+package io.parallec.core.commander.workflow;\n+\n+import io.parallec.core.FilterRegex;\n+import io.parallec.core.ParallecResponseHandler;\n+import io.parallec.core.ParallelClient;\n+import io.parallec.core.ResponseOnSingleTask;\n+import io.parallec.core.TestBase;\n+import io.parallec.core.bean.StrStrMap;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import org.junit.AfterClass;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+\n+public class VarReplacementProviderTest  extends TestBase {\n+\n+\n+    private static ParallelClient pc;\n+\n+    @BeforeClass\n+    public static void setUp() throws Exception {\n+        pc = new ParallelClient();\n+    }\n+\n+    @AfterClass\n+    public static void shutdown() throws Exception {\n+        pc.releaseExternalResources();\n+    }\n+\n+    @Test\n+    public void testVarReplacementProviderWithNullMap() {\n+        \n+        Map<String, StrStrMap> replacementVarMapNodeSpecific = new HashMap<String, StrStrMap>();\n+        replacementVarMapNodeSpecific.put(\"www.jeffpei.com\",\n+                new StrStrMap());\n+        replacementVarMapNodeSpecific.put(\"www.restcommander.com\",\n+                new StrStrMap().addPair(\"JOB_ID\", \"job_c\"));\n+\n+        pc.prepareHttpGet(\"/$JOB_ID.html\")\n+                .setConcurrency(1700)\n+                .setTargetHostsFromString(\n+                        \"www.parallec.io www.jeffpei.com www.restcommander.com\")\n+                .setReplacementVarMapNodeSpecific(replacementVarMapNodeSpecific)\n+                .execute(new ParallecResponseHandler() {\n+                    @Override\n+                    public void onCompleted(ResponseOnSingleTask res,\n+                            Map<String, Object> responseContext) {\n+                        String extractedString = new FilterRegex(\n+                                \".*<td>JobProgress</td>\\\\s*<td>(.*?)</td>[\\\\s\\\\S]*\")\n+                                .filter(res.getResponseContent());\n+                        logger.info(\"ExtracedString: progress:\"\n+                                + extractedString + \" host: \" + res.getHost());\n+                        logger.debug(res.toString());\n+                    }\n+                });\n+\n+    }\n+}"
            },
            {
                "sha": "8fcdcbd19b851473c693210b367a5fd9330d8bd6",
                "filename": "src/test/java/io/parallec/core/main/tcp/TcpWorkerIdleTest.java",
                "status": "modified",
                "additions": 10,
                "deletions": 4,
                "changes": 14,
                "blob_url": "https://github.com/eBay/parallec/blob/f729b524f210b75992fc36fcddc08644f6b20007/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Ftcp%2FTcpWorkerIdleTest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/f729b524f210b75992fc36fcddc08644f6b20007/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Ftcp%2FTcpWorkerIdleTest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Ftcp%2FTcpWorkerIdleTest.java?ref=f729b524f210b75992fc36fcddc08644f6b20007",
                "patch": "@@ -33,12 +33,18 @@ public class TcpWorkerIdleTest extends TestBase {\n     @BeforeClass\n     public static void setUp() throws Exception {\n         pc = new ParallelClient();\n+        \n+        try {\n+            Thread.sleep(500L);\n+        } catch (Exception e) {\n+            ;\n+        }\n \n         serverThread = new TcpServerThread(true);\n         serverThread.start();\n \n         try {\n-            Thread.sleep(500L);\n+            Thread.sleep(2500L);\n         } catch (Exception e) {\n             ;\n         }\n@@ -69,7 +75,7 @@ public TcpMeta getTcpMetaSample(){\n     @Test\n     public void testTcpWorkerTimeoutException() {\n         ActorRef asyncWorker = null;\n-        logger.info(\"IN testTcpWorkerTimeoutException\");\n+        logger.info(\"IN testTcpWorkerTimeoutException in idle\");\n         try {\n             // Start new job\n             \n@@ -95,9 +101,9 @@ public void testTcpWorkerTimeoutException() {\n     }// end func\n     \n     @Test\n-    public void testTcpWorkerNormalCheckComplete() {\n+    public void testTcpWorkerNormalCheckCompleteForIdle() {\n         ActorRef asyncWorker = null;\n-        logger.info(\"IN testTcpWorkerNormalCheckComplete\");\n+        logger.info(\"IN testTcpWorkerNormalCheckCompleteForIdle\");\n         try {\n             // Start new job\n             "
            },
            {
                "sha": "2b67d932a2160b5096def13edabba39e8d0712e2",
                "filename": "src/test/java/io/parallec/core/main/tcp/TcpWorkerTest.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/f729b524f210b75992fc36fcddc08644f6b20007/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Ftcp%2FTcpWorkerTest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/f729b524f210b75992fc36fcddc08644f6b20007/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Ftcp%2FTcpWorkerTest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Ftcp%2FTcpWorkerTest.java?ref=f729b524f210b75992fc36fcddc08644f6b20007",
                "patch": "@@ -51,7 +51,7 @@ public static void shutdown() throws Exception {\n         serverThread.setShutdown(true);\n \n         try {\n-            Thread.sleep(500L);\n+            Thread.sleep(2500L);\n         } catch (Exception e) {\n             ;\n         }"
            },
            {
                "sha": "e466bf468c6bce572573038b4f10c090d2a22c57",
                "filename": "src/test/java/io/parallec/core/main/tcp/sampleserver/TcpEchoServer.java",
                "status": "modified",
                "additions": 25,
                "deletions": 10,
                "changes": 35,
                "blob_url": "https://github.com/eBay/parallec/blob/f729b524f210b75992fc36fcddc08644f6b20007/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Ftcp%2Fsampleserver%2FTcpEchoServer.java",
                "raw_url": "https://github.com/eBay/parallec/raw/f729b524f210b75992fc36fcddc08644f6b20007/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Ftcp%2Fsampleserver%2FTcpEchoServer.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Ftcp%2Fsampleserver%2FTcpEchoServer.java?ref=f729b524f210b75992fc36fcddc08644f6b20007",
                "patch": "@@ -13,6 +13,8 @@\n package io.parallec.core.main.tcp.sampleserver;\n \n \n+import io.parallec.core.util.PcStringUtils;\n+\n import java.io.BufferedReader;\n import java.io.IOException;\n import java.io.InputStreamReader;\n@@ -39,6 +41,8 @@ public class TcpEchoServer {\n     /** The server socket. */\n     private ServerSocket serverSocket;\n     \n+\n+    \n     /** The port. */\n     private int port = 10081;\n \n@@ -57,7 +61,8 @@ public TcpEchoServer(boolean idle) {\n             \n             setServer(new ServerSocket(port));\n         } catch (Exception ex) {\n-            System.err.println(\"Could not listen on port: \" + port);\n+            System.err.println(\"Could not listen on port: \"\n+                    + port + \" \" + PcStringUtils.printStackTrace(ex));\n         }\n     }\n \n@@ -84,7 +89,7 @@ public static void main(String[] args) {\n     public void stop() {\n         try{\n             \n-            serverSocket.close();\n+            getServerSocket().close();\n         }catch(Exception e){\n             logger.error(\"error in stop server socket \", e);\n         }\n@@ -104,7 +109,7 @@ public void serve() throws IOException {\n                 System.out.println(\"TCP Echo Server Started on port \" \n                         +port\n                         + \" . \\nWaiting for connection.....\");\n-                clientSocket = serverSocket.accept();\n+                clientSocket = getServerSocket().accept();\n                 logger.info(\"Client Connection successful\");\n                 logger.info(\"Waiting for input.....\");\n \n@@ -127,24 +132,24 @@ public void serve() throws IOException {\n                 }\n                 //whether to close after a single request.\n                 // the interrupt is critical otherwise cannot easily shutdown\n-                if(!this.idle) {\n+                if(!this.idle ) {\n                     out.close();\n                     clientSocket.close();\n                     in.close();\n                 }else{\n-                    Thread.sleep(1000L);\n+                    Thread.sleep(10L);\n                 }\n \n-            }\n+            }//end for loop\n         } catch (IOException  e) {\n             logger.error(\"Exception in echo server. \"\n                     + \"\\nExpected when shutdown. {}\", e.getLocalizedMessage());\n         } catch ( InterruptedException e) {\n             logger.error(\"Exception in echo server. \"\n                     + \"\\nExpected when shutdown. {}\", e.getLocalizedMessage());\n         } finally{\n-            if(serverSocket!=null && !serverSocket.isClosed())\n-                serverSocket.close();\n+            if(getServerSocket()!=null && !getServerSocket().isClosed())\n+                getServerSocket().close();\n             \n         }\n \n@@ -156,7 +161,7 @@ public void serve() throws IOException {\n      * @return the server\n      */\n     public ServerSocket getServer() {\n-        return serverSocket;\n+        return getServerSocket();\n     }\n \n     /**\n@@ -165,6 +170,16 @@ public ServerSocket getServer() {\n      * @param server the new server\n      */\n     public void setServer(ServerSocket server) {\n-        this.serverSocket = server;\n+        this.setServerSocket(server);\n+    }\n+\n+\n+    public ServerSocket getServerSocket() {\n+        return serverSocket;\n+    }\n+\n+\n+    public void setServerSocket(ServerSocket serverSocket) {\n+        this.serverSocket = serverSocket;\n     }\n }"
            },
            {
                "sha": "29c44e5ce22153b5be3df0c1107a958f7dcd5a5c",
                "filename": "src/test/java/io/parallec/core/main/tcp/sampleserver/TcpServerThread.java",
                "status": "modified",
                "additions": 14,
                "deletions": 2,
                "changes": 16,
                "blob_url": "https://github.com/eBay/parallec/blob/f729b524f210b75992fc36fcddc08644f6b20007/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Ftcp%2Fsampleserver%2FTcpServerThread.java",
                "raw_url": "https://github.com/eBay/parallec/raw/f729b524f210b75992fc36fcddc08644f6b20007/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Ftcp%2Fsampleserver%2FTcpServerThread.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Ftcp%2Fsampleserver%2FTcpServerThread.java?ref=f729b524f210b75992fc36fcddc08644f6b20007",
                "patch": "@@ -1,5 +1,8 @@\n package io.parallec.core.main.tcp.sampleserver;\n \n+import io.parallec.core.util.PcStringUtils;\n+\n+import java.io.IOException;\n import java.util.logging.Logger;\n \n public class TcpServerThread extends Thread {\n@@ -11,19 +14,20 @@ public class TcpServerThread extends Thread {\n     public TcpServerThread(boolean idle){\n         this.idle = idle;\n     }\n+    private TcpEchoServer server = null;\n     @Override\n     public void run() {\n \n         try {\n-            TcpEchoServer server = new TcpEchoServer(idle);\n+            server = new TcpEchoServer(idle);\n             server.serve();\n             while (!this.isShutdown()) {\n                 ;\n             }\n             server.stop();\n             logger.info(\"TCP Server Stopped..\");\n         } catch (Exception e) {\n-            System.err.println(\"Couldn't start TCP server:\\n\" + e);\n+            logger.info(\"Couldn't start TCP server: \" + PcStringUtils.printStackTrace(e));\n         }\n \n     }\n@@ -35,6 +39,14 @@ public boolean isShutdown() {\n     //interrupt is useful\n     public void setShutdown(boolean shutdown) {\n         this.shutdown = shutdown;\n+        \n+        if(shutdown){\n+            try {\n+                this.server.getServerSocket().close();\n+            } catch (IOException e) {\n+                e.printStackTrace();\n+            }\n+        }\n         this.interrupt();\n     }\n "
            },
            {
                "sha": "13c432d5f5dad2d091f6c05b8d8befc621ed7ff0",
                "filename": "src/test/java/io/parallec/core/pojo/ParallecPojoStrTest.java",
                "status": "modified",
                "additions": 7,
                "deletions": 1,
                "changes": 8,
                "blob_url": "https://github.com/eBay/parallec/blob/f729b524f210b75992fc36fcddc08644f6b20007/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fpojo%2FParallecPojoStrTest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/f729b524f210b75992fc36fcddc08644f6b20007/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fpojo%2FParallecPojoStrTest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fpojo%2FParallecPojoStrTest.java?ref=f729b524f210b75992fc36fcddc08644f6b20007",
                "patch": "@@ -8,11 +8,15 @@\n import io.parallec.core.bean.HttpMeta;\n import io.parallec.core.bean.tcp.TcpMeta;\n import io.parallec.core.resources.HttpMethod;\n+import io.parallec.core.task.TaskErrorMeta;\n+import io.parallec.core.task.TaskErrorMeta.TaskErrorType;\n import io.parallec.core.util.BeanMapper;\n import io.parallec.core.util.PcConstants;\n import io.parallec.core.util.PcDateUtils;\n import io.parallec.core.util.PcErrorMsgUtils;\n+import io.parallec.core.util.PcFileNetworkIoUtils;\n import io.parallec.core.util.PcHttpUtils;\n+import io.parallec.core.util.PcNumberUtils;\n import io.parallec.core.util.PcStringUtils;\n import io.parallec.core.util.PcTargetHostsUtils;\n \n@@ -58,7 +62,9 @@ public void testStaticFuncAndUtilsClass() {\n         new PcHttpUtils();\n         new PcStringUtils();\n         new PcTargetHostsUtils();\n-\n+        new PcFileNetworkIoUtils();\n+        new PcNumberUtils();\n+        new TaskErrorMeta(TaskErrorType.COMMAND_MANAGER_ERROR, \"\", null);\n     }\n \n }"
            }
        ]
    },
    {
        "sha": "6af351a911fb4f47e47b64a761f16a8a298c2a52",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6NmFmMzUxYTkxMWZiNGY0N2U0N2I2NGE3NjFmMTZhOGEyOThjMmE1Mg==",
        "commit": {
            "author": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2015-11-14T08:09:18Z"
            },
            "committer": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2015-11-14T08:09:18Z"
            },
            "message": "Merge branch 'master' of github.com:eBay/parallec",
            "tree": {
                "sha": "9b5df47ac48292c9d54cb39308b6725658f3a780",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/9b5df47ac48292c9d54cb39308b6725658f3a780"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/6af351a911fb4f47e47b64a761f16a8a298c2a52",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/6af351a911fb4f47e47b64a761f16a8a298c2a52",
        "html_url": "https://github.com/eBay/parallec/commit/6af351a911fb4f47e47b64a761f16a8a298c2a52",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/6af351a911fb4f47e47b64a761f16a8a298c2a52/comments",
        "author": null,
        "committer": null,
        "parents": [
            {
                "sha": "fa205fd9bf4d91f67757e3be46a460745640f069",
                "url": "https://api.github.com/repos/eBay/parallec/commits/fa205fd9bf4d91f67757e3be46a460745640f069",
                "html_url": "https://github.com/eBay/parallec/commit/fa205fd9bf4d91f67757e3be46a460745640f069"
            },
            {
                "sha": "ba8ad348549e40afeea817208f869f2b70761120",
                "url": "https://api.github.com/repos/eBay/parallec/commits/ba8ad348549e40afeea817208f869f2b70761120",
                "html_url": "https://github.com/eBay/parallec/commit/ba8ad348549e40afeea817208f869f2b70761120"
            }
        ],
        "stats": {
            "total": 13,
            "additions": 2,
            "deletions": 11
        },
        "files": [
            {
                "sha": "2c876d2a137c48cce9b2d33d8677b772e9e10a7e",
                "filename": "pom.xml",
                "status": "modified",
                "additions": 2,
                "deletions": 11,
                "changes": 13,
                "blob_url": "https://github.com/eBay/parallec/blob/6af351a911fb4f47e47b64a761f16a8a298c2a52/pom.xml",
                "raw_url": "https://github.com/eBay/parallec/raw/6af351a911fb4f47e47b64a761f16a8a298c2a52/pom.xml",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/pom.xml?ref=6af351a911fb4f47e47b64a761f16a8a298c2a52",
                "patch": "@@ -77,13 +77,11 @@\n \t</properties>\n \n \t<dependencies>\n-\n \t\t<dependency>\n \t\t\t<groupId>org.springframework</groupId>\n \t\t\t<artifactId>spring-beans</artifactId>\n \t\t\t<version>${spring-beans.version}</version>\n \t\t</dependency>\n-\n \t\t<dependency>\n \t\t\t<groupId>com.nanohttpd</groupId>\n \t\t\t<artifactId>nanohttpd</artifactId>\n@@ -93,8 +91,8 @@\n \t\t\t<groupId>org.mockito</groupId>\n \t\t\t<artifactId>mockito-core</artifactId>\n \t\t\t<version>${mockito.version}</version>\n+\t\t\t<scope>test</scope>\n \t\t</dependency>\n-\n \t\t<dependency>\n \t\t\t<groupId>com.google.guava</groupId>\n \t\t\t<artifactId>guava</artifactId>\n@@ -105,17 +103,16 @@\n \t\t\t<artifactId>slf4j-api</artifactId>\n \t\t\t<version>${slf4j.version}</version>\n \t\t</dependency>\n-\n \t\t<dependency>\n \t\t\t<groupId>ch.qos.logback</groupId>\n \t\t\t<artifactId>logback-classic</artifactId>\n \t\t\t<version>${logback-core.version}</version>\n \t\t</dependency>\n-\n \t\t<dependency>\n \t\t\t<groupId>junit</groupId>\n \t\t\t<artifactId>junit</artifactId>\n \t\t\t<version>${junit.version}</version>\n+\t\t\t<scope>test</scope>\n \t\t</dependency>\n \t\t<dependency>\n \t\t\t<groupId>org.apache.commons</groupId>\n@@ -142,7 +139,6 @@\n \t\t\t<artifactId>commons-codec</artifactId>\n \t\t\t<version>${commons-codec.version}</version>\n \t\t</dependency>\n-\n \t\t<dependency>\n \t\t\t<groupId>commons-io</groupId>\n \t\t\t<artifactId>commons-io</artifactId>\n@@ -158,13 +154,11 @@\n \t\t\t<artifactId>jackson-core</artifactId>\n \t\t\t<version>${jackson-core.version}</version>\n \t\t</dependency>\n-\n \t\t<dependency>\n \t\t\t<groupId>com.fasterxml.jackson.core</groupId>\n \t\t\t<artifactId>jackson-databind</artifactId>\n \t\t\t<version>${jackson-databind.version}</version>\n \t\t</dependency>\n-\n \t\t<dependency>\n \t\t\t<groupId>com.fasterxml.jackson.core</groupId>\n \t\t\t<artifactId>jackson-annotations</artifactId>\n@@ -180,7 +174,6 @@\n \t\t\t<artifactId>httpclient</artifactId>\n \t\t\t<version>${httpclient.version}</version>\n \t\t</dependency>\n-\n \t\t<dependency>\n \t\t\t<groupId>com.jcraft</groupId>\n \t\t\t<artifactId>jsch</artifactId>\n@@ -191,13 +184,11 @@\n \t\t\t<artifactId>openpojo</artifactId>\n \t\t\t<version>${openpojo.version}</version>\n \t\t</dependency>\n-\n \t\t<dependency>\n \t\t\t<groupId>com.jayway.jsonpath</groupId>\n \t\t\t<artifactId>json-path</artifactId>\n \t\t\t<version>${jsonpath.version}</version>\n \t\t</dependency>\n-\n \t</dependencies>\n \n \t<distributionManagement>"
            }
        ]
    },
    {
        "sha": "fa205fd9bf4d91f67757e3be46a460745640f069",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6ZmEyMDVmZDliZjRkOTFmNjc3NTdlM2JlNDZhNDYwNzQ1NjQwZjA2OQ==",
        "commit": {
            "author": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2015-11-14T08:09:16Z"
            },
            "committer": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2015-11-14T08:09:16Z"
            },
            "message": "update readme. [skip ci]",
            "tree": {
                "sha": "37d3c0cae8d4943e8538c3c98d71dce8eb384567",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/37d3c0cae8d4943e8538c3c98d71dce8eb384567"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/fa205fd9bf4d91f67757e3be46a460745640f069",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/fa205fd9bf4d91f67757e3be46a460745640f069",
        "html_url": "https://github.com/eBay/parallec/commit/fa205fd9bf4d91f67757e3be46a460745640f069",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/fa205fd9bf4d91f67757e3be46a460745640f069/comments",
        "author": null,
        "committer": null,
        "parents": [
            {
                "sha": "7505ab2a0201083b5c1f9b2f03aac39ed9a749b6",
                "url": "https://api.github.com/repos/eBay/parallec/commits/7505ab2a0201083b5c1f9b2f03aac39ed9a749b6",
                "html_url": "https://github.com/eBay/parallec/commit/7505ab2a0201083b5c1f9b2f03aac39ed9a749b6"
            }
        ],
        "stats": {
            "total": 2,
            "additions": 1,
            "deletions": 1
        },
        "files": [
            {
                "sha": "a9787b997cedd942169e89084df59ff23c126746",
                "filename": "README.md",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/fa205fd9bf4d91f67757e3be46a460745640f069/README.md",
                "raw_url": "https://github.com/eBay/parallec/raw/fa205fd9bf4d91f67757e3be46a460745640f069/README.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/README.md?ref=fa205fd9bf4d91f67757e3be46a460745640f069",
                "patch": "@@ -93,7 +93,7 @@ pc.prepareHttpGet(\"/userdata/sample_weather_$ZIP.txt\")\n \n ###More Readings\n \n-- [**More Examples**](https://github.com/ebay/parallec-samples#http) on setting context, send to elastic search, async running, auto progress polling, track progress, TCP/SSH/Ping.\n+- [**More Examples**](https://github.com/ebay/parallec-samples#http) on setting context, send to Elastic Search / Kafka, async running, auto progress polling, track progress, TCP/SSH/Ping.\n - [**Set Target Hosts**](http://www.parallec.io/docs/submit-task/#set-target-hosts) from list, string, line by line text, json path, from local or remote URLs.\n - [**Full Documentation**](http://www.parallec.io/docs/)\n - [**Javadoc**](http://www.parallec.io/javadoc/index.html?io/parallec/core/package-summary.html)"
            }
        ]
    },
    {
        "sha": "ba8ad348549e40afeea817208f869f2b70761120",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6YmE4YWQzNDg1NDllNDBhZmVlYTgxNzIwOGY4NjlmMmI3MDc2MTEyMA==",
        "commit": {
            "author": {
                "name": "Yuanteng (Jeff) Pei",
                "email": "ypei@ebay.com",
                "date": "2015-11-11T08:19:30Z"
            },
            "committer": {
                "name": "Yuanteng (Jeff) Pei",
                "email": "ypei@ebay.com",
                "date": "2015-11-11T08:19:30Z"
            },
            "message": "Merge pull request #7 from kryger/_test-deps\n\nAdd <scope>test</scope> to test-only dependencies.",
            "tree": {
                "sha": "2421c1e33fc91072934c436c08c878343e3acbe4",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/2421c1e33fc91072934c436c08c878343e3acbe4"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/ba8ad348549e40afeea817208f869f2b70761120",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/ba8ad348549e40afeea817208f869f2b70761120",
        "html_url": "https://github.com/eBay/parallec/commit/ba8ad348549e40afeea817208f869f2b70761120",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/ba8ad348549e40afeea817208f869f2b70761120/comments",
        "author": null,
        "committer": null,
        "parents": [
            {
                "sha": "7505ab2a0201083b5c1f9b2f03aac39ed9a749b6",
                "url": "https://api.github.com/repos/eBay/parallec/commits/7505ab2a0201083b5c1f9b2f03aac39ed9a749b6",
                "html_url": "https://github.com/eBay/parallec/commit/7505ab2a0201083b5c1f9b2f03aac39ed9a749b6"
            },
            {
                "sha": "fc725700476ed9a0c027345a48934ab758e0754a",
                "url": "https://api.github.com/repos/eBay/parallec/commits/fc725700476ed9a0c027345a48934ab758e0754a",
                "html_url": "https://github.com/eBay/parallec/commit/fc725700476ed9a0c027345a48934ab758e0754a"
            }
        ],
        "stats": {
            "total": 13,
            "additions": 2,
            "deletions": 11
        },
        "files": [
            {
                "sha": "2c876d2a137c48cce9b2d33d8677b772e9e10a7e",
                "filename": "pom.xml",
                "status": "modified",
                "additions": 2,
                "deletions": 11,
                "changes": 13,
                "blob_url": "https://github.com/eBay/parallec/blob/ba8ad348549e40afeea817208f869f2b70761120/pom.xml",
                "raw_url": "https://github.com/eBay/parallec/raw/ba8ad348549e40afeea817208f869f2b70761120/pom.xml",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/pom.xml?ref=ba8ad348549e40afeea817208f869f2b70761120",
                "patch": "@@ -77,13 +77,11 @@\n \t</properties>\n \n \t<dependencies>\n-\n \t\t<dependency>\n \t\t\t<groupId>org.springframework</groupId>\n \t\t\t<artifactId>spring-beans</artifactId>\n \t\t\t<version>${spring-beans.version}</version>\n \t\t</dependency>\n-\n \t\t<dependency>\n \t\t\t<groupId>com.nanohttpd</groupId>\n \t\t\t<artifactId>nanohttpd</artifactId>\n@@ -93,8 +91,8 @@\n \t\t\t<groupId>org.mockito</groupId>\n \t\t\t<artifactId>mockito-core</artifactId>\n \t\t\t<version>${mockito.version}</version>\n+\t\t\t<scope>test</scope>\n \t\t</dependency>\n-\n \t\t<dependency>\n \t\t\t<groupId>com.google.guava</groupId>\n \t\t\t<artifactId>guava</artifactId>\n@@ -105,17 +103,16 @@\n \t\t\t<artifactId>slf4j-api</artifactId>\n \t\t\t<version>${slf4j.version}</version>\n \t\t</dependency>\n-\n \t\t<dependency>\n \t\t\t<groupId>ch.qos.logback</groupId>\n \t\t\t<artifactId>logback-classic</artifactId>\n \t\t\t<version>${logback-core.version}</version>\n \t\t</dependency>\n-\n \t\t<dependency>\n \t\t\t<groupId>junit</groupId>\n \t\t\t<artifactId>junit</artifactId>\n \t\t\t<version>${junit.version}</version>\n+\t\t\t<scope>test</scope>\n \t\t</dependency>\n \t\t<dependency>\n \t\t\t<groupId>org.apache.commons</groupId>\n@@ -142,7 +139,6 @@\n \t\t\t<artifactId>commons-codec</artifactId>\n \t\t\t<version>${commons-codec.version}</version>\n \t\t</dependency>\n-\n \t\t<dependency>\n \t\t\t<groupId>commons-io</groupId>\n \t\t\t<artifactId>commons-io</artifactId>\n@@ -158,13 +154,11 @@\n \t\t\t<artifactId>jackson-core</artifactId>\n \t\t\t<version>${jackson-core.version}</version>\n \t\t</dependency>\n-\n \t\t<dependency>\n \t\t\t<groupId>com.fasterxml.jackson.core</groupId>\n \t\t\t<artifactId>jackson-databind</artifactId>\n \t\t\t<version>${jackson-databind.version}</version>\n \t\t</dependency>\n-\n \t\t<dependency>\n \t\t\t<groupId>com.fasterxml.jackson.core</groupId>\n \t\t\t<artifactId>jackson-annotations</artifactId>\n@@ -180,7 +174,6 @@\n \t\t\t<artifactId>httpclient</artifactId>\n \t\t\t<version>${httpclient.version}</version>\n \t\t</dependency>\n-\n \t\t<dependency>\n \t\t\t<groupId>com.jcraft</groupId>\n \t\t\t<artifactId>jsch</artifactId>\n@@ -191,13 +184,11 @@\n \t\t\t<artifactId>openpojo</artifactId>\n \t\t\t<version>${openpojo.version}</version>\n \t\t</dependency>\n-\n \t\t<dependency>\n \t\t\t<groupId>com.jayway.jsonpath</groupId>\n \t\t\t<artifactId>json-path</artifactId>\n \t\t\t<version>${jsonpath.version}</version>\n \t\t</dependency>\n-\n \t</dependencies>\n \n \t<distributionManagement>"
            }
        ]
    },
    {
        "sha": "7505ab2a0201083b5c1f9b2f03aac39ed9a749b6",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6NzUwNWFiMmEwMjAxMDgzYjVjMWY5YjJmMDNhYWMzOWVkOWE3NDliNg==",
        "commit": {
            "author": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2015-11-11T08:16:42Z"
            },
            "committer": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2015-11-11T08:16:42Z"
            },
            "message": "add sleep in test to make sure server starts first; related to #7",
            "tree": {
                "sha": "1bc0463cf05f7094fc3b9e5f73da2d06134c9928",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/1bc0463cf05f7094fc3b9e5f73da2d06134c9928"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/7505ab2a0201083b5c1f9b2f03aac39ed9a749b6",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/7505ab2a0201083b5c1f9b2f03aac39ed9a749b6",
        "html_url": "https://github.com/eBay/parallec/commit/7505ab2a0201083b5c1f9b2f03aac39ed9a749b6",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/7505ab2a0201083b5c1f9b2f03aac39ed9a749b6/comments",
        "author": null,
        "committer": null,
        "parents": [
            {
                "sha": "6e43ec50b11860de51d93624a4efe5872c44bb34",
                "url": "https://api.github.com/repos/eBay/parallec/commits/6e43ec50b11860de51d93624a4efe5872c44bb34",
                "html_url": "https://github.com/eBay/parallec/commit/6e43ec50b11860de51d93624a4efe5872c44bb34"
            }
        ],
        "stats": {
            "total": 32,
            "additions": 23,
            "deletions": 9
        },
        "files": [
            {
                "sha": "337c7e8e1e98012e12419e63ee5acfc5250244f3",
                "filename": "CHANGELOG.md",
                "status": "modified",
                "additions": 8,
                "deletions": 0,
                "changes": 8,
                "blob_url": "https://github.com/eBay/parallec/blob/7505ab2a0201083b5c1f9b2f03aac39ed9a749b6/CHANGELOG.md",
                "raw_url": "https://github.com/eBay/parallec/raw/7505ab2a0201083b5c1f9b2f03aac39ed9a749b6/CHANGELOG.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/CHANGELOG.md?ref=7505ab2a0201083b5c1f9b2f03aac39ed9a749b6",
                "patch": "@@ -1,6 +1,14 @@\n Parallec Change Log\n ==========\n \n+\n+## Version 0.9.2\n+\n+_2015-11-?_\n+\n+* Test: add sleep to make sure server starts first; should fix build issue related to #7\n+ \n+\n ## Version 0.9.1\n \n _2015-11-10_"
            },
            {
                "sha": "b80ac5a589801a39abf2669c8157a15e98c52fb8",
                "filename": "README.md",
                "status": "modified",
                "additions": 3,
                "deletions": 3,
                "changes": 6,
                "blob_url": "https://github.com/eBay/parallec/blob/7505ab2a0201083b5c1f9b2f03aac39ed9a749b6/README.md",
                "raw_url": "https://github.com/eBay/parallec/raw/7505ab2a0201083b5c1f9b2f03aac39ed9a749b6/README.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/README.md?ref=7505ab2a0201083b5c1f9b2f03aac39ed9a749b6",
                "patch": "@@ -97,7 +97,7 @@ pc.prepareHttpGet(\"/userdata/sample_weather_$ZIP.txt\")\n - [**Set Target Hosts**](http://www.parallec.io/docs/submit-task/#set-target-hosts) from list, string, line by line text, json path, from local or remote URLs.\n - [**Full Documentation**](http://www.parallec.io/docs/)\n - [**Javadoc**](http://www.parallec.io/javadoc/index.html?io/parallec/core/package-summary.html)\n-- [**Ping Demo**](#demos) Ping 8000 Servers within 11.1 Seconds, performance test vs. [FPing](http://fping.org/).\n+- [**Ping Demo**](https://github.com/eBay/parallec/blob/master/README.md#demos) Ping 8000 Servers within 11.1 Seconds, performance test vs. [FPing](http://fping.org/).\n \n \n ###Use Cases\n@@ -136,9 +136,9 @@ Parallec is built on Akka actors and Async HTTP Client / Netty / Jsch.  The libr\n ##Motivation\n - Flexible response handling and immediate processing embedded in other applications.\n - Handle async APIs with auto progress polling for task level concurrency control.\n-- Support of other protocols, and [more](#features)..\n+- Support of other protocols, and [more](https://github.com/eBay/parallec/blob/master/README.md#features)..\n \n-With the feedbacks, lessons, and improvements from the past year of internal usage and open source of **[REST Commander](http://www.restcommander.com)**, we now made the core of REST Commander as an easy to use standalone library. We added [**15+ new**](#compare) features, rewritten 70%+ of the code, with [**90%+ test coverage**](https://codecov.io/github/eBay/parallec) for confident usage and contribution. This time we also structure it better so that most internal development can be directly made here.\n+With the feedbacks, lessons, and improvements from the past year of internal usage and open source of **[REST Commander](http://www.restcommander.com)**, we now made the core of REST Commander as an easy to use standalone library. We added [**15+ new**](https://github.com/eBay/parallec/blob/master/README.md#compare) features, rewritten 70%+ of the code, with [**90%+ test coverage**](https://codecov.io/github/eBay/parallec) for confident usage and contribution. This time we also structure it better so that most internal development can be directly made here.\n \n \n ## Watch Parallec in Action<a name=\"demos\"></a>"
            },
            {
                "sha": "dfa887e47b49ca3979c2a30d6a00fd9c9a2d0359",
                "filename": "src/main/java/io/parallec/core/ParallelTaskBuilder.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/7505ab2a0201083b5c1f9b2f03aac39ed9a749b6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FParallelTaskBuilder.java",
                "raw_url": "https://github.com/eBay/parallec/raw/7505ab2a0201083b5c1f9b2f03aac39ed9a749b6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FParallelTaskBuilder.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FParallelTaskBuilder.java?ref=7505ab2a0201083b5c1f9b2f03aac39ed9a749b6",
                "patch": "@@ -51,7 +51,7 @@\n \n /**\n  * \n- * This store all the metadata to build the ParallelTask\n+ * This class stores all the metadata to build the ParallelTask. It is a Parallec key class.\n  * \n  * Build the parallel task and then execute it after a validation. During the\n  * validation, certain missing parameters will use the default values. execute()"
            },
            {
                "sha": "f9072732c6de7f0ecf92e308e8216d45fc7c1ec4",
                "filename": "src/test/java/io/parallec/core/main/http/pollable/ParallelClientHttpPollerJobTest.java",
                "status": "modified",
                "additions": 2,
                "deletions": 1,
                "changes": 3,
                "blob_url": "https://github.com/eBay/parallec/blob/7505ab2a0201083b5c1f9b2f03aac39ed9a749b6/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2Fpollable%2FParallelClientHttpPollerJobTest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/7505ab2a0201083b5c1f9b2f03aac39ed9a749b6/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2Fpollable%2FParallelClientHttpPollerJobTest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2Fpollable%2FParallelClientHttpPollerJobTest.java?ref=7505ab2a0201083b5c1f9b2f03aac39ed9a749b6",
                "patch": "@@ -27,7 +27,8 @@ public static void setUp() throws Exception {\n \n         serverThread = new HttpServerThread();\n         serverThread.start();\n-\n+        \n+       //add sleep to make sure the server starts first\n         try {\n             Thread.sleep(500L);\n         } catch (Exception e) {"
            },
            {
                "sha": "48a296c4ae23c2fb4fa24df7201e11c5d75dbfa6",
                "filename": "src/test/java/io/parallec/core/main/http/request/template/ParallelClientVarReplacementHostSpecificHeaderTest.java",
                "status": "modified",
                "additions": 7,
                "deletions": 0,
                "changes": 7,
                "blob_url": "https://github.com/eBay/parallec/blob/7505ab2a0201083b5c1f9b2f03aac39ed9a749b6/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2Frequest%2Ftemplate%2FParallelClientVarReplacementHostSpecificHeaderTest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/7505ab2a0201083b5c1f9b2f03aac39ed9a749b6/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2Frequest%2Ftemplate%2FParallelClientVarReplacementHostSpecificHeaderTest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2Frequest%2Ftemplate%2FParallelClientVarReplacementHostSpecificHeaderTest.java?ref=7505ab2a0201083b5c1f9b2f03aac39ed9a749b6",
                "patch": "@@ -28,6 +28,13 @@ public static void setUp() throws Exception {\n         pc = new ParallelClient();\n         serverThread = new HttpServerThread();\n         serverThread.start();\n+        \n+        //add sleep to make sure the server starts first\n+        try {\n+            Thread.sleep(500L);\n+        } catch (Exception e) {\n+            ;\n+        }        \n     }\n \n     @AfterClass"
            },
            {
                "sha": "2bfa9ee70d321a2be74046ae120d6613f9da3255",
                "filename": "src/test/java/io/parallec/core/main/ping/package-info.java",
                "status": "modified",
                "additions": 0,
                "deletions": 3,
                "changes": 3,
                "blob_url": "https://github.com/eBay/parallec/blob/7505ab2a0201083b5c1f9b2f03aac39ed9a749b6/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fping%2Fpackage-info.java",
                "raw_url": "https://github.com/eBay/parallec/raw/7505ab2a0201083b5c1f9b2f03aac39ed9a749b6/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fping%2Fpackage-info.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fping%2Fpackage-info.java?ref=7505ab2a0201083b5c1f9b2f03aac39ed9a749b6",
                "patch": "@@ -1,6 +1,3 @@\n-/**\n- * \n- */\n /**\n  * @author Yuanteng (Jeff) Pei\n  *"
            },
            {
                "sha": "9e014f240c81518698892118e5a2461b19c196f5",
                "filename": "src/test/java/io/parallec/core/main/tcp/TcpClientTest.java",
                "status": "modified",
                "additions": 2,
                "deletions": 1,
                "changes": 3,
                "blob_url": "https://github.com/eBay/parallec/blob/7505ab2a0201083b5c1f9b2f03aac39ed9a749b6/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Ftcp%2FTcpClientTest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/7505ab2a0201083b5c1f9b2f03aac39ed9a749b6/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Ftcp%2FTcpClientTest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Ftcp%2FTcpClientTest.java?ref=7505ab2a0201083b5c1f9b2f03aac39ed9a749b6",
                "patch": "@@ -19,7 +19,8 @@ public static void setUp() throws Exception {\n \n         serverThread = new TcpServerThread(false);\n         serverThread.start();\n-\n+        \n+        //add sleep to make sure the server starts first\n         try {\n             Thread.sleep(500L);\n         } catch (Exception e) {"
            }
        ]
    },
    {
        "sha": "6e43ec50b11860de51d93624a4efe5872c44bb34",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6NmU0M2VjNTBiMTE4NjBkZTUxZDkzNjI0YTRlZmU1ODcyYzQ0YmIzNA==",
        "commit": {
            "author": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2015-11-10T21:13:29Z"
            },
            "committer": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2015-11-10T21:13:29Z"
            },
            "message": "update doc [skip ci]",
            "tree": {
                "sha": "6a573a2464c70d237cf7a64128aafd53a4437de1",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/6a573a2464c70d237cf7a64128aafd53a4437de1"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/6e43ec50b11860de51d93624a4efe5872c44bb34",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/6e43ec50b11860de51d93624a4efe5872c44bb34",
        "html_url": "https://github.com/eBay/parallec/commit/6e43ec50b11860de51d93624a4efe5872c44bb34",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/6e43ec50b11860de51d93624a4efe5872c44bb34/comments",
        "author": null,
        "committer": null,
        "parents": [
            {
                "sha": "f73008a3f775559951fd95a2726f97a5f84cbf72",
                "url": "https://api.github.com/repos/eBay/parallec/commits/f73008a3f775559951fd95a2726f97a5f84cbf72",
                "html_url": "https://github.com/eBay/parallec/commit/f73008a3f775559951fd95a2726f97a5f84cbf72"
            }
        ],
        "stats": {
            "total": 18,
            "additions": 10,
            "deletions": 8
        },
        "files": [
            {
                "sha": "1292a8a347e223d465353f56202db2c75196032c",
                "filename": "CHANGELOG.md",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/6e43ec50b11860de51d93624a4efe5872c44bb34/CHANGELOG.md",
                "raw_url": "https://github.com/eBay/parallec/raw/6e43ec50b11860de51d93624a4efe5872c44bb34/CHANGELOG.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/CHANGELOG.md?ref=6e43ec50b11860de51d93624a4efe5872c44bb34",
                "patch": "@@ -5,7 +5,7 @@ Parallec Change Log\n \n _2015-11-10_\n \n-* Chnage: maven pom: maven-compiler-plugin version to 1.7.\n+* Change: maven pom: maven-compiler-plugin version to 1.7.\n * Fix: aggregateResultMap change to concurrentHashMap: Issue #11 \n \n "
            },
            {
                "sha": "13441b8b811c90d3140f7104bd92c76c3f7e519c",
                "filename": "README.md",
                "status": "modified",
                "additions": 9,
                "deletions": 7,
                "changes": 16,
                "blob_url": "https://github.com/eBay/parallec/blob/6e43ec50b11860de51d93624a4efe5872c44bb34/README.md",
                "raw_url": "https://github.com/eBay/parallec/raw/6e43ec50b11860de51d93624a4efe5872c44bb34/README.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/README.md?ref=6e43ec50b11860de51d93624a4efe5872c44bb34",
                "patch": "@@ -4,11 +4,11 @@\n ![build status](https://img.shields.io/badge/build-info=>-green.svg) [![Build Status](https://travis-ci.org/eBay/parallec.svg?branch=master)](https://travis-ci.org/eBay/parallec) [![Coverage Status](https://img.shields.io/codecov/c/github/eBay/parallec.svg)](https://codecov.io/github/eBay/parallec) [![Apache V2.0 License](http://www.parallec.io/images/apache2.svg) ](https://github.com/eBay/parallec/blob/master/LICENSE)\n \n \n-![latest 0.9.x](http://img.shields.io/badge/latest_stable-0.9.x=>-green.svg) [ ![latest beta  maven central](https://maven-badges.herokuapp.com/maven-central/io.parallec/parallec-core/badge.svg?style=flat)](http://search.maven.org/#artifactdetails|io.parallec|parallec-core|0.9.0|) [![Gitter](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/eBay/parallec?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge)\n+![latest 0.9.x](http://img.shields.io/badge/latest_stable-0.9.x=>-green.svg) [ ![latest beta  maven central](https://maven-badges.herokuapp.com/maven-central/io.parallec/parallec-core/badge.svg?style=flat)](http://search.maven.org/#artifactdetails|io.parallec|parallec-core|0.9.1|) [![Gitter](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/eBay/parallec?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge)\n \n [![Javadoc](http://www.parallec.io/images/parallec-javadoc-blue.svg)](http://www.parallec.io/javadoc/index.html?io/parallec/core/ParallelClient.html) [![Documentation](http://www.parallec.io/images/parallec-documentation-red.svg)](http://www.parallec.io/docs/) [![Samples](http://www.parallec.io/images/parallec-samples-brightgreen.svg)](https://github.com/eBay/parallec-samples) [![Chinese](http://www.parallec.io/images/parallec-cnbrief-blue.svg)](https://github.com/eBay/parallec/blob/master/README-brief-cn.md) \n \n-[ [Get-Started](https://github.com/eBay/parallec/blob/master/README.md#get-started) | [Features](https://github.com/eBay/parallec/blob/master/README.md#features) | [Use Cases](https://github.com/eBay/parallec/blob/master/README.md#use-cases) | [Motivation](https://github.com/eBay/parallec/blob/master/README.md#motivation) | [Demos](https://github.com/eBay/parallec/blob/master/README.md#demos) | [Performance](https://github.com/eBay/parallec/blob/master/README.md#performance) | [Compare](https://github.com/eBay/parallec/blob/master/README.md#compare) | [About](https://github.com/eBay/parallec/blob/master/README.md#authors) | [中文介绍](https://github.com/eBay/parallec/blob/master/README-brief-cn.md) ]\n+[ [Get-Started](https://github.com/eBay/parallec/blob/master/README.md#get-started) | [Features](https://github.com/eBay/parallec/blob/master/README.md#features) | [Use Cases](https://github.com/eBay/parallec/blob/master/README.md#use-cases) | [Motivation](https://github.com/eBay/parallec/blob/master/README.md#motivation) | [Demos](https://github.com/eBay/parallec/blob/master/README.md#demos) | [Performance](https://github.com/eBay/parallec/blob/master/README.md#performance) | [Compare](https://github.com/eBay/parallec/blob/master/README.md#compare) | [Contributors](https://github.com/eBay/parallec/blob/master/README.md#contributors) | [About](https://github.com/eBay/parallec/blob/master/README.md#authors) | [中文介绍](https://github.com/eBay/parallec/blob/master/README-brief-cn.md) ]\n \n [ [API Overview](http://www.parallec.io/docs/api-overview/) | [Generate & Submit Task](http://www.parallec.io/docs/submit-task/) | [Track Status & Examine Responses](http://www.parallec.io/docs/track-status/) | [Configurations](http://www.parallec.io/docs/configurations/) ]\n \n@@ -23,13 +23,13 @@ Donwload [the latest JAR](https://search.maven.org/remote_content?g=io.parallec&\n <dependency>\n \t<groupId>io.parallec</groupId>\n \t<artifactId>parallec-core</artifactId>\n-\t<version>0.9.0</version>\n+\t<version>0.9.1</version>\n </dependency>\n ```\n \n or Gradle:\n ```xml\n-compile 'io.parallec:parallec-core:0.9.0'\n+compile 'io.parallec:parallec-core:0.9.1'\n ```\n \n \n@@ -209,13 +209,15 @@ In Parallec, you may handle response either in Worker (before aggregation: in pa\n ## [Change Log](https://github.com/eBay/parallec/blob/master/CHANGELOG.md)\n \n \n-## Contributors\n+## [Contributors](https://github.com/eBay/parallec/blob/master/AUTHORS.txt)\n+\n+To Parallec, Contributors are way more important than the original authors for the community. We will try to put all the contributors here unless it goes crazy :-)\n \n - Lukasz Kryger  [http://stackoverflow.com/users/1240557/kryger](http://stackoverflow.com/users/1240557/kryger)\n \n ## Authors\n \n-Parallec is served to you by [Yuanteng (Jeff) Pei](https://www.linkedin.com/in/peiyuant) and [Teng Song](https://www.linkedin.com/pub/teng-song/49/763/713), [Cloud Infrastructure & Platform Services (CIPS)](https://helpusbuild.ebayc3.com/) at eBay Inc. \n+Parallec is served to you by [Yuanteng (Jeff) Pei](https://www.linkedin.com/in/peiyuant) and [Teng Song](https://www.linkedin.com/pub/teng-song/49/763/713), [Cloud Infrastructure & Platform Services (CIPS)](https://helpusbuild.ebayc3.com/) at eBay Inc. (original authors)\n \n ## Credits & Acknowledgement\n \n@@ -228,7 +230,7 @@ Parallec is served to you by [Yuanteng (Jeff) Pei](https://www.linkedin.com/in/p\n \n ##Contributions\n \n-Any helpful feedback is more than welcome. This includes feature requests, bug reports, pull requests, constructive feedback, and etc.\n+Any helpful feedback is more than welcome. This includes feature requests, bug reports, pull requests, constructive feedback, and etc. You must agree on [this](https://github.com/eBay/parallec/blob/master/CONTRIBUTING.md) before submitting a [pull](https://github.com/eBay/parallec/pulls) request.\n \n \n ## Licenses"
            }
        ]
    },
    {
        "sha": "f73008a3f775559951fd95a2726f97a5f84cbf72",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6ZjczMDA4YTNmNzc1NTU5OTUxZmQ5NWEyNzI2Zjk3YTVmODRjYmY3Mg==",
        "commit": {
            "author": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2015-11-10T20:51:48Z"
            },
            "committer": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2015-11-10T20:51:48Z"
            },
            "message": "update pom to 0.9.1 add contributor Lukasz",
            "tree": {
                "sha": "cdcf45099e5009fd4153abce25bb8b34649d1840",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/cdcf45099e5009fd4153abce25bb8b34649d1840"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/f73008a3f775559951fd95a2726f97a5f84cbf72",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/f73008a3f775559951fd95a2726f97a5f84cbf72",
        "html_url": "https://github.com/eBay/parallec/commit/f73008a3f775559951fd95a2726f97a5f84cbf72",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/f73008a3f775559951fd95a2726f97a5f84cbf72/comments",
        "author": null,
        "committer": null,
        "parents": [
            {
                "sha": "c336d47a20cd5c8a83e4244b5f55455a8869e6d9",
                "url": "https://api.github.com/repos/eBay/parallec/commits/c336d47a20cd5c8a83e4244b5f55455a8869e6d9",
                "html_url": "https://github.com/eBay/parallec/commit/c336d47a20cd5c8a83e4244b5f55455a8869e6d9"
            }
        ],
        "stats": {
            "total": 12,
            "additions": 7,
            "deletions": 5
        },
        "files": [
            {
                "sha": "19a6ef754af0b97cda574bc271c6f5d615e7c0c8",
                "filename": "AUTHORS.txt",
                "status": "modified",
                "additions": 3,
                "deletions": 2,
                "changes": 5,
                "blob_url": "https://github.com/eBay/parallec/blob/f73008a3f775559951fd95a2726f97a5f84cbf72/AUTHORS.txt",
                "raw_url": "https://github.com/eBay/parallec/raw/f73008a3f775559951fd95a2726f97a5f84cbf72/AUTHORS.txt",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/AUTHORS.txt?ref=f73008a3f775559951fd95a2726f97a5f84cbf72",
                "patch": "@@ -4,8 +4,9 @@ URL:   https://github.com/eBay/parallec\n \n Core developers (in order of appearance):\n \n-- Yuanteng Jeff Pei (original author) <ypei@ebay.com>\n+- Yuanteng (Jeff) Pei (original author) <ypei@ebay.com>\n - Teng Song <tesong@ebay.com>\n \n-\n Contributors:\n+\n+- Lukasz Kryger  http://stackoverflow.com/users/1240557/kryger"
            },
            {
                "sha": "08745b800b5a3c5649fafbbeacf204745f363aff",
                "filename": "CHANGELOG.md",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/f73008a3f775559951fd95a2726f97a5f84cbf72/CHANGELOG.md",
                "raw_url": "https://github.com/eBay/parallec/raw/f73008a3f775559951fd95a2726f97a5f84cbf72/CHANGELOG.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/CHANGELOG.md?ref=f73008a3f775559951fd95a2726f97a5f84cbf72",
                "patch": "@@ -3,7 +3,7 @@ Parallec Change Log\n \n ## Version 0.9.1\n \n-_2015-11-03_\n+_2015-11-10_\n \n * Chnage: maven pom: maven-compiler-plugin version to 1.7.\n * Fix: aggregateResultMap change to concurrentHashMap: Issue #11 "
            },
            {
                "sha": "eba0f28e974608a50cc3dc443f65bfa557be1867",
                "filename": "README.md",
                "status": "modified",
                "additions": 2,
                "deletions": 1,
                "changes": 3,
                "blob_url": "https://github.com/eBay/parallec/blob/f73008a3f775559951fd95a2726f97a5f84cbf72/README.md",
                "raw_url": "https://github.com/eBay/parallec/raw/f73008a3f775559951fd95a2726f97a5f84cbf72/README.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/README.md?ref=f73008a3f775559951fd95a2726f97a5f84cbf72",
                "patch": "@@ -210,7 +210,8 @@ In Parallec, you may handle response either in Worker (before aggregation: in pa\n \n \n ## Contributors\n-Your name here\n+\n+- Lukasz Kryger  [http://stackoverflow.com/users/1240557/kryger](http://stackoverflow.com/users/1240557/kryger)\n \n ## Authors\n "
            },
            {
                "sha": "f5bf96cece3674cf3dc54ebc06153ef636d1f268",
                "filename": "pom.xml",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/f73008a3f775559951fd95a2726f97a5f84cbf72/pom.xml",
                "raw_url": "https://github.com/eBay/parallec/raw/f73008a3f775559951fd95a2726f97a5f84cbf72/pom.xml",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/pom.xml?ref=f73008a3f775559951fd95a2726f97a5f84cbf72",
                "patch": "@@ -4,7 +4,7 @@\n \t<modelVersion>4.0.0</modelVersion>\n \t<groupId>io.parallec</groupId>\n \t<artifactId>parallec-core</artifactId>\n-\t<version>0.9.0</version>\n+\t<version>0.9.1</version>\n \t<packaging>jar</packaging>\n \t<name>io.parallec:parallec-core</name>\n \t<url>https://github.com/eBay/parallec</url>"
            }
        ]
    },
    {
        "sha": "c336d47a20cd5c8a83e4244b5f55455a8869e6d9",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6YzMzNmQ0N2EyMGNkNWM4YTgzZTQyNDRiNWY1NTQ1NWE4ODY5ZTZkOQ==",
        "commit": {
            "author": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2015-11-10T20:41:11Z"
            },
            "committer": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2015-11-10T20:41:11Z"
            },
            "message": "Merge branch 'master' of github.com:eBay/parallec",
            "tree": {
                "sha": "5b11a4f0f0143b8477cc39f81fdfc154a74d9f4a",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/5b11a4f0f0143b8477cc39f81fdfc154a74d9f4a"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/c336d47a20cd5c8a83e4244b5f55455a8869e6d9",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/c336d47a20cd5c8a83e4244b5f55455a8869e6d9",
        "html_url": "https://github.com/eBay/parallec/commit/c336d47a20cd5c8a83e4244b5f55455a8869e6d9",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/c336d47a20cd5c8a83e4244b5f55455a8869e6d9/comments",
        "author": null,
        "committer": null,
        "parents": [
            {
                "sha": "a5ebb7b1427ca83e2c4a1f6ca93d5bd2bcc96836",
                "url": "https://api.github.com/repos/eBay/parallec/commits/a5ebb7b1427ca83e2c4a1f6ca93d5bd2bcc96836",
                "html_url": "https://github.com/eBay/parallec/commit/a5ebb7b1427ca83e2c4a1f6ca93d5bd2bcc96836"
            },
            {
                "sha": "f37761c0cf165eefc9b6c68404d6ce003aa83b2a",
                "url": "https://api.github.com/repos/eBay/parallec/commits/f37761c0cf165eefc9b6c68404d6ce003aa83b2a",
                "html_url": "https://github.com/eBay/parallec/commit/f37761c0cf165eefc9b6c68404d6ce003aa83b2a"
            }
        ],
        "stats": {
            "total": 8,
            "additions": 4,
            "deletions": 4
        },
        "files": [
            {
                "sha": "3bc426a0af5896e4cf8b28c6d12a67d24237bf70",
                "filename": "CONTRIBUTING.md",
                "status": "modified",
                "additions": 4,
                "deletions": 4,
                "changes": 8,
                "blob_url": "https://github.com/eBay/parallec/blob/c336d47a20cd5c8a83e4244b5f55455a8869e6d9/CONTRIBUTING.md",
                "raw_url": "https://github.com/eBay/parallec/raw/c336d47a20cd5c8a83e4244b5f55455a8869e6d9/CONTRIBUTING.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/CONTRIBUTING.md?ref=c336d47a20cd5c8a83e4244b5f55455a8869e6d9",
                "patch": "@@ -1,9 +1,9 @@\n ## Contributing to Parallec\n \n-Contributions via GitHub pull requests are gladly accepted from their original\n-author. Along with any pull requests, please state that the contribution is\n-your original work and that you license the work to the project under the\n+Contributions via GitHub pull requests are **gladly accepted** from their original\n+author. Along with any pull requests, please state that the **contribution is\n+your original work** and that you license the work to the project under the\n project's open source license. Whether or not you state this explicitly, by\n submitting any copyrighted material via pull request, email, or other means\n-you agree to license the material under the project's open source license and\n+you **agree to license the material under the project's open source license** and\n warrant that you have the legal authority to do so."
            }
        ]
    },
    {
        "sha": "a5ebb7b1427ca83e2c4a1f6ca93d5bd2bcc96836",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6YTVlYmI3YjE0MjdjYTgzZTJjNGExZjZjYTkzZDViZDJiY2M5NjgzNg==",
        "commit": {
            "author": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2015-11-10T20:40:53Z"
            },
            "committer": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2015-11-10T20:40:53Z"
            },
            "message": "fix #11",
            "tree": {
                "sha": "88bbc6b2998c356b61ca33f337dac647377a76f8",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/88bbc6b2998c356b61ca33f337dac647377a76f8"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/a5ebb7b1427ca83e2c4a1f6ca93d5bd2bcc96836",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/a5ebb7b1427ca83e2c4a1f6ca93d5bd2bcc96836",
        "html_url": "https://github.com/eBay/parallec/commit/a5ebb7b1427ca83e2c4a1f6ca93d5bd2bcc96836",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/a5ebb7b1427ca83e2c4a1f6ca93d5bd2bcc96836/comments",
        "author": null,
        "committer": null,
        "parents": [
            {
                "sha": "2c65bd5848ef205a7d5679ccad78f77e76d795a1",
                "url": "https://api.github.com/repos/eBay/parallec/commits/2c65bd5848ef205a7d5679ccad78f77e76d795a1",
                "html_url": "https://github.com/eBay/parallec/commit/2c65bd5848ef205a7d5679ccad78f77e76d795a1"
            }
        ],
        "stats": {
            "total": 9,
            "additions": 6,
            "deletions": 3
        },
        "files": [
            {
                "sha": "0461ae7c031b52ab71515b074f0f62f946e35b93",
                "filename": ".travis.yml",
                "status": "modified",
                "additions": 3,
                "deletions": 0,
                "changes": 3,
                "blob_url": "https://github.com/eBay/parallec/blob/a5ebb7b1427ca83e2c4a1f6ca93d5bd2bcc96836/.travis.yml",
                "raw_url": "https://github.com/eBay/parallec/raw/a5ebb7b1427ca83e2c4a1f6ca93d5bd2bcc96836/.travis.yml",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/.travis.yml?ref=a5ebb7b1427ca83e2c4a1f6ca93d5bd2bcc96836",
                "patch": "@@ -1,5 +1,8 @@\n language: java\n \n+jdk:\n+  - openjdk7\n+\n before_install:\n   - pip install --user codecov  \n "
            },
            {
                "sha": "e52d318c917c3e37ce5cd6ba21d22a35c3bb8de1",
                "filename": "CHANGELOG.md",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/a5ebb7b1427ca83e2c4a1f6ca93d5bd2bcc96836/CHANGELOG.md",
                "raw_url": "https://github.com/eBay/parallec/raw/a5ebb7b1427ca83e2c4a1f6ca93d5bd2bcc96836/CHANGELOG.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/CHANGELOG.md?ref=a5ebb7b1427ca83e2c4a1f6ca93d5bd2bcc96836",
                "patch": "@@ -6,7 +6,7 @@ Parallec Change Log\n _2015-11-03_\n \n * Chnage: maven pom: maven-compiler-plugin version to 1.7.\n-\n+* Fix: aggregateResultMap change to concurrentHashMap: Issue #11 \n \n \n ## Version 0.9.0"
            },
            {
                "sha": "b8e2f07c758220703b77bd6f625fae30867ed01c",
                "filename": "src/main/java/io/parallec/core/ParallelTask.java",
                "status": "modified",
                "additions": 2,
                "deletions": 2,
                "changes": 4,
                "blob_url": "https://github.com/eBay/parallec/blob/a5ebb7b1427ca83e2c4a1f6ca93d5bd2bcc96836/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FParallelTask.java",
                "raw_url": "https://github.com/eBay/parallec/raw/a5ebb7b1427ca83e2c4a1f6ca93d5bd2bcc96836/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FParallelTask.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FParallelTask.java?ref=a5ebb7b1427ca83e2c4a1f6ca93d5bd2bcc96836",
                "patch": "@@ -118,7 +118,7 @@ public class ParallelTask {\n     private ParallecResponseHandler handler;\n \n     /** The aggregate result map. */\n-    private final Map<String, LinkedHashSet<String>> aggregateResultMap = new LinkedHashMap<String, LinkedHashSet<String>>();\n+    private final Map<String, LinkedHashSet<String>> aggregateResultMap = new ConcurrentHashMap<String, LinkedHashSet<String>>();\n \n     /** The parallel task result: \n      * a hashmap to store the request parameters, host name, ResponseOnSingleTask.\n@@ -819,7 +819,7 @@ public void setExecutionEndTime(long executionEndTime) {\n      */\n     public Map<String, SetAndCount> getAggregateResultFullSummary() {\n \n-        Map<String, SetAndCount> summaryMap = new LinkedHashMap<String, SetAndCount>();\n+        Map<String, SetAndCount> summaryMap = new ConcurrentHashMap<String, SetAndCount>();\n \n         for (Entry<String, LinkedHashSet<String>> entry : aggregateResultMap\n                 .entrySet()) {"
            }
        ]
    },
    {
        "sha": "f37761c0cf165eefc9b6c68404d6ce003aa83b2a",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6ZjM3NzYxYzBjZjE2NWVlZmM5YjZjNjg0MDRkNmNlMDAzYWE4M2IyYQ==",
        "commit": {
            "author": {
                "name": "Yuanteng (Jeff) Pei",
                "email": "ypei@ebay.com",
                "date": "2015-11-10T19:31:17Z"
            },
            "committer": {
                "name": "Yuanteng (Jeff) Pei",
                "email": "ypei@ebay.com",
                "date": "2015-11-10T19:31:17Z"
            },
            "message": "Update CONTRIBUTING.md",
            "tree": {
                "sha": "6d9cc91181186c054bee43743833db9751fab749",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/6d9cc91181186c054bee43743833db9751fab749"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/f37761c0cf165eefc9b6c68404d6ce003aa83b2a",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/f37761c0cf165eefc9b6c68404d6ce003aa83b2a",
        "html_url": "https://github.com/eBay/parallec/commit/f37761c0cf165eefc9b6c68404d6ce003aa83b2a",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/f37761c0cf165eefc9b6c68404d6ce003aa83b2a/comments",
        "author": null,
        "committer": null,
        "parents": [
            {
                "sha": "2c65bd5848ef205a7d5679ccad78f77e76d795a1",
                "url": "https://api.github.com/repos/eBay/parallec/commits/2c65bd5848ef205a7d5679ccad78f77e76d795a1",
                "html_url": "https://github.com/eBay/parallec/commit/2c65bd5848ef205a7d5679ccad78f77e76d795a1"
            }
        ],
        "stats": {
            "total": 8,
            "additions": 4,
            "deletions": 4
        },
        "files": [
            {
                "sha": "3bc426a0af5896e4cf8b28c6d12a67d24237bf70",
                "filename": "CONTRIBUTING.md",
                "status": "modified",
                "additions": 4,
                "deletions": 4,
                "changes": 8,
                "blob_url": "https://github.com/eBay/parallec/blob/f37761c0cf165eefc9b6c68404d6ce003aa83b2a/CONTRIBUTING.md",
                "raw_url": "https://github.com/eBay/parallec/raw/f37761c0cf165eefc9b6c68404d6ce003aa83b2a/CONTRIBUTING.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/CONTRIBUTING.md?ref=f37761c0cf165eefc9b6c68404d6ce003aa83b2a",
                "patch": "@@ -1,9 +1,9 @@\n ## Contributing to Parallec\n \n-Contributions via GitHub pull requests are gladly accepted from their original\n-author. Along with any pull requests, please state that the contribution is\n-your original work and that you license the work to the project under the\n+Contributions via GitHub pull requests are **gladly accepted** from their original\n+author. Along with any pull requests, please state that the **contribution is\n+your original work** and that you license the work to the project under the\n project's open source license. Whether or not you state this explicitly, by\n submitting any copyrighted material via pull request, email, or other means\n-you agree to license the material under the project's open source license and\n+you **agree to license the material under the project's open source license** and\n warrant that you have the legal authority to do so."
            }
        ]
    },
    {
        "sha": "2c65bd5848ef205a7d5679ccad78f77e76d795a1",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6MmM2NWJkNTg0OGVmMjA1YTdkNTY3OWNjYWQ3OGY3N2U3NmQ3OTVhMQ==",
        "commit": {
            "author": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2015-11-10T08:06:37Z"
            },
            "committer": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2015-11-10T08:06:37Z"
            },
            "message": "update readme [skip ci]",
            "tree": {
                "sha": "bf01d16933f9103859a9ef0e48990ab7c8c79a9d",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/bf01d16933f9103859a9ef0e48990ab7c8c79a9d"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/2c65bd5848ef205a7d5679ccad78f77e76d795a1",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/2c65bd5848ef205a7d5679ccad78f77e76d795a1",
        "html_url": "https://github.com/eBay/parallec/commit/2c65bd5848ef205a7d5679ccad78f77e76d795a1",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/2c65bd5848ef205a7d5679ccad78f77e76d795a1/comments",
        "author": null,
        "committer": null,
        "parents": [
            {
                "sha": "d536cf3275f13d570bcf29490ee53e69f34c4fac",
                "url": "https://api.github.com/repos/eBay/parallec/commits/d536cf3275f13d570bcf29490ee53e69f34c4fac",
                "html_url": "https://github.com/eBay/parallec/commit/d536cf3275f13d570bcf29490ee53e69f34c4fac"
            }
        ],
        "stats": {
            "total": 10,
            "additions": 9,
            "deletions": 1
        },
        "files": [
            {
                "sha": "c17e1ec598b814f339c4988082dd425ee91118bf",
                "filename": "README-brief-cn.md",
                "status": "modified",
                "additions": 9,
                "deletions": 1,
                "changes": 10,
                "blob_url": "https://github.com/eBay/parallec/blob/2c65bd5848ef205a7d5679ccad78f77e76d795a1/README-brief-cn.md",
                "raw_url": "https://github.com/eBay/parallec/raw/2c65bd5848ef205a7d5679ccad78f77e76d795a1/README-brief-cn.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/README-brief-cn.md?ref=2c65bd5848ef205a7d5679ccad78f77e76d795a1",
                "patch": "@@ -5,7 +5,15 @@\n \n [Parallec](http://www.parallec.io/) 是一个基于[Akka](http://akka.io)的快速并行异步HTTP(S)/SSH/TCP/Ping 客户端的Java库。它是eBay云计算部门开发并在[REST Commander](http://www.restcommander.com/)基础上开源的。Parallec的寓意是**\"并行客户端\"**： **Paralle**l **C**lient, 发音如 \"Para-like\". 更多说明请见[这里](http://www.parallec.io/)。\n \n-其内置特别的响应上下文（response context），在处理服务器回复（Response）时能方便快捷的传入，传出任何对象，比如各种客户端（比如elastic search, kafka, mongodb etc），以便汇集处理数据到任何地方。 [样例程序](http://www.parallec.io/#code-sample)**仅需20行代码**，就可以汇总10000隔API的回复以简单可控的并行速度发送汇总到Elastic Search。\n+主要用途： \n+\n+- 管理监控大量HTTP/TCP服务器，ping海量量服务器\n+- 集群机器状态、配置探索，基于HTTP(S)/TCP Agent 或者 无agent 的大量远程任务执行，软件部署. HTTP支持SSL 客户端认证\n+- 海量API聚集到任意数据存储，数据流入口\n+- 并行工作流，自动检测任务进度，以便支持并行处理异步API\n+- 可控并行的，多个不同API请求到同一个HTTP服务器\n+\n+Parallec内置特别的响应上下文（response context），在处理服务器回复（Response）时能方便快捷的传入，传出任何对象，比如各种客户端（比如elastic search, kafka, mongodb etc），以便汇集处理数据到任何地方。 [样例程序](http://www.parallec.io/#code-sample)**仅需20行代码**，就可以汇总10000隔API的回复以简单可控的并行速度发送汇总到Elastic Search。\n \n 和REST Commander类似，Parallec非常高效并且可以处理大量响应。 比如其Ping服务器的速度是目前使用最广泛**并行Ping 软件[FPing](http://fping.org/)的2倍**，仅用12秒就可以ping 8000服务器。（[**请看视频演示**](https://github.com/eBay/parallec/wiki/Parallec-pings-8000-servers-in-11.1-seconds))\n "
            }
        ]
    },
    {
        "sha": "d536cf3275f13d570bcf29490ee53e69f34c4fac",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6ZDUzNmNmMzI3NWYxM2Q1NzBiY2YyOTQ5MGVlNTNlNjlmMzRjNGZhYw==",
        "commit": {
            "author": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2015-11-09T22:03:58Z"
            },
            "committer": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2015-11-09T22:03:58Z"
            },
            "message": "update readme [skip ci]",
            "tree": {
                "sha": "2648492670a00bd3f74879a4c1deeaa91c7d7aa9",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/2648492670a00bd3f74879a4c1deeaa91c7d7aa9"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/d536cf3275f13d570bcf29490ee53e69f34c4fac",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/d536cf3275f13d570bcf29490ee53e69f34c4fac",
        "html_url": "https://github.com/eBay/parallec/commit/d536cf3275f13d570bcf29490ee53e69f34c4fac",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/d536cf3275f13d570bcf29490ee53e69f34c4fac/comments",
        "author": null,
        "committer": null,
        "parents": [
            {
                "sha": "048ed8f22bd50754524847930f0f5415a417f197",
                "url": "https://api.github.com/repos/eBay/parallec/commits/048ed8f22bd50754524847930f0f5415a417f197",
                "html_url": "https://github.com/eBay/parallec/commit/048ed8f22bd50754524847930f0f5415a417f197"
            }
        ],
        "stats": {
            "total": 2,
            "additions": 1,
            "deletions": 1
        },
        "files": [
            {
                "sha": "8e8abf2140d0a0f12cfdd70be18c8a6a0ab013cc",
                "filename": "README.md",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/d536cf3275f13d570bcf29490ee53e69f34c4fac/README.md",
                "raw_url": "https://github.com/eBay/parallec/raw/d536cf3275f13d570bcf29490ee53e69f34c4fac/README.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/README.md?ref=d536cf3275f13d570bcf29490ee53e69f34c4fac",
                "patch": "@@ -8,7 +8,7 @@\n \n [![Javadoc](http://www.parallec.io/images/parallec-javadoc-blue.svg)](http://www.parallec.io/javadoc/index.html?io/parallec/core/ParallelClient.html) [![Documentation](http://www.parallec.io/images/parallec-documentation-red.svg)](http://www.parallec.io/docs/) [![Samples](http://www.parallec.io/images/parallec-samples-brightgreen.svg)](https://github.com/eBay/parallec-samples) [![Chinese](http://www.parallec.io/images/parallec-cnbrief-blue.svg)](https://github.com/eBay/parallec/blob/master/README-brief-cn.md) \n \n-[ [Get-Started](https://github.com/eBay/parallec/blob/master/README.md#get-started) | [Features](https://github.com/eBay/parallec/blob/master/README.md#features) | [Use Cases](https://github.com/eBay/parallec/blob/master/README.md#use-cases) | [Motivation](https://github.com/eBay/parallec/blob/master/README.md#motivation) | [Demos](https://github.com/eBay/parallec/blob/master/README.md#demos) | [Performance](https://github.com/eBay/parallec/blob/master/README.md#performance) | [Compare](https://github.com/eBay/parallec/blob/master/README.md#compare) | [About](https://github.com/eBay/parallec/blob/master/README.md#authors) | [中文介绍](https://github.com/eBay/parallec/blob/master/README.md/blob/master/README-brief-cn.md) ]\n+[ [Get-Started](https://github.com/eBay/parallec/blob/master/README.md#get-started) | [Features](https://github.com/eBay/parallec/blob/master/README.md#features) | [Use Cases](https://github.com/eBay/parallec/blob/master/README.md#use-cases) | [Motivation](https://github.com/eBay/parallec/blob/master/README.md#motivation) | [Demos](https://github.com/eBay/parallec/blob/master/README.md#demos) | [Performance](https://github.com/eBay/parallec/blob/master/README.md#performance) | [Compare](https://github.com/eBay/parallec/blob/master/README.md#compare) | [About](https://github.com/eBay/parallec/blob/master/README.md#authors) | [中文介绍](https://github.com/eBay/parallec/blob/master/README-brief-cn.md) ]\n \n [ [API Overview](http://www.parallec.io/docs/api-overview/) | [Generate & Submit Task](http://www.parallec.io/docs/submit-task/) | [Track Status & Examine Responses](http://www.parallec.io/docs/track-status/) | [Configurations](http://www.parallec.io/docs/configurations/) ]\n "
            }
        ]
    },
    {
        "sha": "048ed8f22bd50754524847930f0f5415a417f197",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6MDQ4ZWQ4ZjIyYmQ1MDc1NDUyNDg0NzkzMGYwZjU0MTVhNDE3ZjE5Nw==",
        "commit": {
            "author": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2015-11-09T20:15:14Z"
            },
            "committer": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2015-11-09T20:15:14Z"
            },
            "message": "update readme [skip ci]",
            "tree": {
                "sha": "e2123218425db432c426e4727407bd8d3c05c6f3",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/e2123218425db432c426e4727407bd8d3c05c6f3"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/048ed8f22bd50754524847930f0f5415a417f197",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/048ed8f22bd50754524847930f0f5415a417f197",
        "html_url": "https://github.com/eBay/parallec/commit/048ed8f22bd50754524847930f0f5415a417f197",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/048ed8f22bd50754524847930f0f5415a417f197/comments",
        "author": null,
        "committer": null,
        "parents": [
            {
                "sha": "c8a1f96fd3854426e207e53c5733c73ddba28c50",
                "url": "https://api.github.com/repos/eBay/parallec/commits/c8a1f96fd3854426e207e53c5733c73ddba28c50",
                "html_url": "https://github.com/eBay/parallec/commit/c8a1f96fd3854426e207e53c5733c73ddba28c50"
            }
        ],
        "stats": {
            "total": 4,
            "additions": 2,
            "deletions": 2
        },
        "files": [
            {
                "sha": "6e6a29538c69eb3ee8d904b27fd2d57fe7c42de1",
                "filename": "README-brief-cn.md",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/048ed8f22bd50754524847930f0f5415a417f197/README-brief-cn.md",
                "raw_url": "https://github.com/eBay/parallec/raw/048ed8f22bd50754524847930f0f5415a417f197/README-brief-cn.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/README-brief-cn.md?ref=048ed8f22bd50754524847930f0f5415a417f197",
                "patch": "@@ -3,7 +3,7 @@\n \n ##Parallec 中文介绍\n \n-[Parallec](http://www.parallec.io/) 是一个快速的并行异步HTTP(S)/SSH/TCP/Ping 客户端的Java库。它是eBay云计算部门开发并在[REST Commander](http://www.restcommander.com/)基础上开源的。Parallec的寓意是**\"并行客户端\"**： **Paralle**l **C**lient, 发音如 \"Para-like\". 更多说明请见[这里](http://www.parallec.io/)。\n+[Parallec](http://www.parallec.io/) 是一个基于[Akka](http://akka.io)的快速并行异步HTTP(S)/SSH/TCP/Ping 客户端的Java库。它是eBay云计算部门开发并在[REST Commander](http://www.restcommander.com/)基础上开源的。Parallec的寓意是**\"并行客户端\"**： **Paralle**l **C**lient, 发音如 \"Para-like\". 更多说明请见[这里](http://www.parallec.io/)。\n \n 其内置特别的响应上下文（response context），在处理服务器回复（Response）时能方便快捷的传入，传出任何对象，比如各种客户端（比如elastic search, kafka, mongodb etc），以便汇集处理数据到任何地方。 [样例程序](http://www.parallec.io/#code-sample)**仅需20行代码**，就可以汇总10000隔API的回复以简单可控的并行速度发送汇总到Elastic Search。\n "
            },
            {
                "sha": "da89d4d3dc1a2bc8b6924f4cb7ca5295ed2710d3",
                "filename": "README.md",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/048ed8f22bd50754524847930f0f5415a417f197/README.md",
                "raw_url": "https://github.com/eBay/parallec/raw/048ed8f22bd50754524847930f0f5415a417f197/README.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/README.md?ref=048ed8f22bd50754524847930f0f5415a417f197",
                "patch": "@@ -8,7 +8,7 @@\n \n [![Javadoc](http://www.parallec.io/images/parallec-javadoc-blue.svg)](http://www.parallec.io/javadoc/index.html?io/parallec/core/ParallelClient.html) [![Documentation](http://www.parallec.io/images/parallec-documentation-red.svg)](http://www.parallec.io/docs/) [![Samples](http://www.parallec.io/images/parallec-samples-brightgreen.svg)](https://github.com/eBay/parallec-samples) [![Chinese](http://www.parallec.io/images/parallec-cnbrief-blue.svg)](https://github.com/eBay/parallec/blob/master/README-brief-cn.md) \n \n-[ [Get-Started](https://github.com/eBay/parallec#get-started) | [Features](https://github.com/eBay/parallec#features) | [Use Cases](https://github.com/eBay/parallec#use-cases) | [Motivation](https://github.com/eBay/parallec#motivation) | [Demos](https://github.com/eBay/parallec#demos) | [Performance](https://github.com/eBay/parallec#performance) | [Compare](https://github.com/eBay/parallec#compare) | [About](https://github.com/eBay/parallec#authors) | [中文介绍](https://github.com/eBay/parallec/blob/master/README-brief-cn.md) ]\n+[ [Get-Started](https://github.com/eBay/parallec/blob/master/README.md#get-started) | [Features](https://github.com/eBay/parallec/blob/master/README.md#features) | [Use Cases](https://github.com/eBay/parallec/blob/master/README.md#use-cases) | [Motivation](https://github.com/eBay/parallec/blob/master/README.md#motivation) | [Demos](https://github.com/eBay/parallec/blob/master/README.md#demos) | [Performance](https://github.com/eBay/parallec/blob/master/README.md#performance) | [Compare](https://github.com/eBay/parallec/blob/master/README.md#compare) | [About](https://github.com/eBay/parallec/blob/master/README.md#authors) | [中文介绍](https://github.com/eBay/parallec/blob/master/README.md/blob/master/README-brief-cn.md) ]\n \n [ [API Overview](http://www.parallec.io/docs/api-overview/) | [Generate & Submit Task](http://www.parallec.io/docs/submit-task/) | [Track Status & Examine Responses](http://www.parallec.io/docs/track-status/) | [Configurations](http://www.parallec.io/docs/configurations/) ]\n "
            }
        ]
    },
    {
        "sha": "c8a1f96fd3854426e207e53c5733c73ddba28c50",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6YzhhMWY5NmZkMzg1NDQyNmUyMDdlNTNjNTczM2M3M2RkYmEyOGM1MA==",
        "commit": {
            "author": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2015-11-09T19:34:09Z"
            },
            "committer": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2015-11-09T19:34:09Z"
            },
            "message": "update readme [skip ci]",
            "tree": {
                "sha": "31ba67253a39e554ac2008d18ba5bee387c2dcfc",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/31ba67253a39e554ac2008d18ba5bee387c2dcfc"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/c8a1f96fd3854426e207e53c5733c73ddba28c50",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/c8a1f96fd3854426e207e53c5733c73ddba28c50",
        "html_url": "https://github.com/eBay/parallec/commit/c8a1f96fd3854426e207e53c5733c73ddba28c50",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/c8a1f96fd3854426e207e53c5733c73ddba28c50/comments",
        "author": null,
        "committer": null,
        "parents": [
            {
                "sha": "dad0736c96905339d6d163067ded3f3a19e5a44a",
                "url": "https://api.github.com/repos/eBay/parallec/commits/dad0736c96905339d6d163067ded3f3a19e5a44a",
                "html_url": "https://github.com/eBay/parallec/commit/dad0736c96905339d6d163067ded3f3a19e5a44a"
            }
        ],
        "stats": {
            "total": 2,
            "additions": 1,
            "deletions": 1
        },
        "files": [
            {
                "sha": "cad76d8a1392e759e4dfbbf4f1941dd4582f0b1a",
                "filename": "README.md",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/c8a1f96fd3854426e207e53c5733c73ddba28c50/README.md",
                "raw_url": "https://github.com/eBay/parallec/raw/c8a1f96fd3854426e207e53c5733c73ddba28c50/README.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/README.md?ref=c8a1f96fd3854426e207e53c5733c73ddba28c50",
                "patch": "@@ -12,7 +12,7 @@\n \n [ [API Overview](http://www.parallec.io/docs/api-overview/) | [Generate & Submit Task](http://www.parallec.io/docs/submit-task/) | [Track Status & Examine Responses](http://www.parallec.io/docs/track-status/) | [Configurations](http://www.parallec.io/docs/configurations/) ]\n \n-Parallec is a fast parallel async HTTP(S)/SSH/TCP/Ping client java library. Scalably aggregate and handle API responses **anyway** and send it **anywhere** by writing [20 lines](https://www.youtube.com/watch?v=QcavegPMDms) of code. A special super convenient **response context** let you pass in/out any object when handling the responses. Now you can conduct scalable API calls, then effortlessly pass aggregated data anywhere to elastic search, kafka, MongoDB, graphite, memcached, etc. Parallec means **Paralle**l **C**lient, and is pronounced as \"Para-like\".\n+Parallec is a fast parallel async HTTP(S)/SSH/TCP/Ping client java library based on [Akka](http://akka.io). Scalably aggregate and handle API responses **anyway** and send it **anywhere** by writing [20 lines](https://www.youtube.com/watch?v=QcavegPMDms) of code. A special super convenient **response context** let you pass in/out any object when handling the responses. Now you can conduct scalable API calls, then effortlessly pass aggregated data anywhere to elastic search, kafka, MongoDB, graphite, memcached, etc. Parallec means **Paralle**l **C**lient, and is pronounced as \"Para-like\".\n \n ![Workflow Overview](http://www.parallec.io/images/parallec-flow.svg)\n "
            }
        ]
    },
    {
        "sha": "fc725700476ed9a0c027345a48934ab758e0754a",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6ZmM3MjU3MDA0NzZlZDlhMGMwMjczNDVhNDg5MzRhYjc1OGUwNzU0YQ==",
        "commit": {
            "author": {
                "name": "Lukasz Kryger",
                "email": "lukasz.kryger@ncr.com",
                "date": "2015-11-09T17:10:40Z"
            },
            "committer": {
                "name": "Lukasz Kryger",
                "email": "lukasz.kryger@ncr.com",
                "date": "2015-11-09T17:10:40Z"
            },
            "message": "Consistent styling of dependencies: no new line between each <dependency>",
            "tree": {
                "sha": "5f74dea45a9bf2505bc0c5bcfcc823b45344a32c",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/5f74dea45a9bf2505bc0c5bcfcc823b45344a32c"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/fc725700476ed9a0c027345a48934ab758e0754a",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/fc725700476ed9a0c027345a48934ab758e0754a",
        "html_url": "https://github.com/eBay/parallec/commit/fc725700476ed9a0c027345a48934ab758e0754a",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/fc725700476ed9a0c027345a48934ab758e0754a/comments",
        "author": null,
        "committer": null,
        "parents": [
            {
                "sha": "9083b9bd4352814ae014a76a229040236a1c77d0",
                "url": "https://api.github.com/repos/eBay/parallec/commits/9083b9bd4352814ae014a76a229040236a1c77d0",
                "html_url": "https://github.com/eBay/parallec/commit/9083b9bd4352814ae014a76a229040236a1c77d0"
            }
        ],
        "stats": {
            "total": 11,
            "additions": 0,
            "deletions": 11
        },
        "files": [
            {
                "sha": "869fc78a2665ad51996bad42d1541676fe815446",
                "filename": "pom.xml",
                "status": "modified",
                "additions": 0,
                "deletions": 11,
                "changes": 11,
                "blob_url": "https://github.com/eBay/parallec/blob/fc725700476ed9a0c027345a48934ab758e0754a/pom.xml",
                "raw_url": "https://github.com/eBay/parallec/raw/fc725700476ed9a0c027345a48934ab758e0754a/pom.xml",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/pom.xml?ref=fc725700476ed9a0c027345a48934ab758e0754a",
                "patch": "@@ -77,13 +77,11 @@\n \t</properties>\n \n \t<dependencies>\n-\n \t\t<dependency>\n \t\t\t<groupId>org.springframework</groupId>\n \t\t\t<artifactId>spring-beans</artifactId>\n \t\t\t<version>${spring-beans.version}</version>\n \t\t</dependency>\n-\n \t\t<dependency>\n \t\t\t<groupId>com.nanohttpd</groupId>\n \t\t\t<artifactId>nanohttpd</artifactId>\n@@ -95,7 +93,6 @@\n \t\t\t<version>${mockito.version}</version>\n \t\t\t<scope>test</scope>\n \t\t</dependency>\n-\n \t\t<dependency>\n \t\t\t<groupId>com.google.guava</groupId>\n \t\t\t<artifactId>guava</artifactId>\n@@ -106,13 +103,11 @@\n \t\t\t<artifactId>slf4j-api</artifactId>\n \t\t\t<version>${slf4j.version}</version>\n \t\t</dependency>\n-\n \t\t<dependency>\n \t\t\t<groupId>ch.qos.logback</groupId>\n \t\t\t<artifactId>logback-classic</artifactId>\n \t\t\t<version>${logback-core.version}</version>\n \t\t</dependency>\n-\n \t\t<dependency>\n \t\t\t<groupId>junit</groupId>\n \t\t\t<artifactId>junit</artifactId>\n@@ -144,7 +139,6 @@\n \t\t\t<artifactId>commons-codec</artifactId>\n \t\t\t<version>${commons-codec.version}</version>\n \t\t</dependency>\n-\n \t\t<dependency>\n \t\t\t<groupId>commons-io</groupId>\n \t\t\t<artifactId>commons-io</artifactId>\n@@ -160,13 +154,11 @@\n \t\t\t<artifactId>jackson-core</artifactId>\n \t\t\t<version>${jackson-core.version}</version>\n \t\t</dependency>\n-\n \t\t<dependency>\n \t\t\t<groupId>com.fasterxml.jackson.core</groupId>\n \t\t\t<artifactId>jackson-databind</artifactId>\n \t\t\t<version>${jackson-databind.version}</version>\n \t\t</dependency>\n-\n \t\t<dependency>\n \t\t\t<groupId>com.fasterxml.jackson.core</groupId>\n \t\t\t<artifactId>jackson-annotations</artifactId>\n@@ -182,7 +174,6 @@\n \t\t\t<artifactId>httpclient</artifactId>\n \t\t\t<version>${httpclient.version}</version>\n \t\t</dependency>\n-\n \t\t<dependency>\n \t\t\t<groupId>com.jcraft</groupId>\n \t\t\t<artifactId>jsch</artifactId>\n@@ -193,13 +184,11 @@\n \t\t\t<artifactId>openpojo</artifactId>\n \t\t\t<version>${openpojo.version}</version>\n \t\t</dependency>\n-\n \t\t<dependency>\n \t\t\t<groupId>com.jayway.jsonpath</groupId>\n \t\t\t<artifactId>json-path</artifactId>\n \t\t\t<version>${jsonpath.version}</version>\n \t\t</dependency>\n-\n \t</dependencies>\n \n \t<distributionManagement>"
            }
        ]
    },
    {
        "sha": "9083b9bd4352814ae014a76a229040236a1c77d0",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6OTA4M2I5YmQ0MzUyODE0YWUwMTRhNzZhMjI5MDQwMjM2YTFjNzdkMA==",
        "commit": {
            "author": {
                "name": "Lukasz Kryger",
                "email": "lukasz.kryger@ncr.com",
                "date": "2015-11-09T17:05:21Z"
            },
            "committer": {
                "name": "Lukasz Kryger",
                "email": "lukasz.kryger@ncr.com",
                "date": "2015-11-09T17:10:16Z"
            },
            "message": "Set scope to \"test\" for test-specific dependencies",
            "tree": {
                "sha": "b149288d61436468ef3c049c2fe9b32bfe85afc9",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/b149288d61436468ef3c049c2fe9b32bfe85afc9"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/9083b9bd4352814ae014a76a229040236a1c77d0",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/9083b9bd4352814ae014a76a229040236a1c77d0",
        "html_url": "https://github.com/eBay/parallec/commit/9083b9bd4352814ae014a76a229040236a1c77d0",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/9083b9bd4352814ae014a76a229040236a1c77d0/comments",
        "author": null,
        "committer": null,
        "parents": [
            {
                "sha": "dad0736c96905339d6d163067ded3f3a19e5a44a",
                "url": "https://api.github.com/repos/eBay/parallec/commits/dad0736c96905339d6d163067ded3f3a19e5a44a",
                "html_url": "https://github.com/eBay/parallec/commit/dad0736c96905339d6d163067ded3f3a19e5a44a"
            }
        ],
        "stats": {
            "total": 2,
            "additions": 2,
            "deletions": 0
        },
        "files": [
            {
                "sha": "e85c364f44373c68085824dbdc589cd5e16117d8",
                "filename": "pom.xml",
                "status": "modified",
                "additions": 2,
                "deletions": 0,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/9083b9bd4352814ae014a76a229040236a1c77d0/pom.xml",
                "raw_url": "https://github.com/eBay/parallec/raw/9083b9bd4352814ae014a76a229040236a1c77d0/pom.xml",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/pom.xml?ref=9083b9bd4352814ae014a76a229040236a1c77d0",
                "patch": "@@ -93,6 +93,7 @@\n \t\t\t<groupId>org.mockito</groupId>\n \t\t\t<artifactId>mockito-core</artifactId>\n \t\t\t<version>${mockito.version}</version>\n+\t\t\t<scope>test</scope>\n \t\t</dependency>\n \n \t\t<dependency>\n@@ -116,6 +117,7 @@\n \t\t\t<groupId>junit</groupId>\n \t\t\t<artifactId>junit</artifactId>\n \t\t\t<version>${junit.version}</version>\n+\t\t\t<scope>test</scope>\n \t\t</dependency>\n \t\t<dependency>\n \t\t\t<groupId>org.apache.commons</groupId>"
            }
        ]
    },
    {
        "sha": "dad0736c96905339d6d163067ded3f3a19e5a44a",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6ZGFkMDczNmM5NjkwNTMzOWQ2ZDE2MzA2N2RlZDNmM2ExOWU1YTQ0YQ==",
        "commit": {
            "author": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2015-11-09T05:00:09Z"
            },
            "committer": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2015-11-09T05:00:09Z"
            },
            "message": "update readme [skip ci]",
            "tree": {
                "sha": "0d481454e3abc57cc98ef1b39311d90aaec56a0a",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/0d481454e3abc57cc98ef1b39311d90aaec56a0a"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/dad0736c96905339d6d163067ded3f3a19e5a44a",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/dad0736c96905339d6d163067ded3f3a19e5a44a",
        "html_url": "https://github.com/eBay/parallec/commit/dad0736c96905339d6d163067ded3f3a19e5a44a",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/dad0736c96905339d6d163067ded3f3a19e5a44a/comments",
        "author": null,
        "committer": null,
        "parents": [
            {
                "sha": "b2c7e55e1300a83ddddec4ddb76eeeac298cb17a",
                "url": "https://api.github.com/repos/eBay/parallec/commits/b2c7e55e1300a83ddddec4ddb76eeeac298cb17a",
                "html_url": "https://github.com/eBay/parallec/commit/b2c7e55e1300a83ddddec4ddb76eeeac298cb17a"
            }
        ],
        "stats": {
            "total": 9,
            "additions": 7,
            "deletions": 2
        },
        "files": [
            {
                "sha": "3f2eee053d0aaf8a500186e8fbc0ff6172e854e2",
                "filename": "README-brief-cn.md",
                "status": "modified",
                "additions": 5,
                "deletions": 0,
                "changes": 5,
                "blob_url": "https://github.com/eBay/parallec/blob/dad0736c96905339d6d163067ded3f3a19e5a44a/README-brief-cn.md",
                "raw_url": "https://github.com/eBay/parallec/raw/dad0736c96905339d6d163067ded3f3a19e5a44a/README-brief-cn.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/README-brief-cn.md?ref=dad0736c96905339d6d163067ded3f3a19e5a44a",
                "patch": "@@ -1,3 +1,8 @@\n+\n+<a href=\"http://www.parallec.io\"><img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/parallec-logo.png\" width=\"325\"></a>\n+\n+##Parallec 中文介绍\n+\n [Parallec](http://www.parallec.io/) 是一个快速的并行异步HTTP(S)/SSH/TCP/Ping 客户端的Java库。它是eBay云计算部门开发并在[REST Commander](http://www.restcommander.com/)基础上开源的。Parallec的寓意是**\"并行客户端\"**： **Paralle**l **C**lient, 发音如 \"Para-like\". 更多说明请见[这里](http://www.parallec.io/)。\n \n 其内置特别的响应上下文（response context），在处理服务器回复（Response）时能方便快捷的传入，传出任何对象，比如各种客户端（比如elastic search, kafka, mongodb etc），以便汇集处理数据到任何地方。 [样例程序](http://www.parallec.io/#code-sample)**仅需20行代码**，就可以汇总10000隔API的回复以简单可控的并行速度发送汇总到Elastic Search。"
            },
            {
                "sha": "c319d2b703c5ed99594044ffac1a53e3e6aa47eb",
                "filename": "README.md",
                "status": "modified",
                "additions": 2,
                "deletions": 2,
                "changes": 4,
                "blob_url": "https://github.com/eBay/parallec/blob/dad0736c96905339d6d163067ded3f3a19e5a44a/README.md",
                "raw_url": "https://github.com/eBay/parallec/raw/dad0736c96905339d6d163067ded3f3a19e5a44a/README.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/README.md?ref=dad0736c96905339d6d163067ded3f3a19e5a44a",
                "patch": "@@ -6,9 +6,9 @@\n \n ![latest 0.9.x](http://img.shields.io/badge/latest_stable-0.9.x=>-green.svg) [ ![latest beta  maven central](https://maven-badges.herokuapp.com/maven-central/io.parallec/parallec-core/badge.svg?style=flat)](http://search.maven.org/#artifactdetails|io.parallec|parallec-core|0.9.0|) [![Gitter](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/eBay/parallec?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge)\n \n-[![Javadoc](http://www.parallec.io/images/parallec-javadoc-blue.svg)](http://www.parallec.io/javadoc/index.html?io/parallec/core/ParallelClient.html) [![Documentation](http://www.parallec.io/images/parallec-documentation-red.svg)](http://www.parallec.io/docs/) [![Samples](http://www.parallec.io/images/parallec-samples-brightgreen.svg)](https://github.com/eBay/parallec-samples) \n+[![Javadoc](http://www.parallec.io/images/parallec-javadoc-blue.svg)](http://www.parallec.io/javadoc/index.html?io/parallec/core/ParallelClient.html) [![Documentation](http://www.parallec.io/images/parallec-documentation-red.svg)](http://www.parallec.io/docs/) [![Samples](http://www.parallec.io/images/parallec-samples-brightgreen.svg)](https://github.com/eBay/parallec-samples) [![Chinese](http://www.parallec.io/images/parallec-cnbrief-blue.svg)](https://github.com/eBay/parallec/blob/master/README-brief-cn.md) \n \n-[ [Get-Started](https://github.com/eBay/parallec#get-started) | [Features](https://github.com/eBay/parallec#features) | [Use Cases](https://github.com/eBay/parallec#use-cases) | [Motivation](https://github.com/eBay/parallec#motivation) | [Demos](https://github.com/eBay/parallec#demos) | [Performance](https://github.com/eBay/parallec#performance) | [Compare](https://github.com/eBay/parallec#compare) | [About](https://github.com/eBay/parallec#authors) | [中文摘要](https://github.com/eBay/parallec/blob/master/README-brief-cn.md) ]\n+[ [Get-Started](https://github.com/eBay/parallec#get-started) | [Features](https://github.com/eBay/parallec#features) | [Use Cases](https://github.com/eBay/parallec#use-cases) | [Motivation](https://github.com/eBay/parallec#motivation) | [Demos](https://github.com/eBay/parallec#demos) | [Performance](https://github.com/eBay/parallec#performance) | [Compare](https://github.com/eBay/parallec#compare) | [About](https://github.com/eBay/parallec#authors) | [中文介绍](https://github.com/eBay/parallec/blob/master/README-brief-cn.md) ]\n \n [ [API Overview](http://www.parallec.io/docs/api-overview/) | [Generate & Submit Task](http://www.parallec.io/docs/submit-task/) | [Track Status & Examine Responses](http://www.parallec.io/docs/track-status/) | [Configurations](http://www.parallec.io/docs/configurations/) ]\n "
            }
        ]
    },
    {
        "sha": "b2c7e55e1300a83ddddec4ddb76eeeac298cb17a",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6YjJjN2U1NWUxMzAwYTgzZGRkZGVjNGRkYjc2ZWVlYWMyOThjYjE3YQ==",
        "commit": {
            "author": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2015-11-09T04:22:58Z"
            },
            "committer": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2015-11-09T04:22:58Z"
            },
            "message": "update readme [skip ci]",
            "tree": {
                "sha": "dc2fd77c04dcb0e83e3f5453b7f53055ce15017b",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/dc2fd77c04dcb0e83e3f5453b7f53055ce15017b"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/b2c7e55e1300a83ddddec4ddb76eeeac298cb17a",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/b2c7e55e1300a83ddddec4ddb76eeeac298cb17a",
        "html_url": "https://github.com/eBay/parallec/commit/b2c7e55e1300a83ddddec4ddb76eeeac298cb17a",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/b2c7e55e1300a83ddddec4ddb76eeeac298cb17a/comments",
        "author": null,
        "committer": null,
        "parents": [
            {
                "sha": "5080ae7f577810d70d4343022935843f8d397675",
                "url": "https://api.github.com/repos/eBay/parallec/commits/5080ae7f577810d70d4343022935843f8d397675",
                "html_url": "https://github.com/eBay/parallec/commit/5080ae7f577810d70d4343022935843f8d397675"
            }
        ],
        "stats": {
            "total": 2,
            "additions": 1,
            "deletions": 1
        },
        "files": [
            {
                "sha": "784551525343ac616d205c9025fb868a6db0fdba",
                "filename": "README-brief-cn.md",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/b2c7e55e1300a83ddddec4ddb76eeeac298cb17a/README-brief-cn.md",
                "raw_url": "https://github.com/eBay/parallec/raw/b2c7e55e1300a83ddddec4ddb76eeeac298cb17a/README-brief-cn.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/README-brief-cn.md?ref=b2c7e55e1300a83ddddec4ddb76eeeac298cb17a",
                "patch": "@@ -6,4 +6,4 @@\n \n 通过过去一年内部使用和开源REST Superman/ REST Commander的开发， 反馈，经验教训，我们现在做把REST Commander的核心做成一个易于使用的独立库 （便于从Maven导入，让所有程序都写20行代码变成REST Commander）。在此基础上，我们添加超过[**15个新的功能**](https://github.com/eBay/parallec/blob/master/README.md#compare)，**改写超过70%的代码**，**以90%以上的测试覆盖率**，确保了用户和开源贡献者能够更加放心的开发和使用。与此同时，我们也把整体软件结构进行了优化，使得大部分内部开发可以直接在github开源平台上直接进行。\n \n-您可以用5分钟按照[样例程序](http://www.parallec.io/#code-sample)试试Parallec去给多个服务器（网站）发送相同或者不同的请求。我们渴望收到您的意见和建议。您可以通过[提交Github Iusse](https://github.com/eBay/parallec/issues/new)进行反馈。谢谢！\n+您可以用5分钟按照[样例程序](http://www.parallec.io/#code-sample)试试Parallec去给多个服务器（网站）发送相同或者不同的请求。我们渴望收到您的意见和建议。您可以通过[提交Github Issue](https://github.com/eBay/parallec/issues/new)进行反馈。谢谢！"
            }
        ]
    },
    {
        "sha": "5080ae7f577810d70d4343022935843f8d397675",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6NTA4MGFlN2Y1Nzc4MTBkNzBkNDM0MzAyMjkzNTg0M2Y4ZDM5NzY3NQ==",
        "commit": {
            "author": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2015-11-09T04:11:47Z"
            },
            "committer": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2015-11-09T04:11:47Z"
            },
            "message": "update readme [skip ci]",
            "tree": {
                "sha": "35b7576ad2c679679d4131192b6c97e2581c9cb4",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/35b7576ad2c679679d4131192b6c97e2581c9cb4"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/5080ae7f577810d70d4343022935843f8d397675",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/5080ae7f577810d70d4343022935843f8d397675",
        "html_url": "https://github.com/eBay/parallec/commit/5080ae7f577810d70d4343022935843f8d397675",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/5080ae7f577810d70d4343022935843f8d397675/comments",
        "author": null,
        "committer": null,
        "parents": [
            {
                "sha": "24dff2631935edba4e93a4799c4568e4b7dc770e",
                "url": "https://api.github.com/repos/eBay/parallec/commits/24dff2631935edba4e93a4799c4568e4b7dc770e",
                "html_url": "https://github.com/eBay/parallec/commit/24dff2631935edba4e93a4799c4568e4b7dc770e"
            }
        ],
        "stats": {
            "total": 4,
            "additions": 2,
            "deletions": 2
        },
        "files": [
            {
                "sha": "217bf24050176bcea0df1acd3bbc62b1002544ba",
                "filename": "README-brief-cn.md",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/5080ae7f577810d70d4343022935843f8d397675/README-brief-cn.md",
                "raw_url": "https://github.com/eBay/parallec/raw/5080ae7f577810d70d4343022935843f8d397675/README-brief-cn.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/README-brief-cn.md?ref=5080ae7f577810d70d4343022935843f8d397675",
                "patch": "@@ -1,4 +1,4 @@\n-[Parallec](http://www.parallec.io/) 是一个快速的并行异步HTTP / SSH / TCP /平客户端的Java库。它是eBay云计算部门开发并在[REST Commander](http://www.restcommander.com/)基础上开源的。Parallec的寓意是**\"并行客户端\"**： **Paralle**l **C**lient, 发音如 \"Para-like\". 更多说明请见[这里](http://www.parallec.io/)。\n+[Parallec](http://www.parallec.io/) 是一个快速的并行异步HTTP(S)/SSH/TCP/Ping 客户端的Java库。它是eBay云计算部门开发并在[REST Commander](http://www.restcommander.com/)基础上开源的。Parallec的寓意是**\"并行客户端\"**： **Paralle**l **C**lient, 发音如 \"Para-like\". 更多说明请见[这里](http://www.parallec.io/)。\n \n 其内置特别的响应上下文（response context），在处理服务器回复（Response）时能方便快捷的传入，传出任何对象，比如各种客户端（比如elastic search, kafka, mongodb etc），以便汇集处理数据到任何地方。 [样例程序](http://www.parallec.io/#code-sample)**仅需20行代码**，就可以汇总10000隔API的回复以简单可控的并行速度发送汇总到Elastic Search。\n "
            },
            {
                "sha": "55aa7d6043435f643a0b1e43b2394c8f648f0df7",
                "filename": "README.md",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/5080ae7f577810d70d4343022935843f8d397675/README.md",
                "raw_url": "https://github.com/eBay/parallec/raw/5080ae7f577810d70d4343022935843f8d397675/README.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/README.md?ref=5080ae7f577810d70d4343022935843f8d397675",
                "patch": "@@ -12,7 +12,7 @@\n \n [ [API Overview](http://www.parallec.io/docs/api-overview/) | [Generate & Submit Task](http://www.parallec.io/docs/submit-task/) | [Track Status & Examine Responses](http://www.parallec.io/docs/track-status/) | [Configurations](http://www.parallec.io/docs/configurations/) ]\n \n-Parallec is a fast parallel async HTTP/SSH/TCP/Ping client java library. Scalably aggregate and handle API responses **anyway** and send it **anywhere** by writing [20 lines](https://www.youtube.com/watch?v=QcavegPMDms) of code. A special super convenient **response context** let you pass in/out any object when handling the responses. Now you can conduct scalable API calls, then effortlessly pass aggregated data anywhere to elastic search, kafka, MongoDB, graphite, memcached, etc. Parallec means **Paralle**l **C**lient, and is pronounced as \"Para-like\".\n+Parallec is a fast parallel async HTTP(S)/SSH/TCP/Ping client java library. Scalably aggregate and handle API responses **anyway** and send it **anywhere** by writing [20 lines](https://www.youtube.com/watch?v=QcavegPMDms) of code. A special super convenient **response context** let you pass in/out any object when handling the responses. Now you can conduct scalable API calls, then effortlessly pass aggregated data anywhere to elastic search, kafka, MongoDB, graphite, memcached, etc. Parallec means **Paralle**l **C**lient, and is pronounced as \"Para-like\".\n \n ![Workflow Overview](http://www.parallec.io/images/parallec-flow.svg)\n "
            }
        ]
    },
    {
        "sha": "24dff2631935edba4e93a4799c4568e4b7dc770e",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6MjRkZmYyNjMxOTM1ZWRiYTRlOTNhNDc5OWM0NTY4ZTRiN2RjNzcwZQ==",
        "commit": {
            "author": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2015-11-09T04:09:31Z"
            },
            "committer": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2015-11-09T04:09:31Z"
            },
            "message": "update readme [skip ci]",
            "tree": {
                "sha": "3f3e37f75b4f3ab8c8c638cdf006ea0320a5da6f",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/3f3e37f75b4f3ab8c8c638cdf006ea0320a5da6f"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/24dff2631935edba4e93a4799c4568e4b7dc770e",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/24dff2631935edba4e93a4799c4568e4b7dc770e",
        "html_url": "https://github.com/eBay/parallec/commit/24dff2631935edba4e93a4799c4568e4b7dc770e",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/24dff2631935edba4e93a4799c4568e4b7dc770e/comments",
        "author": null,
        "committer": null,
        "parents": [
            {
                "sha": "eb6fe5fe8234ad2e5767397e9ed2e629fee431d3",
                "url": "https://api.github.com/repos/eBay/parallec/commits/eb6fe5fe8234ad2e5767397e9ed2e629fee431d3",
                "html_url": "https://github.com/eBay/parallec/commit/eb6fe5fe8234ad2e5767397e9ed2e629fee431d3"
            }
        ],
        "stats": {
            "total": 2,
            "additions": 2,
            "deletions": 0
        },
        "files": [
            {
                "sha": "77791c14d8eb57f64650b4be0c65f74fd39398e8",
                "filename": "README-brief-cn.md",
                "status": "modified",
                "additions": 2,
                "deletions": 0,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/24dff2631935edba4e93a4799c4568e4b7dc770e/README-brief-cn.md",
                "raw_url": "https://github.com/eBay/parallec/raw/24dff2631935edba4e93a4799c4568e4b7dc770e/README-brief-cn.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/README-brief-cn.md?ref=24dff2631935edba4e93a4799c4568e4b7dc770e",
                "patch": "@@ -5,3 +5,5 @@\n 和REST Commander类似，Parallec非常高效并且可以处理大量响应。 比如其Ping服务器的速度是目前使用最广泛**并行Ping 软件[FPing](http://fping.org/)的2倍**，仅用12秒就可以ping 8000服务器。（[**请看视频演示**](https://github.com/eBay/parallec/wiki/Parallec-pings-8000-servers-in-11.1-seconds))\n \n 通过过去一年内部使用和开源REST Superman/ REST Commander的开发， 反馈，经验教训，我们现在做把REST Commander的核心做成一个易于使用的独立库 （便于从Maven导入，让所有程序都写20行代码变成REST Commander）。在此基础上，我们添加超过[**15个新的功能**](https://github.com/eBay/parallec/blob/master/README.md#compare)，**改写超过70%的代码**，**以90%以上的测试覆盖率**，确保了用户和开源贡献者能够更加放心的开发和使用。与此同时，我们也把整体软件结构进行了优化，使得大部分内部开发可以直接在github开源平台上直接进行。\n+\n+您可以用5分钟按照[样例程序](http://www.parallec.io/#code-sample)试试Parallec去给多个服务器（网站）发送相同或者不同的请求。我们渴望收到您的意见和建议。您可以通过[提交Github Iusse](https://github.com/eBay/parallec/issues/new)进行反馈。谢谢！"
            }
        ]
    },
    {
        "sha": "eb6fe5fe8234ad2e5767397e9ed2e629fee431d3",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6ZWI2ZmU1ZmU4MjM0YWQyZTU3NjczOTdlOWVkMmU2MjlmZWU0MzFkMw==",
        "commit": {
            "author": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2015-11-09T04:02:25Z"
            },
            "committer": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2015-11-09T04:02:25Z"
            },
            "message": "update readme with cn summary [skip ci]",
            "tree": {
                "sha": "3f8da7ab8213c15a5b8d40bd99b698119bc5a1ad",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/3f8da7ab8213c15a5b8d40bd99b698119bc5a1ad"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/eb6fe5fe8234ad2e5767397e9ed2e629fee431d3",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/eb6fe5fe8234ad2e5767397e9ed2e629fee431d3",
        "html_url": "https://github.com/eBay/parallec/commit/eb6fe5fe8234ad2e5767397e9ed2e629fee431d3",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/eb6fe5fe8234ad2e5767397e9ed2e629fee431d3/comments",
        "author": null,
        "committer": null,
        "parents": [
            {
                "sha": "fc8dde1a0c75f6f37a996bc8cdea821a5eaa4ae5",
                "url": "https://api.github.com/repos/eBay/parallec/commits/fc8dde1a0c75f6f37a996bc8cdea821a5eaa4ae5",
                "html_url": "https://github.com/eBay/parallec/commit/fc8dde1a0c75f6f37a996bc8cdea821a5eaa4ae5"
            }
        ],
        "stats": {
            "total": 2,
            "additions": 1,
            "deletions": 1
        },
        "files": [
            {
                "sha": "0d21c3ef950591bd38e8534c17427d18f30d3d1b",
                "filename": "README-brief-cn.md",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/eb6fe5fe8234ad2e5767397e9ed2e629fee431d3/README-brief-cn.md",
                "raw_url": "https://github.com/eBay/parallec/raw/eb6fe5fe8234ad2e5767397e9ed2e629fee431d3/README-brief-cn.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/README-brief-cn.md?ref=eb6fe5fe8234ad2e5767397e9ed2e629fee431d3",
                "patch": "@@ -1,4 +1,4 @@\n-[Parallec](http://www.parallec.io/) 是一个快速的并行异步HTTP / SSH / TCP /平客户端的Java库。它是eBay云计算部门开发并在[REST Commander](http://www.restcommander.com/)基础上开源的。Parallec的寓意是**\\\"并行客户端\\\"**： **Paralle**l **C**lient, 发音如 \"Para-like\". 更多说明请见[这里](http://www.parallec.io/)。\n+[Parallec](http://www.parallec.io/) 是一个快速的并行异步HTTP / SSH / TCP /平客户端的Java库。它是eBay云计算部门开发并在[REST Commander](http://www.restcommander.com/)基础上开源的。Parallec的寓意是**\"并行客户端\"**： **Paralle**l **C**lient, 发音如 \"Para-like\". 更多说明请见[这里](http://www.parallec.io/)。\n \n 其内置特别的响应上下文（response context），在处理服务器回复（Response）时能方便快捷的传入，传出任何对象，比如各种客户端（比如elastic search, kafka, mongodb etc），以便汇集处理数据到任何地方。 [样例程序](http://www.parallec.io/#code-sample)**仅需20行代码**，就可以汇总10000隔API的回复以简单可控的并行速度发送汇总到Elastic Search。\n "
            }
        ]
    },
    {
        "sha": "fc8dde1a0c75f6f37a996bc8cdea821a5eaa4ae5",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6ZmM4ZGRlMWEwYzc1ZjZmMzdhOTk2YmM4Y2RlYTgyMWE1ZWFhNGFlNQ==",
        "commit": {
            "author": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2015-11-09T04:00:41Z"
            },
            "committer": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2015-11-09T04:00:41Z"
            },
            "message": "update readme with cn summary [skip ci]",
            "tree": {
                "sha": "68499acb9e970ffeda1008590982091433da0330",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/68499acb9e970ffeda1008590982091433da0330"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/fc8dde1a0c75f6f37a996bc8cdea821a5eaa4ae5",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/fc8dde1a0c75f6f37a996bc8cdea821a5eaa4ae5",
        "html_url": "https://github.com/eBay/parallec/commit/fc8dde1a0c75f6f37a996bc8cdea821a5eaa4ae5",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/fc8dde1a0c75f6f37a996bc8cdea821a5eaa4ae5/comments",
        "author": null,
        "committer": null,
        "parents": [
            {
                "sha": "363bec96f763c41d3124edaef487446e1c814453",
                "url": "https://api.github.com/repos/eBay/parallec/commits/363bec96f763c41d3124edaef487446e1c814453",
                "html_url": "https://github.com/eBay/parallec/commit/363bec96f763c41d3124edaef487446e1c814453"
            }
        ],
        "stats": {
            "total": 8,
            "additions": 4,
            "deletions": 4
        },
        "files": [
            {
                "sha": "4e37c14526d291e9f7a9d254139038b4b10e9556",
                "filename": "README-brief-cn.md",
                "status": "modified",
                "additions": 4,
                "deletions": 4,
                "changes": 8,
                "blob_url": "https://github.com/eBay/parallec/blob/fc8dde1a0c75f6f37a996bc8cdea821a5eaa4ae5/README-brief-cn.md",
                "raw_url": "https://github.com/eBay/parallec/raw/fc8dde1a0c75f6f37a996bc8cdea821a5eaa4ae5/README-brief-cn.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/README-brief-cn.md?ref=fc8dde1a0c75f6f37a996bc8cdea821a5eaa4ae5",
                "patch": "@@ -1,7 +1,7 @@\n-[Parallec](http://www.parallec.io/) 是一个快速的并行异步HTTP / SSH / TCP /平客户端的Java库。它是eBay云计算部门开发并在在[REST Commander](http://www.restcommander.com/)基础上开源的。Parallec的寓意是并行客户端： **Paralle**l **C**lient), 发音如 \"Para-like\". 更多说明请见[这里](http://www.parallec.io/)。\n+[Parallec](http://www.parallec.io/) 是一个快速的并行异步HTTP / SSH / TCP /平客户端的Java库。它是eBay云计算部门开发并在[REST Commander](http://www.restcommander.com/)基础上开源的。Parallec的寓意是**\\\"并行客户端\\\"**： **Paralle**l **C**lient, 发音如 \"Para-like\". 更多说明请见[这里](http://www.parallec.io/)。\n \n-其内置特别的响应上下文（response context），在处理服务器回复（Response）时能方便快捷的传入，传出任何对象，比如各种客户端（比如elastic search, kafka, mongodb etc），以便汇集处理数据到任何地方。 样例程序**仅需20行代码**，就可以汇总10000隔API的回复并发到Elastic search。\n+其内置特别的响应上下文（response context），在处理服务器回复（Response）时能方便快捷的传入，传出任何对象，比如各种客户端（比如elastic search, kafka, mongodb etc），以便汇集处理数据到任何地方。 [样例程序](http://www.parallec.io/#code-sample)**仅需20行代码**，就可以汇总10000隔API的回复以简单可控的并行速度发送汇总到Elastic Search。\n \n-和REST Commander类似，Parallec非常迅速并且可以处理大量响应。 比如他Ping服务器的速度是目前使用最广泛**并行Ping 软件[FPing](http://fping.org/)的2倍**，仅用12秒就可以ping 8000服务器。（[**请看视频演示**](https://github.com/eBay/parallec/wiki/Parallec-pings-8000-servers-in-11.1-seconds))\n+和REST Commander类似，Parallec非常高效并且可以处理大量响应。 比如其Ping服务器的速度是目前使用最广泛**并行Ping 软件[FPing](http://fping.org/)的2倍**，仅用12秒就可以ping 8000服务器。（[**请看视频演示**](https://github.com/eBay/parallec/wiki/Parallec-pings-8000-servers-in-11.1-seconds))\n \n-通过过去一年内部使用和开源REST Superman/ REST Commander的开发， 反馈，经验教训，我们现在做把REST Commander的核心做成一个易于使用的独立库 （便于从Maven导入）。在此基础上，我们添加超过[**15个新的功能**](https://github.com/eBay/parallec/blob/master/README.md#compare)，改写超过70%的代码，以90%以上的测试覆盖率，确保了用户和开源贡献者能够放心使用并且开发。这一次，我们也把整体软件结构进行了优化，使得大部分内部开发可以直接在github开源平台上直接进行。\n+通过过去一年内部使用和开源REST Superman/ REST Commander的开发， 反馈，经验教训，我们现在做把REST Commander的核心做成一个易于使用的独立库 （便于从Maven导入，让所有程序都写20行代码变成REST Commander）。在此基础上，我们添加超过[**15个新的功能**](https://github.com/eBay/parallec/blob/master/README.md#compare)，**改写超过70%的代码**，**以90%以上的测试覆盖率**，确保了用户和开源贡献者能够更加放心的开发和使用。与此同时，我们也把整体软件结构进行了优化，使得大部分内部开发可以直接在github开源平台上直接进行。"
            }
        ]
    },
    {
        "sha": "363bec96f763c41d3124edaef487446e1c814453",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6MzYzYmVjOTZmNzYzYzQxZDMxMjRlZGFlZjQ4NzQ0NmUxYzgxNDQ1Mw==",
        "commit": {
            "author": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2015-11-09T03:49:22Z"
            },
            "committer": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2015-11-09T03:49:22Z"
            },
            "message": "update readme with cn summary [skip ci]",
            "tree": {
                "sha": "5e54fedc5aa15bf62a1dec4b4a4c53544af80bda",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/5e54fedc5aa15bf62a1dec4b4a4c53544af80bda"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/363bec96f763c41d3124edaef487446e1c814453",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/363bec96f763c41d3124edaef487446e1c814453",
        "html_url": "https://github.com/eBay/parallec/commit/363bec96f763c41d3124edaef487446e1c814453",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/363bec96f763c41d3124edaef487446e1c814453/comments",
        "author": null,
        "committer": null,
        "parents": [
            {
                "sha": "8ed08e1a36a3977c5ba786c64ed9cf6ccadf2f26",
                "url": "https://api.github.com/repos/eBay/parallec/commits/8ed08e1a36a3977c5ba786c64ed9cf6ccadf2f26",
                "html_url": "https://github.com/eBay/parallec/commit/8ed08e1a36a3977c5ba786c64ed9cf6ccadf2f26"
            }
        ],
        "stats": {
            "total": 9,
            "additions": 8,
            "deletions": 1
        },
        "files": [
            {
                "sha": "1671832f9850bf67b9af80a1c18fdf7c5f8f0cf9",
                "filename": "README-brief-cn.md",
                "status": "added",
                "additions": 7,
                "deletions": 0,
                "changes": 7,
                "blob_url": "https://github.com/eBay/parallec/blob/363bec96f763c41d3124edaef487446e1c814453/README-brief-cn.md",
                "raw_url": "https://github.com/eBay/parallec/raw/363bec96f763c41d3124edaef487446e1c814453/README-brief-cn.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/README-brief-cn.md?ref=363bec96f763c41d3124edaef487446e1c814453",
                "patch": "@@ -0,0 +1,7 @@\n+[Parallec](http://www.parallec.io/) 是一个快速的并行异步HTTP / SSH / TCP /平客户端的Java库。它是eBay云计算部门开发并在在[REST Commander](http://www.restcommander.com/)基础上开源的。Parallec的寓意是并行客户端： **Paralle**l **C**lient), 发音如 \"Para-like\". 更多说明请见[这里](http://www.parallec.io/)。\n+\n+其内置特别的响应上下文（response context），在处理服务器回复（Response）时能方便快捷的传入，传出任何对象，比如各种客户端（比如elastic search, kafka, mongodb etc），以便汇集处理数据到任何地方。 样例程序**仅需20行代码**，就可以汇总10000隔API的回复并发到Elastic search。\n+\n+和REST Commander类似，Parallec非常迅速并且可以处理大量响应。 比如他Ping服务器的速度是目前使用最广泛**并行Ping 软件[FPing](http://fping.org/)的2倍**，仅用12秒就可以ping 8000服务器。（[**请看视频演示**](https://github.com/eBay/parallec/wiki/Parallec-pings-8000-servers-in-11.1-seconds))\n+\n+通过过去一年内部使用和开源REST Superman/ REST Commander的开发， 反馈，经验教训，我们现在做把REST Commander的核心做成一个易于使用的独立库 （便于从Maven导入）。在此基础上，我们添加超过[**15个新的功能**](https://github.com/eBay/parallec/blob/master/README.md#compare)，改写超过70%的代码，以90%以上的测试覆盖率，确保了用户和开源贡献者能够放心使用并且开发。这一次，我们也把整体软件结构进行了优化，使得大部分内部开发可以直接在github开源平台上直接进行。"
            },
            {
                "sha": "bd29860dd7acc1889ca6bb2c74400f230b226aa2",
                "filename": "README.md",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/363bec96f763c41d3124edaef487446e1c814453/README.md",
                "raw_url": "https://github.com/eBay/parallec/raw/363bec96f763c41d3124edaef487446e1c814453/README.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/README.md?ref=363bec96f763c41d3124edaef487446e1c814453",
                "patch": "@@ -8,7 +8,7 @@\n \n [![Javadoc](http://www.parallec.io/images/parallec-javadoc-blue.svg)](http://www.parallec.io/javadoc/index.html?io/parallec/core/ParallelClient.html) [![Documentation](http://www.parallec.io/images/parallec-documentation-red.svg)](http://www.parallec.io/docs/) [![Samples](http://www.parallec.io/images/parallec-samples-brightgreen.svg)](https://github.com/eBay/parallec-samples) \n \n-[ [Get-Started](https://github.com/eBay/parallec#get-started) | [Features](https://github.com/eBay/parallec#features) | [Use Cases](https://github.com/eBay/parallec#use-cases) | [Motivation](https://github.com/eBay/parallec#motivation) | [Demos](https://github.com/eBay/parallec#demos) | [Performance](https://github.com/eBay/parallec#performance) | [Compare](https://github.com/eBay/parallec#compare) | [About](https://github.com/eBay/parallec#authors) ]\n+[ [Get-Started](https://github.com/eBay/parallec#get-started) | [Features](https://github.com/eBay/parallec#features) | [Use Cases](https://github.com/eBay/parallec#use-cases) | [Motivation](https://github.com/eBay/parallec#motivation) | [Demos](https://github.com/eBay/parallec#demos) | [Performance](https://github.com/eBay/parallec#performance) | [Compare](https://github.com/eBay/parallec#compare) | [About](https://github.com/eBay/parallec#authors) | [中文摘要](https://github.com/eBay/parallec/blob/master/README-brief-cn.md) ]\n \n [ [API Overview](http://www.parallec.io/docs/api-overview/) | [Generate & Submit Task](http://www.parallec.io/docs/submit-task/) | [Track Status & Examine Responses](http://www.parallec.io/docs/track-status/) | [Configurations](http://www.parallec.io/docs/configurations/) ]\n "
            }
        ]
    },
    {
        "sha": "8ed08e1a36a3977c5ba786c64ed9cf6ccadf2f26",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6OGVkMDhlMWEzNmEzOTc3YzViYTc4NmM2NGVkOWNmNmNjYWRmMmYyNg==",
        "commit": {
            "author": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2015-11-07T08:34:38Z"
            },
            "committer": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2015-11-07T08:34:38Z"
            },
            "message": "update readme [skip ci]",
            "tree": {
                "sha": "c91356893e00c475f83a091eca15a42157099bf2",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/c91356893e00c475f83a091eca15a42157099bf2"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/8ed08e1a36a3977c5ba786c64ed9cf6ccadf2f26",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/8ed08e1a36a3977c5ba786c64ed9cf6ccadf2f26",
        "html_url": "https://github.com/eBay/parallec/commit/8ed08e1a36a3977c5ba786c64ed9cf6ccadf2f26",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/8ed08e1a36a3977c5ba786c64ed9cf6ccadf2f26/comments",
        "author": null,
        "committer": null,
        "parents": [
            {
                "sha": "0a8e690587b531c08344455b58da71e738d5b1fd",
                "url": "https://api.github.com/repos/eBay/parallec/commits/0a8e690587b531c08344455b58da71e738d5b1fd",
                "html_url": "https://github.com/eBay/parallec/commit/0a8e690587b531c08344455b58da71e738d5b1fd"
            }
        ],
        "stats": {
            "total": 8,
            "additions": 7,
            "deletions": 1
        },
        "files": [
            {
                "sha": "1621c5d03d6f45844555e42d53e6c70174960d3e",
                "filename": "CONTRIBUTING.md",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/8ed08e1a36a3977c5ba786c64ed9cf6ccadf2f26/CONTRIBUTING.md",
                "raw_url": "https://github.com/eBay/parallec/raw/8ed08e1a36a3977c5ba786c64ed9cf6ccadf2f26/CONTRIBUTING.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/CONTRIBUTING.md?ref=8ed08e1a36a3977c5ba786c64ed9cf6ccadf2f26",
                "patch": "@@ -1,4 +1,4 @@\n-## Contributing to Eagle\n+## Contributing to Parallec\n \n Contributions via GitHub pull requests are gladly accepted from their original\n author. Along with any pull requests, please state that the contribution is"
            },
            {
                "sha": "3f4ee6880ae0b3ba623905a09983379f57e21e67",
                "filename": "README.md",
                "status": "modified",
                "additions": 6,
                "deletions": 0,
                "changes": 6,
                "blob_url": "https://github.com/eBay/parallec/blob/8ed08e1a36a3977c5ba786c64ed9cf6ccadf2f26/README.md",
                "raw_url": "https://github.com/eBay/parallec/raw/8ed08e1a36a3977c5ba786c64ed9cf6ccadf2f26/README.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/README.md?ref=8ed08e1a36a3977c5ba786c64ed9cf6ccadf2f26",
                "patch": "@@ -206,6 +206,12 @@ In Parallec, you may handle response either in Worker (before aggregation: in pa\n \n #### [SSL Client Auth Plugin](https://github.com/eBay/parallec-plugins)\n \n+## [Change Log](https://github.com/eBay/parallec/blob/master/CHANGELOG.md)\n+\n+\n+## Contributors\n+Your name here\n+\n ## Authors\n \n Parallec is served to you by [Yuanteng (Jeff) Pei](https://www.linkedin.com/in/peiyuant) and [Teng Song](https://www.linkedin.com/pub/teng-song/49/763/713), [Cloud Infrastructure & Platform Services (CIPS)](https://helpusbuild.ebayc3.com/) at eBay Inc. "
            }
        ]
    },
    {
        "sha": "0a8e690587b531c08344455b58da71e738d5b1fd",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6MGE4ZTY5MDU4N2I1MzFjMDgzNDQ0NTViNThkYTcxZTczOGQ1YjFmZA==",
        "commit": {
            "author": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2015-11-05T08:36:14Z"
            },
            "committer": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2015-11-05T08:36:14Z"
            },
            "message": "update readme [skip ci]",
            "tree": {
                "sha": "6262f189607f244cbec3c7f6365484c8f5954099",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/6262f189607f244cbec3c7f6365484c8f5954099"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/0a8e690587b531c08344455b58da71e738d5b1fd",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/0a8e690587b531c08344455b58da71e738d5b1fd",
        "html_url": "https://github.com/eBay/parallec/commit/0a8e690587b531c08344455b58da71e738d5b1fd",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/0a8e690587b531c08344455b58da71e738d5b1fd/comments",
        "author": null,
        "committer": null,
        "parents": [
            {
                "sha": "046da0a12a7b901bfe789753450507683a30de34",
                "url": "https://api.github.com/repos/eBay/parallec/commits/046da0a12a7b901bfe789753450507683a30de34",
                "html_url": "https://github.com/eBay/parallec/commit/046da0a12a7b901bfe789753450507683a30de34"
            }
        ],
        "stats": {
            "total": 6,
            "additions": 2,
            "deletions": 4
        },
        "files": [
            {
                "sha": "8e29145a40222508faa0736199e8b5e4292825e9",
                "filename": "README.md",
                "status": "modified",
                "additions": 2,
                "deletions": 4,
                "changes": 6,
                "blob_url": "https://github.com/eBay/parallec/blob/0a8e690587b531c08344455b58da71e738d5b1fd/README.md",
                "raw_url": "https://github.com/eBay/parallec/raw/0a8e690587b531c08344455b58da71e738d5b1fd/README.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/README.md?ref=0a8e690587b531c08344455b58da71e738d5b1fd",
                "patch": "@@ -12,7 +12,7 @@\n \n [ [API Overview](http://www.parallec.io/docs/api-overview/) | [Generate & Submit Task](http://www.parallec.io/docs/submit-task/) | [Track Status & Examine Responses](http://www.parallec.io/docs/track-status/) | [Configurations](http://www.parallec.io/docs/configurations/) ]\n \n-Parallec is a fast parallel async HTTP/SSH/TCP/Ping client java library. Scalably aggregate and handle API responses **anyway** and send it **anywhere** by writing [20 lines](https://www.youtube.com/watch?v=QcavegPMDms) of code. A special super convenient **response context** let you pass in/out any object when handling the response. Now you can conduct scalable API calls, then pass aggregated data anywhere to elastic search, kafka, MongoDB, graphite, memcached, etc. Parallec means **Paralle**l **C**lient, and is pronounced as \"Para-like\".\n+Parallec is a fast parallel async HTTP/SSH/TCP/Ping client java library. Scalably aggregate and handle API responses **anyway** and send it **anywhere** by writing [20 lines](https://www.youtube.com/watch?v=QcavegPMDms) of code. A special super convenient **response context** let you pass in/out any object when handling the responses. Now you can conduct scalable API calls, then effortlessly pass aggregated data anywhere to elastic search, kafka, MongoDB, graphite, memcached, etc. Parallec means **Paralle**l **C**lient, and is pronounced as \"Para-like\".\n \n ![Workflow Overview](http://www.parallec.io/images/parallec-flow.svg)\n \n@@ -79,15 +79,13 @@ node.close(); pc.releaseExternalResources();\n \n **Different Requests to the Same Target**\n \n-Now see how easy to use the request template to send multiple different requests to the same target. [Read more..](http://www.parallec.io/docs/submit-task/#apis-on-variable-replacement-for-heterogeneous-requests)\n+Now see **how easy** to use the request template to send multiple different requests to the same target. [Read more..](http://www.parallec.io/docs/submit-task/#apis-on-variable-replacement-for-heterogeneous-requests)\n \n ```java\n pc.prepareHttpGet(\"/userdata/sample_weather_$ZIP.txt\")\n     .setReplaceVarMapToSingleTargetSingleVar(\"ZIP\",\n         Arrays.asList(\"95037\",\"48824\"), \"www.parallec.io\")\n-    .setResponseContext(responseContext)\n     .execute(new ParallecResponseHandler() {...}...\n-          \n ```\n \n - [http://www.parallec.io/userdata/sample_weather_48824.txt](http://www.parallec.io/userdata/sample_weather_48824.txt)"
            }
        ]
    },
    {
        "sha": "046da0a12a7b901bfe789753450507683a30de34",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6MDQ2ZGEwYTEyYTdiOTAxYmZlNzg5NzUzNDUwNTA3NjgzYTMwZGUzNA==",
        "commit": {
            "author": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2015-11-04T19:40:51Z"
            },
            "committer": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2015-11-04T19:40:51Z"
            },
            "message": "update readme [skip ci]",
            "tree": {
                "sha": "bf29c7e03001dbf01e4ef298507b6a9aec35f36f",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/bf29c7e03001dbf01e4ef298507b6a9aec35f36f"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/046da0a12a7b901bfe789753450507683a30de34",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/046da0a12a7b901bfe789753450507683a30de34",
        "html_url": "https://github.com/eBay/parallec/commit/046da0a12a7b901bfe789753450507683a30de34",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/046da0a12a7b901bfe789753450507683a30de34/comments",
        "author": null,
        "committer": null,
        "parents": [
            {
                "sha": "0634c0ef7856642e3301a4c7d99a16412f3a92d9",
                "url": "https://api.github.com/repos/eBay/parallec/commits/0634c0ef7856642e3301a4c7d99a16412f3a92d9",
                "html_url": "https://github.com/eBay/parallec/commit/0634c0ef7856642e3301a4c7d99a16412f3a92d9"
            }
        ],
        "stats": {
            "total": 8,
            "additions": 8,
            "deletions": 0
        },
        "files": [
            {
                "sha": "0117a7615d39665a792df51a2e874d3ef07eb31d",
                "filename": "README.md",
                "status": "modified",
                "additions": 8,
                "deletions": 0,
                "changes": 8,
                "blob_url": "https://github.com/eBay/parallec/blob/046da0a12a7b901bfe789753450507683a30de34/README.md",
                "raw_url": "https://github.com/eBay/parallec/raw/046da0a12a7b901bfe789753450507683a30de34/README.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/README.md?ref=046da0a12a7b901bfe789753450507683a30de34",
                "patch": "@@ -10,6 +10,8 @@\n \n [ [Get-Started](https://github.com/eBay/parallec#get-started) | [Features](https://github.com/eBay/parallec#features) | [Use Cases](https://github.com/eBay/parallec#use-cases) | [Motivation](https://github.com/eBay/parallec#motivation) | [Demos](https://github.com/eBay/parallec#demos) | [Performance](https://github.com/eBay/parallec#performance) | [Compare](https://github.com/eBay/parallec#compare) | [About](https://github.com/eBay/parallec#authors) ]\n \n+[ [API Overview](http://www.parallec.io/docs/api-overview/) | [Generate & Submit Task](http://www.parallec.io/docs/submit-task/) | [Track Status & Examine Responses](http://www.parallec.io/docs/track-status/) | [Configurations](http://www.parallec.io/docs/configurations/) ]\n+\n Parallec is a fast parallel async HTTP/SSH/TCP/Ping client java library. Scalably aggregate and handle API responses **anyway** and send it **anywhere** by writing [20 lines](https://www.youtube.com/watch?v=QcavegPMDms) of code. A special super convenient **response context** let you pass in/out any object when handling the response. Now you can conduct scalable API calls, then pass aggregated data anywhere to elastic search, kafka, MongoDB, graphite, memcached, etc. Parallec means **Paralle**l **C**lient, and is pronounced as \"Para-like\".\n \n ![Workflow Overview](http://www.parallec.io/images/parallec-flow.svg)\n@@ -170,6 +172,12 @@ As usual, don't rely on these numbers and perform your own benchmarks.\n \n ## Compare Parallec vs REST Commander vs ThreadPools+Async Client<a name=\"compare\"></a>\n \n+- Compared with java thread pool based solution, parallec gives you worry free concurrency control without constraints on thread size. \n+- Compared with single-threaded Node.js solutions, Parallec enables parallel computation-intensive response handling with multiple-cores. \n+- Similar issues with Python's global interpreter lock, and to use multiple CPU you will need to use costly multi-process. These are more suited for I/O only but no cpu intensive response processing.  \n+\n+In Parallec, you may handle response either in Worker (before aggregation: in parallel) or in Manager (after aggregation: single thread). [Read More..](http://www.parallec.io/docs/submit-task/#apis-on-response-handling)\n+\n \n |                                                        Features                                                       | Parallec | REST Commander | Thread Pools + Async Client |\n |:---------------------------------------------------------------------------------------------------------------------:|:--------:|:--------------:|:---------------------------:|"
            }
        ]
    },
    {
        "sha": "0634c0ef7856642e3301a4c7d99a16412f3a92d9",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6MDYzNGMwZWY3ODU2NjQyZTMzMDFhNGM3ZDk5YTE2NDEyZjNhOTJkOQ==",
        "commit": {
            "author": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2015-11-04T17:04:28Z"
            },
            "committer": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2015-11-04T17:04:28Z"
            },
            "message": "update readme [skip ci]",
            "tree": {
                "sha": "47ec151369ba8e613479c8e45d3e7f3ea2809f64",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/47ec151369ba8e613479c8e45d3e7f3ea2809f64"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/0634c0ef7856642e3301a4c7d99a16412f3a92d9",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/0634c0ef7856642e3301a4c7d99a16412f3a92d9",
        "html_url": "https://github.com/eBay/parallec/commit/0634c0ef7856642e3301a4c7d99a16412f3a92d9",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/0634c0ef7856642e3301a4c7d99a16412f3a92d9/comments",
        "author": null,
        "committer": null,
        "parents": [
            {
                "sha": "b2d65b84c929147f517669a1c0f865075d7fb724",
                "url": "https://api.github.com/repos/eBay/parallec/commits/b2d65b84c929147f517669a1c0f865075d7fb724",
                "html_url": "https://github.com/eBay/parallec/commit/b2d65b84c929147f517669a1c0f865075d7fb724"
            }
        ],
        "stats": {
            "total": 2,
            "additions": 1,
            "deletions": 1
        },
        "files": [
            {
                "sha": "aa9b7ab41f9cf41be51a2b81f3ee3888b6c14a51",
                "filename": "README.md",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/0634c0ef7856642e3301a4c7d99a16412f3a92d9/README.md",
                "raw_url": "https://github.com/eBay/parallec/raw/0634c0ef7856642e3301a4c7d99a16412f3a92d9/README.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/README.md?ref=0634c0ef7856642e3301a4c7d99a16412f3a92d9",
                "patch": "@@ -8,7 +8,7 @@\n \n [![Javadoc](http://www.parallec.io/images/parallec-javadoc-blue.svg)](http://www.parallec.io/javadoc/index.html?io/parallec/core/ParallelClient.html) [![Documentation](http://www.parallec.io/images/parallec-documentation-red.svg)](http://www.parallec.io/docs/) [![Samples](http://www.parallec.io/images/parallec-samples-brightgreen.svg)](https://github.com/eBay/parallec-samples) \n \n-[[Get-Started](https://github.com/eBay/parallec#get-started) | [Features](https://github.com/eBay/parallec#features) | [Use Cases](https://github.com/eBay/parallec#use-cases) | [Motivation](https://github.com/eBay/parallec#motivation) | [Demos](https://github.com/eBay/parallec#demos) | [Performance](https://github.com/eBay/parallec#performance) | [Compare](https://github.com/eBay/parallec#compare) | [About](https://github.com/eBay/parallec#authors)]\n+[ [Get-Started](https://github.com/eBay/parallec#get-started) | [Features](https://github.com/eBay/parallec#features) | [Use Cases](https://github.com/eBay/parallec#use-cases) | [Motivation](https://github.com/eBay/parallec#motivation) | [Demos](https://github.com/eBay/parallec#demos) | [Performance](https://github.com/eBay/parallec#performance) | [Compare](https://github.com/eBay/parallec#compare) | [About](https://github.com/eBay/parallec#authors) ]\n \n Parallec is a fast parallel async HTTP/SSH/TCP/Ping client java library. Scalably aggregate and handle API responses **anyway** and send it **anywhere** by writing [20 lines](https://www.youtube.com/watch?v=QcavegPMDms) of code. A special super convenient **response context** let you pass in/out any object when handling the response. Now you can conduct scalable API calls, then pass aggregated data anywhere to elastic search, kafka, MongoDB, graphite, memcached, etc. Parallec means **Paralle**l **C**lient, and is pronounced as \"Para-like\".\n "
            }
        ]
    },
    {
        "sha": "b2d65b84c929147f517669a1c0f865075d7fb724",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6YjJkNjViODRjOTI5MTQ3ZjUxNzY2OWExYzBmODY1MDc1ZDdmYjcyNA==",
        "commit": {
            "author": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2015-11-04T17:04:09Z"
            },
            "committer": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2015-11-04T17:04:09Z"
            },
            "message": "update readme [skip ci]",
            "tree": {
                "sha": "f75218638fe8a1bca2f8c1314da6dde64642c3f1",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/f75218638fe8a1bca2f8c1314da6dde64642c3f1"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/b2d65b84c929147f517669a1c0f865075d7fb724",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/b2d65b84c929147f517669a1c0f865075d7fb724",
        "html_url": "https://github.com/eBay/parallec/commit/b2d65b84c929147f517669a1c0f865075d7fb724",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/b2d65b84c929147f517669a1c0f865075d7fb724/comments",
        "author": null,
        "committer": null,
        "parents": [
            {
                "sha": "dc92aa88e4a2f0bc4e28d65e872ebe4f98956511",
                "url": "https://api.github.com/repos/eBay/parallec/commits/dc92aa88e4a2f0bc4e28d65e872ebe4f98956511",
                "html_url": "https://github.com/eBay/parallec/commit/dc92aa88e4a2f0bc4e28d65e872ebe4f98956511"
            }
        ],
        "stats": {
            "total": 2,
            "additions": 2,
            "deletions": 0
        },
        "files": [
            {
                "sha": "4ee09b47417e93f0f1c9eff9fe926b969dd16b1b",
                "filename": "README.md",
                "status": "modified",
                "additions": 2,
                "deletions": 0,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/b2d65b84c929147f517669a1c0f865075d7fb724/README.md",
                "raw_url": "https://github.com/eBay/parallec/raw/b2d65b84c929147f517669a1c0f865075d7fb724/README.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/README.md?ref=b2d65b84c929147f517669a1c0f865075d7fb724",
                "patch": "@@ -8,6 +8,8 @@\n \n [![Javadoc](http://www.parallec.io/images/parallec-javadoc-blue.svg)](http://www.parallec.io/javadoc/index.html?io/parallec/core/ParallelClient.html) [![Documentation](http://www.parallec.io/images/parallec-documentation-red.svg)](http://www.parallec.io/docs/) [![Samples](http://www.parallec.io/images/parallec-samples-brightgreen.svg)](https://github.com/eBay/parallec-samples) \n \n+[[Get-Started](https://github.com/eBay/parallec#get-started) | [Features](https://github.com/eBay/parallec#features) | [Use Cases](https://github.com/eBay/parallec#use-cases) | [Motivation](https://github.com/eBay/parallec#motivation) | [Demos](https://github.com/eBay/parallec#demos) | [Performance](https://github.com/eBay/parallec#performance) | [Compare](https://github.com/eBay/parallec#compare) | [About](https://github.com/eBay/parallec#authors)]\n+\n Parallec is a fast parallel async HTTP/SSH/TCP/Ping client java library. Scalably aggregate and handle API responses **anyway** and send it **anywhere** by writing [20 lines](https://www.youtube.com/watch?v=QcavegPMDms) of code. A special super convenient **response context** let you pass in/out any object when handling the response. Now you can conduct scalable API calls, then pass aggregated data anywhere to elastic search, kafka, MongoDB, graphite, memcached, etc. Parallec means **Paralle**l **C**lient, and is pronounced as \"Para-like\".\n \n ![Workflow Overview](http://www.parallec.io/images/parallec-flow.svg)"
            }
        ]
    },
    {
        "sha": "dc92aa88e4a2f0bc4e28d65e872ebe4f98956511",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6ZGM5MmFhODhlNGEyZjBiYzRlMjhkNjVlODcyZWJlNGY5ODk1NjUxMQ==",
        "commit": {
            "author": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2015-11-04T16:31:08Z"
            },
            "committer": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2015-11-04T16:31:08Z"
            },
            "message": "update readme [skip ci]",
            "tree": {
                "sha": "5acbabb89601cd7fb9f82dd24ea596e00f3c9c34",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/5acbabb89601cd7fb9f82dd24ea596e00f3c9c34"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/dc92aa88e4a2f0bc4e28d65e872ebe4f98956511",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/dc92aa88e4a2f0bc4e28d65e872ebe4f98956511",
        "html_url": "https://github.com/eBay/parallec/commit/dc92aa88e4a2f0bc4e28d65e872ebe4f98956511",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/dc92aa88e4a2f0bc4e28d65e872ebe4f98956511/comments",
        "author": null,
        "committer": null,
        "parents": [
            {
                "sha": "5be939097e83e83e801660b20a82b8655df8fc93",
                "url": "https://api.github.com/repos/eBay/parallec/commits/5be939097e83e83e801660b20a82b8655df8fc93",
                "html_url": "https://github.com/eBay/parallec/commit/5be939097e83e83e801660b20a82b8655df8fc93"
            }
        ],
        "stats": {
            "total": 57,
            "additions": 53,
            "deletions": 4
        },
        "files": [
            {
                "sha": "ec7a0f262555ef76edd39bd2c8dcee2804c4c6c2",
                "filename": "README.md",
                "status": "modified",
                "additions": 53,
                "deletions": 4,
                "changes": 57,
                "blob_url": "https://github.com/eBay/parallec/blob/dc92aa88e4a2f0bc4e28d65e872ebe4f98956511/README.md",
                "raw_url": "https://github.com/eBay/parallec/raw/dc92aa88e4a2f0bc4e28d65e872ebe4f98956511/README.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/README.md?ref=dc92aa88e4a2f0bc4e28d65e872ebe4f98956511",
                "patch": "@@ -8,12 +8,12 @@\n \n [![Javadoc](http://www.parallec.io/images/parallec-javadoc-blue.svg)](http://www.parallec.io/javadoc/index.html?io/parallec/core/ParallelClient.html) [![Documentation](http://www.parallec.io/images/parallec-documentation-red.svg)](http://www.parallec.io/docs/) [![Samples](http://www.parallec.io/images/parallec-samples-brightgreen.svg)](https://github.com/eBay/parallec-samples) \n \n-Parallec is a fast parallel async HTTP/SSH/TCP/Ping client java library. Scalably aggregate and handle API responses **anyway** and send it **anywhere** by writing [20 lines](https://www.youtube.com/watch?v=QcavegPMDms) of code. Response handler with context enables you conduct scalable API calls, then pass aggregated data anywhere to elastic search, kafka, MongoDB, graphite, memcached, etc. Parallec means **Paralle**l **C**lient, and is pronounced as \"Para-like\".\n+Parallec is a fast parallel async HTTP/SSH/TCP/Ping client java library. Scalably aggregate and handle API responses **anyway** and send it **anywhere** by writing [20 lines](https://www.youtube.com/watch?v=QcavegPMDms) of code. A special super convenient **response context** let you pass in/out any object when handling the response. Now you can conduct scalable API calls, then pass aggregated data anywhere to elastic search, kafka, MongoDB, graphite, memcached, etc. Parallec means **Paralle**l **C**lient, and is pronounced as \"Para-like\".\n \n ![Workflow Overview](http://www.parallec.io/images/parallec-flow.svg)\n \n ### Get Started\n-Maven\n+Donwload [the latest JAR](https://search.maven.org/remote_content?g=io.parallec&a=parallec-core&v=LATEST) or grab from Maven:\n \n ```xml\n <dependency>\n@@ -23,13 +23,18 @@ Maven\n </dependency>\n ```\n \n-Gradle\n+or Gradle:\n ```xml\n compile 'io.parallec:parallec-core:0.9.0'\n ```\n \n+\n **6 Line Example**\n \n+\n+In the example below,  simply changing **prepareHttpGet()** to **prepareSsh()**, **prepareTcp()**, **preparePing()** enables you to conduct parallel SSH/TCP/Ping. Details please refer to the [Java Doc](http://www.parallec.io/javadoc/index.html?io/parallec/core/ParallelClient.html) and [Example Code](https://github.com/ebay/parallec-samples).\n+\n+\n ```java\n import io.parallec.core.*;\n import java.util.Map;\n@@ -42,13 +47,57 @@ pc.prepareHttpGet(\"\").setTargetHostsFromString(\"www.google.com www.ebay.com www.\n         System.out.println( res.toString() );  }\n });\n ```\t\n+**20 Line Example**\n+\n+Now that you have learned the basics, check out how easy to pass an elastic search client using the convenient **response context** to aggregate data anywhere you like.\n+\n+```java\n+ParallelClient pc = new ParallelClient();\n+org.elasticsearch.node.Node node = nodeBuilder().node(); //elastic client initialize\n+HashMap<String, Object> responseContext = new HashMap<String, Object>();\n+responseContext.put(\"Client\", node.client());\n+pc.prepareHttpGet(\"\")\n+        .setConcurrency(1000).setResponseContext(responseContext)\n+        .setTargetHostsFromLineByLineText(\"http://www.parallec.io/userdata/sample_target_hosts_top100_old.txt\", HostsSourceType.URL)\n+        .execute( new ParallecResponseHandler() {\n+            public void onCompleted(ResponseOnSingleTask res,\n+                    Map<String, Object> responseContext) {\n+                Map<String, Object> metricMap = new HashMap<String, Object>();\n+                metricMap.put(\"StatusCode\", res.getStatusCode().replaceAll(\" \", \"_\"));\n+                metricMap.put(\"LastUpdated\",PcDateUtils.getNowDateTimeStrStandard());\n+                metricMap.put(\"NodeGroupType\", \"Web100\");\n+                Client client = (Client) responseContext.get(\"Client\");\n+                client.prepareIndex(\"local\", \"parallec\", res.getHost()).setSource(metricMap).execute();\n+            }\n+        });\n+node.close(); pc.releaseExternalResources();\n+```\n+\n+**Different Requests to the Same Target**\n+\n+Now see how easy to use the request template to send multiple different requests to the same target. [Read more..](http://www.parallec.io/docs/submit-task/#apis-on-variable-replacement-for-heterogeneous-requests)\n+\n+```java\n+pc.prepareHttpGet(\"/userdata/sample_weather_$ZIP.txt\")\n+    .setReplaceVarMapToSingleTargetSingleVar(\"ZIP\",\n+        Arrays.asList(\"95037\",\"48824\"), \"www.parallec.io\")\n+    .setResponseContext(responseContext)\n+    .execute(new ParallecResponseHandler() {...}...\n+          \n+```\n+\n+- [http://www.parallec.io/userdata/sample_weather_48824.txt](http://www.parallec.io/userdata/sample_weather_48824.txt)\n+- [http://www.parallec.io/userdata/sample_weather_95037.txt](http://www.parallec.io/userdata/sample_weather_95037.txt)\n+\n+###More Readings\n \n - [**More Examples**](https://github.com/ebay/parallec-samples#http) on setting context, send to elastic search, async running, auto progress polling, track progress, TCP/SSH/Ping.\n - [**Set Target Hosts**](http://www.parallec.io/docs/submit-task/#set-target-hosts) from list, string, line by line text, json path, from local or remote URLs.\n - [**Full Documentation**](http://www.parallec.io/docs/)\n - [**Javadoc**](http://www.parallec.io/javadoc/index.html?io/parallec/core/package-summary.html)\n - [**Ping Demo**](#demos) Ping 8000 Servers within 11.1 Seconds, performance test vs. [FPing](http://fping.org/).\n \n+\n ###Use Cases\n \n 1. Scalable web server monitoring, management, and configuration push, ping check.\n@@ -65,7 +114,7 @@ Parallec is built on Akka actors and Async HTTP Client / Netty / Jsch.  The libr\n **90%+ Test coverage** assures you always find an example of each of feature.\n \n 1. **Exceedingly intuitive** interface with builder pattern similar to that in [Async HTTP Client](https://github.com/AsyncHttpClient/async-http-client), but handles concurrency behind the scenes.\n-1. **Generic response handler with context**. Enable total freedom of processing each response your way. Process and aggregate data **anywhere** to Kafka, Redis, Elastic Search, mongoDB, CMS and etc.  \n+1. **Generic response handler with context**. Special response context enables total freedom and convenience of processing each response your way. Process and aggregate data **anywhere** to Kafka, Redis, Elastic Search, mongoDB, CMS and etc.  \n 1. **Flexible on when to invoke the handler**:  before (in worker thread) or after the aggregation (in master/manager thread).\n 1. **Flexible Input of target hosts**: Input target hosts from a list, string, JSON Path from local files or a remote URL\n 1. **Scalable and fast**, **infinitely scalable** with built-in **Concurrency control**."
            }
        ]
    },
    {
        "sha": "5be939097e83e83e801660b20a82b8655df8fc93",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6NWJlOTM5MDk3ZTgzZTgzZTgwMTY2MGIyMGE4MmI4NjU1ZGY4ZmM5Mw==",
        "commit": {
            "author": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2015-11-04T01:59:09Z"
            },
            "committer": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2015-11-04T01:59:09Z"
            },
            "message": "update readme [skip ci]",
            "tree": {
                "sha": "0b4d3cd57b968cc90f96e5216d00fd9d19599556",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/0b4d3cd57b968cc90f96e5216d00fd9d19599556"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/5be939097e83e83e801660b20a82b8655df8fc93",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/5be939097e83e83e801660b20a82b8655df8fc93",
        "html_url": "https://github.com/eBay/parallec/commit/5be939097e83e83e801660b20a82b8655df8fc93",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/5be939097e83e83e801660b20a82b8655df8fc93/comments",
        "author": null,
        "committer": null,
        "parents": [
            {
                "sha": "8e3319c25245e15bf1bd8f14428cde7349b4a070",
                "url": "https://api.github.com/repos/eBay/parallec/commits/8e3319c25245e15bf1bd8f14428cde7349b4a070",
                "html_url": "https://github.com/eBay/parallec/commit/8e3319c25245e15bf1bd8f14428cde7349b4a070"
            }
        ],
        "stats": {
            "total": 4,
            "additions": 2,
            "deletions": 2
        },
        "files": [
            {
                "sha": "8a698d96be1a1fb94f9eed0bb53c5d300a760a09",
                "filename": "README.md",
                "status": "modified",
                "additions": 2,
                "deletions": 2,
                "changes": 4,
                "blob_url": "https://github.com/eBay/parallec/blob/5be939097e83e83e801660b20a82b8655df8fc93/README.md",
                "raw_url": "https://github.com/eBay/parallec/raw/5be939097e83e83e801660b20a82b8655df8fc93/README.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/README.md?ref=5be939097e83e83e801660b20a82b8655df8fc93",
                "patch": "@@ -28,7 +28,7 @@ Gradle\n compile 'io.parallec:parallec-core:0.9.0'\n ```\n \n-10 Line Example\n+**6 Line Example**\n \n ```java\n import io.parallec.core.*;\n@@ -43,7 +43,7 @@ pc.prepareHttpGet(\"\").setTargetHostsFromString(\"www.google.com www.ebay.com www.\n });\n ```\t\n \n-- [**More Examples**](https://github.com/ebay/parallec-samples#http) on setting context, send to elastic search, async running, track progress.\n+- [**More Examples**](https://github.com/ebay/parallec-samples#http) on setting context, send to elastic search, async running, auto progress polling, track progress, TCP/SSH/Ping.\n - [**Set Target Hosts**](http://www.parallec.io/docs/submit-task/#set-target-hosts) from list, string, line by line text, json path, from local or remote URLs.\n - [**Full Documentation**](http://www.parallec.io/docs/)\n - [**Javadoc**](http://www.parallec.io/javadoc/index.html?io/parallec/core/package-summary.html)"
            }
        ]
    },
    {
        "sha": "8e3319c25245e15bf1bd8f14428cde7349b4a070",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6OGUzMzE5YzI1MjQ1ZTE1YmYxYmQ4ZjE0NDI4Y2RlNzM0OWI0YTA3MA==",
        "commit": {
            "author": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2015-11-03T17:00:44Z"
            },
            "committer": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2015-11-03T17:00:44Z"
            },
            "message": "update readme [skip ci]",
            "tree": {
                "sha": "bee324eebb56fae45ef3d40188311b0c2c946a94",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/bee324eebb56fae45ef3d40188311b0c2c946a94"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/8e3319c25245e15bf1bd8f14428cde7349b4a070",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/8e3319c25245e15bf1bd8f14428cde7349b4a070",
        "html_url": "https://github.com/eBay/parallec/commit/8e3319c25245e15bf1bd8f14428cde7349b4a070",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/8e3319c25245e15bf1bd8f14428cde7349b4a070/comments",
        "author": null,
        "committer": null,
        "parents": [
            {
                "sha": "f6ee59e60fd1e1d761f1abfdc9bfa785ee4b103d",
                "url": "https://api.github.com/repos/eBay/parallec/commits/f6ee59e60fd1e1d761f1abfdc9bfa785ee4b103d",
                "html_url": "https://github.com/eBay/parallec/commit/f6ee59e60fd1e1d761f1abfdc9bfa785ee4b103d"
            }
        ],
        "stats": {
            "total": 6,
            "additions": 3,
            "deletions": 3
        },
        "files": [
            {
                "sha": "d6aaa1ce6a583d5e9e9461cd3753f5cd283c1452",
                "filename": "README.md",
                "status": "modified",
                "additions": 2,
                "deletions": 2,
                "changes": 4,
                "blob_url": "https://github.com/eBay/parallec/blob/8e3319c25245e15bf1bd8f14428cde7349b4a070/README.md",
                "raw_url": "https://github.com/eBay/parallec/raw/8e3319c25245e15bf1bd8f14428cde7349b4a070/README.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/README.md?ref=8e3319c25245e15bf1bd8f14428cde7349b4a070",
                "patch": "@@ -8,7 +8,7 @@\n \n [![Javadoc](http://www.parallec.io/images/parallec-javadoc-blue.svg)](http://www.parallec.io/javadoc/index.html?io/parallec/core/ParallelClient.html) [![Documentation](http://www.parallec.io/images/parallec-documentation-red.svg)](http://www.parallec.io/docs/) [![Samples](http://www.parallec.io/images/parallec-samples-brightgreen.svg)](https://github.com/eBay/parallec-samples) \n \n-Parallec is a fast parallel async HTTP/SSH/TCP/Ping client java library. Scalably aggregate and handle API responses **anyway** and send it **anywhere** by writing [20 lines](https://www.youtube.com/watch?v=QcavegPMDms) of code. Response handler with context enables you conduct scalable API calls, then pass aggregated data anywhere to elastic search, kafka, MongoDB, graphite, memcached, etc. \n+Parallec is a fast parallel async HTTP/SSH/TCP/Ping client java library. Scalably aggregate and handle API responses **anyway** and send it **anywhere** by writing [20 lines](https://www.youtube.com/watch?v=QcavegPMDms) of code. Response handler with context enables you conduct scalable API calls, then pass aggregated data anywhere to elastic search, kafka, MongoDB, graphite, memcached, etc. Parallec means **Paralle**l **C**lient, and is pronounced as \"Para-like\".\n \n ![Workflow Overview](http://www.parallec.io/images/parallec-flow.svg)\n \n@@ -60,7 +60,7 @@ pc.prepareHttpGet(\"\").setTargetHostsFromString(\"www.google.com www.ebay.com www.\n \n ## Features<a name=\"features\"></a>\n \n-Parallec means **Paralle**l **C**lient, and is pronounced as \"Para-like\". Parallec is built on Akka actors and Async HTTP Client / Netty / Jsch.  The library focuses on HTTP while also enables scalable communication over SSH/Ping/TCP.\n+Parallec is built on Akka actors and Async HTTP Client / Netty / Jsch.  The library focuses on HTTP while also enables scalable communication over SSH/Ping/TCP.\n \n **90%+ Test coverage** assures you always find an example of each of feature.\n "
            },
            {
                "sha": "9c8fdee718ab83b33e85e9ea2e3114f29e1b8368",
                "filename": "src/main/java/io/parallec/core/actor/ExecutionManager.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/8e3319c25245e15bf1bd8f14428cde7349b4a070/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FExecutionManager.java",
                "raw_url": "https://github.com/eBay/parallec/raw/8e3319c25245e15bf1bd8f14428cde7349b4a070/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FExecutionManager.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FExecutionManager.java?ref=8e3319c25245e15bf1bd8f14428cde7349b4a070",
                "patch": "@@ -472,7 +472,7 @@ public void onReceive(Object message) {\n                                     + \"AFT %s S @ %s @ %s , TaskID : %s , CODE: %s, RESP_BRIEF: %s %s\",\n                                     responseCount, responseCount, requestCount\n                                     - responseCount, requestCount,\n-                                    progressPercent, secondElapsedStr, \"\",\n+                                    progressPercent, secondElapsedStr, hostName,\n                                     responseReceiveTimeStr, taskIdTrim,\n                                     taskResponse.getStatusCode(), displayResponse,\n                                     taskResponse.getErrorMessage()==null? \"\" : \", ERR: \"+ taskResponse.getErrorMessage()));"
            }
        ]
    },
    {
        "sha": "f6ee59e60fd1e1d761f1abfdc9bfa785ee4b103d",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6ZjZlZTU5ZTYwZmQxZTFkNzYxZjFhYmZkYzliZmE3ODVlZTRiMTAzZA==",
        "commit": {
            "author": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2015-11-03T07:31:00Z"
            },
            "committer": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2015-11-03T07:31:00Z"
            },
            "message": "update readme [skip ci]",
            "tree": {
                "sha": "8c54e46a4600f4352e8b988c235fd31b18830402",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/8c54e46a4600f4352e8b988c235fd31b18830402"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/f6ee59e60fd1e1d761f1abfdc9bfa785ee4b103d",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/f6ee59e60fd1e1d761f1abfdc9bfa785ee4b103d",
        "html_url": "https://github.com/eBay/parallec/commit/f6ee59e60fd1e1d761f1abfdc9bfa785ee4b103d",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/f6ee59e60fd1e1d761f1abfdc9bfa785ee4b103d/comments",
        "author": null,
        "committer": null,
        "parents": [
            {
                "sha": "be006e973cef2364fd9e19c20c4cf93d24670ce9",
                "url": "https://api.github.com/repos/eBay/parallec/commits/be006e973cef2364fd9e19c20c4cf93d24670ce9",
                "html_url": "https://github.com/eBay/parallec/commit/be006e973cef2364fd9e19c20c4cf93d24670ce9"
            }
        ],
        "stats": {
            "total": 31,
            "additions": 20,
            "deletions": 11
        },
        "files": [
            {
                "sha": "bfe6a0a95b6c5a55f84666b6e292a40e27525d45",
                "filename": "CHANGELOG.md",
                "status": "modified",
                "additions": 8,
                "deletions": 0,
                "changes": 8,
                "blob_url": "https://github.com/eBay/parallec/blob/f6ee59e60fd1e1d761f1abfdc9bfa785ee4b103d/CHANGELOG.md",
                "raw_url": "https://github.com/eBay/parallec/raw/f6ee59e60fd1e1d761f1abfdc9bfa785ee4b103d/CHANGELOG.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/CHANGELOG.md?ref=f6ee59e60fd1e1d761f1abfdc9bfa785ee4b103d",
                "patch": "@@ -1,6 +1,14 @@\n Parallec Change Log\n ==========\n \n+## Version 0.9.1\n+\n+_2015-11-03_\n+\n+* Chnage: maven pom: maven-compiler-plugin version to 1.7.\n+\n+\n+\n ## Version 0.9.0\n \n _2015-11-01_"
            },
            {
                "sha": "74b286a01867757d9888f4be96e6ec9755c0cabf",
                "filename": "README.md",
                "status": "modified",
                "additions": 8,
                "deletions": 7,
                "changes": 15,
                "blob_url": "https://github.com/eBay/parallec/blob/f6ee59e60fd1e1d761f1abfdc9bfa785ee4b103d/README.md",
                "raw_url": "https://github.com/eBay/parallec/raw/f6ee59e60fd1e1d761f1abfdc9bfa785ee4b103d/README.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/README.md?ref=f6ee59e60fd1e1d761f1abfdc9bfa785ee4b103d",
                "patch": "@@ -47,6 +47,7 @@ pc.prepareHttpGet(\"\").setTargetHostsFromString(\"www.google.com www.ebay.com www.\n - [**Set Target Hosts**](http://www.parallec.io/docs/submit-task/#set-target-hosts) from list, string, line by line text, json path, from local or remote URLs.\n - [**Full Documentation**](http://www.parallec.io/docs/)\n - [**Javadoc**](http://www.parallec.io/javadoc/index.html?io/parallec/core/package-summary.html)\n+- [**Ping Demo**](#demos) Ping 8000 Servers within 11.1 Seconds, performance test vs. [FPing](http://fping.org/).\n \n ###Use Cases\n \n@@ -75,7 +76,7 @@ Parallec means **Paralle**l **C**lient, and is pronounced as \"Para-like\". Parall\n 1. **Fine-grained task progress tracking** helps you track the the progress each individual task status. Of a parallel task on 1000 target hosts, you may check status on any single host task, and percentage progress on how many are completed.\n 1. **Fine-grained task cancelation** on whole/individual request level. Of a parallel task on 1000 target hosts, you may cancel a subset of target hosts or cancel the whole parallel task anytime.\n 1. **Status-code-aggregation** is provided out of the box.\n-1. **Parallel Ping** supports both InetAddress.reachable ICMP (requires root) and Process based ping with retries.  Performance testing shows it is ** 67% faster** than best-effort tuned FPing on pinging on 1500 targets. (2.7 vs 4.5 sec)\n+1. **Parallel Ping** supports both InetAddress.reachable ICMP (requires root) and Process based ping with retries.  Performance testing shows it is ** 2x the speed of** than best-effort tuned FPing on pinging on 1500 targets. (2.2 vs 4.5 sec)\n 1. **Parallel SSH** supports both key and password based login and task cancellation.\n 1. **Parallel TCP** supports idle timeout based channel closes.\n \n@@ -89,13 +90,17 @@ Parallec means **Paralle**l **C**lient, and is pronounced as \"Para-like\". Parall\n With the feedbacks, lessons, and improvements from the past year of internal usage and open source of **[REST Commander](http://www.restcommander.com)**, we now made the core of REST Commander as an easy to use standalone library. We added [**15+ new**](#compare) features, rewritten 70%+ of the code, with [**90%+ test coverage**](https://codecov.io/github/eBay/parallec) for confident usage and contribution. This time we also structure it better so that most internal development can be directly made here.\n \n \n-## Watch Parallec in Action\n+## Watch Parallec in Action<a name=\"demos\"></a>\n \n [**Watch Demo**](https://www.youtube.com/watch?v=QcavegPMDms\"Parallec demo - Click to Watch!\"): Parallec Aggregates 100 websites status to elastic search and visualized with [20 lines of code](https://github.com/eBay/parallec-samples/blob/master/sample-apps/src/main/java/io/parallec/sample/app/http/Http100WebAggregateToElasticSearchApp.java).\n \n <a title=\"Click to Watch HD version in Youtube\" href=\"https://www.youtube.com/watch?v=QcavegPMDms\"><img alt=\"20 lines parallec to elastic search demo\" src=\"http://www.parallec.io/demos/elastic-web100-v3.gif\" /></a>\n \n \n+[**Watch Ping Demo**](https://www.youtube.com/watch?v=9m1TFuO1Mys\"Parallec Ping vs FPing demo - Click to Watch!\"): Parallec is **2x Speed** of best-efforted tuned [FPing](http://fping.org) with same accurate results and pings 8000 servers within 11.1 seconds, details check [here](https://github.com/eBay/parallec/wiki/Parallec-pings-8000-servers-in-11.1-seconds).\n+\n+<a title=\"Click to Watch HD version in Youtube\" href=\"https://www.youtube.com/watch?v=9m1TFuO1Mys\"><img alt=\"parallec pings 8000 servers in 11.1 seconds\" src=\"http://www.parallec.io/demos/parallec-vs-fping-v1.gif\" /></a>\n+\n \n ## Performance\n \n@@ -108,14 +113,10 @@ We conducted remote task execution API on 3,000 servers with response aggregated\n With another faster API, calls to 8,000 servers in the same datacenter with response aggregated in memory in 12 seconds. \n \n #####Ping\n-Parallec 2.7 seconds vs FPing 4.5 seconds on 1500 servers. Parallec is 67% faster than [FPing](http://fping.org/) (after best-effort tuning : -i 1 -r 0 v3.12)  of pinging 1500 servers while getting the same ping results.  While FPing consistently crashing (seg fault) when it pings 2000 or more servers,  Parallec pings 8000 servers within 11.8 seconds with breeze.\n+Parallec 2.2 seconds vs FPing 4.5 seconds on 1500 servers. Parallec is 2x the speed of [FPing](http://fping.org/) (after best-effort tuning : -i 1 -r 0 v3.12)  of pinging 1500 servers while getting the same ping results.  Parallec pings 8000 servers within 11.1 seconds with breeze.\n \n As usual, don't rely on these numbers and perform your own benchmarks.\n \n-\n-\n-\n-\n ## Compare Parallec vs REST Commander vs ThreadPools+Async Client<a name=\"compare\"></a>\n \n "
            },
            {
                "sha": "b90f903e726e97277981e35a11144ab4425aacea",
                "filename": "pom.xml",
                "status": "modified",
                "additions": 2,
                "deletions": 2,
                "changes": 4,
                "blob_url": "https://github.com/eBay/parallec/blob/f6ee59e60fd1e1d761f1abfdc9bfa785ee4b103d/pom.xml",
                "raw_url": "https://github.com/eBay/parallec/raw/f6ee59e60fd1e1d761f1abfdc9bfa785ee4b103d/pom.xml",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/pom.xml?ref=f6ee59e60fd1e1d761f1abfdc9bfa785ee4b103d",
                "patch": "@@ -214,8 +214,8 @@\n \t\t\t\t\t<groupId>org.apache.maven.plugins</groupId>\n \t\t\t\t\t<artifactId>maven-compiler-plugin</artifactId>\n \t\t\t\t\t<configuration>\n-\t\t\t\t\t\t<source>1.6</source>\n-\t\t\t\t\t\t<target>1.6</target>\n+\t\t\t\t\t\t<source>1.7</source>\n+\t\t\t\t\t\t<target>1.7</target>\n \t\t\t\t\t</configuration>\n \t\t\t\t</plugin>\n \t\t\t</plugins>"
            },
            {
                "sha": "3facd418cfb36aca1c17ef302f1695c58fda887c",
                "filename": "src/main/java/io/parallec/core/actor/ExecutionManager.java",
                "status": "modified",
                "additions": 2,
                "deletions": 2,
                "changes": 4,
                "blob_url": "https://github.com/eBay/parallec/blob/f6ee59e60fd1e1d761f1abfdc9bfa785ee4b103d/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FExecutionManager.java",
                "raw_url": "https://github.com/eBay/parallec/raw/f6ee59e60fd1e1d761f1abfdc9bfa785ee4b103d/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FExecutionManager.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FExecutionManager.java?ref=f6ee59e60fd1e1d761f1abfdc9bfa785ee4b103d",
                "patch": "@@ -466,13 +466,13 @@ public void onReceive(Object message) {\n                         || progressPercent > ParallecGlobalConfig.logAllResponseAfterPercent\n                         || responseCount % ParallecGlobalConfig.logResponseInterval==0\n                         ){\n-                    // percent is escaped using percent sign; \n+                    // percent is escaped using percent sign; hostName\n                     logger.info(String\n                             .format(\"\\n[%d]__RESP_RECV_IN_MGR %d (+%d) / %d (%.5g%%)  \"\n                                     + \"AFT %s S @ %s @ %s , TaskID : %s , CODE: %s, RESP_BRIEF: %s %s\",\n                                     responseCount, responseCount, requestCount\n                                     - responseCount, requestCount,\n-                                    progressPercent, secondElapsedStr, hostName,\n+                                    progressPercent, secondElapsedStr, \"\",\n                                     responseReceiveTimeStr, taskIdTrim,\n                                     taskResponse.getStatusCode(), displayResponse,\n                                     taskResponse.getErrorMessage()==null? \"\" : \", ERR: \"+ taskResponse.getErrorMessage()));"
            }
        ]
    },
    {
        "sha": "be006e973cef2364fd9e19c20c4cf93d24670ce9",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6YmUwMDZlOTczY2VmMjM2NGZkOWUxOWMyMGM0Y2Y5M2QyNDY3MGNlOQ==",
        "commit": {
            "author": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2015-11-03T02:06:29Z"
            },
            "committer": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2015-11-03T02:06:29Z"
            },
            "message": "update readme [skip ci]",
            "tree": {
                "sha": "642c4068f065c6988c8523a68fa9ac3eae380dca",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/642c4068f065c6988c8523a68fa9ac3eae380dca"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/be006e973cef2364fd9e19c20c4cf93d24670ce9",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/be006e973cef2364fd9e19c20c4cf93d24670ce9",
        "html_url": "https://github.com/eBay/parallec/commit/be006e973cef2364fd9e19c20c4cf93d24670ce9",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/be006e973cef2364fd9e19c20c4cf93d24670ce9/comments",
        "author": null,
        "committer": null,
        "parents": [
            {
                "sha": "673c90f602f87c72d72540d9a716c6b3737f7703",
                "url": "https://api.github.com/repos/eBay/parallec/commits/673c90f602f87c72d72540d9a716c6b3737f7703",
                "html_url": "https://github.com/eBay/parallec/commit/673c90f602f87c72d72540d9a716c6b3737f7703"
            }
        ],
        "stats": {
            "total": 4,
            "additions": 2,
            "deletions": 2
        },
        "files": [
            {
                "sha": "cf7e77d5605e1587f9bbf11415fa10a535990ec9",
                "filename": "README.md",
                "status": "modified",
                "additions": 2,
                "deletions": 2,
                "changes": 4,
                "blob_url": "https://github.com/eBay/parallec/blob/be006e973cef2364fd9e19c20c4cf93d24670ce9/README.md",
                "raw_url": "https://github.com/eBay/parallec/raw/be006e973cef2364fd9e19c20c4cf93d24670ce9/README.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/README.md?ref=be006e973cef2364fd9e19c20c4cf93d24670ce9",
                "patch": "@@ -4,7 +4,7 @@\n ![build status](https://img.shields.io/badge/build-info=>-green.svg) [![Build Status](https://travis-ci.org/eBay/parallec.svg?branch=master)](https://travis-ci.org/eBay/parallec) [![Coverage Status](https://img.shields.io/codecov/c/github/eBay/parallec.svg)](https://codecov.io/github/eBay/parallec) [![Apache V2.0 License](http://www.parallec.io/images/apache2.svg) ](https://github.com/eBay/parallec/blob/master/LICENSE)\n \n \n-![latest 0.9.x](http://img.shields.io/badge/latest_stable-0.9.x=>-green.svg) [ ![latest beta  maven central](https://maven-badges.herokuapp.com/maven-central/io.parallec/parallec-core/badge.svg?style=flat)](http://search.maven.org/#artifactdetails|io.parallec|parallec-core|0.9.0|) \n+![latest 0.9.x](http://img.shields.io/badge/latest_stable-0.9.x=>-green.svg) [ ![latest beta  maven central](https://maven-badges.herokuapp.com/maven-central/io.parallec/parallec-core/badge.svg?style=flat)](http://search.maven.org/#artifactdetails|io.parallec|parallec-core|0.9.0|) [![Gitter](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/eBay/parallec?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge)\n \n [![Javadoc](http://www.parallec.io/images/parallec-javadoc-blue.svg)](http://www.parallec.io/javadoc/index.html?io/parallec/core/ParallelClient.html) [![Documentation](http://www.parallec.io/images/parallec-documentation-red.svg)](http://www.parallec.io/docs/) [![Samples](http://www.parallec.io/images/parallec-samples-brightgreen.svg)](https://github.com/eBay/parallec-samples) \n \n@@ -43,7 +43,7 @@ pc.prepareHttpGet(\"\").setTargetHostsFromString(\"www.google.com www.ebay.com www.\n });\n ```\t\n \n-- [**More Examples**](https://github.com/ebay/parallec-samples#http) on setting context, request templates, send to elastic search, async running, track progress.\n+- [**More Examples**](https://github.com/ebay/parallec-samples#http) on setting context, send to elastic search, async running, track progress.\n - [**Set Target Hosts**](http://www.parallec.io/docs/submit-task/#set-target-hosts) from list, string, line by line text, json path, from local or remote URLs.\n - [**Full Documentation**](http://www.parallec.io/docs/)\n - [**Javadoc**](http://www.parallec.io/javadoc/index.html?io/parallec/core/package-summary.html)"
            }
        ]
    },
    {
        "sha": "673c90f602f87c72d72540d9a716c6b3737f7703",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6NjczYzkwZjYwMmY4N2M3MmQ3MjU0MGQ5YTcxNmM2YjM3MzdmNzcwMw==",
        "commit": {
            "author": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2015-11-02T20:17:43Z"
            },
            "committer": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2015-11-02T20:17:43Z"
            },
            "message": "update readme [skip ci]",
            "tree": {
                "sha": "9ce71a169804d4ad70cc58150ff791b429e42976",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/9ce71a169804d4ad70cc58150ff791b429e42976"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/673c90f602f87c72d72540d9a716c6b3737f7703",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/673c90f602f87c72d72540d9a716c6b3737f7703",
        "html_url": "https://github.com/eBay/parallec/commit/673c90f602f87c72d72540d9a716c6b3737f7703",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/673c90f602f87c72d72540d9a716c6b3737f7703/comments",
        "author": null,
        "committer": null,
        "parents": [
            {
                "sha": "df4f1499dfd57409d2990c1286158003b0e8e00f",
                "url": "https://api.github.com/repos/eBay/parallec/commits/df4f1499dfd57409d2990c1286158003b0e8e00f",
                "html_url": "https://github.com/eBay/parallec/commit/df4f1499dfd57409d2990c1286158003b0e8e00f"
            }
        ],
        "stats": {
            "total": 6,
            "additions": 2,
            "deletions": 4
        },
        "files": [
            {
                "sha": "7ed8092e0a5328cb97f95a6314e6f979c9ba2d56",
                "filename": "README.md",
                "status": "modified",
                "additions": 2,
                "deletions": 4,
                "changes": 6,
                "blob_url": "https://github.com/eBay/parallec/blob/673c90f602f87c72d72540d9a716c6b3737f7703/README.md",
                "raw_url": "https://github.com/eBay/parallec/raw/673c90f602f87c72d72540d9a716c6b3737f7703/README.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/README.md?ref=673c90f602f87c72d72540d9a716c6b3737f7703",
                "patch": "@@ -10,11 +10,9 @@\n \n Parallec is a fast parallel async HTTP/SSH/TCP/Ping client java library. Scalably aggregate and handle API responses **anyway** and send it **anywhere** by writing [20 lines](https://www.youtube.com/watch?v=QcavegPMDms) of code. Response handler with context enables you conduct scalable API calls, then pass aggregated data anywhere to elastic search, kafka, MongoDB, graphite, memcached, etc. \n \n-\n ![Workflow Overview](http://www.parallec.io/images/parallec-flow.svg)\n \n ### Get Started\n-\n Maven\n \n ```xml\n@@ -45,7 +43,7 @@ pc.prepareHttpGet(\"\").setTargetHostsFromString(\"www.google.com www.ebay.com www.\n });\n ```\t\n \n-- [**More Sample Applications**](https://github.com/ebay/parallec-samples#http).\n+- [**More Examples**](https://github.com/ebay/parallec-samples#http) on setting context, request templates, send to elastic search, async running, track progress.\n - [**Set Target Hosts**](http://www.parallec.io/docs/submit-task/#set-target-hosts) from list, string, line by line text, json path, from local or remote URLs.\n - [**Full Documentation**](http://www.parallec.io/docs/)\n - [**Javadoc**](http://www.parallec.io/javadoc/index.html?io/parallec/core/package-summary.html)\n@@ -93,7 +91,7 @@ With the feedbacks, lessons, and improvements from the past year of internal usa\n \n ## Watch Parallec in Action\n \n-[**Watch Demo**](https://www.youtube.com/watch?v=QcavegPMDms\"Parallec demo - Click to Watch!\"): Parallec Aggregates 100 websites status with 20 lines of code.\n+[**Watch Demo**](https://www.youtube.com/watch?v=QcavegPMDms\"Parallec demo - Click to Watch!\"): Parallec Aggregates 100 websites status to elastic search and visualized with [20 lines of code](https://github.com/eBay/parallec-samples/blob/master/sample-apps/src/main/java/io/parallec/sample/app/http/Http100WebAggregateToElasticSearchApp.java).\n \n <a title=\"Click to Watch HD version in Youtube\" href=\"https://www.youtube.com/watch?v=QcavegPMDms\"><img alt=\"20 lines parallec to elastic search demo\" src=\"http://www.parallec.io/demos/elastic-web100-v3.gif\" /></a>\n "
            }
        ]
    },
    {
        "sha": "df4f1499dfd57409d2990c1286158003b0e8e00f",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6ZGY0ZjE0OTlkZmQ1NzQwOWQyOTkwYzEyODYxNTgwMDNiMGU4ZTAwZg==",
        "commit": {
            "author": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2015-11-02T16:54:26Z"
            },
            "committer": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2015-11-02T16:54:26Z"
            },
            "message": "update readme [skip ci]",
            "tree": {
                "sha": "9cbcb8c90c5722be0d342acd6b2d867774800659",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/9cbcb8c90c5722be0d342acd6b2d867774800659"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/df4f1499dfd57409d2990c1286158003b0e8e00f",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/df4f1499dfd57409d2990c1286158003b0e8e00f",
        "html_url": "https://github.com/eBay/parallec/commit/df4f1499dfd57409d2990c1286158003b0e8e00f",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/df4f1499dfd57409d2990c1286158003b0e8e00f/comments",
        "author": null,
        "committer": null,
        "parents": [
            {
                "sha": "6e451f1947fd689de1077a61ca625edcc9367f4b",
                "url": "https://api.github.com/repos/eBay/parallec/commits/6e451f1947fd689de1077a61ca625edcc9367f4b",
                "html_url": "https://github.com/eBay/parallec/commit/6e451f1947fd689de1077a61ca625edcc9367f4b"
            }
        ],
        "stats": {
            "total": 2,
            "additions": 1,
            "deletions": 1
        },
        "files": [
            {
                "sha": "1a2efb76790bc54434ee1824c15e16506a14560a",
                "filename": "README.md",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/df4f1499dfd57409d2990c1286158003b0e8e00f/README.md",
                "raw_url": "https://github.com/eBay/parallec/raw/df4f1499dfd57409d2990c1286158003b0e8e00f/README.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/README.md?ref=df4f1499dfd57409d2990c1286158003b0e8e00f",
                "patch": "@@ -46,7 +46,7 @@ pc.prepareHttpGet(\"\").setTargetHostsFromString(\"www.google.com www.ebay.com www.\n ```\t\n \n - [**More Sample Applications**](https://github.com/ebay/parallec-samples#http).\n-- [**Set Target Hosts**](http://www.parallec.io/docs/submit-task/#set-target-hosts) from list, string, line by line text, json path, cms query from local or remote URLs.\n+- [**Set Target Hosts**](http://www.parallec.io/docs/submit-task/#set-target-hosts) from list, string, line by line text, json path, from local or remote URLs.\n - [**Full Documentation**](http://www.parallec.io/docs/)\n - [**Javadoc**](http://www.parallec.io/javadoc/index.html?io/parallec/core/package-summary.html)\n "
            }
        ]
    },
    {
        "sha": "6e451f1947fd689de1077a61ca625edcc9367f4b",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6NmU0NTFmMTk0N2ZkNjg5ZGUxMDc3YTYxY2E2MjVlZGNjOTM2N2Y0Yg==",
        "commit": {
            "author": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2015-11-02T16:53:24Z"
            },
            "committer": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2015-11-02T16:53:24Z"
            },
            "message": "update readme [skip ci]",
            "tree": {
                "sha": "e4c031e769f2fe2a628ee2828030069388f1949f",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/e4c031e769f2fe2a628ee2828030069388f1949f"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/6e451f1947fd689de1077a61ca625edcc9367f4b",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/6e451f1947fd689de1077a61ca625edcc9367f4b",
        "html_url": "https://github.com/eBay/parallec/commit/6e451f1947fd689de1077a61ca625edcc9367f4b",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/6e451f1947fd689de1077a61ca625edcc9367f4b/comments",
        "author": null,
        "committer": null,
        "parents": [
            {
                "sha": "f7b1917d3a33527e553c312f403cf22c9e04ff21",
                "url": "https://api.github.com/repos/eBay/parallec/commits/f7b1917d3a33527e553c312f403cf22c9e04ff21",
                "html_url": "https://github.com/eBay/parallec/commit/f7b1917d3a33527e553c312f403cf22c9e04ff21"
            }
        ],
        "stats": {
            "total": 2,
            "additions": 1,
            "deletions": 1
        },
        "files": [
            {
                "sha": "2c7ef3ed6a37bbe6ced0af81452aa47c55423b52",
                "filename": "README.md",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/6e451f1947fd689de1077a61ca625edcc9367f4b/README.md",
                "raw_url": "https://github.com/eBay/parallec/raw/6e451f1947fd689de1077a61ca625edcc9367f4b/README.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/README.md?ref=6e451f1947fd689de1077a61ca625edcc9367f4b",
                "patch": "@@ -48,7 +48,7 @@ pc.prepareHttpGet(\"\").setTargetHostsFromString(\"www.google.com www.ebay.com www.\n - [**More Sample Applications**](https://github.com/ebay/parallec-samples#http).\n - [**Set Target Hosts**](http://www.parallec.io/docs/submit-task/#set-target-hosts) from list, string, line by line text, json path, cms query from local or remote URLs.\n - [**Full Documentation**](http://www.parallec.io/docs/)\n-- - [**Javadoc**](http://www.parallec.io/javadoc/index.html?io/parallec/core/package-summary.html)\n+- [**Javadoc**](http://www.parallec.io/javadoc/index.html?io/parallec/core/package-summary.html)\n \n ###Use Cases\n "
            }
        ]
    },
    {
        "sha": "f7b1917d3a33527e553c312f403cf22c9e04ff21",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6ZjdiMTkxN2QzYTMzNTI3ZTU1M2MzMTJmNDAzY2YyMmM5ZTA0ZmYyMQ==",
        "commit": {
            "author": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2015-11-02T16:52:04Z"
            },
            "committer": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2015-11-02T16:52:04Z"
            },
            "message": "update readme [skip ci]",
            "tree": {
                "sha": "5335659cf18d4e213bf458b21b4efc0799045b4f",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/5335659cf18d4e213bf458b21b4efc0799045b4f"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/f7b1917d3a33527e553c312f403cf22c9e04ff21",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/f7b1917d3a33527e553c312f403cf22c9e04ff21",
        "html_url": "https://github.com/eBay/parallec/commit/f7b1917d3a33527e553c312f403cf22c9e04ff21",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/f7b1917d3a33527e553c312f403cf22c9e04ff21/comments",
        "author": null,
        "committer": null,
        "parents": [
            {
                "sha": "6df05727dbec54c7dd3d401965110feb6e6aafc3",
                "url": "https://api.github.com/repos/eBay/parallec/commits/6df05727dbec54c7dd3d401965110feb6e6aafc3",
                "html_url": "https://github.com/eBay/parallec/commit/6df05727dbec54c7dd3d401965110feb6e6aafc3"
            }
        ],
        "stats": {
            "total": 24,
            "additions": 8,
            "deletions": 16
        },
        "files": [
            {
                "sha": "49cf304c7d485038333654b70d907e79977b93b0",
                "filename": "README.md",
                "status": "modified",
                "additions": 8,
                "deletions": 16,
                "changes": 24,
                "blob_url": "https://github.com/eBay/parallec/blob/f7b1917d3a33527e553c312f403cf22c9e04ff21/README.md",
                "raw_url": "https://github.com/eBay/parallec/raw/f7b1917d3a33527e553c312f403cf22c9e04ff21/README.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/README.md?ref=f7b1917d3a33527e553c312f403cf22c9e04ff21",
                "patch": "@@ -8,17 +8,13 @@\n \n [![Javadoc](http://www.parallec.io/images/parallec-javadoc-blue.svg)](http://www.parallec.io/javadoc/index.html?io/parallec/core/ParallelClient.html) [![Documentation](http://www.parallec.io/images/parallec-documentation-red.svg)](http://www.parallec.io/docs/) [![Samples](http://www.parallec.io/images/parallec-samples-brightgreen.svg)](https://github.com/eBay/parallec-samples) \n \n-\n Parallec is a fast parallel async HTTP/SSH/TCP/Ping client java library. Scalably aggregate and handle API responses **anyway** and send it **anywhere** by writing [20 lines](https://www.youtube.com/watch?v=QcavegPMDms) of code. Response handler with context enables you conduct scalable API calls, then pass aggregated data anywhere to elastic search, kafka, MongoDB, graphite, memcached, etc. \n \n-Parallec means **Paralle**l **C**lient, and is pronounced as \"Para-like\". Parallec is built on Akka actors and Async HTTP Client / Netty / Jsch.  The library focuses on HTTP while also enables scalable communication over SSH/Ping/TCP.\n \n ![Workflow Overview](http://www.parallec.io/images/parallec-flow.svg)\n \n-\n ### Get Started\n \n-\n Maven\n \n ```xml\n@@ -34,7 +30,7 @@ Gradle\n compile 'io.parallec:parallec-core:0.9.0'\n ```\n \n-- **More Samples** please check [here](https://github.com/ebay/parallec-samples#http).\n+10 Line Example\n \n ```java\n import io.parallec.core.*;\n@@ -49,6 +45,10 @@ pc.prepareHttpGet(\"\").setTargetHostsFromString(\"www.google.com www.ebay.com www.\n });\n ```\t\n \n+- [**More Sample Applications**](https://github.com/ebay/parallec-samples#http).\n+- [**Set Target Hosts**](http://www.parallec.io/docs/submit-task/#set-target-hosts) from list, string, line by line text, json path, cms query from local or remote URLs.\n+- [**Full Documentation**](http://www.parallec.io/docs/)\n+- - [**Javadoc**](http://www.parallec.io/javadoc/index.html?io/parallec/core/package-summary.html)\n \n ###Use Cases\n \n@@ -61,6 +61,8 @@ pc.prepareHttpGet(\"\").setTargetHostsFromString(\"www.google.com www.ebay.com www.\n \n ## Features<a name=\"features\"></a>\n \n+Parallec means **Paralle**l **C**lient, and is pronounced as \"Para-like\". Parallec is built on Akka actors and Async HTTP Client / Netty / Jsch.  The library focuses on HTTP while also enables scalable communication over SSH/Ping/TCP.\n+\n **90%+ Test coverage** assures you always find an example of each of feature.\n \n 1. **Exceedingly intuitive** interface with builder pattern similar to that in [Async HTTP Client](https://github.com/AsyncHttpClient/async-http-client), but handles concurrency behind the scenes.\n@@ -143,18 +145,8 @@ As usual, don't rely on these numbers and perform your own benchmarks.\n |  Configurable response log trimming on intervals|    Yes   |       No      |              No             |\n |  Cancel task on a list of target hosts |    Yes   |       No      |              No             |\n \n-#### Actor Based Concurrency Control\n-\n-![System Design](http://www.parallec.io/images/parallec-actors-v2.svg)\n-\n-This is similar to the [model](www.ebaytechblog.com/2014/03/11/rest-commander-scalable-web-server-management-and-monitoring/#akka) in REST Commander, except that:\n-\n-- The user defined response handler can be triggerred in either the manager after aggregation, or in parallel when each operation worker receives the response. \n-- When handling async APIs, a single task may contains one job submission request, plus *1-n* progress polling requests.\n-- Worker now have more protocols such as SSH/Ping/TCP to support.\n-\n \n-## [Plugins](https://github.com/eBay/parallec-plugins)\n+## Plugins\n \n #### [SSL Client Auth Plugin](https://github.com/eBay/parallec-plugins)\n "
            }
        ]
    },
    {
        "sha": "6df05727dbec54c7dd3d401965110feb6e6aafc3",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6NmRmMDU3MjdkYmVjNTRjN2RkM2Q0MDE5NjUxMTBmZWI2ZTZhYWZjMw==",
        "commit": {
            "author": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2015-11-02T16:34:39Z"
            },
            "committer": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2015-11-02T16:34:39Z"
            },
            "message": "update readme [skip ci]",
            "tree": {
                "sha": "b77edf0687c7b423617aeb8af0cb97e8d7626cd6",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/b77edf0687c7b423617aeb8af0cb97e8d7626cd6"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/6df05727dbec54c7dd3d401965110feb6e6aafc3",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/6df05727dbec54c7dd3d401965110feb6e6aafc3",
        "html_url": "https://github.com/eBay/parallec/commit/6df05727dbec54c7dd3d401965110feb6e6aafc3",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/6df05727dbec54c7dd3d401965110feb6e6aafc3/comments",
        "author": null,
        "committer": null,
        "parents": [
            {
                "sha": "a98e95c65a241a7ec34dcbb5ea13308b53402c9e",
                "url": "https://api.github.com/repos/eBay/parallec/commits/a98e95c65a241a7ec34dcbb5ea13308b53402c9e",
                "html_url": "https://github.com/eBay/parallec/commit/a98e95c65a241a7ec34dcbb5ea13308b53402c9e"
            }
        ],
        "stats": {
            "total": 105,
            "additions": 38,
            "deletions": 67
        },
        "files": [
            {
                "sha": "87a32cf0e6efef989e26d3f55016a5ba66ca1f88",
                "filename": "README.md",
                "status": "modified",
                "additions": 38,
                "deletions": 67,
                "changes": 105,
                "blob_url": "https://github.com/eBay/parallec/blob/6df05727dbec54c7dd3d401965110feb6e6aafc3/README.md",
                "raw_url": "https://github.com/eBay/parallec/raw/6df05727dbec54c7dd3d401965110feb6e6aafc3/README.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/README.md?ref=6df05727dbec54c7dd3d401965110feb6e6aafc3",
                "patch": "@@ -9,19 +9,46 @@\n [![Javadoc](http://www.parallec.io/images/parallec-javadoc-blue.svg)](http://www.parallec.io/javadoc/index.html?io/parallec/core/ParallelClient.html) [![Documentation](http://www.parallec.io/images/parallec-documentation-red.svg)](http://www.parallec.io/docs/) [![Samples](http://www.parallec.io/images/parallec-samples-brightgreen.svg)](https://github.com/eBay/parallec-samples) \n \n \n-Parallec is a performant parallel async http/ssh/tcp/ping client java library. Scalably aggregate and handle API responses **anyway** and send it **anywhere** by writing [20 lines](https://www.youtube.com/watch?v=QcavegPMDms) of code. Response handler with context enables you conduct scalable API calls, then pass aggregated data anywhere to elastic search, kafka, MongoDB, graphite, memcached, etc. \n+Parallec is a fast parallel async HTTP/SSH/TCP/Ping client java library. Scalably aggregate and handle API responses **anyway** and send it **anywhere** by writing [20 lines](https://www.youtube.com/watch?v=QcavegPMDms) of code. Response handler with context enables you conduct scalable API calls, then pass aggregated data anywhere to elastic search, kafka, MongoDB, graphite, memcached, etc. \n \n Parallec means **Paralle**l **C**lient, and is pronounced as \"Para-like\". Parallec is built on Akka actors and Async HTTP Client / Netty / Jsch.  The library focuses on HTTP while also enables scalable communication over SSH/Ping/TCP.\n \n ![Workflow Overview](http://www.parallec.io/images/parallec-flow.svg)\n \n \n-####Motivation\n-- Flexible response handling and immediate processing embedded in other applications.\n-- Handle async APIs with auto progress polling for task level concurrency control.\n-- Support of other protocols, and [more](#features)..\n+### Get Started\n+\n+\n+Maven\n+\n+```xml\n+<dependency>\n+\t<groupId>io.parallec</groupId>\n+\t<artifactId>parallec-core</artifactId>\n+\t<version>0.9.0</version>\n+</dependency>\n+```\n+\n+Gradle\n+```xml\n+compile 'io.parallec:parallec-core:0.9.0'\n+```\n+\n+- **More Samples** please check [here](https://github.com/ebay/parallec-samples#http).\n+\n+```java\n+import io.parallec.core.*;\n+import java.util.Map;\n+\n+ParallelClient pc = new ParallelClient(); \n+pc.prepareHttpGet(\"\").setTargetHostsFromString(\"www.google.com www.ebay.com www.yahoo.com\")\n+.execute(new ParallecResponseHandler() {\n+    public void onCompleted(ResponseOnSingleTask res,\n+        Map<String, Object> responseContext) {\n+        System.out.println( res.toString() );  }\n+});\n+```\t\n \n-With the feedbacks, lessons, and improvements from the past year of internal usage and open source of **[REST Commander](http://www.restcommander.com)**, we now made the core of REST Commander as an easy to use standalone library. We added [**15+ new**](#compare) features, rewritten 70%+ of the code, with [**90%+ test coverage**](https://codecov.io/github/eBay/parallec) for confident usage and contribution. This time we also structure it better so that most internal development can be directly made here.\n \n ###Use Cases\n \n@@ -53,69 +80,13 @@ With the feedbacks, lessons, and improvements from the past year of internal usa\n 1. **Parallel TCP** supports idle timeout based channel closes.\n \n \n-### Get Started\n \n-#### Maven / Gradle Import\n-\n-Please replace the version with the latest version available.\n-\n-######Maven\n-\n-```xml\n-<dependency>\n-\t<groupId>io.parallec</groupId>\n-\t<artifactId>parallec-core</artifactId>\n-\t<version>0.9.0</version>\n-</dependency>\n-```\n-\n-######Gradle\n-\n-```xml\n-compile 'io.parallec:parallec-core:0.9.0'\n-```\n-\n-####Examples \n-\n-- **List of Code Examples** please check [here](https://github.com/ebay/parallec-samples#http).\n-\n-In the example below,  simply changing **prepareHttpGet()** to **prepareSsh()**, **prepareTcp()**, **preparePing()** enables you to conduct parallel SSH/TCP/Ping. Details please refer to [Java Doc](http://www.parallec.io/javadoc/index.html?io/parallec/core/ParallelClient.html).\n-\n-```java\n-import io.parallec.core.*;\n-import java.util.Map;\n-\n-ParallelClient pc = new ParallelClient(); \n-pc.prepareHttpGet(\"\").setTargetHostsFromString(\"www.google.com www.ebay.com www.yahoo.com\")\n-.execute(new ParallecResponseHandler() {\n-    public void onCompleted(ResponseOnSingleTask res,\n-        Map<String, Object> responseContext) {\n-        System.out.println( res.toString() );  }\n-});\n-pc.releaseExternalResources();\n-```\t\n-\n-Here is another example with response parsing and a little more parameters.\n-\n-```java\n-import io.parallec.core.*;\n-import java.util.Map;\n+##Motivation\n+- Flexible response handling and immediate processing embedded in other applications.\n+- Handle async APIs with auto progress polling for task level concurrency control.\n+- Support of other protocols, and [more](#features)..\n \n-ParallelClient pc= new ParallelClient();\n-pc.prepareGet(\"/validateInternals.html\")\n-    .setConcurrency(1000)\n-    .setTargetHostsFromString(\"parallec.github.io www.jeffpei.com www.restcommander.com\")\n-    .execute(new ParallecResponseHandler() {\n-        @Override\n-        public void onCompleted(ResponseOnSingleTask res,\n-\t\t\t\tMap<String, Object> responseContext) {\n-        \tString cpu = new FilterRegex(\".*<td>CPU-Usage-Percent</td>\\\\s*<td>(.*?)</td>.*\")\n-\t\t\t.filter(res.getResponseContent());\n-            System.out.println(\"cpu:\" + cpu + \" host: \" + res.getHost() );\n-        }\n-    });\n-pc.releaseExternalResources();\n-```\t\n+With the feedbacks, lessons, and improvements from the past year of internal usage and open source of **[REST Commander](http://www.restcommander.com)**, we now made the core of REST Commander as an easy to use standalone library. We added [**15+ new**](#compare) features, rewritten 70%+ of the code, with [**90%+ test coverage**](https://codecov.io/github/eBay/parallec) for confident usage and contribution. This time we also structure it better so that most internal development can be directly made here.\n \n \n ## Watch Parallec in Action"
            }
        ]
    },
    {
        "sha": "a98e95c65a241a7ec34dcbb5ea13308b53402c9e",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6YTk4ZTk1YzY1YTI0MWE3ZWMzNGRjYmI1ZWExMzMwOGI1MzQwMmM5ZQ==",
        "commit": {
            "author": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2015-11-02T09:08:39Z"
            },
            "committer": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2015-11-02T09:08:39Z"
            },
            "message": "update",
            "tree": {
                "sha": "57a2c58aa8efd206d8db4681f8b5bfa5dc7c1d73",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/57a2c58aa8efd206d8db4681f8b5bfa5dc7c1d73"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/a98e95c65a241a7ec34dcbb5ea13308b53402c9e",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/a98e95c65a241a7ec34dcbb5ea13308b53402c9e",
        "html_url": "https://github.com/eBay/parallec/commit/a98e95c65a241a7ec34dcbb5ea13308b53402c9e",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/a98e95c65a241a7ec34dcbb5ea13308b53402c9e/comments",
        "author": null,
        "committer": null,
        "parents": [
            {
                "sha": "f7fefa5ed7a3776ef90951efda70161831a876e9",
                "url": "https://api.github.com/repos/eBay/parallec/commits/f7fefa5ed7a3776ef90951efda70161831a876e9",
                "html_url": "https://github.com/eBay/parallec/commit/f7fefa5ed7a3776ef90951efda70161831a876e9"
            }
        ],
        "stats": {
            "total": 3,
            "additions": 2,
            "deletions": 1
        },
        "files": [
            {
                "sha": "8d0d7bdfa089c3634685778304598dfef06e9d89",
                "filename": "src/main/java/io/parallec/core/task/CapacityAwareTaskScheduler.java",
                "status": "modified",
                "additions": 2,
                "deletions": 1,
                "changes": 3,
                "blob_url": "https://github.com/eBay/parallec/blob/a98e95c65a241a7ec34dcbb5ea13308b53402c9e/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Ftask%2FCapacityAwareTaskScheduler.java",
                "raw_url": "https://github.com/eBay/parallec/raw/a98e95c65a241a7ec34dcbb5ea13308b53402c9e/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Ftask%2FCapacityAwareTaskScheduler.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Ftask%2FCapacityAwareTaskScheduler.java?ref=a98e95c65a241a7ec34dcbb5ea13308b53402c9e",
                "patch": "@@ -13,6 +13,7 @@\n package io.parallec.core.task;\n \n import io.parallec.core.ParallelTask;\n+import io.parallec.core.ParallelTaskBuilder;\n import io.parallec.core.config.ParallecGlobalConfig;\n \n import java.util.Queue;\n@@ -27,7 +28,7 @@\n  * \n  * Note that this scheduler is not enabled by default. \n  * \n- * Enable it by {@link ParallelTaskBuilder#setEnableCapacityAwareTaskScheduler(true)}\n+ * Enable it by {@link ParallelTaskBuilder#setEnableCapacityAwareTaskScheduler}\n  * \n  *  @author Yuanteng (Jeff) Pei\n  */"
            }
        ]
    },
    {
        "sha": "f7fefa5ed7a3776ef90951efda70161831a876e9",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6ZjdmZWZhNWVkN2EzNzc2ZWY5MDk1MWVmZGE3MDE2MTgzMWE4NzZlOQ==",
        "commit": {
            "author": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2015-11-02T08:16:05Z"
            },
            "committer": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2015-11-02T08:16:05Z"
            },
            "message": "update",
            "tree": {
                "sha": "ea992bc3fa73ffedca454dc1597075cc7a360f7f",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/ea992bc3fa73ffedca454dc1597075cc7a360f7f"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/f7fefa5ed7a3776ef90951efda70161831a876e9",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/f7fefa5ed7a3776ef90951efda70161831a876e9",
        "html_url": "https://github.com/eBay/parallec/commit/f7fefa5ed7a3776ef90951efda70161831a876e9",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/f7fefa5ed7a3776ef90951efda70161831a876e9/comments",
        "author": null,
        "committer": null,
        "parents": [
            {
                "sha": "8176e3d37554734d44f52f1a1233f9ebaaa9bd6a",
                "url": "https://api.github.com/repos/eBay/parallec/commits/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a",
                "html_url": "https://github.com/eBay/parallec/commit/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a"
            }
        ],
        "stats": {
            "total": 2,
            "additions": 1,
            "deletions": 1
        },
        "files": [
            {
                "sha": "37a63e59dae68232d1713f2547090c3f86517658",
                "filename": "README.md",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/f7fefa5ed7a3776ef90951efda70161831a876e9/README.md",
                "raw_url": "https://github.com/eBay/parallec/raw/f7fefa5ed7a3776ef90951efda70161831a876e9/README.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/README.md?ref=f7fefa5ed7a3776ef90951efda70161831a876e9",
                "patch": "@@ -21,7 +21,7 @@ Parallec means **Paralle**l **C**lient, and is pronounced as \"Para-like\". Parall\n - Handle async APIs with auto progress polling for task level concurrency control.\n - Support of other protocols, and [more](#features)..\n \n-With the feedbacks, lessons, and improvements from the past year of internal usage and open source of **[REST Commander](www.restcommander.com)**, we now made the core of REST Commander as an easy to use standalone library. We added [**15+ new**](#compare) features, rewritten 70%+ of the code, with [**90%+ test coverage**](https://codecov.io/github/eBay/parallec) for confident usage and contribution. This time we also structure it better so that most internal development can be directly made here.\n+With the feedbacks, lessons, and improvements from the past year of internal usage and open source of **[REST Commander](http://www.restcommander.com)**, we now made the core of REST Commander as an easy to use standalone library. We added [**15+ new**](#compare) features, rewritten 70%+ of the code, with [**90%+ test coverage**](https://codecov.io/github/eBay/parallec) for confident usage and contribution. This time we also structure it better so that most internal development can be directly made here.\n \n ###Use Cases\n "
            }
        ]
    },
    {
        "sha": "8176e3d37554734d44f52f1a1233f9ebaaa9bd6a",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6ODE3NmUzZDM3NTU0NzM0ZDQ0ZjUyZjFhMTIzM2Y5ZWJhYWE5YmQ2YQ==",
        "commit": {
            "author": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2015-11-02T07:58:47Z"
            },
            "committer": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2015-11-02T07:58:47Z"
            },
            "message": "update",
            "tree": {
                "sha": "398752f8909956ad96b1ce39de76163a3681f814",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/398752f8909956ad96b1ce39de76163a3681f814"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a",
        "html_url": "https://github.com/eBay/parallec/commit/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/comments",
        "author": null,
        "committer": null,
        "parents": [
            {
                "sha": "6240cc505a902933fd8b1108e86f490bb594dc5f",
                "url": "https://api.github.com/repos/eBay/parallec/commits/6240cc505a902933fd8b1108e86f490bb594dc5f",
                "html_url": "https://github.com/eBay/parallec/commit/6240cc505a902933fd8b1108e86f490bb594dc5f"
            }
        ],
        "stats": {
            "total": 851,
            "additions": 543,
            "deletions": 308
        },
        "files": [
            {
                "sha": "2ae454467f380af00786443d30ded073dd1f1312",
                "filename": "CHANGELOG.md",
                "status": "modified",
                "additions": 14,
                "deletions": 8,
                "changes": 22,
                "blob_url": "https://github.com/eBay/parallec/blob/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/CHANGELOG.md",
                "raw_url": "https://github.com/eBay/parallec/raw/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/CHANGELOG.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/CHANGELOG.md?ref=8176e3d37554734d44f52f1a1233f9ebaaa9bd6a",
                "patch": "@@ -1,26 +1,32 @@\n-Change Log\n+Parallec Change Log\n ==========\n \n+## Version 0.9.0\n \n-## Version 0.8.11\n+_2015-11-01_\n \n-_2015-10-28_\n+* Add: Late initialize CapacityAwareTaskScheduler only when it is used. Added shutdown for the scheduler.\n+* Test: Update some tests on variable replacements.\n+* Doc: Update javadoc.\n \n-* Javadoc: refine javadoc. \n-* Coverage: add code coverage.\n-* Maven: setup with maven central deployment. Added codecov and travis CI.\n+## Version 0.8.12-beta\n \n+_2015-10-29_\n \n+* Javadoc: refine javadoc. Fixed errors in javadoc.  \n+* Coverage: add code coverage.\n+* Maven: setup with maven central deployment. Added codecov and travis CI.\n \n \n-## Version 0.8.10\n+## Version 0.8.11-beta \n+## Version 0.8.10 \n \n _2015-10-27_\n \n * Change: refactor and removed command director. Renamed command manager to execution manager. \n * Change: remove duplicated functions of prepareHttp* in builder and client classes.   Refactor internal type of http method.\n * Add: ParallelTask add getAggregatedResultHumanStr() to display human readable results.\n-* Change: enforce safeguard of concurrency limit for ssh as 400.\n+* Change: enforce safeguard of concurrency limit for SSH as 400.\n \n ## Version 0.8.9\n "
            },
            {
                "sha": "4d8e2ea1fffda0881c36e44b7f7ac8103bc5edf7",
                "filename": "CONTRIBUTING.md",
                "status": "added",
                "additions": 9,
                "deletions": 0,
                "changes": 9,
                "blob_url": "https://github.com/eBay/parallec/blob/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/CONTRIBUTING.md",
                "raw_url": "https://github.com/eBay/parallec/raw/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/CONTRIBUTING.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/CONTRIBUTING.md?ref=8176e3d37554734d44f52f1a1233f9ebaaa9bd6a",
                "patch": "@@ -0,0 +1,9 @@\n+## Contributing to Eagle\n+\n+Contributions via GitHub pull requests are gladly accepted from their original\n+author. Along with any pull requests, please state that the contribution is\n+your original work and that you license the work to the project under the\n+project's open source license. Whether or not you state this explicitly, by\n+submitting any copyrighted material via pull request, email, or other means\n+you agree to license the material under the project's open source license and\n+warrant that you have the legal authority to do so."
            },
            {
                "sha": "f2a1530cc34dc68a05984eee4132385726e508dc",
                "filename": "README.md",
                "status": "modified",
                "additions": 208,
                "deletions": 5,
                "changes": 213,
                "blob_url": "https://github.com/eBay/parallec/blob/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/README.md",
                "raw_url": "https://github.com/eBay/parallec/raw/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/README.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/README.md?ref=8176e3d37554734d44f52f1a1233f9ebaaa9bd6a",
                "patch": "@@ -1,10 +1,213 @@\n-##Parallec\n+<a href=\"http://www.parallec.io\"><img alt=\"Parallec-logo\" src=\"http://www.parallec.io/images/parallec-logo.png\" width=\"325\"></a>\n \n-![build status](https://img.shields.io/badge/build-info =>-green.svg) [![Build Status](https://travis-ci.org/eBay/parallec.svg?branch=master)](https://travis-ci.org/eBay/parallec) [![Coverage Status](https://img.shields.io/codecov/c/github/eBay/parallec.svg)](https://codecov.io/github/eBay/parallec) [![MIT License](https://img.shields.io/hexpm/l/plug.svg) ](https://github.com/eBay/parallec/blob/master/LICENSE)\n \n-![latest 0.8.x](https://img.shields.io/badge/latest stable-0.8.x =>-green.svg) [ ![latest beta  maven central](https://maven-badges.herokuapp.com/maven-central/com.ebay.parallec/parallec-core/badge.svg?style=flat)](http://search.maven.org/#artifactdetails|com.ebay.parallec|parallec-core|0.8.11-beta|)\n+![build status](https://img.shields.io/badge/build-info=>-green.svg) [![Build Status](https://travis-ci.org/eBay/parallec.svg?branch=master)](https://travis-ci.org/eBay/parallec) [![Coverage Status](https://img.shields.io/codecov/c/github/eBay/parallec.svg)](https://codecov.io/github/eBay/parallec) [![Apache V2.0 License](http://www.parallec.io/images/apache2.svg) ](https://github.com/eBay/parallec/blob/master/LICENSE)\n \n \n-## Stay Tuned\n+![latest 0.9.x](http://img.shields.io/badge/latest_stable-0.9.x=>-green.svg) [ ![latest beta  maven central](https://maven-badges.herokuapp.com/maven-central/io.parallec/parallec-core/badge.svg?style=flat)](http://search.maven.org/#artifactdetails|io.parallec|parallec-core|0.9.0|) \n+\n+[![Javadoc](http://www.parallec.io/images/parallec-javadoc-blue.svg)](http://www.parallec.io/javadoc/index.html?io/parallec/core/ParallelClient.html) [![Documentation](http://www.parallec.io/images/parallec-documentation-red.svg)](http://www.parallec.io/docs/) [![Samples](http://www.parallec.io/images/parallec-samples-brightgreen.svg)](https://github.com/eBay/parallec-samples) \n+\n+\n+Parallec is a performant parallel async http/ssh/tcp/ping client java library. Scalably aggregate and handle API responses **anyway** and send it **anywhere** by writing [20 lines](https://www.youtube.com/watch?v=QcavegPMDms) of code. Response handler with context enables you conduct scalable API calls, then pass aggregated data anywhere to elastic search, kafka, MongoDB, graphite, memcached, etc. \n+\n+Parallec means **Paralle**l **C**lient, and is pronounced as \"Para-like\". Parallec is built on Akka actors and Async HTTP Client / Netty / Jsch.  The library focuses on HTTP while also enables scalable communication over SSH/Ping/TCP.\n+\n+![Workflow Overview](http://www.parallec.io/images/parallec-flow.svg)\n+\n+\n+####Motivation\n+- Flexible response handling and immediate processing embedded in other applications.\n+- Handle async APIs with auto progress polling for task level concurrency control.\n+- Support of other protocols, and [more](#features)..\n+\n+With the feedbacks, lessons, and improvements from the past year of internal usage and open source of **[REST Commander](www.restcommander.com)**, we now made the core of REST Commander as an easy to use standalone library. We added [**15+ new**](#compare) features, rewritten 70%+ of the code, with [**90%+ test coverage**](https://codecov.io/github/eBay/parallec) for confident usage and contribution. This time we also structure it better so that most internal development can be directly made here.\n+\n+###Use Cases\n+\n+1. Scalable web server monitoring, management, and configuration push, ping check.\n+1. Asset / server status discovery, remote task execution in agent-less(parallel SSH) or agent based (parallel HTTP/TCP) method.\n+1. Scalable API aggregation and processing with flexible destination with your favorate message queue / storage / alert engine.\n+1. Orchestration and work flows on multiple web servers. \n+1. Parallel different requests with controlled concurrency to a single server. \n+\n+\n+## Features<a name=\"features\"></a>\n+\n+**90%+ Test coverage** assures you always find an example of each of feature.\n+\n+1. **Exceedingly intuitive** interface with builder pattern similar to that in [Async HTTP Client](https://github.com/AsyncHttpClient/async-http-client), but handles concurrency behind the scenes.\n+1. **Generic response handler with context**. Enable total freedom of processing each response your way. Process and aggregate data **anywhere** to Kafka, Redis, Elastic Search, mongoDB, CMS and etc.  \n+1. **Flexible on when to invoke the handler**:  before (in worker thread) or after the aggregation (in master/manager thread).\n+1. **Flexible Input of target hosts**: Input target hosts from a list, string, JSON Path from local files or a remote URL\n+1. **Scalable and fast**, **infinitely scalable** with built-in **Concurrency control**.\n+1. **Auto-progress polling** to enable task level concurrency with **Async API** for long jobs and  orchestrations.\n+1. **Request template** to handle non-uniform requests.\n+1. **Convenient single place handling success and failure cases**. Handle in a single function where you can get the response including the actual response if success; or stacktrace and error details if failures.\n+1. **Capacity aware task scheduler** helps you to auto queue up and fire tasks when capacity is insufficient. (e.g. submit consecutively 5 tasks each hitting 100K websites with default concurrency will result in a queue up)\n+1. **Fine-grained task progress tracking** helps you track the the progress each individual task status. Of a parallel task on 1000 target hosts, you may check status on any single host task, and percentage progress on how many are completed.\n+1. **Fine-grained task cancelation** on whole/individual request level. Of a parallel task on 1000 target hosts, you may cancel a subset of target hosts or cancel the whole parallel task anytime.\n+1. **Status-code-aggregation** is provided out of the box.\n+1. **Parallel Ping** supports both InetAddress.reachable ICMP (requires root) and Process based ping with retries.  Performance testing shows it is ** 67% faster** than best-effort tuned FPing on pinging on 1500 targets. (2.7 vs 4.5 sec)\n+1. **Parallel SSH** supports both key and password based login and task cancellation.\n+1. **Parallel TCP** supports idle timeout based channel closes.\n+\n+\n+### Get Started\n+\n+#### Maven / Gradle Import\n+\n+Please replace the version with the latest version available.\n+\n+######Maven\n+\n+```xml\n+<dependency>\n+\t<groupId>io.parallec</groupId>\n+\t<artifactId>parallec-core</artifactId>\n+\t<version>0.9.0</version>\n+</dependency>\n+```\n+\n+######Gradle\n+\n+```xml\n+compile 'io.parallec:parallec-core:0.9.0'\n+```\n+\n+####Examples \n+\n+- **List of Code Examples** please check [here](https://github.com/ebay/parallec-samples#http).\n+\n+In the example below,  simply changing **prepareHttpGet()** to **prepareSsh()**, **prepareTcp()**, **preparePing()** enables you to conduct parallel SSH/TCP/Ping. Details please refer to [Java Doc](http://www.parallec.io/javadoc/index.html?io/parallec/core/ParallelClient.html).\n+\n+```java\n+import io.parallec.core.*;\n+import java.util.Map;\n+\n+ParallelClient pc = new ParallelClient(); \n+pc.prepareHttpGet(\"\").setTargetHostsFromString(\"www.google.com www.ebay.com www.yahoo.com\")\n+.execute(new ParallecResponseHandler() {\n+    public void onCompleted(ResponseOnSingleTask res,\n+        Map<String, Object> responseContext) {\n+        System.out.println( res.toString() );  }\n+});\n+pc.releaseExternalResources();\n+```\t\n+\n+Here is another example with response parsing and a little more parameters.\n+\n+```java\n+import io.parallec.core.*;\n+import java.util.Map;\n+\n+ParallelClient pc= new ParallelClient();\n+pc.prepareGet(\"/validateInternals.html\")\n+    .setConcurrency(1000)\n+    .setTargetHostsFromString(\"parallec.github.io www.jeffpei.com www.restcommander.com\")\n+    .execute(new ParallecResponseHandler() {\n+        @Override\n+        public void onCompleted(ResponseOnSingleTask res,\n+\t\t\t\tMap<String, Object> responseContext) {\n+        \tString cpu = new FilterRegex(\".*<td>CPU-Usage-Percent</td>\\\\s*<td>(.*?)</td>.*\")\n+\t\t\t.filter(res.getResponseContent());\n+            System.out.println(\"cpu:\" + cpu + \" host: \" + res.getHost() );\n+        }\n+    });\n+pc.releaseExternalResources();\n+```\t\n+\n+\n+## Watch Parallec in Action\n+\n+[**Watch Demo**](https://www.youtube.com/watch?v=QcavegPMDms\"Parallec demo - Click to Watch!\"): Parallec Aggregates 100 websites status with 20 lines of code.\n+\n+<a title=\"Click to Watch HD version in Youtube\" href=\"https://www.youtube.com/watch?v=QcavegPMDms\"><img alt=\"20 lines parallec to elastic search demo\" src=\"http://www.parallec.io/demos/elastic-web100-v3.gif\" /></a>\n+\n+\n+\n+## Performance\n+\n+Note that speed varies based on network speed, API response time, the slowest servers, and concurrency settings.\n+\n+#####HTTP\n+\n+We conducted remote task execution API on 3,000 servers with response aggregated to elastic search, visualized within 15 seconds, by writing 25 lines of code.\n+\n+With another faster API, calls to 8,000 servers in the same datacenter with response aggregated in memory in 12 seconds. \n+\n+#####Ping\n+Parallec 2.7 seconds vs FPing 4.5 seconds on 1500 servers. Parallec is 67% faster than [FPing](http://fping.org/) (after best-effort tuning : -i 1 -r 0 v3.12)  of pinging 1500 servers while getting the same ping results.  While FPing consistently crashing (seg fault) when it pings 2000 or more servers,  Parallec pings 8000 servers within 11.8 seconds with breeze.\n+\n+As usual, don't rely on these numbers and perform your own benchmarks.\n+\n+\n+\n+\n+\n+## Compare Parallec vs REST Commander vs ThreadPools+Async Client<a name=\"compare\"></a>\n+\n+\n+|                                                        Features                                                       | Parallec | REST Commander | Thread Pools + Async Client |\n+|:---------------------------------------------------------------------------------------------------------------------:|:--------:|:--------------:|:---------------------------:|\n+|                               Embedded library with intuitive builder pattern interface                               |    Yes   |       No       |              No             |\n+|               Ready to use application with GUI wizard based request submission and response aggregation              |    No    |       Yes      |              No             |\n+|                                 Simple concurrency control not limited by thread size                                 |    Yes   |       Yes      |              No             |\n+|                             Immediate response handler without waiting all response return                            |    Yes   |       No       |             Yes             |\n+|                               Capacity aware task scheduler and global capacity control                               |    Yes   |       No       |              No             |\n+| Total freedom of response processing and API aggregation: Pluggable and generic response handler and response context |    Yes   |       No       |             No*             |\n+|                                        1 line plugin to enable SSL Client auth                                        |    Yes   |       No       |              No             |\n+|                                                   90% Test Coverage                                                   |    Yes   |       No       |              No             |\n+|                     Load target hosts from CMS query, JSON Path, text, list, string from URL/local                    |    Yes   |       No       |              No             |\n+|                  Task level concurrency and orchestration for Async APIs: auto polling task progress                  |    Yes   |       No       |              No             |\n+|                                          Task level configuration on timeout and replacing Async HTTP Client                                          |    Yes   |       No       |              No             |\n+|                           Async and sync task control with progress polling and cancellation                          |    Yes   |       No       |              No             |\n+|                                Scalable Parallel SSH with password and key based login                                |    Yes   |       No       |              No             |\n+|                    Proven scalability and speed on 100,000+ target hosts in Production environment                    |    Yes   |       Yes      |              No             |\n+|   Generic request template with variable replacement for sending different requests to same/different target hosts    |    Yes   |       Yes      |              No             |\n+|   Scalable Ping with Retries    |    Yes   |       No      |              No             |\n+|   Scalable TCP with idle timeout    |    Yes   |       No      |              No             |\n+|   Flexible handler location at either worker (in parallel) or manager thread    |    Yes   |       No      |              No             |\n+|   Out-of-the-box two-level response aggregation on status code|    Yes   |       Yes      |              No             |\n+|  Configurable response log trimming on intervals|    Yes   |       No      |              No             |\n+|  Cancel task on a list of target hosts |    Yes   |       No      |              No             |\n+\n+#### Actor Based Concurrency Control\n+\n+![System Design](http://www.parallec.io/images/parallec-actors-v2.svg)\n+\n+This is similar to the [model](www.ebaytechblog.com/2014/03/11/rest-commander-scalable-web-server-management-and-monitoring/#akka) in REST Commander, except that:\n+\n+- The user defined response handler can be triggerred in either the manager after aggregation, or in parallel when each operation worker receives the response. \n+- When handling async APIs, a single task may contains one job submission request, plus *1-n* progress polling requests.\n+- Worker now have more protocols such as SSH/Ping/TCP to support.\n+\n+\n+## [Plugins](https://github.com/eBay/parallec-plugins)\n+\n+#### [SSL Client Auth Plugin](https://github.com/eBay/parallec-plugins)\n+\n+## Authors\n+\n+Parallec is served to you by [Yuanteng (Jeff) Pei](https://www.linkedin.com/in/peiyuant) and [Teng Song](https://www.linkedin.com/pub/teng-song/49/763/713), [Cloud Infrastructure & Platform Services (CIPS)](https://helpusbuild.ebayc3.com/) at eBay Inc. \n+\n+## Credits & Acknowledgement\n+\n+- We thanks our manager [Andy Santosa](https://www.linkedin.com/pub/andy-santosa/0/230/305), project manager [Marco Rotelli](https://www.linkedin.com/pub/marco-rotelli/2/25/54), [Cloud Infrastructure & Platform Services (CIPS)](https://helpusbuild.ebayc3.com/) and legal for the big support on this project and the open source effort.\n+- The auto-progress polling is inspired by [lightflow](https://github.com/yubin154/lightflow).\n+- We thank [openpojo](https://github.com/oshoukry/openpojo) and the author Osman Shoukry for his help on making the openpojo more accessible for us to use in our project.\n+- We thank [AsyncHttpClient](https://github.com/AsyncHttpClient/async-http-client) and Stephane Landelle for guidance.\n+\n+\n+\n+##Contributions\n+\n+Any helpful feedback is more than welcome. This includes feature requests, bug reports, pull requests, constructive feedback, and etc.\n+\n+\n+## Licenses\n+\n+Code licensed under Apache License v2.0\n+\n+© 2015 eBay Software Foundation\n \n-Scheduled to release by 11/02/2015: working on documentations and more.\n\\ No newline at end of file"
            },
            {
                "sha": "6db7648762768727fac5629b432a2e78a49c2ff3",
                "filename": "pom.xml",
                "status": "modified",
                "additions": 8,
                "deletions": 9,
                "changes": 17,
                "blob_url": "https://github.com/eBay/parallec/blob/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/pom.xml",
                "raw_url": "https://github.com/eBay/parallec/raw/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/pom.xml",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/pom.xml?ref=8176e3d37554734d44f52f1a1233f9ebaaa9bd6a",
                "patch": "@@ -2,15 +2,15 @@\n <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n \txsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n \t<modelVersion>4.0.0</modelVersion>\n-\t<groupId>com.ebay.parallec</groupId>\n+\t<groupId>io.parallec</groupId>\n \t<artifactId>parallec-core</artifactId>\n-\t<version>0.8.11-beta</version>\n+\t<version>0.9.0</version>\n \t<packaging>jar</packaging>\n-\t<name>com.ebay.parallec:parallec-core</name>\n+\t<name>io.parallec:parallec-core</name>\n \t<url>https://github.com/eBay/parallec</url>\n \t<description>\n         Parallec: Parallel Async HTTP/SSH/PING/TCP Client library.\n-        More at https://github.com/eBay/parallec \n+        Details at: http://www.parallec.io\n     </description>\n \t<licenses>\n \t\t<license>\n@@ -39,7 +39,10 @@\n \t\t\t<organizationUrl>www.ebay.com</organizationUrl>\n \t\t</developer>\n \t</developers>\n-\n+\t<organization>\n+\t\t<name>eBay</name>\n+\t\t<url>http://www.ebay.com/</url>\n+\t</organization>\n \t<inceptionYear>2015</inceptionYear>\n \n \t<properties>\n@@ -204,10 +207,6 @@\n \t\t</snapshotRepository>\n \t</distributionManagement>\n \n-\n-\n-\n-\n \t<build>\n \t\t<pluginManagement>\n \t\t\t<plugins>"
            },
            {
                "sha": "f28a354df0801a4f68176d6561db0ae812cf6ea7",
                "filename": "src/main/java/io/parallec/core/FilterRegex.java",
                "status": "modified",
                "additions": 2,
                "deletions": 2,
                "changes": 4,
                "blob_url": "https://github.com/eBay/parallec/blob/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FFilterRegex.java",
                "raw_url": "https://github.com/eBay/parallec/raw/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FFilterRegex.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FFilterRegex.java?ref=8176e3d37554734d44f52f1a1233f9ebaaa9bd6a",
                "patch": "@@ -22,8 +22,8 @@\n import org.slf4j.LoggerFactory;\n \n /**\n- * The Class FilterRegex.\n- * @author Yuanteng Jeff Pei\n+ * A simple class to apply a regular expression to .\n+ * @author Yuanteng (Jeff) Pei\n  */\n public class FilterRegex {\n "
            },
            {
                "sha": "2f82f0d6ba596bf9c044895e794fd1306003b40c",
                "filename": "src/main/java/io/parallec/core/ParallecHeader.java",
                "status": "modified",
                "additions": 2,
                "deletions": 3,
                "changes": 5,
                "blob_url": "https://github.com/eBay/parallec/blob/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FParallecHeader.java",
                "raw_url": "https://github.com/eBay/parallec/raw/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FParallecHeader.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FParallecHeader.java?ref=8176e3d37554734d44f52f1a1233f9ebaaa9bd6a",
                "patch": "@@ -19,10 +19,9 @@\n \n \n /**\n- * easy to use builder to add header key/value pair then get the results\n- * directly for use.\n+ * Easy to use HTTP Header builder to add header key/value pair.\n  *\n- * @author Yuanteng Jeff Pei\n+ * @author Yuanteng (Jeff) Pei\n  */\n public class ParallecHeader {\n "
            },
            {
                "sha": "4227efa0f0930dad475a50e07f2791de9c5f44ad",
                "filename": "src/main/java/io/parallec/core/ParallecResponseHandler.java",
                "status": "modified",
                "additions": 0,
                "deletions": 1,
                "changes": 1,
                "blob_url": "https://github.com/eBay/parallec/blob/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FParallecResponseHandler.java",
                "raw_url": "https://github.com/eBay/parallec/raw/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FParallecResponseHandler.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FParallecResponseHandler.java?ref=8176e3d37554734d44f52f1a1233f9ebaaa9bd6a",
                "patch": "@@ -18,7 +18,6 @@\n /**\n  * The Interface ParallecResponseHandler.\n  * \n- * Consider make it serializable if we need to pass this for akka clustering.\n  */\n public interface ParallecResponseHandler {\n "
            },
            {
                "sha": "d6e375c47f9c4d9f278ef8db300aa497ef09f620",
                "filename": "src/main/java/io/parallec/core/ParallelClient.java",
                "status": "modified",
                "additions": 13,
                "deletions": 17,
                "changes": 30,
                "blob_url": "https://github.com/eBay/parallec/blob/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FParallelClient.java",
                "raw_url": "https://github.com/eBay/parallec/raw/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FParallelClient.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FParallelClient.java?ref=8176e3d37554734d44f52f1a1233f9ebaaa9bd6a",
                "patch": "@@ -27,25 +27,22 @@\n \n import com.ning.http.client.AsyncHttpClient;\n \n-\n /**\n  * \n  * This is the starting point of starting a parallel client, which create a\n  * {@link ParallelTaskBuilder} after a prepareGet functions. The Parallel\n  * Task builder is to build a parallel task. \n  * \n- * \n- * \n  * This is more a wrapper class and does not hold object specific resources. You\n- * may create a single or multiple instance.\n+ * may create a single or multiple instances.\n  * \n  * Only call {@link ParallelClient#releaseExternalResources()} before your app\n- * shutdown. will mark as closed after it is closed\n+ * shutdown and when you no longer need to use it. Will mark as closed after it is closed\n  * {@link ParallelClient#isClosed}\n  * \n- * Will auto reinitialize if is closed but will be executed again.\n+ * Will auto reinitialize if is closed.\n  * \n- * <h3 id=\"maven-import\">Maven Import</h3>\n+ * <h3>Maven Import</h3>\n  * \n  * <pre>\n  * <code class=\"xml\">    &lt;dependency&gt;\n@@ -67,11 +64,10 @@\n  * import java.util.Map;\n  * \n  * ParallelClient pc= new ParallelClient();\n- * pc.prepareGet(&quot;/validateInternals.html&quot;)\n- *     .setMaxConcurrency(1000)\n- *     .setTargetHostsFromString(&quot;parallec.github.io www.jeffpei.com www.restcommander.com&quot;)\n+ * pc.prepareHttpGet(&quot;/validateInternals.html&quot;)\n+ *     .setConcurrency(1000)\n+ *     .setTargetHostsFromString(&quot;www.parallec.io www.jeffpei.com www.restcommander.com&quot;)\n  *     .execute(new ParallecResponseHandler() {\n- *         \n  *         public void onCompleted(ResponseOnSingleTask res,\n  *                 Map&lt;String, Object&gt; responseContext) {\n  *             String cpu = new FilterRegex(&quot;.*&lt;td&gt;CPU-Usage-Percent&lt;/td&gt;\\\\s*&lt;td&gt;(.*?)&lt;/td&gt;.*&quot;)\n@@ -83,7 +79,7 @@\n  * </code>\n  * </pre>\n  * \n- * @author Yuanteng Jeff Pei\n+ * @author Yuanteng (Jeff) Pei\n  */\n \n public class ParallelClient {\n@@ -99,7 +95,7 @@ public class ParallelClient {\n     public HttpClientStore httpClientStore = HttpClientStore.getInstance();\n \n     /** The tcp client store. */\n-    public TcpSshPingResourceStore tcpClientStore = TcpSshPingResourceStore.getInstance();\n+    public TcpSshPingResourceStore tcpSshPingResourceStore = TcpSshPingResourceStore.getInstance();\n \n     /** The is closed is marked when all resources are released/not initialized. */\n     public static AtomicBoolean isClosed = new AtomicBoolean(true);\n@@ -119,7 +115,7 @@ public void initialize() {\n             logger.info(\"Initialing Parallel Client Resources: actor system, HttpClientStore, Task Manager ....\");\n             ActorConfig.createAndGetActorSystem();\n             httpClientStore.init();\n-            tcpClientStore.init();\n+            tcpSshPingResourceStore.init();\n             ParallelTaskManager.getInstance();\n             isClosed.set(false);\n             logger.info(\"Parallel Client Resources has been initialized.\");\n@@ -131,7 +127,7 @@ public void initialize() {\n     /**\n      * Releases the external resources that this object depends on. You should\n      * not call this method if you still want to use the external resources\n-     * (e.g. akka system, sync and async http client store, thread pool for\n+     * (e.g. akka system, async http client store, thread pool for\n      * SSH/TCP) are in use by other objects.\n      * \n      * \n@@ -144,7 +140,7 @@ public void releaseExternalResources() {\n             logger.info(\"Releasing all ParallelClient resources... \");\n             ActorConfig.shutDownActorSystemForce();\n             httpClientStore.shutdown();\n-            tcpClientStore.shutdown();\n+            tcpSshPingResourceStore.shutdown();\n             taskManager.cleanWaitTaskQueue();\n             taskManager.cleanInprogressJobMap();\n             isClosed.set(true);\n@@ -168,7 +164,7 @@ public void reinitIfClosed() {\n \n             ActorConfig.createAndGetActorSystem();\n             httpClientStore.reinit();\n-            tcpClientStore.reinit();\n+            tcpSshPingResourceStore.reinit();\n             try {\n                 Thread.sleep(1000l);\n             } catch (InterruptedException e) {"
            },
            {
                "sha": "f19c0e24a4814d1225f2db1e767e79de6c28e477",
                "filename": "src/main/java/io/parallec/core/ParallelTask.java",
                "status": "modified",
                "additions": 16,
                "deletions": 4,
                "changes": 20,
                "blob_url": "https://github.com/eBay/parallec/blob/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FParallelTask.java",
                "raw_url": "https://github.com/eBay/parallec/raw/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FParallelTask.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FParallelTask.java?ref=8176e3d37554734d44f52f1a1233f9ebaaa9bd6a",
                "patch": "@@ -58,7 +58,7 @@\n  * The key class represents a onetime execution on multiple requests. It contains all the task \n  * and request metadata, target hosts, configs, and the responses.\n  * \n- * A ParallelTask is the returned object from the {@link ParallelTaskBuilder#execute()}\n+ * A ParallelTask is the returned object from the {@link ParallelTaskBuilder#execute}\n  * \n  * <ul>\n     <li>The metadata on this whole task, including config, running state, progress, request count, task id.&nbsp;</li>\n@@ -70,7 +70,7 @@\n </ul>\n  * \n  *\n- * @author Yuanteng Jeff Pei\n+ * @author Yuanteng (Jeff) Pei\n  */\n public class ParallelTask {\n \n@@ -120,7 +120,12 @@ public class ParallelTask {\n     /** The aggregate result map. */\n     private final Map<String, LinkedHashSet<String>> aggregateResultMap = new LinkedHashMap<String, LinkedHashSet<String>>();\n \n-    /** The parallel task result. */\n+    /** The parallel task result: \n+     * a hashmap to store the request parameters, host name, ResponseOnSingleTask.\n+     * Note that by default, the response content is not saved into the ResponseOnSingleTask.\n+     * Unless the user changes the config by calling {@link ParallelTaskBuilder#setSaveResponseToTask}\n+     * \n+     * */\n     private Map<String, NodeReqResponse> parallelTaskResult = new ConcurrentHashMap<String, NodeReqResponse>();\n \n     /** The http meta. */\n@@ -189,7 +194,6 @@ public ParallelTask() {\n      * @param pingMeta the ping meta\n      * @param handler the handler\n      * @param responseContext the response context\n-     * @param asyncHttpClient the async http client\n      * @param replacementVarMapNodeSpecific the replacement var map node specific\n      * @param replacementVarMap the replacement var map\n      * @param requestReplacementType the request replacement type\n@@ -605,6 +609,9 @@ public List<TaskErrorMeta> getTaskErrorMetas() {\n \n \n \n+    /* (non-Javadoc)\n+     * @see java.lang.Object#toString()\n+     */\n     @Override\n     public String toString() {\n         return \"ParallelTask [config=\" + config + \", submitTime=\" + submitTime\n@@ -822,6 +829,11 @@ public Map<String, SetAndCount> getAggregateResultFullSummary() {\n         return summaryMap;\n     }\n     \n+    /**\n+     * Gets the aggregated result human str.\n+     *\n+     * @return the aggregated result human str\n+     */\n     public String getAggregatedResultHumanStr() {\n         return PcStringUtils.getAggregatedResultHuman(aggregateResultMap);\n     }"
            },
            {
                "sha": "5bfed72492379fafe9372257d4fdf9a1162205a5",
                "filename": "src/main/java/io/parallec/core/ParallelTaskBuilder.java",
                "status": "modified",
                "additions": 17,
                "deletions": 9,
                "changes": 26,
                "blob_url": "https://github.com/eBay/parallec/blob/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FParallelTaskBuilder.java",
                "raw_url": "https://github.com/eBay/parallec/raw/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FParallelTaskBuilder.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FParallelTaskBuilder.java?ref=8176e3d37554734d44f52f1a1233f9ebaaa9bd6a",
                "patch": "@@ -48,6 +48,7 @@\n import com.google.common.base.Strings;\n import com.ning.http.client.AsyncHttpClient;\n \n+\n /**\n  * \n  * This store all the metadata to build the ParallelTask\n@@ -56,7 +57,7 @@\n  * validation, certain missing parameters will use the default values. execute()\n  * is the key function\n  *\n- * @author Yuanteng Jeff Pei\n+ * @author Yuanteng (Jeff) Pei\n  */\n public class ParallelTaskBuilder {\n \n@@ -240,7 +241,9 @@ public ParallelTask execute(ParallecResponseHandler handler) {\n \n             if (task.getConfig().isEnableCapacityAwareTaskScheduler()) {\n \n-                // add to the task\n+                //late initialize the task scheduler\n+                ParallelTaskManager.getInstance().initTaskSchedulerIfNot();\n+                // add task to the wait queue\n                 ParallelTaskManager.getInstance().getWaitQ().add(task);\n \n                 logger.info(\"Enabled CapacityAwareTaskScheduler. Submitted task to waitQ in builder.. \"\n@@ -267,7 +270,6 @@ public void run() {\n                         task.getTaskId());\n \n                 while (task != null && !task.isCompleted()) {\n-\n                     try {\n                         Thread.sleep(500L);\n                     } catch (InterruptedException e) {\n@@ -589,7 +591,7 @@ public void setTargetHostBuilder(ITargetHostsBuilder thb) {\n     }\n \n     /**\n-     * Gets the mode of either sync or async\n+     * Gets the mode of either sync or async.\n      *\n      * @return the mode\n      */\n@@ -929,11 +931,12 @@ public ParallelTaskBuilder setSshPrivKeyRelativePath(\n         return this;\n     }\n \n+ \n     /**\n-     * Sets the ssh priv key need passphrase and set value.\n+     * Sets the ssh priv key relative path wtih passphrase.\n      *\n-     * @param userName\n-     *            the user name\n+     * @param privKeyRelativePath the priv key relative path\n+     * @param passphrase the passphrase\n      * @return the parallel task builder\n      */\n     public ParallelTaskBuilder setSshPrivKeyRelativePathWtihPassphrase(\n@@ -1009,7 +1012,6 @@ public ParallelTaskBuilder setTcpChannelFactory(\n         return this;\n     }\n \n-\n     /**\n      * Sets the config.\n      *\n@@ -1060,6 +1062,11 @@ public ParallelTaskBuilder setEnableCapacityAwareTaskScheduler(\n \n     /**\n      * Sets the auto save log to local.\n+     * Will auto save logs to the local file system. \n+     * \n+     * The logs by default are written to path \"userdata/task/logs\" folder.\n+     * \n+     * Note that it is user's responsibility to clearn these logs.\n      * \n      * OPTIONAL. DEFAULT: false. \n      * @param autoSaveLogToLocal\n@@ -1111,7 +1118,8 @@ public int getConcurrency() {\n \n     \n     /**\n-     * Sets the ping mode.\n+     * Sets the ping mode. Process or INET_ADDRESS_REACHABLE based.\n+     * Default as InetAddress mode. InetAddress requires Root privilege. \n      *\n      * @param mode the mode\n      * @return the parallel task builder"
            },
            {
                "sha": "78ac0193e9d3e475cbaff160b4d37c4d15423b22",
                "filename": "src/main/java/io/parallec/core/RequestProtocol.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FRequestProtocol.java",
                "raw_url": "https://github.com/eBay/parallec/raw/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FRequestProtocol.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FRequestProtocol.java?ref=8176e3d37554734d44f52f1a1233f9ebaaa9bd6a",
                "patch": "@@ -18,7 +18,7 @@\n  * \n  * Currently values include HTTP, HTTPS, SSH, PING, TCP\n  * \n- * @author Yuanteng Jeff Pei\n+ * @author Yuanteng (Jeff) Pei\n  */\n public enum RequestProtocol {\n "
            },
            {
                "sha": "001fa6143d774d96438f3bfcd3a464aa0009928a",
                "filename": "src/main/java/io/parallec/core/ResponseOnSingleTask.java",
                "status": "modified",
                "additions": 9,
                "deletions": 6,
                "changes": 15,
                "blob_url": "https://github.com/eBay/parallec/blob/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FResponseOnSingleTask.java",
                "raw_url": "https://github.com/eBay/parallec/raw/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FResponseOnSingleTask.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FResponseOnSingleTask.java?ref=8176e3d37554734d44f52f1a1233f9ebaaa9bd6a",
                "patch": "@@ -19,14 +19,17 @@\n import java.util.LinkedHashMap;\n import java.util.Map;\n \n-\n /**\n- * this includes the request\n- * each target host will have one.\n+ * this includes the request each target host will have one.\n+ * \n+ * {@link ResponseOnSingleTask#isError()} is true: means fail to receive\n+ * response.\n+ * \n+ * Note that by default, the response content is not saved into the\n+ * singleTaskResponse. Unless the user change the config by calling\n+ * {@link ParallelTaskBuilder#setSaveResponseToTask}\n  * \n- * {@link ResponseOnSingleTask#isError()} is true: means fail to receive resposne \n- *\n- * @author Yuanteng Jeff Pei\n+ * @author Yuanteng (Jeff) Pei\n  * \n  */\n public class ResponseOnSingleTask {"
            },
            {
                "sha": "08e5e4d95fa1272b9177a8da6db1cd161a67669e",
                "filename": "src/main/java/io/parallec/core/actor/AssistantExecutionManager.java",
                "status": "modified",
                "additions": 2,
                "deletions": 9,
                "changes": 11,
                "blob_url": "https://github.com/eBay/parallec/blob/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FAssistantExecutionManager.java",
                "raw_url": "https://github.com/eBay/parallec/raw/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FAssistantExecutionManager.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FAssistantExecutionManager.java?ref=8176e3d37554734d44f52f1a1233f9ebaaa9bd6a",
                "patch": "@@ -33,16 +33,9 @@\n \n /**\n  * \n- * 20131014; update major logic to enable concurrency control\n+ * The assistant manager is for sending out requests in batch;\n  * \n- * 20130730 The assistant manager is soley for sending out requests in batch;\n- * with interval based sleep 1. Enables IN PARALLEL sending batch requests and\n- * geting response 2. Enables > 5K nodes per requests. The manager gives all\n- * request sending task to this AssistantExecutionManager. this guy\n- * tells workers to directly reply back to the original manager. So that\n- * requests and replies can happen the same time.\n- * \n- * @author Yuanteng Jeff Pei\n+ * @author Yuanteng (Jeff) Pei\n  * \n  */\n public class AssistantExecutionManager extends UntypedActor {"
            },
            {
                "sha": "654276b1902aebdba78ab862d8adf2529d3b2c15",
                "filename": "src/main/java/io/parallec/core/actor/ExecutionManager.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FExecutionManager.java",
                "raw_url": "https://github.com/eBay/parallec/raw/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FExecutionManager.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FExecutionManager.java?ref=8176e3d37554734d44f52f1a1233f9ebaaa9bd6a",
                "patch": "@@ -73,7 +73,7 @@\n  * \n  * Will create a list of operation workers to match each of the target hosts.\n  * \n- * @author Yuanteng Jeff Pei\n+ * @author Yuanteng (Jeff) Pei\n  * \n  */\n public class ExecutionManager extends UntypedActor {"
            },
            {
                "sha": "6560ca998cd0c6664ceb33986ac53b2750a72493",
                "filename": "src/main/java/io/parallec/core/actor/HttpWorker.java",
                "status": "modified",
                "additions": 11,
                "deletions": 13,
                "changes": 24,
                "blob_url": "https://github.com/eBay/parallec/blob/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FHttpWorker.java",
                "raw_url": "https://github.com/eBay/parallec/raw/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FHttpWorker.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FHttpWorker.java?ref=8176e3d37554734d44f52f1a1233f9ebaaa9bd6a",
                "patch": "@@ -46,13 +46,15 @@\n import com.ning.http.client.Response;\n \n \n+\n /**\n  * This is an akka actor with async http client.\n  *\n- * @author Yuanteng Jeff Pei\n+ * @author Yuanteng (Jeff) Pei\n  */\n public class HttpWorker extends UntypedActor {\n \n+    /** The actor max operation timeout sec. */\n     private int actorMaxOperationTimeoutSec;\n \n     /** The client. */\n@@ -95,22 +97,17 @@ public class HttpWorker extends UntypedActor {\n     private boolean sentReply = false;\n \n     /** The response future. */\n-    // 20150221\n     ListenableFuture<ResponseOnSingeRequest> responseFuture = null;\n-\n+    \n     /**\n      * Instantiates a new http worker.\n      *\n-     * @param client\n-     *            the client\n-     * @param requestUrl\n-     *            the request url\n-     * @param httpMethod\n-     *            the http method\n-     * @param postData\n-     *            the post data\n-     * @param httpHeaderMap\n-     *            the http header map\n+     * @param actorMaxOperationTimeoutSec the actor max operation timeout sec\n+     * @param client the client\n+     * @param requestUrl the request url\n+     * @param httpMethod the http method\n+     * @param postData the post data\n+     * @param httpHeaderMap the http header map\n      */\n     public HttpWorker(final int actorMaxOperationTimeoutSec,\n             final AsyncHttpClient client, final String requestUrl,\n@@ -289,6 +286,7 @@ public void onReceive(Object message) throws Exception {\n     }\n \n     /**\n+     * Cancel cancellable.\n      */\n     public void cancelCancellable() {\n "
            },
            {
                "sha": "d00e02992d673748c85230c74fa96879ee34b67f",
                "filename": "src/main/java/io/parallec/core/actor/OperationWorker.java",
                "status": "modified",
                "additions": 17,
                "deletions": 19,
                "changes": 36,
                "blob_url": "https://github.com/eBay/parallec/blob/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FOperationWorker.java",
                "raw_url": "https://github.com/eBay/parallec/raw/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FOperationWorker.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FOperationWorker.java?ref=8176e3d37554734d44f52f1a1233f9ebaaa9bd6a",
                "patch": "@@ -44,10 +44,11 @@\n import com.ning.http.client.AsyncHttpClient;\n \n \n+\n /**\n  * AHC based.\n  *\n- * @author Yuanteng Jeff Pei\n+ * @author Yuanteng (Jeff) Pei\n  */\n public class OperationWorker extends UntypedActor {\n \n@@ -83,6 +84,7 @@ public class OperationWorker extends UntypedActor {\n     /** The timeout duration. */\n     private FiniteDuration timeoutDuration = null;\n \n+    /** The actor max operation timeout sec. */\n     private int actorMaxOperationTimeoutSec = ParallelTaskConfigDefault.actorMaxOperationTimeoutSec;\n \n     /** The start time millis. */\n@@ -434,6 +436,9 @@ private final void operationTimeout() {\n \n     }\n \n+    /**\n+     * Cancel.\n+     */\n     @SuppressWarnings(\"deprecation\")\n     private final void cancel() {\n         /**\n@@ -475,14 +480,11 @@ private final void cancelCancellable() {\n     /**\n      * Reply.\n      *\n-     * @param error\n-     *            the error\n-     * @param errorMessage\n-     *            the error message\n-     * @param stackTrace\n-     *            the stack trace\n-     * @param statusCode\n-     *            the status code\n+     * @param error the error\n+     * @param errorMessage the error message\n+     * @param stackTrace the stack trace\n+     * @param statusCode the status code\n+     * @param statusCodeInt the status code int\n      */\n     private final void reply(final boolean error, final String errorMessage,\n             final String stackTrace, final String statusCode,\n@@ -495,16 +497,12 @@ private final void reply(final boolean error, final String errorMessage,\n     /**\n      * Reply.\n      *\n-     * @param error\n-     *            the error\n-     * @param errorMessage\n-     *            the error message\n-     * @param stackTrace\n-     *            the stack trace\n-     * @param statusCode\n-     *            the status code\n-     * @param receiveTime\n-     *            the receive time\n+     * @param error the error\n+     * @param errorMessage the error message\n+     * @param stackTrace the stack trace\n+     * @param statusCode the status code\n+     * @param statusCodeInt the status code int\n+     * @param receiveTime the receive time\n      */\n     @SuppressWarnings(\"deprecation\")\n     private final void reply(final boolean error, final String errorMessage,"
            },
            {
                "sha": "c91a3dd1690df1dd2f57e7fff635413db4314e0d",
                "filename": "src/main/java/io/parallec/core/actor/PingWorker.java",
                "status": "modified",
                "additions": 17,
                "deletions": 5,
                "changes": 22,
                "blob_url": "https://github.com/eBay/parallec/blob/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FPingWorker.java",
                "raw_url": "https://github.com/eBay/parallec/raw/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FPingWorker.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FPingWorker.java?ref=8176e3d37554734d44f52f1a1233f9ebaaa9bd6a",
                "patch": "@@ -37,20 +37,22 @@\n import akka.actor.Cancellable;\n import akka.actor.UntypedActor;\n \n+\n /**\n  *\n  * Using callable to start a new thread to run the Ping execution task (which\n  * make take minutes). Check if future is read every 0.1 seconds. Make sure the\n  * message are handled async. \n  * \n- * @author Yuanteng Jeff Pei\n+ * @author Yuanteng (Jeff) Pei\n  */\n public class PingWorker extends UntypedActor {\n \n \n     /** The logger. */\n     private static Logger logger = LoggerFactory.getLogger(PingWorker.class);\n \n+    /** The actor max operation timeout sec. */\n     private int actorMaxOperationTimeoutSec;\n \n     /** The sender. */\n@@ -81,10 +83,11 @@ public class PingWorker extends UntypedActor {\n     private Future<ResponseOnSingeRequest> responseFuture;\n \n     /**\n-     * Instantiates a new ssh worker.\n+     * Instantiates a new ping worker.\n      *\n-     * @param targetHost\n-     *            the target host\n+     * @param actorMaxOperationTimeoutSec the actor max operation timeout sec\n+     * @param pingMeta the ping meta\n+     * @param targetHost the target host\n      */\n     public PingWorker(int actorMaxOperationTimeoutSec,PingMeta pingMeta,\n             String targetHost) {\n@@ -365,14 +368,23 @@ public static void setLogger(Logger logger) {\n     /**\n      * thread to return the future.\n      *\n-     * @author Yuanteng Jeff Pei\n+     * @author Yuanteng (Jeff) Pei\n      */\n     private static class PingTask implements Callable<ResponseOnSingeRequest> {\n \n \n         /** The target host. */\n         private String targetHost;\n+        \n+        /** The ping meta. */\n         private PingMeta pingMeta;\n+        \n+        /**\n+         * Instantiates a new ping task.\n+         *\n+         * @param targetHost the target host\n+         * @param pingMeta the ping meta\n+         */\n         public PingTask( String targetHost, PingMeta pingMeta) {\n             this.targetHost = targetHost;\n             this.pingMeta = pingMeta;"
            },
            {
                "sha": "f76e558a2bb8ba358375ed7ad37c78ff294faecd",
                "filename": "src/main/java/io/parallec/core/actor/SshWorker.java",
                "status": "modified",
                "additions": 7,
                "deletions": 6,
                "changes": 13,
                "blob_url": "https://github.com/eBay/parallec/blob/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FSshWorker.java",
                "raw_url": "https://github.com/eBay/parallec/raw/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FSshWorker.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FSshWorker.java?ref=8176e3d37554734d44f52f1a1233f9ebaaa9bd6a",
                "patch": "@@ -39,6 +39,7 @@\n import akka.actor.UntypedActor;\n \n \n+\n /**\n  *\n  * Using callable to start a new thread to run the SSH execution task (which\n@@ -47,13 +48,14 @@\n  * subsequent messages.\n  * \n  * \n- * @author Yuanteng Jeff Pei\n+ * @author Yuanteng (Jeff) Pei\n  */\n public class SshWorker extends UntypedActor {\n \n     /** The logger. */\n     private static Logger logger = LoggerFactory.getLogger(SshWorker.class);\n     \n+    /** The actor max operation timeout sec. */\n     private int actorMaxOperationTimeoutSec;\n \n     /** The sender. */\n@@ -86,10 +88,9 @@ public class SshWorker extends UntypedActor {\n     /**\n      * Instantiates a new ssh worker.\n      *\n-     * @param sshMeta\n-     *            the ssh meta\n-     * @param targetHost\n-     *            the target host\n+     * @param actorMaxOperationTimeoutSec the actor max operation timeout sec\n+     * @param sshMeta the ssh meta\n+     * @param targetHost the target host\n      */\n     public SshWorker(int actorMaxOperationTimeoutSec, SshMeta sshMeta,\n             String targetHost) {\n@@ -373,7 +374,7 @@ public static void setLogger(Logger logger) {\n     /**\n      * thread to return the future.\n      *\n-     * @author Yuanteng Jeff Pei\n+     * @author Yuanteng (Jeff) Pei\n      */\n     private static class SshTask implements Callable<ResponseOnSingeRequest> {\n "
            },
            {
                "sha": "381054a48c880874f0b0666a6b4586d972733943",
                "filename": "src/main/java/io/parallec/core/actor/TcpWorker.java",
                "status": "modified",
                "additions": 4,
                "deletions": 4,
                "changes": 8,
                "blob_url": "https://github.com/eBay/parallec/blob/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FTcpWorker.java",
                "raw_url": "https://github.com/eBay/parallec/raw/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FTcpWorker.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FTcpWorker.java?ref=8176e3d37554734d44f52f1a1233f9ebaaa9bd6a",
                "patch": "@@ -59,7 +59,7 @@\n /**\n  * A worker for single TCP request class \n  *\n- * @author Yuanteng Jeff Pei\n+ * @author Yuanteng (Jeff) Pei\n  */\n public class TcpWorker extends UntypedActor {\n \n@@ -395,7 +395,7 @@ public void setResponseSb(StringBuilder responseSb) {\n     /**\n      * define the list of handlers for this channel.\n      *\n-     * @author Yuanteng Jeff Pei\n+     * @author Yuanteng (Jeff) Pei\n      */\n     public static class MyPipelineFactory implements ChannelPipelineFactory{\n         \n@@ -446,7 +446,7 @@ public ChannelPipeline getPipeline() {\n     /**\n      * how to pass the idle event back to the worker.\n      *\n-     * @author Yuanteng Jeff Pei\n+     * @author Yuanteng (Jeff) Pei\n      */\n     public static class MyIdleHandler extends IdleStateAwareChannelHandler {\n \n@@ -487,7 +487,7 @@ public void channelIdle(ChannelHandlerContext ctx, IdleStateEvent e) {\n     /**\n      * The Netty response/channel handler.\n      *\n-     * @author Yuanteng Jeff Pei\n+     * @author Yuanteng (Jeff) Pei\n      */\n     public static class TcpChannelHandler extends SimpleChannelHandler {\n "
            },
            {
                "sha": "781caf20a32ea7326b17d50806e65dcf0583080a",
                "filename": "src/main/java/io/parallec/core/actor/message/NodeReqResponse.java",
                "status": "modified",
                "additions": 2,
                "deletions": 4,
                "changes": 6,
                "blob_url": "https://github.com/eBay/parallec/blob/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2Fmessage%2FNodeReqResponse.java",
                "raw_url": "https://github.com/eBay/parallec/raw/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2Fmessage%2FNodeReqResponse.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2Fmessage%2FNodeReqResponse.java?ref=8176e3d37554734d44f52f1a1233f9ebaaa9bd6a",
                "patch": "@@ -24,11 +24,9 @@\n \n \n /**\n- * To save the content request and response By default the responseContent is\n- * NULL because dont need it in InProgress entries. But must init!! when in\n- * valid entries.\n+ * To save the request parameter and the task response for this target host.\n  * \n- * @author Yuanteng Jeff Pei\n+ * @author Yuanteng (Jeff) Pei\n  * \n  */\n public class NodeReqResponse {"
            },
            {
                "sha": "a1d93c99c55bc178bca24ca177f60f9919c07994",
                "filename": "src/main/java/io/parallec/core/actor/message/ResponseCountToBatchSenderAsstManager.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2Fmessage%2FResponseCountToBatchSenderAsstManager.java",
                "raw_url": "https://github.com/eBay/parallec/raw/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2Fmessage%2FResponseCountToBatchSenderAsstManager.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2Fmessage%2FResponseCountToBatchSenderAsstManager.java?ref=8176e3d37554734d44f52f1a1233f9ebaaa9bd6a",
                "patch": "@@ -16,7 +16,7 @@\n /**\n  * Receive count from the manager to asst manager; for flow control.\n  *\n- * @author Yuanteng Jeff Pei\n+ * @author Yuanteng (Jeff) Pei\n  */\n public class ResponseCountToBatchSenderAsstManager {\n "
            },
            {
                "sha": "d8bf9d3268137b7b32735a74bb2e59567ba19b3a",
                "filename": "src/main/java/io/parallec/core/actor/message/ResponseOnSingeRequest.java",
                "status": "modified",
                "additions": 4,
                "deletions": 3,
                "changes": 7,
                "blob_url": "https://github.com/eBay/parallec/blob/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2Fmessage%2FResponseOnSingeRequest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2Fmessage%2FResponseOnSingeRequest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2Fmessage%2FResponseOnSingeRequest.java?ref=8176e3d37554734d44f52f1a1233f9ebaaa9bd6a",
                "patch": "@@ -17,15 +17,16 @@\n \n \n /**\n- * a single HTTP response for each http request\n+ * A single HTTP response for each http request\n  * \n  * Note that the failObtainResponse in the response is whether work successfully\n  * received. it is not about 200 code.\n  * \n  * The Single Response will be in error when the HTTP Worker fail to obtain the\n- * response back on condition of CANCEL PROCESS_ON_EXCEPTION PROCESS_ON_TIMEOUT\n+ * response back on condition of \n+ * [CANCEL or PROCESS_ON_EXCEPTION or PROCESS_ON_TIMEOUT]\n  * \n- * @author Yuanteng Jeff Pei\n+ * @author Yuanteng (Jeff) Pei\n  *\n  */\n public class ResponseOnSingeRequest {"
            },
            {
                "sha": "ad8da945357216662061e3f009141829a0b39324",
                "filename": "src/main/java/io/parallec/core/actor/poll/HttpPollerProcessor.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2Fpoll%2FHttpPollerProcessor.java",
                "raw_url": "https://github.com/eBay/parallec/raw/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2Fpoll%2FHttpPollerProcessor.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2Fpoll%2FHttpPollerProcessor.java?ref=8176e3d37554734d44f52f1a1233f9ebaaa9bd6a",
                "patch": "@@ -31,7 +31,7 @@\n  * Poll API: assume the HTTP Method for poll: is GET / no body/ and with the\n  * same header as the 1st reqwuest\n  * \n- * @author Yuanteng Jeff Pei\n+ * @author Yuanteng (Jeff) Pei\n  * \n  */\n public class HttpPollerProcessor {"
            },
            {
                "sha": "1eafa08df39693952a5345923296224b348d902e",
                "filename": "src/main/java/io/parallec/core/actor/poll/PollerData.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2Fpoll%2FPollerData.java",
                "raw_url": "https://github.com/eBay/parallec/raw/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2Fpoll%2FPollerData.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2Fpoll%2FPollerData.java?ref=8176e3d37554734d44f52f1a1233f9ebaaa9bd6a",
                "patch": "@@ -21,7 +21,7 @@\n /**\n  * the currentProgress is just for display.\n  * \n- * @author Yuanteng Jeff Pei\n+ * @author Yuanteng (Jeff) Pei\n  *\n  */\n public class PollerData {"
            },
            {
                "sha": "5a5fa99b75831ae914b0d56c91f99668ee9cb243",
                "filename": "src/main/java/io/parallec/core/app/ParallecAppMin.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fapp%2FParallecAppMin.java",
                "raw_url": "https://github.com/eBay/parallec/raw/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fapp%2FParallecAppMin.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fapp%2FParallecAppMin.java?ref=8176e3d37554734d44f52f1a1233f9ebaaa9bd6a",
                "patch": "@@ -35,7 +35,7 @@ public static void main(String[] args) {\n         pc.prepareHttpGet(\"/validateInternals.html\")\n                 .setConcurrency(1000)\n                 .setTargetHostsFromString(\n-                        \"parallec.github.io www.jeffpei.com www.restcommander.com\")\n+                        \"www.parallec.io www.jeffpei.com www.restcommander.com\")\n                 .execute(new ParallecResponseHandler() {\n \n                     @Override"
            },
            {
                "sha": "527f4ff8510b2cf10358b9dc02e989502fcc9d8a",
                "filename": "src/main/java/io/parallec/core/app/package-info.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fapp%2Fpackage-info.java",
                "raw_url": "https://github.com/eBay/parallec/raw/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fapp%2Fpackage-info.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fapp%2Fpackage-info.java?ref=8176e3d37554734d44f52f1a1233f9ebaaa9bd6a",
                "patch": "@@ -1,6 +1,6 @@\n /**\n  * The package for storing sample applications using Parallec.\n- * @author Yuanteng Jeff Pei\n+ * @author Yuanteng (Jeff) Pei\n  *\n  */\n package io.parallec.core.app;\n\\ No newline at end of file"
            },
            {
                "sha": "676c2719c7aa03aebb5f325b3e8da66ac4ef3ad0",
                "filename": "src/main/java/io/parallec/core/bean/HttpMeta.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2FHttpMeta.java",
                "raw_url": "https://github.com/eBay/parallec/raw/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2FHttpMeta.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2FHttpMeta.java?ref=8176e3d37554734d44f52f1a1233f9ebaaa9bd6a",
                "patch": "@@ -28,7 +28,7 @@\n  * The metadata about the HTTP request (url/port/header/concurrency etc) It does\n  * not include the target hosts information.\n  * \n- * @author Yuanteng Jeff Pei\n+ * @author Yuanteng (Jeff) Pei\n  */\n public class HttpMeta {\n     /** The logger. */"
            },
            {
                "sha": "9a5292eafadfd4dd462803864b3f90bdd2d3d191",
                "filename": "src/main/java/io/parallec/core/bean/SetAndCount.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2FSetAndCount.java",
                "raw_url": "https://github.com/eBay/parallec/raw/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2FSetAndCount.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2FSetAndCount.java?ref=8176e3d37554734d44f52f1a1233f9ebaaa9bd6a",
                "patch": "@@ -18,7 +18,7 @@\n /**\n  * The class used to represent the target hosts and a count when aggregation\n  * \n- * @author Yuanteng Jeff Pei\n+ * @author Yuanteng (Jeff) Pei\n  */\n public class SetAndCount {\n "
            },
            {
                "sha": "7c5efc8b164ac9e972c4c2f3a4b9954621ddfbf5",
                "filename": "src/main/java/io/parallec/core/bean/SingleTargetTaskStatus.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2FSingleTargetTaskStatus.java",
                "raw_url": "https://github.com/eBay/parallec/raw/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2FSingleTargetTaskStatus.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2FSingleTargetTaskStatus.java?ref=8176e3d37554734d44f52f1a1233f9ebaaa9bd6a",
                "patch": "@@ -15,7 +15,7 @@\n /**\n  * The Enum SingleTargetTaskStatus.\n  * \n- * @author Yuanteng Jeff Pei\n+ * @author Yuanteng (Jeff) Pei\n  */\n public enum SingleTargetTaskStatus {\n "
            },
            {
                "sha": "c2d338ca2dadf6d4b4cbea42718f5e4e016c6d7a",
                "filename": "src/main/java/io/parallec/core/bean/StrStrMap.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2FStrStrMap.java",
                "raw_url": "https://github.com/eBay/parallec/raw/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2FStrStrMap.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2FStrStrMap.java?ref=8176e3d37554734d44f52f1a1233f9ebaaa9bd6a",
                "patch": "@@ -23,7 +23,7 @@\n  * variable name : e.g. GET /checkProgress/$JOBID value: the actual value string\n  * that will replace the JOBID\n  * \n- * @author Yuanteng Jeff Pei\n+ * @author Yuanteng (Jeff) Pei\n  */\n public class StrStrMap {\n "
            },
            {
                "sha": "097fd41eb6c04837001aa338868b51cd99d38da2",
                "filename": "src/main/java/io/parallec/core/bean/TargetHostMeta.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2FTargetHostMeta.java",
                "raw_url": "https://github.com/eBay/parallec/raw/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2FTargetHostMeta.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2FTargetHostMeta.java?ref=8176e3d37554734d44f52f1a1233f9ebaaa9bd6a",
                "patch": "@@ -22,7 +22,7 @@\n  * The metadata about the targetHost, which is mainly a list of hostnames (IP or FQDN)\n  *  the primary key is the targetHostId, generated with timestamp\n  * \n- * @author Yuanteng Jeff Pei\n+ * @author Yuanteng (Jeff) Pei\n  */\n public class TargetHostMeta {\n "
            },
            {
                "sha": "d533ef114e12c6ab4affb2fb5e6d1deef37a3469",
                "filename": "src/main/java/io/parallec/core/bean/TaskRequest.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2FTaskRequest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2FTaskRequest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2FTaskRequest.java?ref=8176e3d37554734d44f52f1a1233f9ebaaa9bd6a",
                "patch": "@@ -29,7 +29,7 @@\n  * This is the request send to the operation worker. \n  * It contains the actual request that has been replaced if there are variables defined.\n  * \n- * @author Yuanteng Jeff Pei \n+ * @author Yuanteng (Jeff) Pei \n  */\n public class TaskRequest {\n "
            },
            {
                "sha": "251c5e0b3136cca2c420628e7384939aa3d23b69",
                "filename": "src/main/java/io/parallec/core/bean/ping/PingMeta.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2Fping%2FPingMeta.java",
                "raw_url": "https://github.com/eBay/parallec/raw/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2Fping%2FPingMeta.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2Fping%2FPingMeta.java?ref=8176e3d37554734d44f52f1a1233f9ebaaa9bd6a",
                "patch": "@@ -22,7 +22,7 @@\n /**\n  * The Ping metadata on mode,timeout and retries. \n  * \n- * @author Yuanteng Jeff Pei\n+ * @author Yuanteng (Jeff) Pei\n  *\n  */\n public class PingMeta {"
            },
            {
                "sha": "52dd241bdacc3fb72232f2329a06ce9756086750",
                "filename": "src/main/java/io/parallec/core/bean/ping/PingMode.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2Fping%2FPingMode.java",
                "raw_url": "https://github.com/eBay/parallec/raw/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2Fping%2FPingMode.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2Fping%2FPingMode.java?ref=8176e3d37554734d44f52f1a1233f9ebaaa9bd6a",
                "patch": "@@ -15,7 +15,7 @@\n /**\n  * The Enum of Ping Mode. Process or INET_ADDRESS_REACHABLE based.\n  * Default as InetAddress mode. InetAddress requires Root privilege. \n- * @author Yuanteng Jeff Pei\n+ * @author Yuanteng (Jeff) Pei\n  */\n public enum PingMode {\n "
            },
            {
                "sha": "6c5075e453f9058244fd6b114951b3b639d8c2a1",
                "filename": "src/main/java/io/parallec/core/bean/ssh/SshMeta.java",
                "status": "modified",
                "additions": 22,
                "deletions": 17,
                "changes": 39,
                "blob_url": "https://github.com/eBay/parallec/blob/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2Fssh%2FSshMeta.java",
                "raw_url": "https://github.com/eBay/parallec/raw/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2Fssh%2FSshMeta.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2Fssh%2FSshMeta.java?ref=8176e3d37554734d44f52f1a1233f9ebaaa9bd6a",
                "patch": "@@ -16,11 +16,12 @@\n import io.parallec.core.exception.ParallelTaskInvalidException;\n \n \n+\n /**\n  * all ssh metadata except for the target host name. also those timeout configs\n  * and\n  * \n- * @author Yuanteng Jeff Pei\n+ * @author Yuanteng (Jeff) Pei\n  *\n  */\n public class SshMeta {\n@@ -92,25 +93,19 @@ public void setPassphrase(String passphrase) {\n         this.passphrase = passphrase;\n     }\n \n+\n     /**\n      * Instantiates a new ssh meta.\n      *\n-     * @param commandLine\n-     *            the command line\n-     * @param userName\n-     *            the user name\n-     * @param sshPort\n-     *            the ssh port\n-     * @param sshLoginType\n-     *            the ssh login type\n-     * @param privKeyRelativePath\n-     *            the priv key relative path\n-     * @param password\n-     *            the password\n-     * @param privKeyUsePassphrase\n-     *            the priv key use passphrase\n-     * @param passphrase\n-     *            the passphrase\n+     * @param commandLine the command line\n+     * @param userName the user name\n+     * @param sshPort the ssh port\n+     * @param sshLoginType the ssh login type\n+     * @param privKeyRelativePath the priv key relative path\n+     * @param password the password\n+     * @param privKeyUsePassphrase the priv key use passphrase\n+     * @param passphrase the passphrase\n+     * @param sshConnectionTimeoutMillis the ssh connection timeout millis\n      */\n     public SshMeta(String commandLine, String userName, int sshPort,\n             SshLoginType sshLoginType, String privKeyRelativePath,\n@@ -316,10 +311,20 @@ public String getPrivKeyAbsPath() {\n         return privKeyAbsPath;\n     }\n \n+    /**\n+     * Gets the ssh connection timeout millis.\n+     *\n+     * @return the ssh connection timeout millis\n+     */\n     public int getSshConnectionTimeoutMillis() {\n         return sshConnectionTimeoutMillis;\n     }\n \n+    /**\n+     * Sets the ssh connection timeout millis.\n+     *\n+     * @param sshConnectionTimeoutMillis the new ssh connection timeout millis\n+     */\n     public void setSshConnectionTimeoutMillis(int sshConnectionTimeoutMillis) {\n         this.sshConnectionTimeoutMillis = sshConnectionTimeoutMillis;\n     }"
            },
            {
                "sha": "6d3dcba7ba993dfa635b4403551b9c251a390d33",
                "filename": "src/main/java/io/parallec/core/bean/tcp/TcpMeta.java",
                "status": "modified",
                "additions": 2,
                "deletions": 2,
                "changes": 4,
                "blob_url": "https://github.com/eBay/parallec/blob/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2Ftcp%2FTcpMeta.java",
                "raw_url": "https://github.com/eBay/parallec/raw/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2Ftcp%2FTcpMeta.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2Ftcp%2FTcpMeta.java?ref=8176e3d37554734d44f52f1a1233f9ebaaa9bd6a",
                "patch": "@@ -30,7 +30,7 @@\n  * all ssh metadata except for the target host name. also those timeout configs\n  * and\n  * \n- * @author Yuanteng Jeff Pei\n+ * @author Yuanteng (Jeff) Pei\n  *\n  */\n public class TcpMeta {\n@@ -92,7 +92,7 @@ public boolean validation() throws ParallelTaskInvalidException {\n         \n         if (this.tcpConnectTimeoutMillis == null) {\n             logger.info(\"SET DEFAULT TCP CONNECT TIMEOUT: TCP tcpConnectTimeoutMillis is set as default\");\n-            this.tcpConnectTimeoutMillis= ParallecGlobalConfig.tcpConnectionTimeoutMillisDefault;\n+            this.tcpConnectTimeoutMillis= ParallecGlobalConfig.tcpConnectTimeoutMillisDefault;\n         }\n         \n         if (this.tcpIdleTimeoutSec == null) {"
            },
            {
                "sha": "ecf6a6f1a9db1bd62639424800f905a9654dd69f",
                "filename": "src/main/java/io/parallec/core/commander/workflow/InternalDataProvider.java",
                "status": "modified",
                "additions": 8,
                "deletions": 27,
                "changes": 35,
                "blob_url": "https://github.com/eBay/parallec/blob/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fcommander%2Fworkflow%2FInternalDataProvider.java",
                "raw_url": "https://github.com/eBay/parallec/raw/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fcommander%2Fworkflow%2FInternalDataProvider.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fcommander%2Fworkflow%2FInternalDataProvider.java?ref=8176e3d37554734d44f52f1a1233f9ebaaa9bd6a",
                "patch": "@@ -28,7 +28,7 @@\n /**\n  * generate the node data; make sure it is not null.\n  * \n- * @author Yuanteng Jeff Pei\n+ * @author Yuanteng (Jeff) Pei\n  * \n  */\n public class InternalDataProvider {\n@@ -56,14 +56,14 @@ private InternalDataProvider() {\n     }\n \n     /**\n-     * Gen node data map.\n+     * Generate node data map.\n      *\n      * @param task\n      *            the job info\n      */\n     public void genNodeDataMap(ParallelTask task) {\n \n-        TargetHostMeta nodeGroupSourceMetadata = task.getTargetHostMeta();\n+        TargetHostMeta targetHostMeta = task.getTargetHostMeta();\n \n         HttpMeta httpMeta = task.getHttpMeta();\n \n@@ -72,11 +72,10 @@ public void genNodeDataMap(ParallelTask task) {\n         String requestContent = HttpMeta\n                 .replaceDefaultFullRequestContent(entityBody);\n \n-        // 2015 new\n         Map<String, NodeReqResponse> parallelTaskResult = task\n                 .getParallelTaskResult();\n         try {\n-            for (String fqdn : nodeGroupSourceMetadata.getHosts()) {\n+            for (String fqdn : targetHostMeta.getHosts()) {\n                 NodeReqResponse nodeReqResponse = new NodeReqResponse(fqdn);\n                 nodeReqResponse.setDefaultReqestContent(requestContent);\n                 parallelTaskResult.put(fqdn, nodeReqResponse);\n@@ -90,18 +89,10 @@ public void genNodeDataMap(ParallelTask task) {\n     }// end func.\n \n     /**\n-     * Check if it will execute VarUtils.NODE_REQUEST_WILL_EXECUTE each target\n-     * host is unique as in the key of the hash map.\n-     * \n-     * So there will not be duplicated target hosts.\n-     * \n-     * \n-     * @param nodeDataMapValidSource\n-     *            the node data map valid source\n-     * @param nodeDataMapValidSafe\n-     *            the node data map valid safe\n-     * @param commandType\n-     *            the command type\n+     * Filter unsafe or unnecessary request.\n+     *\n+     * @param nodeDataMapValidSource the node data map valid source\n+     * @param nodeDataMapValidSafe the node data map valid safe\n      */\n     public void filterUnsafeOrUnnecessaryRequest(\n             Map<String, NodeReqResponse> nodeDataMapValidSource,\n@@ -114,20 +105,13 @@ public void filterUnsafeOrUnnecessaryRequest(\n             String hostName = entry.getKey();\n             NodeReqResponse nrr = entry.getValue();\n \n-            if (nrr == null) {\n-                logger.error(\"NodeReqResponse is NULL \"\n-                        + \"in filterUnsafeRequest for host {}\", hostName);\n-                continue;\n-            }\n-            // now get the content.\n             Map<String, String> map = nrr.getRequestParameters();\n \n             /**\n              * 20130507: will generally apply to all requests: if have this\n              * field and this field is false\n              */\n             if (map.containsKey(PcConstants.NODE_REQUEST_WILL_EXECUTE)) {\n-\n                 Boolean willExecute = Boolean.parseBoolean(map\n                         .get(PcConstants.NODE_REQUEST_WILL_EXECUTE));\n \n@@ -140,9 +124,6 @@ public void filterUnsafeOrUnnecessaryRequest(\n             }\n \n             // now safely to add this node in.\n-\n-            // note that this is shallow copy; put the pointer of the source\n-            // in...\n             nodeDataMapValidSafe.put(hostName, nrr);\n         }// end for loop\n "
            },
            {
                "sha": "cabbf22158fd4d0e27c0cd299b72b51d4e32011d",
                "filename": "src/main/java/io/parallec/core/commander/workflow/VarReplacementProvider.java",
                "status": "modified",
                "additions": 1,
                "deletions": 13,
                "changes": 14,
                "blob_url": "https://github.com/eBay/parallec/blob/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fcommander%2Fworkflow%2FVarReplacementProvider.java",
                "raw_url": "https://github.com/eBay/parallec/raw/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fcommander%2Fworkflow%2FVarReplacementProvider.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fcommander%2Fworkflow%2FVarReplacementProvider.java?ref=8176e3d37554734d44f52f1a1233f9ebaaa9bd6a",
                "patch": "@@ -14,9 +14,7 @@\n \n import io.parallec.core.ParallelTask;\n import io.parallec.core.actor.message.NodeReqResponse;\n-import io.parallec.core.bean.HttpMeta;\n import io.parallec.core.bean.StrStrMap;\n-import io.parallec.core.bean.TargetHostMeta;\n import io.parallec.core.util.PcConstants;\n import io.parallec.core.util.PcDateUtils;\n \n@@ -31,7 +29,7 @@\n  * \n  * extending from replacing only WISB based. now to also API based.\n  * \n- * @author Yuanteng Jeff Pei\n+ * @author Yuanteng (Jeff) Pei\n  * \n  */\n public class VarReplacementProvider {\n@@ -78,7 +76,6 @@ private VarReplacementProvider() {\n      *            boolean: use target host specific replacement map\n      * @param replacementVarMapNodeSpecific\n      *            the replacement variable map node specific\n-     * @return the string\n      */\n     public void updateRequestWithReplacement(\n             ParallelTask task, boolean useReplacementVarMap,\n@@ -88,15 +85,6 @@ public void updateRequestWithReplacement(\n \n         try {\n \n-            TargetHostMeta targetHostMeta = task.getTargetHostMeta();\n-            HttpMeta cmd = task.getHttpMeta();\n-            if (targetHostMeta == null || cmd == null) {\n-\n-                String errMessage = \"nodeGroupSourceMetadata  is NULL or agentCommandType is NULL in updateRequestContentGenericHelper. EXIT!!\"\n-                        + PcDateUtils.getNowDateTimeStrStandard();\n-                logger.error(errMessage);\n-            }\n-\n             /**\n              * \n              * ENABLE CRETIRIA: useReplacementVarMap==true"
            },
            {
                "sha": "b855c568e9cf23162d77abc9e4a2091803530254",
                "filename": "src/main/java/io/parallec/core/commander/workflow/ssh/SshProvider.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fcommander%2Fworkflow%2Fssh%2FSshProvider.java",
                "raw_url": "https://github.com/eBay/parallec/raw/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fcommander%2Fworkflow%2Fssh%2FSshProvider.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fcommander%2Fworkflow%2Fssh%2FSshProvider.java?ref=8176e3d37554734d44f52f1a1233f9ebaaa9bd6a",
                "patch": "@@ -38,7 +38,7 @@\n  * a basic one that works with password. If needed we may replace this\n  * SshProvider after defining an interface.\n  * \n- * @author Yuanteng Jeff Pei\n+ * @author Yuanteng (Jeff) Pei\n  *\n  */\n public class SshProvider {"
            },
            {
                "sha": "d1e5d16a13df696ac7bd091cc99d6ef5d39772d2",
                "filename": "src/main/java/io/parallec/core/config/ParallecGlobalConfig.java",
                "status": "modified",
                "additions": 3,
                "deletions": 4,
                "changes": 7,
                "blob_url": "https://github.com/eBay/parallec/blob/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fconfig%2FParallecGlobalConfig.java",
                "raw_url": "https://github.com/eBay/parallec/raw/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fconfig%2FParallecGlobalConfig.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fconfig%2FParallecGlobalConfig.java?ref=8176e3d37554734d44f52f1a1233f9ebaaa9bd6a",
                "patch": "@@ -19,7 +19,7 @@\n  * Different from those settings defined in ParallelTaskConfig, \n  * settings here are effective to all executions, and cannot be overwritten for a particular task.\n  * \n- *  @author Yuanteng Jeff Pei\n+ *  @author Yuanteng (Jeff) Pei\n  */\n public class ParallecGlobalConfig {\n \n@@ -58,10 +58,9 @@ public class ParallecGlobalConfig {\n \n     /** The ssh buffer size. */\n     public static int sshBufferSize = 1024;\n-\n     \n     /** The tcp connection timeout millis default. */\n-    public static int tcpConnectionTimeoutMillisDefault = 2000;\n+    public static int tcpConnectTimeoutMillisDefault = 2000;\n     \n     /** The tcp idle timeout seconds default. */\n     public static int tcpIdleTimeoutSecDefault = 5;\n@@ -92,7 +91,7 @@ public class ParallecGlobalConfig {\n     public static double pingFutureCheckIntervalSec = 0.1;\n     \n     /** The log response interval. */\n-    public static int logResponseInterval = 1;\n+    public static int logResponseInterval = 5;\n     \n     /** The log all response after percent. */\n     public static double logAllResponseAfterPercent = 95.0;"
            },
            {
                "sha": "36bc5adf8548b921916fae5cab24882fa9f69004",
                "filename": "src/main/java/io/parallec/core/config/ParallelTaskConfig.java",
                "status": "modified",
                "additions": 6,
                "deletions": 2,
                "changes": 8,
                "blob_url": "https://github.com/eBay/parallec/blob/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fconfig%2FParallelTaskConfig.java",
                "raw_url": "https://github.com/eBay/parallec/raw/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fconfig%2FParallelTaskConfig.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fconfig%2FParallelTaskConfig.java?ref=8176e3d37554734d44f52f1a1233f9ebaaa9bd6a",
                "patch": "@@ -13,14 +13,18 @@\n package io.parallec.core.config;\n \n import io.parallec.core.ParallelTask;\n+import io.parallec.core.ParallelTaskBuilder;\n \n /**\n  * Configuration class to use with a {@link ParallelTask}. \n  * \n  * This can be overwritten for each task. \n  * \n- * Configs about various timeout, whether to auto save responses,\n- * whether to enable the s  \n+ * Configs about various timeout, whether to auto save logs / save responses.\n+ * whether to enable the capacity scheduler.\n+ * \n+ * Some of the most useful ones we directly have APIs by the {@link ParallelTaskBuilder} \n+ * \n  * will load from the default value from {@link ParallelTaskConfigDefault}\n  *\n  */"
            },
            {
                "sha": "1e388221c32a1a6212ca050b6595f3bcf0cd003c",
                "filename": "src/main/java/io/parallec/core/exception/ActorMessageTypeInvalidException.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fexception%2FActorMessageTypeInvalidException.java",
                "raw_url": "https://github.com/eBay/parallec/raw/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fexception%2FActorMessageTypeInvalidException.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fexception%2FActorMessageTypeInvalidException.java?ref=8176e3d37554734d44f52f1a1233f9ebaaa9bd6a",
                "patch": "@@ -15,7 +15,7 @@\n /**\n  * The Class ActorMessageTypeInvalidException.\n  * \n- * @author Yuanteng Jeff Pei\n+ * @author Yuanteng (Jeff) Pei\n  */\n public class ActorMessageTypeInvalidException extends RuntimeException {\n "
            },
            {
                "sha": "d5f8ad385d2b991c27b690befb74fed757cecee2",
                "filename": "src/main/java/io/parallec/core/monitor/MonitorProvider.java",
                "status": "modified",
                "additions": 9,
                "deletions": 1,
                "changes": 10,
                "blob_url": "https://github.com/eBay/parallec/blob/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fmonitor%2FMonitorProvider.java",
                "raw_url": "https://github.com/eBay/parallec/raw/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fmonitor%2FMonitorProvider.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fmonitor%2FMonitorProvider.java?ref=8176e3d37554734d44f52f1a1233f9ebaaa9bd6a",
                "patch": "@@ -28,6 +28,7 @@\n import com.google.gson.GsonBuilder;\n \n \n+\n /**\n  * The Class MonitorProvider.\n  */\n@@ -93,6 +94,11 @@ public ThreadInfo[] getThreadDump() {\n         return threadMxBean.dumpAllThreads(true, true);\n     }\n \n+    /**\n+     * Gets the live thread count.\n+     *\n+     * @return the live thread count\n+     */\n     public int getLiveThreadCount() {\n         return ManagementFactory.getThreadMXBean().getThreadCount(); \n     }\n@@ -123,7 +129,9 @@ public ThreadUsage getThreadUsage() {\n     }\n \n     /**\n-     * Log health.\n+     * Gets the health memory.\n+     *\n+     * @return the health memory\n      */\n     public String getHealthMemory() {\n         StringBuilder sb = new StringBuilder();"
            },
            {
                "sha": "b9ac0cce16952c3b4f66863c3ea380aef11f93ea",
                "filename": "src/main/java/io/parallec/core/resources/AsyncHttpClientFactoryEmbed.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fresources%2FAsyncHttpClientFactoryEmbed.java",
                "raw_url": "https://github.com/eBay/parallec/raw/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fresources%2FAsyncHttpClientFactoryEmbed.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fresources%2FAsyncHttpClientFactoryEmbed.java?ref=8176e3d37554734d44f52f1a1233f9ebaaa9bd6a",
                "patch": "@@ -42,7 +42,7 @@\n /**\n  * The Class HttpClientFactoryEmbed.\n  *\n- * @author Yuanteng Jeff Pei\n+ * @author Yuanteng (Jeff) Pei\n  */\n public final class AsyncHttpClientFactoryEmbed {\n "
            },
            {
                "sha": "0d6349fd2dc6d6dcba00d29cf557acdf813d6195",
                "filename": "src/main/java/io/parallec/core/resources/HttpClientStore.java",
                "status": "modified",
                "additions": 8,
                "deletions": 5,
                "changes": 13,
                "blob_url": "https://github.com/eBay/parallec/blob/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fresources%2FHttpClientStore.java",
                "raw_url": "https://github.com/eBay/parallec/raw/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fresources%2FHttpClientStore.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fresources%2FHttpClientStore.java?ref=8176e3d37554734d44f52f1a1233f9ebaaa9bd6a",
                "patch": "@@ -20,15 +20,18 @@\n \n \n /**\n- * this stores a pair of default fast/slow AsyncHttpClient, and another pair of\n- * customized fast/slow AsyncHttpClient the default.\n+ * this stores a pair of default embedded fast/slow AsyncHttpClient, and another pair of\n+ * customized fast/slow AsyncHttpClient. \n+ * By default the pair of customized ones are just references (duplicates of) the embedded ones.\n  * \n  * For each Parallel Task, will by default load the Embed-fast client in AsyncHttpClientStore \n  *  unless you load your specific async http client.\n  * \n- * Apache HTTP Client is only used for CMS query or load target hosts for URLs.\n+ * You may call {@link #setHttpClientTypeCurrentDefault(HttpClientType)} to change the default one \n  * \n- * @author Yuanteng Jeff Pei\n+ *  (default one is the embedded fast)\n+ * \n+ * @author Yuanteng (Jeff) Pei\n  */\n public class HttpClientStore {\n \n@@ -83,7 +86,7 @@ public synchronized void reinit() {\n     }\n \n     /**\n-     * Shutdown.\n+     * Shutdown each AHC client in the map.\n      */\n     public void shutdown() {\n "
            },
            {
                "sha": "09a8da6e5ffc0837d5331fcaeabc737ae7f49863",
                "filename": "src/main/java/io/parallec/core/resources/HttpClientType.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fresources%2FHttpClientType.java",
                "raw_url": "https://github.com/eBay/parallec/raw/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fresources%2FHttpClientType.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fresources%2FHttpClientType.java?ref=8176e3d37554734d44f52f1a1233f9ebaaa9bd6a",
                "patch": "@@ -14,7 +14,7 @@\n \n \n /**\n- * The Enum HCTYPE.\n+ * The Enum of HttyClient Type. Default is the EMBED_FAST.\n  */\n public enum HttpClientType {\n "
            },
            {
                "sha": "87c12a2826d413de68fd63f5f9935f022d598e97",
                "filename": "src/main/java/io/parallec/core/resources/TcpSshPingResourceStore.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fresources%2FTcpSshPingResourceStore.java",
                "raw_url": "https://github.com/eBay/parallec/raw/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fresources%2FTcpSshPingResourceStore.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fresources%2FTcpSshPingResourceStore.java?ref=8176e3d37554734d44f52f1a1233f9ebaaa9bd6a",
                "patch": "@@ -23,7 +23,7 @@\n  * Provide external resources needed for netty based TCP worker:\n  * ChannelFactory and HashedWheelTimer timer\n  *\n- * @author Yuanteng Jeff Pei\n+ * @author Yuanteng (Jeff) Pei\n  */\n public class TcpSshPingResourceStore {\n "
            },
            {
                "sha": "0907747d324e7d3c96d44f28633e0180a6309212",
                "filename": "src/main/java/io/parallec/core/task/CapacityAwareTaskScheduler.java",
                "status": "modified",
                "additions": 5,
                "deletions": 5,
                "changes": 10,
                "blob_url": "https://github.com/eBay/parallec/blob/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Ftask%2FCapacityAwareTaskScheduler.java",
                "raw_url": "https://github.com/eBay/parallec/raw/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Ftask%2FCapacityAwareTaskScheduler.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Ftask%2FCapacityAwareTaskScheduler.java?ref=8176e3d37554734d44f52f1a1233f9ebaaa9bd6a",
                "patch": "@@ -20,16 +20,16 @@\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n-\n /**\n  * \n- * TODO Doc: The Class EvalTaskInWaitQRunner.\n- * \n+ * A task scheduler runnable to check if there are capacity to run a task \n+ * from the waitQ.\n  * \n+ * Note that this scheduler is not enabled by default. \n  * \n- * A task scheduler runnable to check if there are capacity to run a task in\n- * from the waitQ\n+ * Enable it by {@link ParallelTaskBuilder#setEnableCapacityAwareTaskScheduler(true)}\n  * \n+ *  @author Yuanteng (Jeff) Pei\n  */\n public class CapacityAwareTaskScheduler implements Runnable {\n "
            },
            {
                "sha": "5a385f80cb842bcc1f248ba48bf5d65efc5917e4",
                "filename": "src/main/java/io/parallec/core/task/ParallelTaskBean.java",
                "status": "modified",
                "additions": 2,
                "deletions": 0,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Ftask%2FParallelTaskBean.java",
                "raw_url": "https://github.com/eBay/parallec/raw/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Ftask%2FParallelTaskBean.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Ftask%2FParallelTaskBean.java?ref=8176e3d37554734d44f52f1a1233f9ebaaa9bd6a",
                "patch": "@@ -35,6 +35,8 @@\n \n /**\n  * The Class ParallelTaskBean. this is for serialization and see as a snapshot\n+ * \n+ * @author Yuanteng (Jeff) Pei\n  */\n public class ParallelTaskBean {\n "
            },
            {
                "sha": "d5d23d9a4f1ab7cbe2bb9de9e4053e8d65203191",
                "filename": "src/main/java/io/parallec/core/task/ParallelTaskManager.java",
                "status": "modified",
                "additions": 25,
                "deletions": 17,
                "changes": 42,
                "blob_url": "https://github.com/eBay/parallec/blob/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Ftask%2FParallelTaskManager.java",
                "raw_url": "https://github.com/eBay/parallec/raw/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Ftask%2FParallelTaskManager.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Ftask%2FParallelTaskManager.java?ref=8176e3d37554734d44f52f1a1233f9ebaaa9bd6a",
                "patch": "@@ -53,7 +53,7 @@\n  * \n  * It has access to the waiting task queue and the currently running map of ParallelTasks.\n  * \n- * @author Yuanteng Jeff Pei\n+ * @author Yuanteng (Jeff) Pei\n  * @author Teng Song \n  * \n  */\n@@ -95,19 +95,18 @@ private ParallelTaskManager() {\n         synchronized (this) {\n             logger = LoggerFactory.getLogger(ParallelTaskManager.class);\n         }\n-\n-        initTaskScheduler();\n         logger.info(\"Initialized ParallelTaskManager...\");\n \n     }\n \n     /**\n-     * as it is daemon thread, save to use. no need to stop either.\n+     * as it is daemon thread\n+     * \n+     * TODO when release external resources should shutdown the scheduler.\n      */\n-    public void initTaskScheduler() {\n+    public synchronized void initTaskSchedulerIfNot() {\n \n         if (scheduler == null) {\n-            // TODO\n             scheduler = Executors\n                     .newSingleThreadScheduledExecutor(DaemonThreadFactory\n                             .getInstance());\n@@ -117,13 +116,20 @@ public void initTaskScheduler() {\n                     ParallecGlobalConfig.schedulerCheckInterval,\n                     TimeUnit.MILLISECONDS);\n             logger.info(\"initialized daemon task scheduler to evaluate waitQ tasks.\");\n+            \n+        }\n+    }\n+    \n+    /**\n+     * Shutdown task scheduler.\n+     */\n+    public synchronized void shutdownTaskScheduler(){\n+        if (scheduler != null && !scheduler.isShutdown()) {\n+            scheduler.shutdown();\n+            logger.info(\"shutdowned the task scheduler. No longer accepting new tasks\");\n+            scheduler = null;\n         }\n     }\n-\n- \n-\n-\n-    // waiting queue\n \n     /**\n      * Gets the task from in progress map.\n@@ -238,10 +244,9 @@ public synchronized boolean removeTaskFromWaitQ(ParallelTask taskTobeRemoved) {\n     }\n \n     /**\n-     * key function to execute a parallel task\n+     * key function to execute a parallel task.\n      *\n-     * @param task\n-     *            the parallel task\n+     * @param task            the parallel task\n      * @return the batch response from manager\n      */\n     public ResponseFromManager generateUpdateExecuteTask(ParallelTask task) {\n@@ -308,6 +313,12 @@ public ResponseFromManager generateUpdateExecuteTask(ParallelTask task) {\n     public Queue<ParallelTask> getWaitQ() {\n         return waitQ;\n     }\n+    \n+    /**\n+     * Gets the inprogress task map.\n+     *\n+     * @return the inprogress task map\n+     */\n     public ConcurrentHashMap<String, ParallelTask> getInprogressTaskMap() {\n         return inprogressTaskMap;\n     }\n@@ -331,9 +342,6 @@ public ResponseFromManager sendTaskToExecutionManager(ParallelTask task) {\n                     + task.getTaskId() + \" at \"\n                     + PcDateUtils.getNowDateTimeStr());\n \n-            // Get the singleton actor system\n-            // create the master\n-            // command smart upgrade:\n             executionManager = ActorConfig.createAndGetActorSystem().actorOf(\n                     Props.create(ExecutionManager.class, task),\n                     \"ExecutionManager-\" + task.getTaskId());"
            },
            {
                "sha": "607fbfd1e04cec396f8507266e1e59445b034d36",
                "filename": "src/main/java/io/parallec/core/taskbuilder/targethosts/TargetHostsBuilderHelperCms.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Ftaskbuilder%2Ftargethosts%2FTargetHostsBuilderHelperCms.java",
                "raw_url": "https://github.com/eBay/parallec/raw/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Ftaskbuilder%2Ftargethosts%2FTargetHostsBuilderHelperCms.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Ftaskbuilder%2Ftargethosts%2FTargetHostsBuilderHelperCms.java?ref=8176e3d37554734d44f52f1a1233f9ebaaa9bd6a",
                "patch": "@@ -40,7 +40,7 @@\n /**\n  * load node from CMS.\n  *\n- * @author Yuanteng Jeff Pei\n+ * @author Yuanteng (Jeff) Pei\n  */\n public class TargetHostsBuilderHelperCms {\n "
            },
            {
                "sha": "c0d0e0a30237889e1fc3bc044d86e50e37378791",
                "filename": "src/main/java/io/parallec/core/util/BeanMapper.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Futil%2FBeanMapper.java",
                "raw_url": "https://github.com/eBay/parallec/raw/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Futil%2FBeanMapper.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Futil%2FBeanMapper.java?ref=8176e3d37554734d44f52f1a1233f9ebaaa9bd6a",
                "patch": "@@ -8,7 +8,7 @@\n /**\n  * TODO\n  * \n- * @author Yuanteng Jeff Pei\n+ * @author Yuanteng (Jeff) Pei\n  *\n  */\n public class BeanMapper {"
            },
            {
                "sha": "cd9466e054b450bf39668a510e0721446200397f",
                "filename": "src/main/java/io/parallec/core/util/PcConstants.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Futil%2FPcConstants.java",
                "raw_url": "https://github.com/eBay/parallec/raw/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Futil%2FPcConstants.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Futil%2FPcConstants.java?ref=8176e3d37554734d44f52f1a1233f9ebaaa9bd6a",
                "patch": "@@ -15,7 +15,7 @@\n /**\n  * Static variable names...\n  * \n- * @author Yuanteng Jeff Pei\n+ * @author Yuanteng (Jeff) Pei\n  * \n  */\n public class PcConstants {"
            },
            {
                "sha": "1e741989573eedfe3a419730bcaef855124699ad",
                "filename": "src/main/java/io/parallec/core/util/PcHttpUtils.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Futil%2FPcHttpUtils.java",
                "raw_url": "https://github.com/eBay/parallec/raw/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Futil%2FPcHttpUtils.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Futil%2FPcHttpUtils.java?ref=8176e3d37554734d44f52f1a1233f9ebaaa9bd6a",
                "patch": "@@ -27,7 +27,7 @@\n  * Adding http header logic TODO; should finally be data driven and specific for\n  * each command. Now it is defined here and user can easily change.\n  * \n- * @author Yuanteng Jeff Pei\n+ * @author Yuanteng (Jeff) Pei\n  * \n  */\n public class PcHttpUtils {"
            },
            {
                "sha": "2b76045bb816c4ef3c3278b12ddccac344c95cc3",
                "filename": "src/main/java/io/parallec/core/util/PcTargetHostsUtils.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Futil%2FPcTargetHostsUtils.java",
                "raw_url": "https://github.com/eBay/parallec/raw/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Futil%2FPcTargetHostsUtils.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Futil%2FPcTargetHostsUtils.java?ref=8176e3d37554734d44f52f1a1233f9ebaaa9bd6a",
                "patch": "@@ -24,7 +24,7 @@\n /**\n  * The Class PcTargetHostsUtils.\n  *\n- * @author Yuanteng Jeff Pei\n+ * @author Yuanteng (Jeff) Pei\n  */\n public class PcTargetHostsUtils {\n "
            },
            {
                "sha": "6ba2992ac90c722e036713bca2146b7fc31447c3",
                "filename": "src/test/java/io/parallec/core/ParallelClientTest.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2FParallelClientTest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2FParallelClientTest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2FParallelClientTest.java?ref=8176e3d37554734d44f52f1a1233f9ebaaa9bd6a",
                "patch": "@@ -32,7 +32,7 @@ public void testReInit() {\n                 .setConcurrency(1700)\n                 .handleInWorker()\n                 .setTargetHostsFromString(\n-                        \"parallec.github.io www.jeffpei.com www.restcommander.com\")\n+                        \"www.parallec.io www.jeffpei.com www.restcommander.com\")\n                 .execute(new ParallecResponseHandler() {\n \n                     @Override"
            },
            {
                "sha": "56437198a1d7f92a3be4f4417cdd9eda2d7948ce",
                "filename": "src/test/java/io/parallec/core/TestBase.java",
                "status": "modified",
                "additions": 3,
                "deletions": 3,
                "changes": 6,
                "blob_url": "https://github.com/eBay/parallec/blob/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2FTestBase.java",
                "raw_url": "https://github.com/eBay/parallec/raw/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2FTestBase.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2FTestBase.java?ref=8176e3d37554734d44f52f1a1233f9ebaaa9bd6a",
                "patch": "@@ -23,9 +23,9 @@ public class TestBase {\n     public final String FILEPATH_JSON_PATH = \"userdata/sample_target_hosts_json_path.json\";\n \n     public final String URL_TOP_100 = \"http://www.restcommander.com/docs/sample_target_hosts_top100.txt\";\n-    public final String URL_JSON_PATH = \"http://parallec.github.io/userdata/sample_target_hosts_json_path.json\";\n-    public final String URL_CMS_QUERY_SINGLE_PAGE = \"http://parallec.github.io/cms/repositories/cmsdb/branches/main/query/sample_cms_query_results_single_page.json\";\n-    public final String URL_CMS_QUERY_MULTI_PAGE = \"http://parallec.github.io/cms/repositories/cmsdb/branches/main/query/sample_cms_query_results_multi_page_1.json\";\n+    public final String URL_JSON_PATH = \"http://www.parallec.io/userdata/sample_target_hosts_json_path.json\";\n+    public final String URL_CMS_QUERY_SINGLE_PAGE = \"http://www.parallec.io/cms/repositories/cmsdb/branches/main/query/sample_cms_query_results_single_page.json\";\n+    public final String URL_CMS_QUERY_MULTI_PAGE = \"http://www.parallec.io/cms/repositories/cmsdb/branches/main/query/sample_cms_query_results_multi_page_1.json\";\n \n     public final HostsSourceType SOURCE_LOCAL = HostsSourceType.LOCAL_FILE;\n     public final HostsSourceType SOURCE_URL = HostsSourceType.URL;"
            },
            {
                "sha": "e5c56809142337dd06e58253b76497fc94aad493",
                "filename": "src/test/java/io/parallec/core/actor/HttpWorkerTest.java",
                "status": "modified",
                "additions": 6,
                "deletions": 6,
                "changes": 12,
                "blob_url": "https://github.com/eBay/parallec/blob/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FHttpWorkerTest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FHttpWorkerTest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FHttpWorkerTest.java?ref=8176e3d37554734d44f52f1a1233f9ebaaa9bd6a",
                "patch": "@@ -47,7 +47,7 @@ public void testSshWorkerCreateRequestException() {\n             // Start new job\n             \n             int actorMaxOperationTimeoutSec = 15;\n-            String urlComplete = \"http://parallec.github.io/v**``\\\"..,++08alidateInternals.html\";\n+            String urlComplete = \"http://www.parallec.io/v**``\\\"..,++08alidateInternals.html\";\n             asyncWorker = ActorConfig.createAndGetActorSystem().actorOf(\n                     Props.create(HttpWorker.class, actorMaxOperationTimeoutSec,\n                             HttpClientStore.getInstance()\n@@ -77,7 +77,7 @@ public void testHttpWorkerNormalCheckComplete() {\n             // Start new job\n             \n             int actorMaxOperationTimeoutSec = 15;\n-            String urlComplete = \"http://parallec.github.io/validateInternals.html\";\n+            String urlComplete = \"http://www.parallec.io/validateInternals.html\";\n             pc.getHttpClientStore();\n             asyncWorker = ActorConfig.createAndGetActorSystem().actorOf(\n                     Props.create(HttpWorker.class, actorMaxOperationTimeoutSec,\n@@ -109,7 +109,7 @@ public void testHttpWorkerDupAndCancel() {\n             \n \n             int actorMaxOperationTimeoutSec = 15;\n-            String urlComplete = \"http://parallec.github.io/validateInternals.html\";\n+            String urlComplete = \"http://www.parallec.io/validateInternals.html\";\n             pc.getHttpClientStore();\n             asyncWorker = ActorConfig.createAndGetActorSystem().actorOf(\n                     Props.create(HttpWorker.class, actorMaxOperationTimeoutSec,\n@@ -150,7 +150,7 @@ public void testHttpWorkerException() {\n             \n             int actorMaxOperationTimeoutSec = 15;\n             HttpWorker.setLogger(null);\n-            String urlComplete = \"http://parallec.github.io/validateInternals.html\";\n+            String urlComplete = \"http://www.parallec.io/validateInternals.html\";\n             asyncWorker = ActorConfig.createAndGetActorSystem().actorOf(\n                     Props.create(HttpWorker.class, actorMaxOperationTimeoutSec,\n                             HttpClientStore.getInstance()\n@@ -182,7 +182,7 @@ public void testHttpWorkerTimeoutException() {\n             \n             // made a timeout\n             int actorMaxOperationTimeoutSec = 0;\n-            String urlComplete = \"http://parallec.github.io/validateInternals.html\";\n+            String urlComplete = \"http://www.parallec.io/validateInternals.html\";\n             pc.getHttpClientStore();\n             asyncWorker = ActorConfig.createAndGetActorSystem().actorOf(\n                     Props.create(HttpWorker.class, actorMaxOperationTimeoutSec,\n@@ -209,7 +209,7 @@ public void testHttpWorkerTimeoutException() {\n     public void testHttpWorkerBadMsgType() {\n         ActorRef asyncWorker = null;\n         try {\n-            String urlComplete = \"http://parallec.github.io/validateInternals.html\";\n+            String urlComplete = \"http://www.parallec.io/validateInternals.html\";\n             pc.getHttpClientStore();\n             int actorMaxOperationTimeoutSec = 0;\n             asyncWorker = ActorConfig.createAndGetActorSystem().actorOf("
            },
            {
                "sha": "056f0c98a5e5facadda47d3dbfd83559794b572e",
                "filename": "src/test/java/io/parallec/core/actor/OperationWorkerTest.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FOperationWorkerTest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FOperationWorkerTest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FOperationWorkerTest.java?ref=8176e3d37554734d44f52f1a1233f9ebaaa9bd6a",
                "patch": "@@ -49,7 +49,7 @@ public void testOperationWorkerWrongMsgType() {\n                             new TaskRequest(actorMaxOperationTimeoutSec,\n                                     RequestProtocol.valueOf(\"HTTP\"\n                                             .toUpperCase()),\n-                                    \"parallec.github.io\", null, 80, \"\", \"\",\n+                                    \"www.parallec.io\", null, 80, \"\", \"\",\n                                     HttpMethod.GET, false, null, \n                                     null,\n                                     new HashMap<String, Object>(),"
            },
            {
                "sha": "f6e510411a45b3589e302b8d76d9cd316e33812f",
                "filename": "src/test/java/io/parallec/core/httpclient/async/HttpClientStoreTest.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fhttpclient%2Fasync%2FHttpClientStoreTest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fhttpclient%2Fasync%2FHttpClientStoreTest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fhttpclient%2Fasync%2FHttpClientStoreTest.java?ref=8176e3d37554734d44f52f1a1233f9ebaaa9bd6a",
                "patch": "@@ -33,7 +33,7 @@ public void testDirectorForException() {\n             HttpClientStore.getInstance().getCustomClientSlow();\n             HttpClientStore.getInstance().getEmbedClientFast();\n             HttpClientStore.getInstance().getEmbedClientSlow();\n-\n+            HttpClientStore.getInstance().setHttpClientTypeCurrentDefault(HttpClientType.CUSTOM_FAST);\n         } catch (Exception ex) {\n             logger.error(\"Expected Exception : \" + ex);\n         }"
            },
            {
                "sha": "f0f881c4e4b7183709821c68512eb0a87ffcfd93",
                "filename": "src/test/java/io/parallec/core/main/http/ParallelClientHttpBasicMoreOptionsTest.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2FParallelClientHttpBasicMoreOptionsTest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2FParallelClientHttpBasicMoreOptionsTest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2FParallelClientHttpBasicMoreOptionsTest.java?ref=8176e3d37554734d44f52f1a1233f9ebaaa9bd6a",
                "patch": "@@ -74,7 +74,7 @@ public void hitWebsitesMinSync() {\n                 .prepareHttpGet(\"/validateInternals.html\")\n                 .setConcurrency(1700)\n                 .setTargetHostsFromString(\n-                        \"parallec.github.io www.jeffpei.com www.restcommander.com\")\n+                        \"www.parallec.io www.jeffpei.com www.restcommander.com\")\n \n                 .setSaveResponseToTask(true).setAutoSaveLogToLocal(true)\n                 .setEnableCapacityAwareTaskScheduler(true)"
            },
            {
                "sha": "73fc81675950494e0a31257a367b0f9e5581cf15",
                "filename": "src/test/java/io/parallec/core/main/http/ParallelClientHttpBasicTest.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2FParallelClientHttpBasicTest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2FParallelClientHttpBasicTest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2FParallelClientHttpBasicTest.java?ref=8176e3d37554734d44f52f1a1233f9ebaaa9bd6a",
                "patch": "@@ -75,7 +75,7 @@ public void hitWebsitesMinSync() {\n                 .setConcurrency(1700)\n                 .handleInWorker()\n                 .setTargetHostsFromString(\n-                        \"parallec.github.io www.jeffpei.com www.restcommander.com\")\n+                        \"www.parallec.io www.jeffpei.com www.restcommander.com\")\n                 .execute(new ParallecResponseHandler() {\n \n                     @Override"
            },
            {
                "sha": "0f0d47b54b7450f8b9c57d405584859647133200",
                "filename": "src/test/java/io/parallec/core/main/http/ParallelClientHttpBasicTestInvalidInput.java",
                "status": "modified",
                "additions": 3,
                "deletions": 3,
                "changes": 6,
                "blob_url": "https://github.com/eBay/parallec/blob/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2FParallelClientHttpBasicTestInvalidInput.java",
                "raw_url": "https://github.com/eBay/parallec/raw/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2FParallelClientHttpBasicTestInvalidInput.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2FParallelClientHttpBasicTestInvalidInput.java?ref=8176e3d37554734d44f52f1a1233f9ebaaa9bd6a",
                "patch": "@@ -34,7 +34,7 @@ public void hitWebsitesUrlWithValidation() {\n \n         boolean validate = pc.prepareHttpGet(\" /validateInternals.html \")\n                 .setConcurrency(1700)\n-                // .setTargetHostsFromString(\"parallec.github.io www.jeffpei.com www.restcommander.com\")\n+                // .setTargetHostsFromString(\"www.parallec.io www.jeffpei.com www.restcommander.com\")\n                 .validation();\n         System.out.println(\"validation: \" + validate);\n \n@@ -44,7 +44,7 @@ public void hitWebsitesUrlWithValidation() {\n                 .async()\n                 .sync()\n                 .setTargetHostsFromString(\n-                        \"parallec.github.io www.jeffpei.com www.restcommander.com\")\n+                        \"www.parallec.io www.jeffpei.com www.restcommander.com\")\n                 .validation();\n         System.out.println(\"validation2: \" + validate2);\n     }\n@@ -56,7 +56,7 @@ public void hitWebsitesUrlEndingWSInput() {\n         pc.prepareHttpGet(\" /validateInternals.html \")\n                 .setConcurrency(1700)\n                 .setTargetHostsFromString(\n-                        \"parallec.github.io www.jeffpei.com www.restcommander.com\")\n+                        \"www.parallec.io www.jeffpei.com www.restcommander.com\")\n                 .execute(new ParallecResponseHandler() {\n \n                     @Override"
            },
            {
                "sha": "2e0f74cdbe894b7c1d727fcdef24c48f3671c972",
                "filename": "src/test/java/io/parallec/core/main/http/ParallelClientHttpLogTest.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2FParallelClientHttpLogTest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2FParallelClientHttpLogTest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2FParallelClientHttpLogTest.java?ref=8176e3d37554734d44f52f1a1233f9ebaaa9bd6a",
                "patch": "@@ -74,7 +74,7 @@ public void hitWebsitesMinSync() {\n                 .prepareHttpGet(\"/validateInternals.html\")\n                 .setConcurrency(1700)\n                 .setTargetHostsFromString(\n-                        \"parallec.github.io www.jeffpei.com www.restcommander.com\")\n+                        \"www.parallec.io www.jeffpei.com www.restcommander.com\")\n                 .execute(new ParallecResponseHandler() {\n \n                     @Override"
            },
            {
                "sha": "ebd2973d42bdc19f667c69f7d371de0fabba8a3f",
                "filename": "src/test/java/io/parallec/core/main/http/ParallelClientHttpOtherMethodsTest.java",
                "status": "modified",
                "additions": 4,
                "deletions": 4,
                "changes": 8,
                "blob_url": "https://github.com/eBay/parallec/blob/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2FParallelClientHttpOtherMethodsTest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2FParallelClientHttpOtherMethodsTest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2FParallelClientHttpOtherMethodsTest.java?ref=8176e3d37554734d44f52f1a1233f9ebaaa9bd6a",
                "patch": "@@ -31,7 +31,7 @@ public void hitWebsitesInvalidHttpMethods() {\n         pc.prepareHttpPut(\"/validateInternals.html\")\n                 .setConcurrency(1700)\n                 .setTargetHostsFromString(\n-                        \"parallec.github.io www.jeffpei.com www.restcommander.com\")\n+                        \"www.parallec.io www.jeffpei.com www.restcommander.com\")\n                 .execute(new ParallecResponseHandler() {\n                     @Override\n                     public void onCompleted(ResponseOnSingleTask res,\n@@ -44,7 +44,7 @@ public void onCompleted(ResponseOnSingleTask res,\n         pc.prepareHttpDelete(\"/validateInternals.html\")\n                 .setConcurrency(1700)\n                 .setTargetHostsFromString(\n-                        \"parallec.github.io www.jeffpei.com www.restcommander.com\")\n+                        \"www.parallec.io www.jeffpei.com www.restcommander.com\")\n                 .execute(new ParallecResponseHandler() {\n                     @Override\n                     public void onCompleted(ResponseOnSingleTask res,\n@@ -57,7 +57,7 @@ public void onCompleted(ResponseOnSingleTask res,\n         pc.prepareHttpHead(\"/validateInternals.html\")\n                 .setConcurrency(1700)\n                 .setTargetHostsFromString(\n-                        \"parallec.github.io www.jeffpei.com www.restcommander.com\")\n+                        \"www.parallec.io www.jeffpei.com www.restcommander.com\")\n                 .execute(new ParallecResponseHandler() {\n                     @Override\n                     public void onCompleted(ResponseOnSingleTask res,\n@@ -70,7 +70,7 @@ public void onCompleted(ResponseOnSingleTask res,\n         pc.prepareHttpOptions(\"/validateInternals.html\")\n                 .setConcurrency(1700)\n                 .setTargetHostsFromString(\n-                        \"parallec.github.io www.jeffpei.com www.restcommander.com\")\n+                        \"www.parallec.io www.jeffpei.com www.restcommander.com\")\n                 .execute(new ParallecResponseHandler() {\n                     @Override\n                     public void onCompleted(ResponseOnSingleTask res,"
            },
            {
                "sha": "2071ff1a7b6eeed1b3b4eb8315ef5127a20eb388",
                "filename": "src/test/java/io/parallec/core/main/http/ParallelTaskCancelOnTargetHostsTest.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2FParallelTaskCancelOnTargetHostsTest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2FParallelTaskCancelOnTargetHostsTest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2FParallelTaskCancelOnTargetHostsTest.java?ref=8176e3d37554734d44f52f1a1233f9ebaaa9bd6a",
                "patch": "@@ -19,7 +19,7 @@\n /**\n  * TODO Testing the enabled capacity control\n  * \n- * @author Yuanteng Jeff Pei\n+ * @author Yuanteng (Jeff) Pei\n  *\n  */\n public class ParallelTaskCancelOnTargetHostsTest extends TestBase {"
            },
            {
                "sha": "5934edfa17a7fe6ed87c81e8826ce06d31c9a824",
                "filename": "src/test/java/io/parallec/core/main/http/ParallelTaskCancelWholeTaskTest.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2FParallelTaskCancelWholeTaskTest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2FParallelTaskCancelWholeTaskTest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2FParallelTaskCancelWholeTaskTest.java?ref=8176e3d37554734d44f52f1a1233f9ebaaa9bd6a",
                "patch": "@@ -15,7 +15,7 @@\n /**\n  * TODO Testing the enabled capacity control\n  * \n- * @author Yuanteng Jeff Pei\n+ * @author Yuanteng (Jeff) Pei\n  *\n  */\n public class ParallelTaskCancelWholeTaskTest extends TestBase {"
            },
            {
                "sha": "746c95cbb60b2098ec8a1825e169c08fdd979b31",
                "filename": "src/test/java/io/parallec/core/main/http/pollable/sampleserver/ServerWithPollableJobs.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2Fpollable%2Fsampleserver%2FServerWithPollableJobs.java",
                "raw_url": "https://github.com/eBay/parallec/raw/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2Fpollable%2Fsampleserver%2FServerWithPollableJobs.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2Fpollable%2Fsampleserver%2FServerWithPollableJobs.java?ref=8176e3d37554734d44f52f1a1233f9ebaaa9bd6a",
                "patch": "@@ -18,7 +18,7 @@\n  * \n  * note that the job map will never be clean up until it reaches 8192\n  * \n- * @author Yuanteng Jeff Pei\n+ * @author Yuanteng (Jeff) Pei\n  *\n  */\n public class ServerWithPollableJobs extends NanoHTTPD {"
            },
            {
                "sha": "c89f524a716b740b2e75f562f1ccf4f82128a30f",
                "filename": "src/test/java/io/parallec/core/main/http/request/template/ParallelClientVarReplacementHostSpecificTest.java",
                "status": "modified",
                "additions": 17,
                "deletions": 19,
                "changes": 36,
                "blob_url": "https://github.com/eBay/parallec/blob/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2Frequest%2Ftemplate%2FParallelClientVarReplacementHostSpecificTest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2Frequest%2Ftemplate%2FParallelClientVarReplacementHostSpecificTest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2Frequest%2Ftemplate%2FParallelClientVarReplacementHostSpecificTest.java?ref=8176e3d37554734d44f52f1a1233f9ebaaa9bd6a",
                "patch": "@@ -10,6 +10,7 @@\n import io.parallec.core.bean.StrStrMap;\n \n import java.util.ArrayList;\n+import java.util.Arrays;\n import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n@@ -42,7 +43,7 @@ public static void shutdown() throws Exception {\n     public void hitWebsitesMinTargetHostSpecificReplacement() {\n \n         Map<String, StrStrMap> replacementVarMapNodeSpecific = new HashMap<String, StrStrMap>();\n-        replacementVarMapNodeSpecific.put(\"parallec.github.io\",\n+        replacementVarMapNodeSpecific.put(\"www.parallec.io\",\n                 new StrStrMap().addPair(\"JOB_ID\", \"job_a\"));\n         replacementVarMapNodeSpecific.put(\"www.jeffpei.com\",\n                 new StrStrMap().addPair(\"JOB_ID\", \"job_b\"));\n@@ -52,7 +53,7 @@ public void hitWebsitesMinTargetHostSpecificReplacement() {\n         pc.prepareHttpGet(\"/$JOB_ID.html\")\n                 .setConcurrency(1700)\n                 .setTargetHostsFromString(\n-                        \"parallec.github.io www.jeffpei.com www.restcommander.com\")\n+                        \"www.parallec.io www.jeffpei.com www.restcommander.com\")\n                 .setReplacementVarMapNodeSpecific(replacementVarMapNodeSpecific)\n                 .execute(new ParallecResponseHandler() {\n                     @Override\n@@ -71,14 +72,11 @@ public void onCompleted(ResponseOnSingleTask res,\n \n     /**\n      * note that the target host must match the key this is the new way new\n-     * http://parallec.github.io/userdata/sample_weather_48824.txt\n-     * http://parallec.github.io/userdata/sample_weather_95037.txt\n+     * http://www.parallec.io/userdata/sample_weather_48824.txt\n+     * http://www.parallec.io/userdata/sample_weather_95037.txt\n      */\n     @Test\n     public void differentRequestsToSameTargetHost() {\n-        List<String> replaceList = new ArrayList<String>();\n-        replaceList.add(\"95037\");\n-        replaceList.add(\"48824\");\n \n         Map<String, Object> responseContext = new HashMap<String, Object>();\n         responseContext.put(\"temp\", null);\n@@ -88,8 +86,8 @@ public void differentRequestsToSameTargetHost() {\n                         new ParallecHeader().addPair(\"content-type\",\n                                 \"text/xml;charset=UTF-8\"))\n                 .setConcurrency(1700)\n-                .setReplaceVarMapToSingleTargetSingleVar(\"ZIP\", replaceList,\n-                        \"parallec.github.io\")\n+                .setReplaceVarMapToSingleTargetSingleVar(\"ZIP\", Arrays.asList(\"95037\",\"48824\"),\n+                        \"www.parallec.io\")\n                 .setResponseContext(responseContext)\n                 .execute(new ParallecResponseHandler() {\n \n@@ -130,8 +128,8 @@ public void differentRequestsToSameTargetHostMultiVarInvalidReplaceEmptyTarget()\n \n     /**\n      * Use this api if need to match multiple variables new\n-     * http://parallec.github.io/userdata/MI/sample_weather_48824.txt\n-     * http://parallec.github.io/userdata/CA/sample_weather_95037.txt\n+     * http://www.parallec.io/userdata/MI/sample_weather_48824.txt\n+     * http://www.parallec.io/userdata/CA/sample_weather_95037.txt\n      */\n     @Test\n     public void differentRequestsToSameTargetHostMultiVar() {\n@@ -151,7 +149,7 @@ public void differentRequestsToSameTargetHostMultiVar() {\n                                 \"text/xml;charset=UTF-8\"))\n                 .setConcurrency(1700)\n                 .setReplaceVarMapToSingleTarget(replacementVarMapList,\n-                        \"parallec.github.io\")\n+                        \"www.parallec.io\")\n \n                 .setResponseContext(responseContext)\n                 .execute(new ParallecResponseHandler() {\n@@ -179,8 +177,8 @@ public void onCompleted(ResponseOnSingleTask res,\n     /**\n      * note that the target host must match the key\n      * \n-     * new http://parallec.github.io/userdata/sample_weather_48824.txt\n-     * http://parallec.github.io/userdata/sample_weather_95037.txt\n+     * new http://www.parallec.io/userdata/sample_weather_48824.txt\n+     * http://www.parallec.io/userdata/sample_weather_95037.txt\n      */\n     @Test\n     public void differentRequestsToSameTargetHostWithMap() {\n@@ -202,7 +200,7 @@ public void differentRequestsToSameTargetHostWithMap() {\n                 .setConcurrency(1700)\n                 .setTargetHostsFromString(\"api1 api2\")\n                 .setReplaceVarMapToSingleTargetFromMap(\n-                        replacementVarMapNodeSpecific, \"parallec.github.io\")\n+                        replacementVarMapNodeSpecific, \"www.parallec.io\")\n                 .setResponseContext(responseContext)\n                 .execute(new ParallecResponseHandler() {\n \n@@ -299,7 +297,7 @@ public void onCompleted(ResponseOnSingleTask res,\n     public void hitWebsitesMinTargetHostSpecificReplacementWithNA() {\n \n         Map<String, StrStrMap> replacementVarMapNodeSpecific = new HashMap<String, StrStrMap>();\n-        replacementVarMapNodeSpecific.put(\"parallec.github.io\",\n+        replacementVarMapNodeSpecific.put(\"www.parallec.io\",\n                 new StrStrMap().addPair(\"JOB_ID\", \"job_a\"));\n         replacementVarMapNodeSpecific.put(\"www.jeffpei.com\", new StrStrMap()\n                 .addPair(\"JOB_ID\", \"job_b\").addPair(\"NA\", \"NA\"));\n@@ -310,7 +308,7 @@ public void hitWebsitesMinTargetHostSpecificReplacementWithNA() {\n                 .prepareHttpGet(\"/$JOB_ID.html\")\n                 .setConcurrency(1700)\n                 .setTargetHostsFromString(\n-                        \"parallec.github.io www.jeffpei.com www.restcommander.com\")\n+                        \"www.parallec.io www.jeffpei.com www.restcommander.com\")\n                 .setReplacementVarMapNodeSpecific(replacementVarMapNodeSpecific)\n                 .execute(new ParallecResponseHandler() {\n                     @Override\n@@ -335,7 +333,7 @@ public void onCompleted(ResponseOnSingleTask res,\n     public void hitWebsitesMinTargetHostSpecificReplacementWithAllNA() {\n \n         Map<String, StrStrMap> replacementVarMapNodeSpecific = new HashMap<String, StrStrMap>();\n-        replacementVarMapNodeSpecific.put(\"parallec.github.io\", new StrStrMap()\n+        replacementVarMapNodeSpecific.put(\"www.parallec.io\", new StrStrMap()\n                 .addPair(\"JOB_ID\", \"job_a\").addPair(\"NA\", \"NA\"));\n         replacementVarMapNodeSpecific.put(\"www.jeffpei.com\", new StrStrMap()\n                 .addPair(\"JOB_ID\", \"job_b\").addPair(\"NA\", \"NA\"));\n@@ -346,7 +344,7 @@ public void hitWebsitesMinTargetHostSpecificReplacementWithAllNA() {\n                 .prepareHttpGet(\"/$JOB_ID.html\")\n                 .setConcurrency(1700)\n                 .setTargetHostsFromString(\n-                        \"parallec.github.io www.jeffpei.com www.restcommander.com\")\n+                        \"www.parallec.io www.jeffpei.com www.restcommander.com\")\n                 .setReplacementVarMapNodeSpecific(replacementVarMapNodeSpecific)\n                 .execute(new ParallecResponseHandler() {\n                     @Override"
            },
            {
                "sha": "0d9a28a2189c327f06084119395d7b7464f1637d",
                "filename": "src/test/java/io/parallec/core/main/http/request/template/ParallelClientVarReplacementUniformTest.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2Frequest%2Ftemplate%2FParallelClientVarReplacementUniformTest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2Frequest%2Ftemplate%2FParallelClientVarReplacementUniformTest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2Frequest%2Ftemplate%2FParallelClientVarReplacementUniformTest.java?ref=8176e3d37554734d44f52f1a1233f9ebaaa9bd6a",
                "patch": "@@ -51,7 +51,7 @@ public void hitWebsitesMinTargeUniformReplacement() {\n         pc.prepareHttpGet(\"/$URL_VARIABLE.html\")\n                 .setConcurrency(1700)\n                 .setTargetHostsFromString(\n-                        \"parallec.github.io www.jeffpei.com www.restcommander.com\")\n+                        \"www.parallec.io www.jeffpei.com www.restcommander.com\")\n                 .setReplacementVarMap(replacementVarMap)\n                 .execute(new ParallecResponseHandler() {\n                     @Override"
            },
            {
                "sha": "512ff2a660b7c9fc70f74c0bf654979f1ca0cd3e",
                "filename": "src/test/java/io/parallec/core/main/http/scheduler/ParallelClientSchedulerAndCancelTest.java",
                "status": "modified",
                "additions": 3,
                "deletions": 0,
                "changes": 3,
                "blob_url": "https://github.com/eBay/parallec/blob/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2Fscheduler%2FParallelClientSchedulerAndCancelTest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2Fscheduler%2FParallelClientSchedulerAndCancelTest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2Fscheduler%2FParallelClientSchedulerAndCancelTest.java?ref=8176e3d37554734d44f52f1a1233f9ebaaa9bd6a",
                "patch": "@@ -94,6 +94,7 @@ public void onCompleted(ResponseOnSingleTask res,\n         }\n \n         ParallecGlobalConfig.maxCapacity = 2500;\n+        ParallelTaskManager.getInstance().shutdownTaskScheduler();\n     }// end func\n \n     /**\n@@ -105,6 +106,8 @@ public void onCompleted(ResponseOnSingleTask res,\n     @Test(timeout = 60000)\n     public void hitTop100WebsitesCapacityProtectionCancel2ndTask() {\n \n+        ParallelTaskManager.getInstance().shutdownTaskScheduler();\n+        \n         ParallecGlobalConfig.maxCapacity = 120;\n         ParallelTask pt = pc\n                 .prepareHttpGet(\"\")"
            },
            {
                "sha": "06e35f254f13dd88dc18ff2ed26124d0ab2392da",
                "filename": "src/test/java/io/parallec/core/main/ping/PingOnTmpTest.java",
                "status": "modified",
                "additions": 2,
                "deletions": 2,
                "changes": 4,
                "blob_url": "https://github.com/eBay/parallec/blob/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fping%2FPingOnTmpTest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fping%2FPingOnTmpTest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fping%2FPingOnTmpTest.java?ref=8176e3d37554734d44f52f1a1233f9ebaaa9bd6a",
                "patch": "@@ -73,7 +73,7 @@ public void pingWebsitesMinBasicSyncOn1500() {\n                 .setPingNumRetries(0)\n                 .setTargetHostsFromLineByLineText(FILEPATH_TMP1, SOURCE_LOCAL)\n                 // .setTargetHostsFromString(\n-                // \"parallec.github.io www.jeffpei.com www.restcommander.com bad.c21tom\")\n+                // \"www.parallec.io www.jeffpei.com www.restcommander.com bad.c21tom\")\n                 .execute(new ParallecResponseHandler() {\n                     @Override\n                     public void onCompleted(ResponseOnSingleTask res,\n@@ -98,7 +98,7 @@ public void pingWebsitesMinAsync() {\n         ParallelTask task = pc.preparePing().async().setConcurrency(1500)\n                 .setTargetHostsFromLineByLineText(FILEPATH_TMP1, SOURCE_LOCAL)\n                 // .setTargetHostsFromString(\n-                // \"parallec.github.io www.jeffpei.com www.restcommander.com bad.c21tom\")\n+                // \"www.parallec.io www.jeffpei.com www.restcommander.com bad.c21tom\")\n                 .execute(new ParallecResponseHandler() {\n                     @Override\n                     public void onCompleted(ResponseOnSingleTask res,"
            },
            {
                "sha": "0e8040f9a26d4fcf1ca416cb312885c2663943c2",
                "filename": "src/test/java/io/parallec/core/main/ping/PingTest.java",
                "status": "modified",
                "additions": 3,
                "deletions": 3,
                "changes": 6,
                "blob_url": "https://github.com/eBay/parallec/blob/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fping%2FPingTest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fping%2FPingTest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fping%2FPingTest.java?ref=8176e3d37554734d44f52f1a1233f9ebaaa9bd6a",
                "patch": "@@ -71,7 +71,7 @@ public void pingWebsitesMinBasicSync() {\n \n         ParallelTask task = pc.preparePing().setConcurrency(1500)\n                  .setTargetHostsFromString(\n-                 \"parallec.github.io www.jeffpei.com www.restcommander.com bad.c21tom\")\n+                 \"www.parallec.io www.jeffpei.com www.restcommander.com bad.c21tom\")\n                 .execute(new ParallecResponseHandler() {\n                     @Override\n                     public void onCompleted(ResponseOnSingleTask res,\n@@ -90,7 +90,7 @@ public void pingWebsitesMoreOptions() {\n \n         ParallelTask task = pc.preparePing().setConcurrency(1500)\n                  .setTargetHostsFromString(\n-                 \"parallec.github.io www.jeffpei.com www.restcommander.com\")\n+                 \"www.parallec.io www.jeffpei.com www.restcommander.com\")\n                  .setPingMode(PingMode.PROCESS)\n                  .setPingNumRetries(3)\n                  .setPingTimeoutMillis(500)\n@@ -115,7 +115,7 @@ public void testInvalidPoller() {\n             pc.preparePing().setConcurrency(1500)\n             .setHttpPollable(true)\n             .setTargetHostsFromString(\n-            \"parallec.github.io www.jeffpei.com www.restcommander.com bad.c21tom\")\n+            \"www.parallec.io www.jeffpei.com www.restcommander.com bad.c21tom\")\n            .execute(new ParallecResponseHandler() {\n                @Override\n                public void onCompleted(ResponseOnSingleTask res,"
            },
            {
                "sha": "3cd9f505486d8f58ce3e0b1226bda330875441f7",
                "filename": "src/test/java/io/parallec/core/main/ping/package-info.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fping%2Fpackage-info.java",
                "raw_url": "https://github.com/eBay/parallec/raw/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fping%2Fpackage-info.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fping%2Fpackage-info.java?ref=8176e3d37554734d44f52f1a1233f9ebaaa9bd6a",
                "patch": "@@ -2,7 +2,7 @@\n  * \n  */\n /**\n- * @author Yuanteng Jeff Pei\n+ * @author Yuanteng (Jeff) Pei\n  *\n  */\n package io.parallec.core.main.ping;\n\\ No newline at end of file"
            },
            {
                "sha": "abb16d27fef5f019ca3e59ecb445a76e171f9564",
                "filename": "src/test/java/io/parallec/core/main/tcp/package-info.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Ftcp%2Fpackage-info.java",
                "raw_url": "https://github.com/eBay/parallec/raw/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Ftcp%2Fpackage-info.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Ftcp%2Fpackage-info.java?ref=8176e3d37554734d44f52f1a1233f9ebaaa9bd6a",
                "patch": "@@ -2,7 +2,7 @@\n  * \n  */\n /**\n- * @author Yuanteng Jeff Pei\n+ * @author Yuanteng (Jeff) Pei\n  *\n  */\n package io.parallec.core.main.tcp;\n\\ No newline at end of file"
            },
            {
                "sha": "a5f319072b41e6f76d5d873548ef4636e3c0b9c4",
                "filename": "src/test/java/io/parallec/core/main/tcp/sampleserver/TcpEchoServer.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Ftcp%2Fsampleserver%2FTcpEchoServer.java",
                "raw_url": "https://github.com/eBay/parallec/raw/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Ftcp%2Fsampleserver%2FTcpEchoServer.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Ftcp%2Fsampleserver%2FTcpEchoServer.java?ref=8176e3d37554734d44f52f1a1233f9ebaaa9bd6a",
                "patch": "@@ -28,7 +28,7 @@\n  * will echo back 3 lines of response that include the request string, \n  * then auto close the connection\n  * \n- * @author Yuanteng Jeff Pei\n+ * @author Yuanteng (Jeff) Pei\n  */\n public class TcpEchoServer {\n "
            },
            {
                "sha": "ae519f919ed8feec6501dde4a80df6e513189242",
                "filename": "src/test/java/io/parallec/core/main/tcp/sampleserver/package-info.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Ftcp%2Fsampleserver%2Fpackage-info.java",
                "raw_url": "https://github.com/eBay/parallec/raw/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Ftcp%2Fsampleserver%2Fpackage-info.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Ftcp%2Fsampleserver%2Fpackage-info.java?ref=8176e3d37554734d44f52f1a1233f9ebaaa9bd6a",
                "patch": "@@ -2,7 +2,7 @@\n  * \n  */\n /**\n- * @author Yuanteng Jeff Pei\n+ * @author Yuanteng (Jeff) Pei\n  *\n  */\n package io.parallec.core.main.tcp.sampleserver;\n\\ No newline at end of file"
            },
            {
                "sha": "9dfa4e9ba7053b9663992f9aafab4821dc922610",
                "filename": "src/test/java/io/parallec/core/task/package-info.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Ftask%2Fpackage-info.java",
                "raw_url": "https://github.com/eBay/parallec/raw/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Ftask%2Fpackage-info.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Ftask%2Fpackage-info.java?ref=8176e3d37554734d44f52f1a1233f9ebaaa9bd6a",
                "patch": "@@ -1,6 +1,6 @@\n \n /**\n- * @author Yuanteng Jeff Pei\n+ * @author Yuanteng (Jeff) Pei\n  *\n  */\n package io.parallec.core.task;\n\\ No newline at end of file"
            },
            {
                "sha": "11ddddd42d76cccc0d2a12d59eed00cc17696135",
                "filename": "src/test/java/io/parallec/core/taskbuilder/targethosts/TargetHostsBuilderTest.java",
                "status": "modified",
                "additions": 4,
                "deletions": 4,
                "changes": 8,
                "blob_url": "https://github.com/eBay/parallec/blob/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Ftaskbuilder%2Ftargethosts%2FTargetHostsBuilderTest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Ftaskbuilder%2Ftargethosts%2FTargetHostsBuilderTest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Ftaskbuilder%2Ftargethosts%2FTargetHostsBuilderTest.java?ref=8176e3d37554734d44f52f1a1233f9ebaaa9bd6a",
                "patch": "@@ -95,7 +95,7 @@ public void setTargetHostsFromUrl() {\n \n     }\n \n-    // http://parallec.github.io/userdata/sample_target_hosts_json_path.json\n+    // http://www.parallec.io/userdata/sample_target_hosts_json_path.json\n     @Test\n     public void setTargetHostsFromJsonPathTest() {\n         String jsonPath = \"$.sample.small-target-hosts[*].hostName\";\n@@ -146,19 +146,19 @@ public void setTargetHostsFromCmsQueryUrTest() {\n         // bad query\n         try {\n \n-            thb.setTargetHostsFromCmsQueryUrl(\"http://1parallec.github.io/cms/repositories/cmsdb/branches\"\n+            thb.setTargetHostsFromCmsQueryUrl(\"http://1www.parallec.io/cms/repositories/cmsdb/branches\"\n                     + \"/main/query/sample_cms_query_results_single_page.json\");\n         } catch (TargetHostsLoadException e) {\n             logger.info(\"expected exception: \" + e);\n         }\n \n         // with projection null/empty\n         thb.setTargetHostsFromCmsQueryUrl(\n-                \"http://parallec.github.io/cms/repositories/cmsdb/branches\"\n+                \"http://www.parallec.io/cms/repositories/cmsdb/branches\"\n                         + \"/main/query/sample_cms_query_results_single_page.json\",\n                 null);\n         thb.setTargetHostsFromCmsQueryUrl(\n-                \"http://parallec.github.io/cms/repositories/cmsdb/branches\"\n+                \"http://www.parallec.io/cms/repositories/cmsdb/branches\"\n                         + \"/main/query/sample_cms_query_results_single_page.json\",\n                 \"\");\n "
            },
            {
                "sha": "059851116a96250c91f65037bfbaade4bda60541",
                "filename": "src/test/java/io/parallec/core/util/FileNetworkIoUtilsTest.java",
                "status": "modified",
                "additions": 1,
                "deletions": 0,
                "changes": 1,
                "blob_url": "https://github.com/eBay/parallec/blob/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Futil%2FFileNetworkIoUtilsTest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Futil%2FFileNetworkIoUtilsTest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Futil%2FFileNetworkIoUtilsTest.java?ref=8176e3d37554734d44f52f1a1233f9ebaaa9bd6a",
                "patch": "@@ -17,6 +17,7 @@ public void setUp() throws Exception {\n     public void test() throws FileNotFoundException {\n         PcFileNetworkIoUtils.isFileExist(FILEPATH_TOP_100);\n         PcFileNetworkIoUtils.readFileToInputStream(FILEPATH_TOP_100);\n+        PcFileNetworkIoUtils.readFileToInputStream(FILEPATH_TOP_100+\"badpath\");\n         PcFileNetworkIoUtils.getListFromLineByLineText(FILEPATH_TOP_100,\n                 SOURCE_LOCAL);\n         PcFileNetworkIoUtils.getListFromLineByLineText(FILEPATH_TOP_100 + \"a\","
            },
            {
                "sha": "c90cfaf066f491323df5626396d738a5ddb053ff",
                "filename": "userdata/sample_target_hosts_top100_old.txt",
                "status": "modified",
                "additions": 4,
                "deletions": 4,
                "changes": 8,
                "blob_url": "https://github.com/eBay/parallec/blob/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/userdata%2Fsample_target_hosts_top100_old.txt",
                "raw_url": "https://github.com/eBay/parallec/raw/8176e3d37554734d44f52f1a1233f9ebaaa9bd6a/userdata%2Fsample_target_hosts_top100_old.txt",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/userdata%2Fsample_target_hosts_top100_old.txt?ref=8176e3d37554734d44f52f1a1233f9ebaaa9bd6a",
                "patch": "@@ -31,7 +31,7 @@ www.mail.ru\n www.pinterest.com\n www.apple.com\n www.google.com.br\n-www.soso.com\n+www.loc.gov\n www.PayPal.com\n www.google.ru\n www.google.es\n@@ -46,7 +46,6 @@ www.bbc.co.uk\n www.go.com\n www.amazon.co.jp\n www.google.com.mx\n-www.odnoklassniki.ru\n www.google.ca\n www.amazon.de\n www.adobe.com\n@@ -75,7 +74,6 @@ www.dailymotion.com\n www.imgur.com\n www.zedo.com\n www.google.pl\n-www.uol.com.br\n www.deviantart.com\n www.google.nl\n www.dropbox.com\n@@ -97,4 +95,6 @@ www.toptenvideos.com\n www.walgreens.com\n www.liveleak.com\n www.discover.com\n-www.mosthappy.com\n\\ No newline at end of file\n+www.mosthappy.com\n+www.reverbnation.com\n+www.irs.gov\n\\ No newline at end of file"
            }
        ]
    },
    {
        "sha": "6240cc505a902933fd8b1108e86f490bb594dc5f",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6NjI0MGNjNTA1YTkwMjkzM2ZkOGIxMTA4ZTg2ZjQ5MGJiNTk0ZGM1Zg==",
        "commit": {
            "author": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2015-10-28T23:19:27Z"
            },
            "committer": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2015-10-28T23:19:27Z"
            },
            "message": "0.8.11",
            "tree": {
                "sha": "ce5d36190e9ce3e613b627bce822b117b1de975d",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/ce5d36190e9ce3e613b627bce822b117b1de975d"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/6240cc505a902933fd8b1108e86f490bb594dc5f",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/6240cc505a902933fd8b1108e86f490bb594dc5f",
        "html_url": "https://github.com/eBay/parallec/commit/6240cc505a902933fd8b1108e86f490bb594dc5f",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/6240cc505a902933fd8b1108e86f490bb594dc5f/comments",
        "author": null,
        "committer": null,
        "parents": [
            {
                "sha": "ecf58be54bcfdc7660e5e0b83d2008987544ba24",
                "url": "https://api.github.com/repos/eBay/parallec/commits/ecf58be54bcfdc7660e5e0b83d2008987544ba24",
                "html_url": "https://github.com/eBay/parallec/commit/ecf58be54bcfdc7660e5e0b83d2008987544ba24"
            }
        ],
        "stats": {
            "total": 149,
            "additions": 113,
            "deletions": 36
        },
        "files": [
            {
                "sha": "1d46f7ff774e8c8e5d552b6a535bc373e06ad1a3",
                "filename": ".gitignore",
                "status": "modified",
                "additions": 1,
                "deletions": 0,
                "changes": 1,
                "blob_url": "https://github.com/eBay/parallec/blob/6240cc505a902933fd8b1108e86f490bb594dc5f/.gitignore",
                "raw_url": "https://github.com/eBay/parallec/raw/6240cc505a902933fd8b1108e86f490bb594dc5f/.gitignore",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/.gitignore?ref=6240cc505a902933fd8b1108e86f490bb594dc5f",
                "patch": "@@ -40,3 +40,4 @@ userdata/tasklogs/*\n /.settings/\n .classpath\n .project\n+/bin/"
            },
            {
                "sha": "32c33d16c63c01d1da460cca079d9c05202f13c9",
                "filename": "CHANGELOG.md",
                "status": "modified",
                "additions": 11,
                "deletions": 4,
                "changes": 15,
                "blob_url": "https://github.com/eBay/parallec/blob/6240cc505a902933fd8b1108e86f490bb594dc5f/CHANGELOG.md",
                "raw_url": "https://github.com/eBay/parallec/raw/6240cc505a902933fd8b1108e86f490bb594dc5f/CHANGELOG.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/CHANGELOG.md?ref=6240cc505a902933fd8b1108e86f490bb594dc5f",
                "patch": "@@ -2,6 +2,16 @@ Change Log\n ==========\n \n \n+## Version 0.8.11\n+\n+_2015-10-28_\n+\n+* Javadoc: refine javadoc. \n+* Coverage: add code coverage.\n+* Maven: setup with maven central deployment. Added codecov and travis CI.\n+\n+\n+\n \n ## Version 0.8.10\n \n@@ -47,7 +57,6 @@ _2015-10-15_\n \n _2015-10-15_\n \n-https://plumbr.eu/outofmemoryerror/unable-to-create-new-native-thread\n * Fix: change from single thread executor to pool executor in SSH/Ping worker to significantly reduce the thread size.\n * Add: Add scalable PING with InetAddress and process based. \n * Fix: replace all tab by spaces for consistency.\n@@ -92,7 +101,6 @@ _2015-10-11a_\n  * Fix: Removed the structure of SSH Meta when it is not SSH.\n  * Enhance: Refined the logic to get error message summary.\n  * Add: Add Aggregation on return status code with list and count.\n- * TODO: Added testing on HTTP header replacement (50min)\n  * Understand: socket connection exception. Change to google DNS will resolve the issue.\n  \n \n@@ -106,5 +114,4 @@ _2015-10-04_\n  * Fix: change the visibility of the config/parallel task.\n  * Fix: reduced solar critical from 9 to 2.\n  * Fix: change HTTP Store to be singleton from static functions\n- * Test: Test passed JDK 1.7 and JDK 1.8.0_60\n- * TODO:  TODO Testing PC Multiple instance tests.\n\\ No newline at end of file\n+ * Test: Test passed JDK 1.7 and JDK 1.8.0_60\n\\ No newline at end of file"
            },
            {
                "sha": "d769edfacc924347489d865c4e4021739efaded9",
                "filename": "src/main/java/io/parallec/core/ParallelClient.java",
                "status": "modified",
                "additions": 5,
                "deletions": 6,
                "changes": 11,
                "blob_url": "https://github.com/eBay/parallec/blob/6240cc505a902933fd8b1108e86f490bb594dc5f/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FParallelClient.java",
                "raw_url": "https://github.com/eBay/parallec/raw/6240cc505a902933fd8b1108e86f490bb594dc5f/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FParallelClient.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FParallelClient.java?ref=6240cc505a902933fd8b1108e86f490bb594dc5f",
                "patch": "@@ -124,7 +124,7 @@ public void initialize() {\n             isClosed.set(false);\n             logger.info(\"Parallel Client Resources has been initialized.\");\n         } else {\n-            logger.info(\"NO OP. Parallel Client Resources has already been initialized.\");\n+            logger.debug(\"NO OP. Parallel Client Resources has already been initialized.\");\n         }\n     }\n \n@@ -153,23 +153,22 @@ public void releaseExternalResources() {\n                     + \"\\nNow safe to stop your application.\");\n \n         } else {\n-            logger.info(\"NO OP. ParallelClient resources have already been released.\");\n+            logger.debug(\"NO OP. ParallelClient resources have already been released.\");\n         }\n \n     }\n \n     /**\n-     * auto reinit if closed.\n+     * Auto re-initialize external resourced \n+     * if resources have been already released.\n      */\n-\n     public void reinitIfClosed() {\n         if (isClosed.get() == true) {\n             logger.info(\"External Resource was released. Now Re-initializing resources ...\");\n \n             ActorConfig.createAndGetActorSystem();\n             httpClientStore.reinit();\n             tcpClientStore.reinit();\n-            // TODO\n             try {\n                 Thread.sleep(1000l);\n             } catch (InterruptedException e) {\n@@ -178,7 +177,7 @@ public void reinitIfClosed() {\n             isClosed.set(true);\n             logger.info(\"Parallel Client Resources has been reinitialized.\");\n         } else {\n-            logger.info(\"NO OP. Resource was not released.\");\n+            logger.debug(\"NO OP. Resource was not released.\");\n         }\n     }\n "
            },
            {
                "sha": "ec4d03e8ad98d113cf26bc2d3c940dce10e9f631",
                "filename": "src/main/java/io/parallec/core/ParallelTaskBuilder.java",
                "status": "modified",
                "additions": 2,
                "deletions": 2,
                "changes": 4,
                "blob_url": "https://github.com/eBay/parallec/blob/6240cc505a902933fd8b1108e86f490bb594dc5f/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FParallelTaskBuilder.java",
                "raw_url": "https://github.com/eBay/parallec/raw/6240cc505a902933fd8b1108e86f490bb594dc5f/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FParallelTaskBuilder.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FParallelTaskBuilder.java?ref=6240cc505a902933fd8b1108e86f490bb594dc5f",
                "patch": "@@ -175,7 +175,7 @@ public ParallelTaskBuilder handleInManager() {\n     }\n     \n     /**\n-     * Async.\n+     * Execute the task asynchronously.\n      *\n      * @return the parallel task builder\n      */\n@@ -185,7 +185,7 @@ public ParallelTaskBuilder async() {\n     }\n \n     /**\n-     * Sync. the default run mode\n+     * Execute the task synchronously (the default run mode).\n      *\n      * @return the parallel task builder\n      */"
            },
            {
                "sha": "969dea736120d49b92fa8d9cd6749d159b63fa4a",
                "filename": "src/main/java/io/parallec/core/actor/HttpWorker.java",
                "status": "modified",
                "additions": 2,
                "deletions": 1,
                "changes": 3,
                "blob_url": "https://github.com/eBay/parallec/blob/6240cc505a902933fd8b1108e86f490bb594dc5f/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FHttpWorker.java",
                "raw_url": "https://github.com/eBay/parallec/raw/6240cc505a902933fd8b1108e86f490bb594dc5f/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FHttpWorker.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FHttpWorker.java?ref=6240cc505a902933fd8b1108e86f490bb594dc5f",
                "patch": "@@ -38,6 +38,7 @@\n //import akka.actor.PoisonPill;\n import akka.actor.UntypedActor;\n \n+import com.google.common.base.Strings;\n import com.ning.http.client.AsyncCompletionHandler;\n import com.ning.http.client.AsyncHttpClient;\n import com.ning.http.client.AsyncHttpClient.BoundRequestBuilder;\n@@ -166,7 +167,7 @@ public BoundRequestBuilder createRequest()\n             }\n \n             PcHttpUtils.addHeaders(builder, this.httpHeaderMap);\n-            if (!PcStringUtils.isNullOrEmpty(postData)) {\n+            if (!Strings.isNullOrEmpty(postData)) {\n                 builder.setBody(postData);\n             }\n "
            },
            {
                "sha": "1cbe7e6f9fdd2a16da545d54d07b85e244741fa8",
                "filename": "src/main/java/io/parallec/core/util/PcStringUtils.java",
                "status": "modified",
                "additions": 0,
                "deletions": 17,
                "changes": 17,
                "blob_url": "https://github.com/eBay/parallec/blob/6240cc505a902933fd8b1108e86f490bb594dc5f/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Futil%2FPcStringUtils.java",
                "raw_url": "https://github.com/eBay/parallec/raw/6240cc505a902933fd8b1108e86f490bb594dc5f/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Futil%2FPcStringUtils.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Futil%2FPcStringUtils.java?ref=6240cc505a902933fd8b1108e86f490bb594dc5f",
                "patch": "@@ -44,23 +44,6 @@ public static String printStackTrace(Throwable t) {\n \n     }\n \n-    /**\n-     * Checks if is null or empty.\n-     *\n-     * @param str\n-     *            the str\n-     * @return true, if is null or empty\n-     */\n-    public static boolean isNullOrEmpty(String str) {\n-\n-        if (str == null)\n-            return true;\n-        if (str.isEmpty())\n-            return true;\n-\n-        return false;\n-    }\n-\n     /**\n      * Str map to str.\n      *"
            },
            {
                "sha": "aaa19d7fc71bdd4bcc8fa6ec86a33b3c19c57505",
                "filename": "src/test/java/io/parallec/core/ParallelClientTest.java",
                "status": "added",
                "additions": 67,
                "deletions": 0,
                "changes": 67,
                "blob_url": "https://github.com/eBay/parallec/blob/6240cc505a902933fd8b1108e86f490bb594dc5f/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2FParallelClientTest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/6240cc505a902933fd8b1108e86f490bb594dc5f/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2FParallelClientTest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2FParallelClientTest.java?ref=6240cc505a902933fd8b1108e86f490bb594dc5f",
                "patch": "@@ -0,0 +1,67 @@\n+package io.parallec.core;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import org.apache.http.util.Asserts;\n+import org.junit.AfterClass;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+\n+public class ParallelClientTest extends TestBase {\n+    private static ParallelClient pc;\n+\n+    @BeforeClass\n+    public static void setUp() throws Exception {\n+        pc = new ParallelClient();\n+    }\n+\n+    @AfterClass\n+    public static void shutdown() throws Exception {\n+        pc.releaseExternalResources();\n+    }\n+\n+    @Test\n+    public void testReInit() {\n+\n+        pc.releaseExternalResources();\n+\n+        Map<String, Object> responseContext = new HashMap<String, Object>();\n+        pc\n+                .prepareHttpGet(\"/validateInternals.html\")\n+                .setConcurrency(1700)\n+                .handleInWorker()\n+                .setTargetHostsFromString(\n+                        \"parallec.github.io www.jeffpei.com www.restcommander.com\")\n+                .execute(new ParallecResponseHandler() {\n+\n+                    @Override\n+                    public void onCompleted(ResponseOnSingleTask res,\n+                            Map<String, Object> responseContext) {\n+                        String cpu = new FilterRegex(\n+                                \".*<td>CPU-Usage-Percent</td>\\\\s*<td>(.*?)</td>.*\")\n+                                .filter(res.getResponseContent());\n+                        String memory = new FilterRegex(\n+                                \".*<td>Memory-Used-KB</td>\\\\s*<td>(.*?)</td>.*\")\n+                                .filter(res.getResponseContent());\n+\n+                        Map<String, Object> metricMap = new HashMap<String, Object>();\n+                        metricMap.put(\"CpuUsage\", cpu);\n+                        metricMap.put(\"MemoryUsage\", memory);\n+\n+                        logger.info(\"cpu:\" + cpu + \" memory: \" + memory\n+                                + \" host: \" + res.getHost());\n+                        responseContext.put(res.getHost(), cpu);\n+                        logger.debug(res.toString());\n+\n+                    }\n+                });\n+\n+        for (Object o : responseContext.values()) {\n+            Double cpuDouble = Double.parseDouble((String) o);\n+            Asserts.check(cpuDouble <= 100.0 && cpuDouble >= 0.0,\n+                    \" Fail to extract cpu values\");\n+        }\n+\n+    }\n+}"
            },
            {
                "sha": "fb6e8a4ba9d32224cea87eeff2cbe2e70709d3f5",
                "filename": "src/test/java/io/parallec/core/main/ssh/ParallelClientSshTest.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/6240cc505a902933fd8b1108e86f490bb594dc5f/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fssh%2FParallelClientSshTest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/6240cc505a902933fd8b1108e86f490bb594dc5f/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fssh%2FParallelClientSshTest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fssh%2FParallelClientSshTest.java?ref=6240cc505a902933fd8b1108e86f490bb594dc5f",
                "patch": "@@ -32,7 +32,7 @@ public static void shutdown() throws Exception {\n     public void sshWorkerFakeVmPasswordTest() {\n \n         Map<String, Object> responseContext = new HashMap<String, Object>();\n-        pc.prepareSsh().setConcurrency(300)\n+        pc.prepareSsh().setConcurrency(500)\n                 .setTargetHostsFromString(hostIpSample)\n                 .setSshCommandLine(\"df -h; ds; \").setSshUserName(userName)\n                 .setSshPassword(passwd).setSshConnectionTimeoutMillis(5000)"
            },
            {
                "sha": "d367eb4eba66d6642cbffaa85e30414aa3462008",
                "filename": "src/test/java/io/parallec/core/pojo/ParallecPojoClassTest.java",
                "status": "modified",
                "additions": 4,
                "deletions": 0,
                "changes": 4,
                "blob_url": "https://github.com/eBay/parallec/blob/6240cc505a902933fd8b1108e86f490bb594dc5f/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fpojo%2FParallecPojoClassTest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/6240cc505a902933fd8b1108e86f490bb594dc5f/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fpojo%2FParallecPojoClassTest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fpojo%2FParallecPojoClassTest.java?ref=6240cc505a902933fd8b1108e86f490bb594dc5f",
                "patch": "@@ -43,6 +43,8 @@\n import io.parallec.core.exception.TcpRequestCreateException;\n import io.parallec.core.main.http.pollable.sampleserver.HttpServerThread;\n import io.parallec.core.main.http.pollable.sampleserver.ServerWithPollableJobs.NanoJob;\n+import io.parallec.core.resources.HttpClientStore;\n+import io.parallec.core.resources.TcpSshPingResourceStore;\n import io.parallec.core.task.ParallelTaskBean;\n import io.parallec.core.task.TaskErrorMeta;\n \n@@ -154,6 +156,8 @@ public List<Class<?>> getPOJOClasses() throws ClassNotFoundException {\n         \n         pojoClasses.add(ExecutionManagerExecutionException.class);\n         pojoClasses.add(TcpRequestCreateException.class);\n+        pojoClasses.add(TcpSshPingResourceStore.class);\n+        pojoClasses.add(HttpClientStore.class);\n         \n         return pojoClasses;\n     }"
            },
            {
                "sha": "bd6ada5fa338b1ebf622d3bfd4d6b68bd6317265",
                "filename": "src/test/java/io/parallec/core/task/ParallelTaskManagerTest.java",
                "status": "modified",
                "additions": 5,
                "deletions": 0,
                "changes": 5,
                "blob_url": "https://github.com/eBay/parallec/blob/6240cc505a902933fd8b1108e86f490bb594dc5f/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Ftask%2FParallelTaskManagerTest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/6240cc505a902933fd8b1108e86f490bb594dc5f/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Ftask%2FParallelTaskManagerTest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Ftask%2FParallelTaskManagerTest.java?ref=6240cc505a902933fd8b1108e86f490bb594dc5f",
                "patch": "@@ -26,6 +26,11 @@ public static void shutdown() throws Exception {\n     @Test\n     public void testDirectorForException() {\n         try {\n+            \n+            ParallelTaskManager.getInstance().getRemainingCapacity();\n+            ParallelTaskManager.getInstance().getTaskFromInProgressMap(\"1\");\n+            ParallelTaskManager.getInstance().getInprogressTaskMap();\n+            \n             ParallelTaskManager.getInstance().sendTaskToExecutionManager(null);\n \n         } catch (Exception ex) {"
            },
            {
                "sha": "cb1538488dedb5164d8ff8bb2f9d83912f15708a",
                "filename": "src/test/java/io/parallec/core/taskbuilder/ParallelTaskBuilderTest.java",
                "status": "modified",
                "additions": 7,
                "deletions": 0,
                "changes": 7,
                "blob_url": "https://github.com/eBay/parallec/blob/6240cc505a902933fd8b1108e86f490bb594dc5f/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Ftaskbuilder%2FParallelTaskBuilderTest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/6240cc505a902933fd8b1108e86f490bb594dc5f/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Ftaskbuilder%2FParallelTaskBuilderTest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Ftaskbuilder%2FParallelTaskBuilderTest.java?ref=6240cc505a902933fd8b1108e86f490bb594dc5f",
                "patch": "@@ -9,6 +9,8 @@\n import io.parallec.core.exception.TargetHostsLoadException;\n import io.parallec.core.resources.HttpClientStore;\n \n+import java.util.Arrays;\n+\n import org.junit.AfterClass;\n import org.junit.BeforeClass;\n import org.junit.Test;\n@@ -75,6 +77,11 @@ public void testSetterGetters() throws Exception {\n         tb.setTcpIdleTimeoutSec(5);\n         tb.handleInManager();\n         tb.handleInWorker();\n+        tb.sync();\n+        tb.getAsyncHttpClient();\n+        tb.setHttpEntityBody(\"test\");\n+        tb.setTargetHostsFromList(Arrays.asList(\"www.parallec.io\"));\n+        \n         tb.setAsyncHttpClient(HttpClientStore.getInstance().getCurrentDefaultClient());\n         try {\n "
            },
            {
                "sha": "e448cace009bacd1d0ad30e949769a87362de30b",
                "filename": "userdata/sample_target_hosts_top100_old.txt",
                "status": "modified",
                "additions": 8,
                "deletions": 5,
                "changes": 13,
                "blob_url": "https://github.com/eBay/parallec/blob/6240cc505a902933fd8b1108e86f490bb594dc5f/userdata%2Fsample_target_hosts_top100_old.txt",
                "raw_url": "https://github.com/eBay/parallec/raw/6240cc505a902933fd8b1108e86f490bb594dc5f/userdata%2Fsample_target_hosts_top100_old.txt",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/userdata%2Fsample_target_hosts_top100_old.txt?ref=6240cc505a902933fd8b1108e86f490bb594dc5f",
                "patch": "@@ -6,7 +6,6 @@ www.baidu.com\n www.wikipedia.org\n www.live.com\n www.amazon.com\n-www.qq.com\n www.twitter.com\n www.taobao.com\n www.google.co.in\n@@ -37,13 +36,11 @@ www.PayPal.com\n www.google.ru\n www.google.es\n www.google.it\n-www.tmall.com\n www.fc2.com\n www.blogger.com\n www.imdb.com\n www.craigslist.org\n www.ask.com\n-www.sohu.com\n www.conduit.com\n www.bbc.co.uk\n www.go.com\n@@ -55,7 +52,6 @@ www.amazon.de\n www.adobe.com\n www.flickr.com\n www.avg.com\n-www.ifeng.com\n www.aol.com\n www.rakuten.co.jp\n www.cnn.com\n@@ -94,4 +90,11 @@ www.livejournal.com\n www.skype.com\n www.wikihow.com\n www.walmart.com\n-www.forbes.com\n\\ No newline at end of file\n+www.forbes.com\n+www.starpulse.com\n+www.sfgate.com\n+www.toptenvideos.com\n+www.walgreens.com\n+www.liveleak.com\n+www.discover.com\n+www.mosthappy.com\n\\ No newline at end of file"
            }
        ]
    },
    {
        "sha": "ecf58be54bcfdc7660e5e0b83d2008987544ba24",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6ZWNmNThiZTU0YmNmZGM3NjYwZTVlMGI4M2QyMDA4OTg3NTQ0YmEyNA==",
        "commit": {
            "author": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2015-10-28T22:36:14Z"
            },
            "committer": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2015-10-28T22:36:14Z"
            },
            "message": "update readme [ci skip]",
            "tree": {
                "sha": "176c6dceec342974bb0607923e674d8f9a7367bf",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/176c6dceec342974bb0607923e674d8f9a7367bf"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/ecf58be54bcfdc7660e5e0b83d2008987544ba24",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/ecf58be54bcfdc7660e5e0b83d2008987544ba24",
        "html_url": "https://github.com/eBay/parallec/commit/ecf58be54bcfdc7660e5e0b83d2008987544ba24",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/ecf58be54bcfdc7660e5e0b83d2008987544ba24/comments",
        "author": null,
        "committer": null,
        "parents": [
            {
                "sha": "7a02c17c320eaf03e36539872fcc9d936e27b495",
                "url": "https://api.github.com/repos/eBay/parallec/commits/7a02c17c320eaf03e36539872fcc9d936e27b495",
                "html_url": "https://github.com/eBay/parallec/commit/7a02c17c320eaf03e36539872fcc9d936e27b495"
            }
        ],
        "stats": {
            "total": 9,
            "additions": 8,
            "deletions": 1
        },
        "files": [
            {
                "sha": "0f4ebc133223d7fbb15c15d4c3ede729b46360b8",
                "filename": "README.md",
                "status": "modified",
                "additions": 8,
                "deletions": 1,
                "changes": 9,
                "blob_url": "https://github.com/eBay/parallec/blob/ecf58be54bcfdc7660e5e0b83d2008987544ba24/README.md",
                "raw_url": "https://github.com/eBay/parallec/raw/ecf58be54bcfdc7660e5e0b83d2008987544ba24/README.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/README.md?ref=ecf58be54bcfdc7660e5e0b83d2008987544ba24",
                "patch": "@@ -1,3 +1,10 @@\n ##Parallec\n \n-Scheduled to release within a week: waiting for Maven Central permission.\n\\ No newline at end of file\n+![build status](https://img.shields.io/badge/build-info =>-green.svg) [![Build Status](https://travis-ci.org/eBay/parallec.svg?branch=master)](https://travis-ci.org/eBay/parallec) [![Coverage Status](https://img.shields.io/codecov/c/github/eBay/parallec.svg)](https://codecov.io/github/eBay/parallec) [![MIT License](https://img.shields.io/hexpm/l/plug.svg) ](https://github.com/eBay/parallec/blob/master/LICENSE)\n+\n+![latest 0.8.x](https://img.shields.io/badge/latest stable-0.8.x =>-green.svg) [ ![latest beta  maven central](https://maven-badges.herokuapp.com/maven-central/com.ebay.parallec/parallec-core/badge.svg?style=flat)](http://search.maven.org/#artifactdetails|com.ebay.parallec|parallec-core|0.8.11-beta|)\n+\n+\n+## Stay Tuned\n+\n+Scheduled to release by 11/02/2015: working on documentations and more.\n\\ No newline at end of file"
            }
        ]
    },
    {
        "sha": "7a02c17c320eaf03e36539872fcc9d936e27b495",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6N2EwMmMxN2MzMjBlYWYwM2UzNjUzOTg3MmZjYzlkOTM2ZTI3YjQ5NQ==",
        "commit": {
            "author": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2015-10-28T22:06:54Z"
            },
            "committer": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2015-10-28T22:06:54Z"
            },
            "message": "enabel ci",
            "tree": {
                "sha": "fc0846406641613ffa563e8c0a30f6ff9bd750c6",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/fc0846406641613ffa563e8c0a30f6ff9bd750c6"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/7a02c17c320eaf03e36539872fcc9d936e27b495",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/7a02c17c320eaf03e36539872fcc9d936e27b495",
        "html_url": "https://github.com/eBay/parallec/commit/7a02c17c320eaf03e36539872fcc9d936e27b495",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/7a02c17c320eaf03e36539872fcc9d936e27b495/comments",
        "author": null,
        "committer": null,
        "parents": [
            {
                "sha": "e8a963a1892b186e4c9c66724ac149b77b4312b8",
                "url": "https://api.github.com/repos/eBay/parallec/commits/e8a963a1892b186e4c9c66724ac149b77b4312b8",
                "html_url": "https://github.com/eBay/parallec/commit/e8a963a1892b186e4c9c66724ac149b77b4312b8"
            }
        ],
        "stats": {
            "total": 0,
            "additions": 0,
            "deletions": 0
        },
        "files": [
            {
                "sha": "5e3c2af9cc00197eae505d1938a8247be31ef00d",
                "filename": ".travis.yml",
                "status": "renamed",
                "additions": 0,
                "deletions": 0,
                "changes": 0,
                "blob_url": "https://github.com/eBay/parallec/blob/7a02c17c320eaf03e36539872fcc9d936e27b495/.travis.yml",
                "raw_url": "https://github.com/eBay/parallec/raw/7a02c17c320eaf03e36539872fcc9d936e27b495/.travis.yml",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/.travis.yml?ref=7a02c17c320eaf03e36539872fcc9d936e27b495",
                "previous_filename": "_travis.yml"
            }
        ]
    },
    {
        "sha": "e8a963a1892b186e4c9c66724ac149b77b4312b8",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6ZThhOTYzYTE4OTJiMTg2ZTRjOWM2NjcyNGFjMTQ5Yjc3YjQzMTJiOA==",
        "commit": {
            "author": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2015-10-28T22:03:55Z"
            },
            "committer": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2015-10-28T22:03:55Z"
            },
            "message": "add ci; add javadoc",
            "tree": {
                "sha": "cdfbc228f7af66b656655f26aed983ef25050856",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/cdfbc228f7af66b656655f26aed983ef25050856"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/e8a963a1892b186e4c9c66724ac149b77b4312b8",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/e8a963a1892b186e4c9c66724ac149b77b4312b8",
        "html_url": "https://github.com/eBay/parallec/commit/e8a963a1892b186e4c9c66724ac149b77b4312b8",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/e8a963a1892b186e4c9c66724ac149b77b4312b8/comments",
        "author": null,
        "committer": null,
        "parents": [
            {
                "sha": "6b25eaca78438031f318f6ea117e42d3c4375ebb",
                "url": "https://api.github.com/repos/eBay/parallec/commits/6b25eaca78438031f318f6ea117e42d3c4375ebb",
                "html_url": "https://github.com/eBay/parallec/commit/6b25eaca78438031f318f6ea117e42d3c4375ebb"
            }
        ],
        "stats": {
            "total": 241,
            "additions": 178,
            "deletions": 63
        },
        "files": [
            {
                "sha": "5e3c2af9cc00197eae505d1938a8247be31ef00d",
                "filename": "_travis.yml",
                "status": "added",
                "additions": 7,
                "deletions": 0,
                "changes": 7,
                "blob_url": "https://github.com/eBay/parallec/blob/e8a963a1892b186e4c9c66724ac149b77b4312b8/_travis.yml",
                "raw_url": "https://github.com/eBay/parallec/raw/e8a963a1892b186e4c9c66724ac149b77b4312b8/_travis.yml",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/_travis.yml?ref=e8a963a1892b186e4c9c66724ac149b77b4312b8",
                "patch": "@@ -0,0 +1,7 @@\n+language: java\n+\n+before_install:\n+  - pip install --user codecov  \n+\n+after_success:\n+  - codecov"
            },
            {
                "sha": "2afa4944d747484ee0cfe70b52ce60693d891859",
                "filename": "pom.xml",
                "status": "modified",
                "additions": 113,
                "deletions": 8,
                "changes": 121,
                "blob_url": "https://github.com/eBay/parallec/blob/e8a963a1892b186e4c9c66724ac149b77b4312b8/pom.xml",
                "raw_url": "https://github.com/eBay/parallec/raw/e8a963a1892b186e4c9c66724ac149b77b4312b8/pom.xml",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/pom.xml?ref=e8a963a1892b186e4c9c66724ac149b77b4312b8",
                "patch": "@@ -40,13 +40,8 @@\n \t\t</developer>\n \t</developers>\n \n-\n-\n \t<inceptionYear>2015</inceptionYear>\n \n-\n-\n-\n \t<properties>\n \t\t<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n \t\t<junit.version>4.11</junit.version>\n@@ -202,6 +197,13 @@\n \n \t</dependencies>\n \n+\t<distributionManagement>\n+\t\t<snapshotRepository>\n+\t\t\t<id>ossrh</id>\n+\t\t\t<url>https://oss.sonatype.org/content/repositories/snapshots</url>\n+\t\t</snapshotRepository>\n+\t</distributionManagement>\n+\n \n \n \n@@ -213,15 +215,118 @@\n \t\t\t\t\t<groupId>org.apache.maven.plugins</groupId>\n \t\t\t\t\t<artifactId>maven-compiler-plugin</artifactId>\n \t\t\t\t\t<configuration>\n-\t\t\t\t\t\t<source>1.7</source>\n-\t\t\t\t\t\t<target>1.7</target>\n+\t\t\t\t\t\t<source>1.6</source>\n+\t\t\t\t\t\t<target>1.6</target>\n \t\t\t\t\t</configuration>\n \t\t\t\t</plugin>\n \t\t\t</plugins>\n \t\t</pluginManagement>\n-\t</build>\n+\t\t<plugins>\n+\t\t\t<plugin>\n+\t\t\t\t<groupId>org.jacoco</groupId>\n+\t\t\t\t<artifactId>jacoco-maven-plugin</artifactId>\n+\t\t\t\t<version>0.7.5.201505241946</version>\n+\t\t\t\t<executions>\n+\t\t\t\t\t<execution>\n+\t\t\t\t\t\t<goals>\n+\t\t\t\t\t\t\t<goal>prepare-agent</goal>\n+\t\t\t\t\t\t</goals>\n+\t\t\t\t\t</execution>\n+\t\t\t\t\t<execution>\n+\t\t\t\t\t\t<id>report</id>\n+\t\t\t\t\t\t<phase>test</phase>\n+\t\t\t\t\t\t<goals>\n+\t\t\t\t\t\t\t<goal>report</goal>\n+\t\t\t\t\t\t</goals>\n+\t\t\t\t\t</execution>\n+\t\t\t\t</executions>\n+\t\t\t</plugin>\n+\n+\t\t</plugins>\n \n \n+\t</build>\n+\n+\t<profiles>\n+\t\t<profile>\n+\t\t\t<id>release</id>\n+\t\t\t<activation>\n+\t\t\t\t<activeByDefault>false</activeByDefault>\n+\t\t\t</activation>\n+\t\t\t<build>\n+\t\t\t\t<pluginManagement>\n+\t\t\t\t\t<plugins>\n+\t\t\t\t\t\t<plugin>\n+\t\t\t\t\t\t\t<groupId>org.apache.maven.plugins</groupId>\n+\t\t\t\t\t\t\t<artifactId>maven-compiler-plugin</artifactId>\n+\t\t\t\t\t\t\t<configuration>\n+\t\t\t\t\t\t\t\t<source>1.6</source>\n+\t\t\t\t\t\t\t\t<target>1.6</target>\n+\t\t\t\t\t\t\t</configuration>\n+\t\t\t\t\t\t</plugin>\n+\t\t\t\t\t</plugins>\n+\t\t\t\t</pluginManagement>\n+\t\t\t\t<plugins>\n+\t\t\t\t\t<plugin>\n+\t\t\t\t\t\t<groupId>org.sonatype.plugins</groupId>\n+\t\t\t\t\t\t<artifactId>nexus-staging-maven-plugin</artifactId>\n+\t\t\t\t\t\t<version>1.6.3</version>\n+\t\t\t\t\t\t<extensions>true</extensions>\n+\t\t\t\t\t\t<configuration>\n+\t\t\t\t\t\t\t<serverId>ossrh</serverId>\n+\t\t\t\t\t\t\t<nexusUrl>https://oss.sonatype.org/</nexusUrl>\n+\t\t\t\t\t\t\t<autoReleaseAfterClose>true</autoReleaseAfterClose>\n+\t\t\t\t\t\t</configuration>\n+\t\t\t\t\t</plugin>\n+\t\t\t\t\t<plugin>\n+\t\t\t\t\t\t<groupId>org.apache.maven.plugins</groupId>\n+\t\t\t\t\t\t<artifactId>maven-source-plugin</artifactId>\n+\t\t\t\t\t\t<version>2.2.1</version>\n+\t\t\t\t\t\t<executions>\n+\t\t\t\t\t\t\t<execution>\n+\t\t\t\t\t\t\t\t<id>attach-sources</id>\n+\t\t\t\t\t\t\t\t<goals>\n+\t\t\t\t\t\t\t\t\t<goal>jar-no-fork</goal>\n+\t\t\t\t\t\t\t\t</goals>\n+\t\t\t\t\t\t\t</execution>\n+\t\t\t\t\t\t</executions>\n+\t\t\t\t\t</plugin>\n+\t\t\t\t\t<plugin>\n+\t\t\t\t\t\t<groupId>org.apache.maven.plugins</groupId>\n+\t\t\t\t\t\t<artifactId>maven-javadoc-plugin</artifactId>\n+\t\t\t\t\t\t<version>2.9.1</version>\n+\t\t\t\t\t\t<executions>\n+\t\t\t\t\t\t\t<execution>\n+\t\t\t\t\t\t\t\t<id>attach-javadocs</id>\n+\t\t\t\t\t\t\t\t<goals>\n+\t\t\t\t\t\t\t\t\t<goal>jar</goal>\n+\t\t\t\t\t\t\t\t</goals>\n+\t\t\t\t\t\t\t\t<!-- Only working for JDK 8 with this parameter -->\n+\t\t\t\t\t\t\t\t<configuration>\n+\t\t\t\t\t\t\t\t\t<additionalparam>-Xdoclint:none</additionalparam>\n+\t\t\t\t\t\t\t\t</configuration>\n+\t\t\t\t\t\t\t</execution>\n+\t\t\t\t\t\t</executions>\n+\t\t\t\t\t</plugin>\n+\n+\t\t\t\t\t<plugin>\n+\t\t\t\t\t\t<groupId>org.apache.maven.plugins</groupId>\n+\t\t\t\t\t\t<artifactId>maven-gpg-plugin</artifactId>\n+\t\t\t\t\t\t<version>1.6</version>\n+\t\t\t\t\t\t<executions>\n+\t\t\t\t\t\t\t<execution>\n+\t\t\t\t\t\t\t\t<id>sign-artifacts</id>\n+\t\t\t\t\t\t\t\t<phase>verify</phase>\n+\t\t\t\t\t\t\t\t<goals>\n+\t\t\t\t\t\t\t\t\t<goal>sign</goal>\n+\t\t\t\t\t\t\t\t</goals>\n+\t\t\t\t\t\t\t</execution>\n+\t\t\t\t\t\t</executions>\n+\t\t\t\t\t</plugin>\n+\t\t\t\t</plugins>\n+\t\t\t</build>\n+\t\t</profile>\n+\t</profiles>\n \n </project>\n "
            },
            {
                "sha": "1ddbd8d45c3ceea46080a8d0d6bef207b73e6cbf",
                "filename": "src/main/java/io/parallec/core/ParallecHeader.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/e8a963a1892b186e4c9c66724ac149b77b4312b8/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FParallecHeader.java",
                "raw_url": "https://github.com/eBay/parallec/raw/e8a963a1892b186e4c9c66724ac149b77b4312b8/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FParallecHeader.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FParallecHeader.java?ref=e8a963a1892b186e4c9c66724ac149b77b4312b8",
                "patch": "@@ -17,7 +17,7 @@\n import java.util.LinkedHashMap;\n import java.util.Map;\n \n-// TODO: Auto-generated Javadoc\n+\n /**\n  * easy to use builder to add header key/value pair then get the results\n  * directly for use."
            },
            {
                "sha": "1fb3e035bc1b1d4b1c374c8f780c04d1c363fb59",
                "filename": "src/main/java/io/parallec/core/ParallecResponseHandler.java",
                "status": "modified",
                "additions": 10,
                "deletions": 6,
                "changes": 16,
                "blob_url": "https://github.com/eBay/parallec/blob/e8a963a1892b186e4c9c66724ac149b77b4312b8/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FParallecResponseHandler.java",
                "raw_url": "https://github.com/eBay/parallec/raw/e8a963a1892b186e4c9c66724ac149b77b4312b8/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FParallecResponseHandler.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FParallecResponseHandler.java?ref=e8a963a1892b186e4c9c66724ac149b77b4312b8",
                "patch": "@@ -14,7 +14,7 @@\n \n import java.util.Map;\n \n-// TODO: Auto-generated Javadoc\n+\n /**\n  * The Interface ParallecResponseHandler.\n  * \n@@ -23,15 +23,19 @@\n public interface ParallecResponseHandler {\n \n     /**\n-     * When a response coming back or a timeout received at the Command Manager,\n-     * apply this response handler.\n+     * When timeout / error occurred or response received for the target host,\n+     * will trigger execution of onCompleted(). \n+     * \n+     * This can be run at the execution manager (default) or the worker thread \n+     * based on the config {@link ParallelTaskBuilder#handleInWorker()}\n      * \n-     * this gap includes the request content inside\n+     * <br> \n+     * When {@link ResponseOnSingleTask#isError()} is true: Fail to receive resposne \n      *\n      * @param res\n-     *            the res\n+     *            the response\n      * @param responseContext\n-     *            the response context\n+     *            the response context \n      */\n \n     public void onCompleted(ResponseOnSingleTask res,"
            },
            {
                "sha": "09db47380be75e5bd96625dd0aad80fff5936e40",
                "filename": "src/main/java/io/parallec/core/ResponseOnSingleTask.java",
                "status": "modified",
                "additions": 3,
                "deletions": 6,
                "changes": 9,
                "blob_url": "https://github.com/eBay/parallec/blob/e8a963a1892b186e4c9c66724ac149b77b4312b8/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FResponseOnSingleTask.java",
                "raw_url": "https://github.com/eBay/parallec/raw/e8a963a1892b186e4c9c66724ac149b77b4312b8/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FResponseOnSingleTask.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FResponseOnSingleTask.java?ref=e8a963a1892b186e4c9c66724ac149b77b4312b8",
                "patch": "@@ -19,19 +19,16 @@\n import java.util.LinkedHashMap;\n import java.util.Map;\n \n-// TODO: Auto-generated Javadoc\n+\n /**\n  * this includes the request\n  * each target host will have one.\n  * \n- * For easy import and usability, move this class from message package to main package\n+ * {@link ResponseOnSingleTask#isError()} is true: means fail to receive resposne \n+ *\n  * @author Yuanteng Jeff Pei\n  * \n  */\n-/**\n- * @author Yuanteng Jeff Pei\n- *\n- */\n public class ResponseOnSingleTask {\n \n     /** The request. */"
            },
            {
                "sha": "cd7e17ea7ef6a0ebd1e7f9ed0b0d9e1eca1347d5",
                "filename": "src/main/java/io/parallec/core/actor/ActorConfig.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/e8a963a1892b186e4c9c66724ac149b77b4312b8/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FActorConfig.java",
                "raw_url": "https://github.com/eBay/parallec/raw/e8a963a1892b186e4c9c66724ac149b77b4312b8/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FActorConfig.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FActorConfig.java?ref=e8a963a1892b186e4c9c66724ac149b77b4312b8",
                "patch": "@@ -27,7 +27,7 @@\n import com.typesafe.config.Config;\n import com.typesafe.config.ConfigFactory;\n \n-// TODO: Auto-generated Javadoc\n+\n /**\n  * The static akka actor system\n  */"
            },
            {
                "sha": "f8ccfa56b43dec1c05f76ca916d862c33f50ed76",
                "filename": "src/main/java/io/parallec/core/actor/AssistantExecutionManager.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/e8a963a1892b186e4c9c66724ac149b77b4312b8/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FAssistantExecutionManager.java",
                "raw_url": "https://github.com/eBay/parallec/raw/e8a963a1892b186e4c9c66724ac149b77b4312b8/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FAssistantExecutionManager.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FAssistantExecutionManager.java?ref=e8a963a1892b186e4c9c66724ac149b77b4312b8",
                "patch": "@@ -30,7 +30,7 @@\n import akka.actor.ActorRef;\n import akka.actor.UntypedActor;\n \n-// TODO: Auto-generated Javadoc\n+\n /**\n  * \n  * 20131014; update major logic to enable concurrency control"
            },
            {
                "sha": "3bbd68fa60f5c32bac55679484fff236e6a98dc1",
                "filename": "src/main/java/io/parallec/core/actor/HttpWorker.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/e8a963a1892b186e4c9c66724ac149b77b4312b8/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FHttpWorker.java",
                "raw_url": "https://github.com/eBay/parallec/raw/e8a963a1892b186e4c9c66724ac149b77b4312b8/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FHttpWorker.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FHttpWorker.java?ref=e8a963a1892b186e4c9c66724ac149b77b4312b8",
                "patch": "@@ -44,7 +44,7 @@\n import com.ning.http.client.ListenableFuture;\n import com.ning.http.client.Response;\n \n-// TODO: Auto-generated Javadoc\n+\n /**\n  * This is an akka actor with async http client.\n  *"
            },
            {
                "sha": "284aab94e62b2e2fd18a49d168dfb4764abbd2ca",
                "filename": "src/main/java/io/parallec/core/actor/OperationWorker.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/e8a963a1892b186e4c9c66724ac149b77b4312b8/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FOperationWorker.java",
                "raw_url": "https://github.com/eBay/parallec/raw/e8a963a1892b186e4c9c66724ac149b77b4312b8/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FOperationWorker.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FOperationWorker.java?ref=e8a963a1892b186e4c9c66724ac149b77b4312b8",
                "patch": "@@ -43,7 +43,7 @@\n \n import com.ning.http.client.AsyncHttpClient;\n \n-// TODO: Auto-generated Javadoc\n+\n /**\n  * AHC based.\n  *"
            },
            {
                "sha": "7ab77803a4868ab879308da48c1003cad058e4f8",
                "filename": "src/main/java/io/parallec/core/actor/SshWorker.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/e8a963a1892b186e4c9c66724ac149b77b4312b8/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FSshWorker.java",
                "raw_url": "https://github.com/eBay/parallec/raw/e8a963a1892b186e4c9c66724ac149b77b4312b8/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FSshWorker.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FSshWorker.java?ref=e8a963a1892b186e4c9c66724ac149b77b4312b8",
                "patch": "@@ -38,7 +38,7 @@\n //import akka.actor.PoisonPill;\n import akka.actor.UntypedActor;\n \n-// TODO: Auto-generated Javadoc\n+\n /**\n  *\n  * Using callable to start a new thread to run the SSH execution task (which"
            },
            {
                "sha": "f8026070aff542eea6f8fcc815eb42b6c71526c8",
                "filename": "src/main/java/io/parallec/core/actor/message/CancelTaskOnHostRequest.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/e8a963a1892b186e4c9c66724ac149b77b4312b8/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2Fmessage%2FCancelTaskOnHostRequest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/e8a963a1892b186e4c9c66724ac149b77b4312b8/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2Fmessage%2FCancelTaskOnHostRequest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2Fmessage%2FCancelTaskOnHostRequest.java?ref=e8a963a1892b186e4c9c66724ac149b77b4312b8",
                "patch": "@@ -15,7 +15,7 @@\n import java.util.ArrayList;\n import java.util.List;\n \n-// TODO: Auto-generated Javadoc\n+\n /**\n  * The Class CancelTaskOnHostRequestToManager.\n  */"
            },
            {
                "sha": "79a41ca22264eaefff0283af12227e84bd290309",
                "filename": "src/main/java/io/parallec/core/actor/message/ContinueToSendToBatchSenderAsstManager.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/e8a963a1892b186e4c9c66724ac149b77b4312b8/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2Fmessage%2FContinueToSendToBatchSenderAsstManager.java",
                "raw_url": "https://github.com/eBay/parallec/raw/e8a963a1892b186e4c9c66724ac149b77b4312b8/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2Fmessage%2FContinueToSendToBatchSenderAsstManager.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2Fmessage%2FContinueToSendToBatchSenderAsstManager.java?ref=e8a963a1892b186e4c9c66724ac149b77b4312b8",
                "patch": "@@ -12,7 +12,7 @@\n  */\n package io.parallec.core.actor.message;\n \n-// TODO: Auto-generated Javadoc\n+\n /**\n  * The Class ContinueToSendToBatchSenderAsstManager.\n  */"
            },
            {
                "sha": "7db778d28c18a5a15ce9ef77fbd62ba841ea3b64",
                "filename": "src/main/java/io/parallec/core/actor/message/NodeReqResponse.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/e8a963a1892b186e4c9c66724ac149b77b4312b8/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2Fmessage%2FNodeReqResponse.java",
                "raw_url": "https://github.com/eBay/parallec/raw/e8a963a1892b186e4c9c66724ac149b77b4312b8/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2Fmessage%2FNodeReqResponse.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2Fmessage%2FNodeReqResponse.java?ref=e8a963a1892b186e4c9c66724ac149b77b4312b8",
                "patch": "@@ -22,7 +22,7 @@\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n-// TODO: Auto-generated Javadoc\n+\n /**\n  * To save the content request and response By default the responseContent is\n  * NULL because dont need it in InProgress entries. But must init!! when in"
            },
            {
                "sha": "42ec2fac3f5bc403ab97c1f498c10f5a4100f9eb",
                "filename": "src/main/java/io/parallec/core/actor/message/ResponseCountToBatchSenderAsstManager.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/e8a963a1892b186e4c9c66724ac149b77b4312b8/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2Fmessage%2FResponseCountToBatchSenderAsstManager.java",
                "raw_url": "https://github.com/eBay/parallec/raw/e8a963a1892b186e4c9c66724ac149b77b4312b8/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2Fmessage%2FResponseCountToBatchSenderAsstManager.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2Fmessage%2FResponseCountToBatchSenderAsstManager.java?ref=e8a963a1892b186e4c9c66724ac149b77b4312b8",
                "patch": "@@ -12,7 +12,7 @@\n  */\n package io.parallec.core.actor.message;\n \n-// TODO: Auto-generated Javadoc\n+\n /**\n  * Receive count from the manager to asst manager; for flow control.\n  *"
            },
            {
                "sha": "0b44cd77481fac324c6c6058ca4a409ae0ebc2ce",
                "filename": "src/main/java/io/parallec/core/actor/message/ResponseOnSingeRequest.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/e8a963a1892b186e4c9c66724ac149b77b4312b8/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2Fmessage%2FResponseOnSingeRequest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/e8a963a1892b186e4c9c66724ac149b77b4312b8/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2Fmessage%2FResponseOnSingeRequest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2Fmessage%2FResponseOnSingeRequest.java?ref=e8a963a1892b186e4c9c66724ac149b77b4312b8",
                "patch": "@@ -15,7 +15,7 @@\n import io.parallec.core.util.PcConstants;\n import io.parallec.core.util.PcDateUtils;\n \n-// TODO: Auto-generated Javadoc\n+\n /**\n  * a single HTTP response for each http request\n  * "
            },
            {
                "sha": "8882202c4603ff867bc8e555aba6a7df6b5a4e54",
                "filename": "src/main/java/io/parallec/core/actor/message/type/OperationWorkerMsgType.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/e8a963a1892b186e4c9c66724ac149b77b4312b8/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2Fmessage%2Ftype%2FOperationWorkerMsgType.java",
                "raw_url": "https://github.com/eBay/parallec/raw/e8a963a1892b186e4c9c66724ac149b77b4312b8/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2Fmessage%2Ftype%2FOperationWorkerMsgType.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2Fmessage%2Ftype%2FOperationWorkerMsgType.java?ref=e8a963a1892b186e4c9c66724ac149b77b4312b8",
                "patch": "@@ -12,7 +12,7 @@\n  */\n package io.parallec.core.actor.message.type;\n \n-// TODO: Auto-generated Javadoc\n+\n /**\n  * The Enum OperationWorkerMsgType.\n  */"
            },
            {
                "sha": "108f5c2d1fdb9f42d608029206e20bc7575a5406",
                "filename": "src/main/java/io/parallec/core/actor/message/type/RequestWorkerMsgType.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/e8a963a1892b186e4c9c66724ac149b77b4312b8/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2Fmessage%2Ftype%2FRequestWorkerMsgType.java",
                "raw_url": "https://github.com/eBay/parallec/raw/e8a963a1892b186e4c9c66724ac149b77b4312b8/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2Fmessage%2Ftype%2FRequestWorkerMsgType.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2Fmessage%2Ftype%2FRequestWorkerMsgType.java?ref=e8a963a1892b186e4c9c66724ac149b77b4312b8",
                "patch": "@@ -12,7 +12,7 @@\n  */\n package io.parallec.core.actor.message.type;\n \n-// TODO: Auto-generated Javadoc\n+\n /**\n  * The Enum RequestWorkerMsgType. for SSH/HTTP Workers only.\n  */"
            },
            {
                "sha": "6145d0219a591a0dc97833eba858d0e024026ddc",
                "filename": "src/main/java/io/parallec/core/actor/poll/HttpPollerProcessor.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/e8a963a1892b186e4c9c66724ac149b77b4312b8/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2Fpoll%2FHttpPollerProcessor.java",
                "raw_url": "https://github.com/eBay/parallec/raw/e8a963a1892b186e4c9c66724ac149b77b4312b8/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2Fpoll%2FHttpPollerProcessor.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2Fpoll%2FHttpPollerProcessor.java?ref=e8a963a1892b186e4c9c66724ac149b77b4312b8",
                "patch": "@@ -21,7 +21,7 @@\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n-// TODO: Auto-generated Javadoc\n+\n /**\n  * Define how to poll progress 1. how to get the job id from the 1st response.\n  * 2. what is the URL template to poll progress (assuming it is a HTTP GET) 3."
            },
            {
                "sha": "d0bb44378a7ecfcfbb5e0d827114b1b82ee85bbd",
                "filename": "src/main/java/io/parallec/core/actor/poll/PollerData.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/e8a963a1892b186e4c9c66724ac149b77b4312b8/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2Fpoll%2FPollerData.java",
                "raw_url": "https://github.com/eBay/parallec/raw/e8a963a1892b186e4c9c66724ac149b77b4312b8/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2Fpoll%2FPollerData.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2Fpoll%2FPollerData.java?ref=e8a963a1892b186e4c9c66724ac149b77b4312b8",
                "patch": "@@ -17,7 +17,7 @@\n import java.util.LinkedHashMap;\n import java.util.Map;\n \n-// TODO: Auto-generated Javadoc\n+\n /**\n  * the currentProgress is just for display.\n  * "
            },
            {
                "sha": "768e5dcc982368cd06dea9a59b8fca79116838f6",
                "filename": "src/main/java/io/parallec/core/bean/ssh/SshMeta.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/e8a963a1892b186e4c9c66724ac149b77b4312b8/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2Fssh%2FSshMeta.java",
                "raw_url": "https://github.com/eBay/parallec/raw/e8a963a1892b186e4c9c66724ac149b77b4312b8/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2Fssh%2FSshMeta.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2Fssh%2FSshMeta.java?ref=e8a963a1892b186e4c9c66724ac149b77b4312b8",
                "patch": "@@ -15,7 +15,7 @@\n import io.parallec.core.config.ParallecGlobalConfig;\n import io.parallec.core.exception.ParallelTaskInvalidException;\n \n-// TODO: Auto-generated Javadoc\n+\n /**\n  * all ssh metadata except for the target host name. also those timeout configs\n  * and"
            },
            {
                "sha": "d9d9c889576b08713e5503e8946a3c950ac54e68",
                "filename": "src/main/java/io/parallec/core/bean/tcp/TcpMeta.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/e8a963a1892b186e4c9c66724ac149b77b4312b8/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2Ftcp%2FTcpMeta.java",
                "raw_url": "https://github.com/eBay/parallec/raw/e8a963a1892b186e4c9c66724ac149b77b4312b8/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2Ftcp%2FTcpMeta.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2Ftcp%2FTcpMeta.java?ref=e8a963a1892b186e4c9c66724ac149b77b4312b8",
                "patch": "@@ -25,7 +25,7 @@\n \n \n \n-// TODO: Auto-generated Javadoc\n+\n /**\n  * all ssh metadata except for the target host name. also those timeout configs\n  * and"
            },
            {
                "sha": "90c0feb86b4374281cc8c45b126cdc81df2a46a5",
                "filename": "src/main/java/io/parallec/core/exception/HttpRequestCreateException.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/e8a963a1892b186e4c9c66724ac149b77b4312b8/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fexception%2FHttpRequestCreateException.java",
                "raw_url": "https://github.com/eBay/parallec/raw/e8a963a1892b186e4c9c66724ac149b77b4312b8/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fexception%2FHttpRequestCreateException.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fexception%2FHttpRequestCreateException.java?ref=e8a963a1892b186e4c9c66724ac149b77b4312b8",
                "patch": "@@ -12,7 +12,7 @@\n  */\n package io.parallec.core.exception;\n \n-// TODO: Auto-generated Javadoc\n+\n /**\n  * The Class HttpRequestCreateException.\n  */"
            },
            {
                "sha": "a2c22df683bb8fee869532fb1b256b3c730bcdca",
                "filename": "src/main/java/io/parallec/core/exception/ParallelTaskInvalidException.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/e8a963a1892b186e4c9c66724ac149b77b4312b8/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fexception%2FParallelTaskInvalidException.java",
                "raw_url": "https://github.com/eBay/parallec/raw/e8a963a1892b186e4c9c66724ac149b77b4312b8/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fexception%2FParallelTaskInvalidException.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fexception%2FParallelTaskInvalidException.java?ref=e8a963a1892b186e4c9c66724ac149b77b4312b8",
                "patch": "@@ -12,7 +12,7 @@\n  */\n package io.parallec.core.exception;\n \n-// TODO: Auto-generated Javadoc\n+\n /**\n  * The Class ParallelTaskInvalidException.\n  */"
            },
            {
                "sha": "c47f05cd777a87c49858eef254b5ce0e51d0448d",
                "filename": "src/main/java/io/parallec/core/exception/TargetHostsLoadException.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/e8a963a1892b186e4c9c66724ac149b77b4312b8/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fexception%2FTargetHostsLoadException.java",
                "raw_url": "https://github.com/eBay/parallec/raw/e8a963a1892b186e4c9c66724ac149b77b4312b8/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fexception%2FTargetHostsLoadException.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fexception%2FTargetHostsLoadException.java?ref=e8a963a1892b186e4c9c66724ac149b77b4312b8",
                "patch": "@@ -12,7 +12,7 @@\n  */\n package io.parallec.core.exception;\n \n-// TODO: Auto-generated Javadoc\n+\n /**\n  * The Class TargetHostsLoadException.\n  */"
            },
            {
                "sha": "c6b6ed7fe313e44721c486299ea88b25a3f0b3fd",
                "filename": "src/main/java/io/parallec/core/exception/TcpRequestCreateException.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/e8a963a1892b186e4c9c66724ac149b77b4312b8/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fexception%2FTcpRequestCreateException.java",
                "raw_url": "https://github.com/eBay/parallec/raw/e8a963a1892b186e4c9c66724ac149b77b4312b8/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fexception%2FTcpRequestCreateException.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fexception%2FTcpRequestCreateException.java?ref=e8a963a1892b186e4c9c66724ac149b77b4312b8",
                "patch": "@@ -12,7 +12,7 @@\n  */\n package io.parallec.core.exception;\n \n-// TODO: Auto-generated Javadoc\n+\n /**\n  * The Class HttpRequestCreateException.\n  */"
            },
            {
                "sha": "ce874e29e97a2af4e03a7903f152387834d55cc3",
                "filename": "src/main/java/io/parallec/core/monitor/MonitorProvider.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/e8a963a1892b186e4c9c66724ac149b77b4312b8/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fmonitor%2FMonitorProvider.java",
                "raw_url": "https://github.com/eBay/parallec/raw/e8a963a1892b186e4c9c66724ac149b77b4312b8/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fmonitor%2FMonitorProvider.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fmonitor%2FMonitorProvider.java?ref=e8a963a1892b186e4c9c66724ac149b77b4312b8",
                "patch": "@@ -27,7 +27,7 @@\n \n import com.google.gson.GsonBuilder;\n \n-// TODO: Auto-generated Javadoc\n+\n /**\n  * The Class MonitorProvider.\n  */"
            },
            {
                "sha": "293ebd80d17d4dd8d0695317ec80bec0dcc60d0d",
                "filename": "src/main/java/io/parallec/core/resources/AsyncHttpClientFactoryEmbed.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/e8a963a1892b186e4c9c66724ac149b77b4312b8/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fresources%2FAsyncHttpClientFactoryEmbed.java",
                "raw_url": "https://github.com/eBay/parallec/raw/e8a963a1892b186e4c9c66724ac149b77b4312b8/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fresources%2FAsyncHttpClientFactoryEmbed.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fresources%2FAsyncHttpClientFactoryEmbed.java?ref=e8a963a1892b186e4c9c66724ac149b77b4312b8",
                "patch": "@@ -38,7 +38,7 @@\n import com.ning.http.client.AsyncHttpClient;\n import com.ning.http.client.AsyncHttpClientConfigBean;\n \n-// TODO: Auto-generated Javadoc\n+\n /**\n  * The Class HttpClientFactoryEmbed.\n  *"
            },
            {
                "sha": "1ea1af63a3303888c750425e4cf3d198f20fda6a",
                "filename": "src/main/java/io/parallec/core/resources/HttpClientStore.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/e8a963a1892b186e4c9c66724ac149b77b4312b8/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fresources%2FHttpClientStore.java",
                "raw_url": "https://github.com/eBay/parallec/raw/e8a963a1892b186e4c9c66724ac149b77b4312b8/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fresources%2FHttpClientStore.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fresources%2FHttpClientStore.java?ref=e8a963a1892b186e4c9c66724ac149b77b4312b8",
                "patch": "@@ -18,7 +18,7 @@\n \n import com.ning.http.client.AsyncHttpClient;\n \n-// TODO: Auto-generated Javadoc\n+\n /**\n  * this stores a pair of default fast/slow AsyncHttpClient, and another pair of\n  * customized fast/slow AsyncHttpClient the default."
            },
            {
                "sha": "d6a29cd26067d1ded65b5e906cac3f8777b0ccf8",
                "filename": "src/main/java/io/parallec/core/resources/HttpClientType.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/e8a963a1892b186e4c9c66724ac149b77b4312b8/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fresources%2FHttpClientType.java",
                "raw_url": "https://github.com/eBay/parallec/raw/e8a963a1892b186e4c9c66724ac149b77b4312b8/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fresources%2FHttpClientType.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fresources%2FHttpClientType.java?ref=e8a963a1892b186e4c9c66724ac149b77b4312b8",
                "patch": "@@ -12,7 +12,7 @@\n  */\n package io.parallec.core.resources;\n \n-// TODO: Auto-generated Javadoc\n+\n /**\n  * The Enum HCTYPE.\n  */"
            },
            {
                "sha": "8c1561a42f5d8d6f40e3c701bad6dff7b2138afd",
                "filename": "src/main/java/io/parallec/core/resources/HttpMethod.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/e8a963a1892b186e4c9c66724ac149b77b4312b8/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fresources%2FHttpMethod.java",
                "raw_url": "https://github.com/eBay/parallec/raw/e8a963a1892b186e4c9c66724ac149b77b4312b8/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fresources%2FHttpMethod.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fresources%2FHttpMethod.java?ref=e8a963a1892b186e4c9c66724ac149b77b4312b8",
                "patch": "@@ -12,7 +12,7 @@\n  */\n package io.parallec.core.resources;\n \n-// TODO: Auto-generated Javadoc\n+\n /**\n  * The Enum HttpMethod.\n  */"
            },
            {
                "sha": "5f50a00bea5b6926aed98ce44accf67f40569d49",
                "filename": "src/main/java/io/parallec/core/task/CapacityAwareTaskScheduler.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/e8a963a1892b186e4c9c66724ac149b77b4312b8/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Ftask%2FCapacityAwareTaskScheduler.java",
                "raw_url": "https://github.com/eBay/parallec/raw/e8a963a1892b186e4c9c66724ac149b77b4312b8/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Ftask%2FCapacityAwareTaskScheduler.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Ftask%2FCapacityAwareTaskScheduler.java?ref=e8a963a1892b186e4c9c66724ac149b77b4312b8",
                "patch": "@@ -20,7 +20,7 @@\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n-// TODO: Auto-generated Javadoc\n+\n /**\n  * \n  * TODO Doc: The Class EvalTaskInWaitQRunner."
            },
            {
                "sha": "c3c7ed15414fa3665a207cca092d79bccbdea7a0",
                "filename": "src/main/java/io/parallec/core/task/ParallelTaskBean.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/e8a963a1892b186e4c9c66724ac149b77b4312b8/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Ftask%2FParallelTaskBean.java",
                "raw_url": "https://github.com/eBay/parallec/raw/e8a963a1892b186e4c9c66724ac149b77b4312b8/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Ftask%2FParallelTaskBean.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Ftask%2FParallelTaskBean.java?ref=e8a963a1892b186e4c9c66724ac149b77b4312b8",
                "patch": "@@ -32,7 +32,7 @@\n \n import akka.actor.ActorRef;\n \n-// TODO: Auto-generated Javadoc\n+\n /**\n  * The Class ParallelTaskBean. this is for serialization and see as a snapshot\n  */"
            },
            {
                "sha": "c11463ee3017cf5e8598bb876829e212f15e9d42",
                "filename": "src/main/java/io/parallec/core/task/RequestReplacementType.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/e8a963a1892b186e4c9c66724ac149b77b4312b8/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Ftask%2FRequestReplacementType.java",
                "raw_url": "https://github.com/eBay/parallec/raw/e8a963a1892b186e4c9c66724ac149b77b4312b8/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Ftask%2FRequestReplacementType.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Ftask%2FRequestReplacementType.java?ref=e8a963a1892b186e4c9c66724ac149b77b4312b8",
                "patch": "@@ -12,7 +12,7 @@\n  */\n package io.parallec.core.task;\n \n-// TODO: Auto-generated Javadoc\n+\n /**\n  * The Enum RequestReplacementType.\n  */"
            },
            {
                "sha": "eb8ce0fe942708e141fc00960fde67a2fac6609e",
                "filename": "src/main/java/io/parallec/core/task/TaskErrorMeta.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/e8a963a1892b186e4c9c66724ac149b77b4312b8/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Ftask%2FTaskErrorMeta.java",
                "raw_url": "https://github.com/eBay/parallec/raw/e8a963a1892b186e4c9c66724ac149b77b4312b8/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Ftask%2FTaskErrorMeta.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Ftask%2FTaskErrorMeta.java?ref=e8a963a1892b186e4c9c66724ac149b77b4312b8",
                "patch": "@@ -14,7 +14,7 @@\n \n import io.parallec.core.util.PcDateUtils;\n \n-// TODO: Auto-generated Javadoc\n+\n /**\n  * The Class TaskErrorMeta.\n  */"
            },
            {
                "sha": "67fc46094e7261dc08fa1043ec6d07e160a5a01d",
                "filename": "src/main/java/io/parallec/core/taskbuilder/targethosts/TargetHostsBuilder.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/e8a963a1892b186e4c9c66724ac149b77b4312b8/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Ftaskbuilder%2Ftargethosts%2FTargetHostsBuilder.java",
                "raw_url": "https://github.com/eBay/parallec/raw/e8a963a1892b186e4c9c66724ac149b77b4312b8/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Ftaskbuilder%2Ftargethosts%2FTargetHostsBuilder.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Ftaskbuilder%2Ftargethosts%2FTargetHostsBuilder.java?ref=e8a963a1892b186e4c9c66724ac149b77b4312b8",
                "patch": "@@ -26,7 +26,7 @@\n \n import com.jayway.jsonpath.JsonPath;\n \n-// TODO: Auto-generated Javadoc\n+\n /**\n  * The Class TargetHostsBuilder.\n  */"
            },
            {
                "sha": "fcd53ce4abc813ac0254e9307cb42a14fd9a3571",
                "filename": "src/main/java/io/parallec/core/taskbuilder/targethosts/TargetHostsBuilderHelperCms.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/e8a963a1892b186e4c9c66724ac149b77b4312b8/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Ftaskbuilder%2Ftargethosts%2FTargetHostsBuilderHelperCms.java",
                "raw_url": "https://github.com/eBay/parallec/raw/e8a963a1892b186e4c9c66724ac149b77b4312b8/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Ftaskbuilder%2Ftargethosts%2FTargetHostsBuilderHelperCms.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Ftaskbuilder%2Ftargethosts%2FTargetHostsBuilderHelperCms.java?ref=e8a963a1892b186e4c9c66724ac149b77b4312b8",
                "patch": "@@ -36,7 +36,7 @@\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n-// TODO: Auto-generated Javadoc\n+\n /**\n  * load node from CMS.\n  *"
            },
            {
                "sha": "9de1ab8519367e13c0af4b8c5b716df2f5c25363",
                "filename": "src/main/java/io/parallec/core/util/DaemonThreadFactory.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/e8a963a1892b186e4c9c66724ac149b77b4312b8/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Futil%2FDaemonThreadFactory.java",
                "raw_url": "https://github.com/eBay/parallec/raw/e8a963a1892b186e4c9c66724ac149b77b4312b8/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Futil%2FDaemonThreadFactory.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Futil%2FDaemonThreadFactory.java?ref=e8a963a1892b186e4c9c66724ac149b77b4312b8",
                "patch": "@@ -14,7 +14,7 @@\n \n import java.util.concurrent.ThreadFactory;\n \n-// TODO: Auto-generated Javadoc\n+\n /**\n  * A factory for creating DaemonThread objects.\n  */"
            },
            {
                "sha": "bf91b6b9bd028899874aabea39a1c48d88cc14ac",
                "filename": "src/main/java/io/parallec/core/util/PcDateUtils.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/e8a963a1892b186e4c9c66724ac149b77b4312b8/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Futil%2FPcDateUtils.java",
                "raw_url": "https://github.com/eBay/parallec/raw/e8a963a1892b186e4c9c66724ac149b77b4312b8/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Futil%2FPcDateUtils.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Futil%2FPcDateUtils.java?ref=e8a963a1892b186e4c9c66724ac149b77b4312b8",
                "patch": "@@ -18,7 +18,7 @@\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n-// TODO: Auto-generated Javadoc\n+\n /**\n  * The Class PcDateUtils.\n  */"
            },
            {
                "sha": "fefebb3a799f8e3bd91c97923e40f4c6a8617eb1",
                "filename": "src/main/java/io/parallec/core/util/PcErrorMsgUtils.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/e8a963a1892b186e4c9c66724ac149b77b4312b8/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Futil%2FPcErrorMsgUtils.java",
                "raw_url": "https://github.com/eBay/parallec/raw/e8a963a1892b186e4c9c66724ac149b77b4312b8/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Futil%2FPcErrorMsgUtils.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Futil%2FPcErrorMsgUtils.java?ref=e8a963a1892b186e4c9c66724ac149b77b4312b8",
                "patch": "@@ -15,7 +15,7 @@\n import java.util.HashMap;\n import java.util.Map;\n \n-// TODO: Auto-generated Javadoc\n+\n /**\n  * The Class PcErrorMsgUtils.\n  */"
            },
            {
                "sha": "048bcb5f4bf7265479092c747187e55b9267be03",
                "filename": "src/main/java/io/parallec/core/util/PcFileNetworkIoUtils.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/e8a963a1892b186e4c9c66724ac149b77b4312b8/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Futil%2FPcFileNetworkIoUtils.java",
                "raw_url": "https://github.com/eBay/parallec/raw/e8a963a1892b186e4c9c66724ac149b77b4312b8/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Futil%2FPcFileNetworkIoUtils.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Futil%2FPcFileNetworkIoUtils.java?ref=e8a963a1892b186e4c9c66724ac149b77b4312b8",
                "patch": "@@ -36,7 +36,7 @@\n import com.google.common.base.Charsets;\n import com.google.common.io.Files;\n \n-// TODO: Auto-generated Javadoc\n+\n /**\n  * The Class PcFileNetworkIoUtils.\n  */"
            },
            {
                "sha": "0f6e4f6e4c7eacb62f83138774c7cc997168d48e",
                "filename": "src/main/java/io/parallec/core/util/PcHttpUtils.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/e8a963a1892b186e4c9c66724ac149b77b4312b8/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Futil%2FPcHttpUtils.java",
                "raw_url": "https://github.com/eBay/parallec/raw/e8a963a1892b186e4c9c66724ac149b77b4312b8/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Futil%2FPcHttpUtils.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Futil%2FPcHttpUtils.java?ref=e8a963a1892b186e4c9c66724ac149b77b4312b8",
                "patch": "@@ -22,7 +22,7 @@\n \n import com.ning.http.client.AsyncHttpClient.BoundRequestBuilder;\n \n-// TODO: Auto-generated Javadoc\n+\n /**\n  * Adding http header logic TODO; should finally be data driven and specific for\n  * each command. Now it is defined here and user can easily change."
            },
            {
                "sha": "92efa2142875b26ffb0cc0eeb5c209e6adbfe076",
                "filename": "src/main/java/io/parallec/core/util/PcTargetHostsUtils.java",
                "status": "modified",
                "additions": 1,
                "deletions": 1,
                "changes": 2,
                "blob_url": "https://github.com/eBay/parallec/blob/e8a963a1892b186e4c9c66724ac149b77b4312b8/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Futil%2FPcTargetHostsUtils.java",
                "raw_url": "https://github.com/eBay/parallec/raw/e8a963a1892b186e4c9c66724ac149b77b4312b8/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Futil%2FPcTargetHostsUtils.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Futil%2FPcTargetHostsUtils.java?ref=e8a963a1892b186e4c9c66724ac149b77b4312b8",
                "patch": "@@ -20,7 +20,7 @@\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n-// TODO: Auto-generated Javadoc\n+\n /**\n  * The Class PcTargetHostsUtils.\n  *"
            },
            {
                "sha": "2c6a88a16a75eb57c685566c3ec474d00e97fb5a",
                "filename": "src/test/java/io/parallec/core/main/ssh/SshProviderMockTest.java",
                "status": "modified",
                "additions": 3,
                "deletions": 3,
                "changes": 6,
                "blob_url": "https://github.com/eBay/parallec/blob/e8a963a1892b186e4c9c66724ac149b77b4312b8/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fssh%2FSshProviderMockTest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/e8a963a1892b186e4c9c66724ac149b77b4312b8/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fssh%2FSshProviderMockTest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fssh%2FSshProviderMockTest.java?ref=e8a963a1892b186e4c9c66724ac149b77b4312b8",
                "patch": "@@ -11,8 +11,8 @@\n import java.io.ByteArrayInputStream;\n import java.io.IOException;\n import java.io.InputStream;\n-import java.nio.charset.StandardCharsets;\n \n+import org.apache.commons.io.Charsets;\n import org.junit.BeforeClass;\n import org.junit.Test;\n \n@@ -131,7 +131,7 @@ public void testExecuteAndGenResponse() {\n \n         String stdoutStr = \"Mon Sep 14 21:52:27 UTC 2015\";\n         InputStream in = new ByteArrayInputStream(\n-                stdoutStr.getBytes(StandardCharsets.UTF_8));\n+                stdoutStr.getBytes(Charsets.UTF_8));\n \n         try {\n             when(channel.getInputStream()).thenReturn(in);\n@@ -158,7 +158,7 @@ public void executeAndGenResponseThrowsExceptionTest() {\n         sshProvider = new SshProvider(sshMetaKey, hostIpSample);\n         String stdoutStr = \"Mon Sep 14 21:52:27 UTC 2015\";\n         InputStream in = new ByteArrayInputStream(\n-                stdoutStr.getBytes(StandardCharsets.UTF_8));\n+                stdoutStr.getBytes(Charsets.UTF_8));\n \n         try {\n             when(channel.getInputStream()).thenReturn(in);"
            },
            {
                "sha": "709cdd88189b729e3882c2f30c6638add7278fa3",
                "filename": "src/test/java/io/parallec/core/main/tcp/sampleserver/TcpEchoServer.java",
                "status": "modified",
                "additions": 4,
                "deletions": 2,
                "changes": 6,
                "blob_url": "https://github.com/eBay/parallec/blob/e8a963a1892b186e4c9c66724ac149b77b4312b8/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Ftcp%2Fsampleserver%2FTcpEchoServer.java",
                "raw_url": "https://github.com/eBay/parallec/raw/e8a963a1892b186e4c9c66724ac149b77b4312b8/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Ftcp%2Fsampleserver%2FTcpEchoServer.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Ftcp%2Fsampleserver%2FTcpEchoServer.java?ref=e8a963a1892b186e4c9c66724ac149b77b4312b8",
                "patch": "@@ -136,8 +136,10 @@ public void serve() throws IOException {\n                 }\n \n             }\n-\n-        } catch (IOException | InterruptedException e) {\n+        } catch (IOException  e) {\n+            logger.error(\"Exception in echo server. \"\n+                    + \"\\nExpected when shutdown. {}\", e.getLocalizedMessage());\n+        } catch ( InterruptedException e) {\n             logger.error(\"Exception in echo server. \"\n                     + \"\\nExpected when shutdown. {}\", e.getLocalizedMessage());\n         } finally{"
            }
        ]
    },
    {
        "sha": "6b25eaca78438031f318f6ea117e42d3c4375ebb",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6NmIyNWVhY2E3ODQzODAzMWYzMThmNmVhMTE3ZTQyZDNjNDM3NWViYg==",
        "commit": {
            "author": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2015-10-28T07:31:36Z"
            },
            "committer": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2015-10-28T07:31:36Z"
            },
            "message": "remove local configs",
            "tree": {
                "sha": "58de2f0a7ee85b146785230378e8ed3084106b7d",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/58de2f0a7ee85b146785230378e8ed3084106b7d"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/6b25eaca78438031f318f6ea117e42d3c4375ebb",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/6b25eaca78438031f318f6ea117e42d3c4375ebb",
        "html_url": "https://github.com/eBay/parallec/commit/6b25eaca78438031f318f6ea117e42d3c4375ebb",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/6b25eaca78438031f318f6ea117e42d3c4375ebb/comments",
        "author": null,
        "committer": null,
        "parents": [
            {
                "sha": "aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "url": "https://api.github.com/repos/eBay/parallec/commits/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "html_url": "https://github.com/eBay/parallec/commit/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6"
            }
        ],
        "stats": {
            "total": 72,
            "additions": 4,
            "deletions": 68
        },
        "files": [
            {
                "sha": "698778fef3378d2b00e5d4e260491f33b776287d",
                "filename": ".classpath",
                "status": "removed",
                "additions": 0,
                "deletions": 31,
                "changes": 31,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/.classpath",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/.classpath",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/.classpath?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -1,31 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<classpath>\n-\t<classpathentry kind=\"src\" output=\"target/classes\" path=\"src/main/java\">\n-\t\t<attributes>\n-\t\t\t<attribute name=\"optional\" value=\"true\"/>\n-\t\t\t<attribute name=\"maven.pomderived\" value=\"true\"/>\n-\t\t</attributes>\n-\t</classpathentry>\n-\t<classpathentry excluding=\"**\" kind=\"src\" output=\"target/classes\" path=\"src/main/resources\">\n-\t\t<attributes>\n-\t\t\t<attribute name=\"maven.pomderived\" value=\"true\"/>\n-\t\t</attributes>\n-\t</classpathentry>\n-\t<classpathentry kind=\"src\" output=\"target/test-classes\" path=\"src/test/java\">\n-\t\t<attributes>\n-\t\t\t<attribute name=\"optional\" value=\"true\"/>\n-\t\t\t<attribute name=\"maven.pomderived\" value=\"true\"/>\n-\t\t</attributes>\n-\t</classpathentry>\n-\t<classpathentry kind=\"con\" path=\"org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7\">\n-\t\t<attributes>\n-\t\t\t<attribute name=\"maven.pomderived\" value=\"true\"/>\n-\t\t</attributes>\n-\t</classpathentry>\n-\t<classpathentry kind=\"con\" path=\"org.eclipse.m2e.MAVEN2_CLASSPATH_CONTAINER\">\n-\t\t<attributes>\n-\t\t\t<attribute name=\"maven.pomderived\" value=\"true\"/>\n-\t\t</attributes>\n-\t</classpathentry>\n-\t<classpathentry kind=\"output\" path=\"target/classes\"/>\n-</classpath>"
            },
            {
                "sha": "250cc69e79418a9b9d1f9b43d133b3ab9ece870c",
                "filename": ".gitignore",
                "status": "modified",
                "additions": 4,
                "deletions": 0,
                "changes": 4,
                "blob_url": "https://github.com/eBay/parallec/blob/6b25eaca78438031f318f6ea117e42d3c4375ebb/.gitignore",
                "raw_url": "https://github.com/eBay/parallec/raw/6b25eaca78438031f318f6ea117e42d3c4375ebb/.gitignore",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/.gitignore?ref=6b25eaca78438031f318f6ea117e42d3c4375ebb",
                "patch": "@@ -36,3 +36,7 @@ userdata/tasklogs/*\n \n #mkdown\n .*.md.html\n+\n+/.settings/\n+.classpath\n+.project"
            },
            {
                "sha": "c74d7d91f8800c0a8e22d18af4d23609d0cbd6ba",
                "filename": ".project",
                "status": "removed",
                "additions": 0,
                "deletions": 23,
                "changes": 23,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/.project",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/.project",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/.project?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -1,23 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<projectDescription>\n-\t<name>parallec-core</name>\n-\t<comment></comment>\n-\t<projects>\n-\t</projects>\n-\t<buildSpec>\n-\t\t<buildCommand>\n-\t\t\t<name>org.eclipse.jdt.core.javabuilder</name>\n-\t\t\t<arguments>\n-\t\t\t</arguments>\n-\t\t</buildCommand>\n-\t\t<buildCommand>\n-\t\t\t<name>org.eclipse.m2e.core.maven2Builder</name>\n-\t\t\t<arguments>\n-\t\t\t</arguments>\n-\t\t</buildCommand>\n-\t</buildSpec>\n-\t<natures>\n-\t\t<nature>org.eclipse.jdt.core.javanature</nature>\n-\t\t<nature>org.eclipse.m2e.core.maven2Nature</nature>\n-\t</natures>\n-</projectDescription>"
            },
            {
                "sha": "839d647eef851c560a9854ff81d9caa1df594ced",
                "filename": ".settings/org.eclipse.core.resources.prefs",
                "status": "removed",
                "additions": 0,
                "deletions": 5,
                "changes": 5,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/.settings%2Forg.eclipse.core.resources.prefs",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/.settings%2Forg.eclipse.core.resources.prefs",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/.settings%2Forg.eclipse.core.resources.prefs?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -1,5 +0,0 @@\n-eclipse.preferences.version=1\n-encoding//src/main/java=UTF-8\n-encoding//src/main/resources=UTF-8\n-encoding//src/test/java=UTF-8\n-encoding/<project>=UTF-8"
            },
            {
                "sha": "ec4300d5d0999d569b87f3935944bcfc5197f877",
                "filename": ".settings/org.eclipse.jdt.core.prefs",
                "status": "removed",
                "additions": 0,
                "deletions": 5,
                "changes": 5,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/.settings%2Forg.eclipse.jdt.core.prefs",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/.settings%2Forg.eclipse.jdt.core.prefs",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/.settings%2Forg.eclipse.jdt.core.prefs?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -1,5 +0,0 @@\n-eclipse.preferences.version=1\n-org.eclipse.jdt.core.compiler.codegen.targetPlatform=1.7\n-org.eclipse.jdt.core.compiler.compliance=1.7\n-org.eclipse.jdt.core.compiler.problem.forbiddenReference=warning\n-org.eclipse.jdt.core.compiler.source=1.7"
            },
            {
                "sha": "f897a7f1cb2389f85fe6381425d29f0a9866fb65",
                "filename": ".settings/org.eclipse.m2e.core.prefs",
                "status": "removed",
                "additions": 0,
                "deletions": 4,
                "changes": 4,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/.settings%2Forg.eclipse.m2e.core.prefs",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/.settings%2Forg.eclipse.m2e.core.prefs",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/.settings%2Forg.eclipse.m2e.core.prefs?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -1,4 +0,0 @@\n-activeProfiles=\n-eclipse.preferences.version=1\n-resolveWorkspaceProjects=true\n-version=1"
            }
        ]
    },
    {
        "sha": "aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6YWVlZmEzZGY3MTNmNGQ0M2I4ZWFjNzhkY2Y3YTkzNjAwYTgwZmZkNg==",
        "commit": {
            "author": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2015-10-28T07:29:37Z"
            },
            "committer": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2015-10-28T07:29:37Z"
            },
            "message": "prepare content; wait for maven central access",
            "tree": {
                "sha": "badfadd6430ae6423cc02d3ad091411de851fcf7",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/badfadd6430ae6423cc02d3ad091411de851fcf7"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
        "html_url": "https://github.com/eBay/parallec/commit/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/comments",
        "author": null,
        "committer": null,
        "parents": [
            {
                "sha": "9dd7894ca0297aba1dacd5cfe41a00ce877acbdf",
                "url": "https://api.github.com/repos/eBay/parallec/commits/9dd7894ca0297aba1dacd5cfe41a00ce877acbdf",
                "html_url": "https://github.com/eBay/parallec/commit/9dd7894ca0297aba1dacd5cfe41a00ce877acbdf"
            }
        ],
        "stats": {
            "total": 25256,
            "additions": 25255,
            "deletions": 1
        },
        "files": [
            {
                "sha": "698778fef3378d2b00e5d4e260491f33b776287d",
                "filename": ".classpath",
                "status": "added",
                "additions": 31,
                "deletions": 0,
                "changes": 31,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/.classpath",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/.classpath",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/.classpath?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,31 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<classpath>\n+\t<classpathentry kind=\"src\" output=\"target/classes\" path=\"src/main/java\">\n+\t\t<attributes>\n+\t\t\t<attribute name=\"optional\" value=\"true\"/>\n+\t\t\t<attribute name=\"maven.pomderived\" value=\"true\"/>\n+\t\t</attributes>\n+\t</classpathentry>\n+\t<classpathentry excluding=\"**\" kind=\"src\" output=\"target/classes\" path=\"src/main/resources\">\n+\t\t<attributes>\n+\t\t\t<attribute name=\"maven.pomderived\" value=\"true\"/>\n+\t\t</attributes>\n+\t</classpathentry>\n+\t<classpathentry kind=\"src\" output=\"target/test-classes\" path=\"src/test/java\">\n+\t\t<attributes>\n+\t\t\t<attribute name=\"optional\" value=\"true\"/>\n+\t\t\t<attribute name=\"maven.pomderived\" value=\"true\"/>\n+\t\t</attributes>\n+\t</classpathentry>\n+\t<classpathentry kind=\"con\" path=\"org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7\">\n+\t\t<attributes>\n+\t\t\t<attribute name=\"maven.pomderived\" value=\"true\"/>\n+\t\t</attributes>\n+\t</classpathentry>\n+\t<classpathentry kind=\"con\" path=\"org.eclipse.m2e.MAVEN2_CLASSPATH_CONTAINER\">\n+\t\t<attributes>\n+\t\t\t<attribute name=\"maven.pomderived\" value=\"true\"/>\n+\t\t</attributes>\n+\t</classpathentry>\n+\t<classpathentry kind=\"output\" path=\"target/classes\"/>\n+</classpath>"
            },
            {
                "sha": "81dece8544f1c4f15f67b79d9e67988ffe31c21b",
                "filename": ".gitignore",
                "status": "added",
                "additions": 38,
                "deletions": 0,
                "changes": 38,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/.gitignore",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/.gitignore",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/.gitignore?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,38 @@\n+*.class\n+\n+# Mobile Tools for Java (J2ME)\n+.mtj.tmp/\n+\n+# Package Files #\n+*.jar\n+*.war\n+*.ear\n+\n+application.log*\n+\n+# virtual machine crash logs, see http://www.java.com/en/download/help/error_hotspot.xml\n+hs_err_pid*\n+/target/\n+\n+.DS_Store\n+\n+#elastic data\n+data/\n+\n+#parallec log\n+parallec_logs/*\n+!parallec_logs/keepthisfile\n+\n+#user data\n+userdata/*\n+!userdata/keepthisfile\n+\n+!userdata/tasklogs\n+userdata/tasklogs/*\n+!userdata/tasklogs/keepthisfile\n+!userdata/sample_target*\n+*.jks\n+*.pem\n+\n+#mkdown\n+.*.md.html"
            },
            {
                "sha": "c74d7d91f8800c0a8e22d18af4d23609d0cbd6ba",
                "filename": ".project",
                "status": "added",
                "additions": 23,
                "deletions": 0,
                "changes": 23,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/.project",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/.project",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/.project?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,23 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<projectDescription>\n+\t<name>parallec-core</name>\n+\t<comment></comment>\n+\t<projects>\n+\t</projects>\n+\t<buildSpec>\n+\t\t<buildCommand>\n+\t\t\t<name>org.eclipse.jdt.core.javabuilder</name>\n+\t\t\t<arguments>\n+\t\t\t</arguments>\n+\t\t</buildCommand>\n+\t\t<buildCommand>\n+\t\t\t<name>org.eclipse.m2e.core.maven2Builder</name>\n+\t\t\t<arguments>\n+\t\t\t</arguments>\n+\t\t</buildCommand>\n+\t</buildSpec>\n+\t<natures>\n+\t\t<nature>org.eclipse.jdt.core.javanature</nature>\n+\t\t<nature>org.eclipse.m2e.core.maven2Nature</nature>\n+\t</natures>\n+</projectDescription>"
            },
            {
                "sha": "839d647eef851c560a9854ff81d9caa1df594ced",
                "filename": ".settings/org.eclipse.core.resources.prefs",
                "status": "added",
                "additions": 5,
                "deletions": 0,
                "changes": 5,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/.settings%2Forg.eclipse.core.resources.prefs",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/.settings%2Forg.eclipse.core.resources.prefs",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/.settings%2Forg.eclipse.core.resources.prefs?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,5 @@\n+eclipse.preferences.version=1\n+encoding//src/main/java=UTF-8\n+encoding//src/main/resources=UTF-8\n+encoding//src/test/java=UTF-8\n+encoding/<project>=UTF-8"
            },
            {
                "sha": "ec4300d5d0999d569b87f3935944bcfc5197f877",
                "filename": ".settings/org.eclipse.jdt.core.prefs",
                "status": "added",
                "additions": 5,
                "deletions": 0,
                "changes": 5,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/.settings%2Forg.eclipse.jdt.core.prefs",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/.settings%2Forg.eclipse.jdt.core.prefs",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/.settings%2Forg.eclipse.jdt.core.prefs?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,5 @@\n+eclipse.preferences.version=1\n+org.eclipse.jdt.core.compiler.codegen.targetPlatform=1.7\n+org.eclipse.jdt.core.compiler.compliance=1.7\n+org.eclipse.jdt.core.compiler.problem.forbiddenReference=warning\n+org.eclipse.jdt.core.compiler.source=1.7"
            },
            {
                "sha": "f897a7f1cb2389f85fe6381425d29f0a9866fb65",
                "filename": ".settings/org.eclipse.m2e.core.prefs",
                "status": "added",
                "additions": 4,
                "deletions": 0,
                "changes": 4,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/.settings%2Forg.eclipse.m2e.core.prefs",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/.settings%2Forg.eclipse.m2e.core.prefs",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/.settings%2Forg.eclipse.m2e.core.prefs?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,4 @@\n+activeProfiles=\n+eclipse.preferences.version=1\n+resolveWorkspaceProjects=true\n+version=1"
            },
            {
                "sha": "af22c83cc42fa72f25697e2017b0d629c22dd2a2",
                "filename": "AUTHORS.txt",
                "status": "added",
                "additions": 11,
                "deletions": 0,
                "changes": 11,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/AUTHORS.txt",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/AUTHORS.txt",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/AUTHORS.txt?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,11 @@\n+Parallec: Parallel Async HTTP/SSH/TCP/PING Client Library\n+\n+URL:   https://github.com/eBay/parallec\n+\n+Core developers (in order of appearance):\n+\n+- Yuanteng Jeff Pei (original author) <ypei@ebay.com>\n+- Teng Song <tesong@ebay.com>\n+\n+\n+Contributors:"
            },
            {
                "sha": "f0a8044cca67cc751c8473d632cb90f90a160f9d",
                "filename": "CHANGELOG.md",
                "status": "added",
                "additions": 110,
                "deletions": 0,
                "changes": 110,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/CHANGELOG.md",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/CHANGELOG.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/CHANGELOG.md?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,110 @@\n+Change Log\n+==========\n+\n+\n+\n+## Version 0.8.10\n+\n+_2015-10-27_\n+\n+* Change: refactor and removed command director. Renamed command manager to execution manager. \n+* Change: remove duplicated functions of prepareHttp* in builder and client classes.   Refactor internal type of http method.\n+* Add: ParallelTask add getAggregatedResultHumanStr() to display human readable results.\n+* Change: enforce safeguard of concurrency limit for ssh as 400.\n+\n+## Version 0.8.9\n+\n+_2015-10-25_\n+\n+* Remove: Remove apache http client\n+\n+## Version 0.8.8\n+\n+_2015-10-24_\n+\n+\n+* Change: Refactor validation for httpMeta and move the async http client to httpMeta. Refactor Various package structures. Passed test with 93.6 coverage.\n+\n+\n+## Version 0.8.7\n+\n+_2015-10-20_\n+\n+* Add: Option to execute response handler in either Manager thread (after aggregation) or operation worker thread (before aggregation; in parallel). \n+* Change: Refactor poller information into httpMeta for better composition.\n+\n+\n+## Version 0.8.6\n+\n+_2015-10-15_\n+\n+* Add: Added Parallel Ping feature. able to due 2 types. added retries and unit tests\n+* Add  Added Parallel TCP feature based on netty. able to handle idle connections. Added the unit testing with sample TCP server. \n+* Change: added the log interval to give options to trim logs\n+\n+\n+## Version 0.8.5\n+\n+_2015-10-15_\n+\n+https://plumbr.eu/outofmemoryerror/unable-to-create-new-native-thread\n+* Fix: change from single thread executor to pool executor in SSH/Ping worker to significantly reduce the thread size.\n+* Add: Add scalable PING with InetAddress and process based. \n+* Fix: replace all tab by spaces for consistency.\n+* Fix: Fix when response received in operation worker, timeoutFuture is not canceled. \n+* Change: remove unnecessary response from manager. Remove redundant sent \n+\n+\n+## Version 0.8.4\n+\n+_2015-10-13_\n+\n+* Add: Change cancel ont target hosts from single to a list.\n+* Fix: Fix 3 sonar critical ones.\n+\n+\n+## Version 0.8.3\n+\n+_2015-10-12_\n+\n+* Add: several unit tests case for corner cases.\n+* Add: parallel task api to cancel task on single target. \n+\n+## Version 0.8.2\n+\n+_2015-10-11b_\n+\n+* Add: status code \n+* Change: when not save response: will still save metadata about the task. \n+* Add: map of completeness of each. add function to cancel each worker.\n+* Add: parallel task submit/execution start/end time and duration in seconds:view in logs.\n+* Fix: parallel task cancel in command manager now wait for all op workers to come back. Fix issues when the op sender is not set. Cleaned up 3 duplicated data in response. \n+* Add: response map now properly show canceled single host response status; and the PTask status. \n+\n+## Version 0.8.1\n+\n+_2015-10-11a_\n+\n+ * Add: Add status aggregation\n+ * Add: Add the monitoring on memory/java thread APIs\n+ * Add: Sample 10K, 2K websites to hit tests\n+ * Fix: Fixed the auto save log not working issue\n+ * Fix: Removed the structure of SSH Meta when it is not SSH.\n+ * Enhance: Refined the logic to get error message summary.\n+ * Add: Add Aggregation on return status code with list and count.\n+ * TODO: Added testing on HTTP header replacement (50min)\n+ * Understand: socket connection exception. Change to google DNS will resolve the issue.\n+ \n+\n+## Version 0.8.0\n+\n+_2015-10-04_\n+\n+ * Add: Add log ability and pretty print log\n+ * Add: Now config can be changed on each task, rather than the global level.\n+ * Add: Option to save the log, save the response into results, enable scheduler.\n+ * Fix: change the visibility of the config/parallel task.\n+ * Fix: reduced solar critical from 9 to 2.\n+ * Fix: change HTTP Store to be singleton from static functions\n+ * Test: Test passed JDK 1.7 and JDK 1.8.0_60\n+ * TODO:  TODO Testing PC Multiple instance tests.\n\\ No newline at end of file"
            },
            {
                "sha": "7abde8dc0315048baacf09fd406ee8c75d9956df",
                "filename": "README.md",
                "status": "modified",
                "additions": 3,
                "deletions": 1,
                "changes": 4,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/README.md",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/README.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/README.md?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -1 +1,3 @@\n-Parallec\n+##Parallec\n+\n+Scheduled to release within a week: waiting for Maven Central permission.\n\\ No newline at end of file"
            },
            {
                "sha": "5ab82431ab8054044703039b7c492c2fe732237a",
                "filename": "pom.xml",
                "status": "added",
                "additions": 227,
                "deletions": 0,
                "changes": 227,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/pom.xml",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/pom.xml",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/pom.xml?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,227 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+\txsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n+\t<modelVersion>4.0.0</modelVersion>\n+\t<groupId>com.ebay.parallec</groupId>\n+\t<artifactId>parallec-core</artifactId>\n+\t<version>0.8.11-beta</version>\n+\t<packaging>jar</packaging>\n+\t<name>com.ebay.parallec:parallec-core</name>\n+\t<url>https://github.com/eBay/parallec</url>\n+\t<description>\n+        Parallec: Parallel Async HTTP/SSH/PING/TCP Client library.\n+        More at https://github.com/eBay/parallec \n+    </description>\n+\t<licenses>\n+\t\t<license>\n+\t\t\t<name>Apache License 2.0</name>\n+\t\t\t<url>http://www.apache.org/licenses/LICENSE-2.0.html</url>\n+\t\t\t<distribution>repo</distribution>\n+\t\t</license>\n+\t</licenses>\n+\t<scm>\n+\t\t<connection>scm:git:git@github.com:eBay/parallec.git</connection>\n+\t\t<developerConnection>scm:git:git@github.com:eBay/parallec.git</developerConnection>\n+\t\t<url>https://github.com/eBay/parallec</url>\n+\t</scm>\n+\n+\t<developers>\n+\t\t<developer>\n+\t\t\t<name>Yuanteng (Jeff) Pei</name>\n+\t\t\t<email>ypei@ebay.com</email>\n+\t\t\t<organization>eBay</organization>\n+\t\t\t<organizationUrl>www.ebay.com</organizationUrl>\n+\t\t</developer>\n+\t\t<developer>\n+\t\t\t<name>Teng Song</name>\n+\t\t\t<email>tesong@ebay.com</email>\n+\t\t\t<organization>eBay</organization>\n+\t\t\t<organizationUrl>www.ebay.com</organizationUrl>\n+\t\t</developer>\n+\t</developers>\n+\n+\n+\n+\t<inceptionYear>2015</inceptionYear>\n+\n+\n+\n+\n+\t<properties>\n+\t\t<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n+\t\t<junit.version>4.11</junit.version>\n+\t\t<slf4j.version>1.7.12</slf4j.version>\n+\t\t<logback-core.version>1.1.3</logback-core.version>\n+\n+\t\t<guava.version>18.0</guava.version>\n+\t\t<commons-lang3.version>3.0</commons-lang3.version>\n+\t\t<commons-codec.version>1.10</commons-codec.version>\n+\t\t<commons-io.version>2.3</commons-io.version>\n+\n+\t\t<async-http-client.version>1.6.5</async-http-client.version>\n+\t\t<akka-actor_2.10.version>2.3.3</akka-actor_2.10.version>\n+\t\t<akka-cluster_2.10.version>2.3.3</akka-cluster_2.10.version>\n+\n+\t\t<gson.version>2.3.1</gson.version>\n+\t\t<jackson-core.version>2.6.0</jackson-core.version>\n+\t\t<jackson-databind.version>2.1.3</jackson-databind.version>\n+\t\t<jackson-annotations.version>2.6.0</jackson-annotations.version>\n+\t\t<jettison.version>1.3.7</jettison.version>\n+\n+\t\t<httpclient.version>4.5</httpclient.version>\n+\t\t<jsch.version>0.1.53</jsch.version>\n+\t\t<mockito.version>1.10.19</mockito.version>\n+\t\t<nanohttpd.version>2.1.1</nanohttpd.version>\n+\t\t<openpojo.version>0.8.0</openpojo.version>\n+\t\t<jsonpath.version>2.0.0</jsonpath.version>\n+\t\t<spring-beans.version>4.2.1.RELEASE</spring-beans.version>\n+\n+\t</properties>\n+\n+\t<dependencies>\n+\n+\t\t<dependency>\n+\t\t\t<groupId>org.springframework</groupId>\n+\t\t\t<artifactId>spring-beans</artifactId>\n+\t\t\t<version>${spring-beans.version}</version>\n+\t\t</dependency>\n+\n+\t\t<dependency>\n+\t\t\t<groupId>com.nanohttpd</groupId>\n+\t\t\t<artifactId>nanohttpd</artifactId>\n+\t\t\t<version>${nanohttpd.version}</version>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>org.mockito</groupId>\n+\t\t\t<artifactId>mockito-core</artifactId>\n+\t\t\t<version>${mockito.version}</version>\n+\t\t</dependency>\n+\n+\t\t<dependency>\n+\t\t\t<groupId>com.google.guava</groupId>\n+\t\t\t<artifactId>guava</artifactId>\n+\t\t\t<version>${guava.version}</version>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>org.slf4j</groupId>\n+\t\t\t<artifactId>slf4j-api</artifactId>\n+\t\t\t<version>${slf4j.version}</version>\n+\t\t</dependency>\n+\n+\t\t<dependency>\n+\t\t\t<groupId>ch.qos.logback</groupId>\n+\t\t\t<artifactId>logback-classic</artifactId>\n+\t\t\t<version>${logback-core.version}</version>\n+\t\t</dependency>\n+\n+\t\t<dependency>\n+\t\t\t<groupId>junit</groupId>\n+\t\t\t<artifactId>junit</artifactId>\n+\t\t\t<version>${junit.version}</version>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>org.apache.commons</groupId>\n+\t\t\t<artifactId>commons-lang3</artifactId>\n+\t\t\t<version>${commons-lang3.version}</version>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>com.ning</groupId>\n+\t\t\t<artifactId>async-http-client</artifactId>\n+\t\t\t<version>${async-http-client.version}</version>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>com.typesafe.akka</groupId>\n+\t\t\t<artifactId>akka-actor_2.10</artifactId>\n+\t\t\t<version>${akka-actor_2.10.version}</version>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>com.typesafe.akka</groupId>\n+\t\t\t<artifactId>akka-cluster_2.10</artifactId>\n+\t\t\t<version>${akka-cluster_2.10.version}</version>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>commons-codec</groupId>\n+\t\t\t<artifactId>commons-codec</artifactId>\n+\t\t\t<version>${commons-codec.version}</version>\n+\t\t</dependency>\n+\n+\t\t<dependency>\n+\t\t\t<groupId>commons-io</groupId>\n+\t\t\t<artifactId>commons-io</artifactId>\n+\t\t\t<version>${commons-io.version}</version>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>com.google.code.gson</groupId>\n+\t\t\t<artifactId>gson</artifactId>\n+\t\t\t<version>${gson.version}</version>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>com.fasterxml.jackson.core</groupId>\n+\t\t\t<artifactId>jackson-core</artifactId>\n+\t\t\t<version>${jackson-core.version}</version>\n+\t\t</dependency>\n+\n+\t\t<dependency>\n+\t\t\t<groupId>com.fasterxml.jackson.core</groupId>\n+\t\t\t<artifactId>jackson-databind</artifactId>\n+\t\t\t<version>${jackson-databind.version}</version>\n+\t\t</dependency>\n+\n+\t\t<dependency>\n+\t\t\t<groupId>com.fasterxml.jackson.core</groupId>\n+\t\t\t<artifactId>jackson-annotations</artifactId>\n+\t\t\t<version>${jackson-annotations.version}</version>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>org.codehaus.jettison</groupId>\n+\t\t\t<artifactId>jettison</artifactId>\n+\t\t\t<version>${jettison.version}</version>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>org.apache.httpcomponents</groupId>\n+\t\t\t<artifactId>httpclient</artifactId>\n+\t\t\t<version>${httpclient.version}</version>\n+\t\t</dependency>\n+\n+\t\t<dependency>\n+\t\t\t<groupId>com.jcraft</groupId>\n+\t\t\t<artifactId>jsch</artifactId>\n+\t\t\t<version>${jsch.version}</version>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>com.openpojo</groupId>\n+\t\t\t<artifactId>openpojo</artifactId>\n+\t\t\t<version>${openpojo.version}</version>\n+\t\t</dependency>\n+\n+\t\t<dependency>\n+\t\t\t<groupId>com.jayway.jsonpath</groupId>\n+\t\t\t<artifactId>json-path</artifactId>\n+\t\t\t<version>${jsonpath.version}</version>\n+\t\t</dependency>\n+\n+\t</dependencies>\n+\n+\n+\n+\n+\n+\t<build>\n+\t\t<pluginManagement>\n+\t\t\t<plugins>\n+\t\t\t\t<plugin>\n+\t\t\t\t\t<groupId>org.apache.maven.plugins</groupId>\n+\t\t\t\t\t<artifactId>maven-compiler-plugin</artifactId>\n+\t\t\t\t\t<configuration>\n+\t\t\t\t\t\t<source>1.7</source>\n+\t\t\t\t\t\t<target>1.7</target>\n+\t\t\t\t\t</configuration>\n+\t\t\t\t</plugin>\n+\t\t\t</plugins>\n+\t\t</pluginManagement>\n+\t</build>\n+\n+\n+\n+</project>\n+"
            },
            {
                "sha": "3dea119e9ca291be0069f93482b33f3f54ea975b",
                "filename": "src/main/java/io/parallec/core/FilterRegex.java",
                "status": "added",
                "additions": 115,
                "deletions": 0,
                "changes": 115,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FFilterRegex.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FFilterRegex.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FFilterRegex.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,115 @@\n+/*  \n+Copyright [2013-2015] eBay Software Foundation\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+    http://www.apache.org/licenses/LICENSE-2.0\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+ */\n+package io.parallec.core;\n+\n+import io.parallec.core.util.PcConstants;\n+import io.parallec.core.util.PcDateUtils;\n+\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * The Class FilterRegex.\n+ * @author Yuanteng Jeff Pei\n+ */\n+public class FilterRegex {\n+\n+    /** The logger. */\n+    private static Logger logger = LoggerFactory.getLogger(FilterRegex.class);\n+\n+    /** The regex. */\n+    private String regex;\n+\n+    /**\n+     * Instantiates a new filter regex.\n+     */\n+    public FilterRegex() {\n+    };\n+\n+    /**\n+     * Instantiates a new filter regex.\n+     *\n+     * @param regex1\n+     *            the regex1\n+     */\n+    public FilterRegex(String regex1) {\n+        setRegex(regex1);\n+    }\n+\n+    public String filter(String input) {\n+        return stringMatcherByPattern(input, regex);\n+    }\n+\n+    /**\n+     * this remove the linebreak.\n+     *\n+     * @param input\n+     *            the input\n+     * @param patternStr\n+     *            the pattern str\n+     * @return the string\n+     */\n+    public static String stringMatcherByPattern(String input, String patternStr) {\n+\n+        String output = PcConstants.SYSTEM_FAIL_MATCH_REGEX;\n+\n+        // 20140105: fix the NPE issue\n+        if (patternStr == null) {\n+            logger.error(\"patternStr is NULL! (Expected when the aggregation rule is not defined at \"\n+                    + PcDateUtils.getNowDateTimeStrStandard());\n+            return output;\n+        }\n+\n+        if (input == null) {\n+            logger.error(\"input (Expected when the response is null and now try to match on response) is NULL in stringMatcherByPattern() at \"\n+                    + PcDateUtils.getNowDateTimeStrStandard());\n+            return output;\n+        } else {\n+            input = input.replace(\"\\n\", \"\").replace(\"\\r\", \"\");\n+        }\n+\n+        logger.debug(\"input: \" + input);\n+        logger.debug(\"patternStr: \" + patternStr);\n+\n+        Pattern patternMetric = Pattern.compile(patternStr, Pattern.MULTILINE);\n+\n+        final Matcher matcher = patternMetric.matcher(input);\n+        if (matcher.matches()) {\n+            output = matcher.group(1);\n+        }\n+        return output;\n+    }\n+\n+    /**\n+     * Gets the regex.\n+     *\n+     * @return the regex\n+     */\n+    public String getRegex() {\n+        return regex;\n+    }\n+\n+    /**\n+     * Sets the regex.\n+     *\n+     * @param regex\n+     *            the new regex\n+     */\n+    public void setRegex(String regex) {\n+        this.regex = regex;\n+    }\n+\n+}"
            },
            {
                "sha": "4f44790fa09be7fbe18140e649a889aaa77f10ec",
                "filename": "src/main/java/io/parallec/core/HostsSourceType.java",
                "status": "added",
                "additions": 12,
                "deletions": 0,
                "changes": 12,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FHostsSourceType.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FHostsSourceType.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FHostsSourceType.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,12 @@\n+package io.parallec.core;\n+\n+/**\n+ * The Enum HostsSourceType.\n+ */\n+public enum HostsSourceType {\n+\n+    /** The local file. */\n+    LOCAL_FILE,\n+    /** The url. */\n+    URL\n+}\n\\ No newline at end of file"
            },
            {
                "sha": "d479a227b3b3403a1ebb41af3576016caff19ca4",
                "filename": "src/main/java/io/parallec/core/ParallecHeader.java",
                "status": "added",
                "additions": 83,
                "deletions": 0,
                "changes": 83,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FParallecHeader.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FParallecHeader.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FParallecHeader.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,83 @@\n+/*  \n+Copyright [2013-2015] eBay Software Foundation\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+    http://www.apache.org/licenses/LICENSE-2.0\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+ */\n+package io.parallec.core;\n+\n+import io.parallec.core.util.PcStringUtils;\n+\n+import java.util.LinkedHashMap;\n+import java.util.Map;\n+\n+// TODO: Auto-generated Javadoc\n+/**\n+ * easy to use builder to add header key/value pair then get the results\n+ * directly for use.\n+ *\n+ * @author Yuanteng Jeff Pei\n+ */\n+public class ParallecHeader {\n+\n+    /** The header map. */\n+    // will never be null\n+    private final Map<String, String> headerMap = new LinkedHashMap<String, String>();\n+\n+    /**\n+     * Instantiates a new parallec header.\n+     */\n+    public ParallecHeader() {\n+\n+    }\n+\n+    /**\n+     * Adds the pair.\n+     *\n+     * @param key\n+     *            the key\n+     * @param value\n+     *            the value\n+     * @return the parallec header\n+     */\n+    public ParallecHeader addPair(String key, String value) {\n+        this.headerMap.put(key, value);\n+        return this;\n+    }\n+\n+    /**\n+     * Gets the header map.\n+     *\n+     * @return the header map\n+     */\n+    public Map<String, String> getHeaderMap() {\n+        return headerMap;\n+    }\n+\n+    /**\n+     * Gets the header str.\n+     *\n+     * @return the header str\n+     */\n+    public String getHeaderStr() {\n+        return PcStringUtils.strMapToStr(headerMap);\n+    }\n+\n+    /*\n+     * (non-Javadoc)\n+     * \n+     * @see java.lang.Object#toString()\n+     */\n+    @Override\n+    public String toString() {\n+        return \"ParallecHeader [headerMap=\"\n+                + PcStringUtils.strMapToStr(headerMap) + \"]\";\n+    }\n+\n+}"
            },
            {
                "sha": "c8f04b7fa45533d5dc0ce4964ea9cdef0bf1029c",
                "filename": "src/main/java/io/parallec/core/ParallecResponseHandler.java",
                "status": "added",
                "additions": 40,
                "deletions": 0,
                "changes": 40,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FParallecResponseHandler.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FParallecResponseHandler.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FParallecResponseHandler.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,40 @@\n+/*  \n+Copyright [2013-2015] eBay Software Foundation\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+    http://www.apache.org/licenses/LICENSE-2.0\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+ */\n+package io.parallec.core;\n+\n+import java.util.Map;\n+\n+// TODO: Auto-generated Javadoc\n+/**\n+ * The Interface ParallecResponseHandler.\n+ * \n+ * Consider make it serializable if we need to pass this for akka clustering.\n+ */\n+public interface ParallecResponseHandler {\n+\n+    /**\n+     * When a response coming back or a timeout received at the Command Manager,\n+     * apply this response handler.\n+     * \n+     * this gap includes the request content inside\n+     *\n+     * @param res\n+     *            the res\n+     * @param responseContext\n+     *            the response context\n+     */\n+\n+    public void onCompleted(ResponseOnSingleTask res,\n+            Map<String, Object> responseContext);\n+\n+}"
            },
            {
                "sha": "017a9b113dd41f9edcce1920befac20fc4d8daa9",
                "filename": "src/main/java/io/parallec/core/ParallelClient.java",
                "status": "added",
                "additions": 404,
                "deletions": 0,
                "changes": 404,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FParallelClient.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FParallelClient.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FParallelClient.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,404 @@\n+/*  \n+Copyright [2013-2015] eBay Software Foundation\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+    http://www.apache.org/licenses/LICENSE-2.0\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+ */\n+package io.parallec.core;\n+\n+import io.parallec.core.actor.ActorConfig;\n+import io.parallec.core.monitor.MonitorProvider;\n+import io.parallec.core.resources.HttpClientStore;\n+import io.parallec.core.resources.HttpClientType;\n+import io.parallec.core.resources.HttpMethod;\n+import io.parallec.core.resources.TcpSshPingResourceStore;\n+import io.parallec.core.task.ParallelTaskManager;\n+\n+import java.util.concurrent.atomic.AtomicBoolean;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import com.ning.http.client.AsyncHttpClient;\n+\n+\n+/**\n+ * \n+ * This is the starting point of starting a parallel client, which create a\n+ * {@link ParallelTaskBuilder} after a prepareGet functions. The Parallel\n+ * Task builder is to build a parallel task. \n+ * \n+ * \n+ * \n+ * This is more a wrapper class and does not hold object specific resources. You\n+ * may create a single or multiple instance.\n+ * \n+ * Only call {@link ParallelClient#releaseExternalResources()} before your app\n+ * shutdown. will mark as closed after it is closed\n+ * {@link ParallelClient#isClosed}\n+ * \n+ * Will auto reinitialize if is closed but will be executed again.\n+ * \n+ * <h3 id=\"maven-import\">Maven Import</h3>\n+ * \n+ * <pre>\n+ * <code class=\"xml\">    &lt;dependency&gt;\n+ *         &lt;groupId&gt;io.parallec&lt;/groupId&gt;\n+ *         &lt;artifactId&gt;parallec-core&lt;/artifactId&gt;\n+ *         &lt;version&gt;0.9.0&lt;/version&gt;\n+ *     &lt;/dependency&gt;\n+ * </code>\n+ * </pre>\n+ * \n+ * <h3 id=\"maven-import\">Code Example</h3>\n+ * \n+ * <p>\n+ * Here is a complete runnable code.\n+ * </p>\n+ * \n+ * <pre>\n+ * <code class=\"java\">import io.parallec.core.*;\n+ * import java.util.Map;\n+ * \n+ * ParallelClient pc= new ParallelClient();\n+ * pc.prepareGet(&quot;/validateInternals.html&quot;)\n+ *     .setMaxConcurrency(1000)\n+ *     .setTargetHostsFromString(&quot;parallec.github.io www.jeffpei.com www.restcommander.com&quot;)\n+ *     .execute(new ParallecResponseHandler() {\n+ *         \n+ *         public void onCompleted(ResponseOnSingleTask res,\n+ *                 Map&lt;String, Object&gt; responseContext) {\n+ *             String cpu = new FilterRegex(&quot;.*&lt;td&gt;CPU-Usage-Percent&lt;/td&gt;\\\\s*&lt;td&gt;(.*?)&lt;/td&gt;.*&quot;)\n+ *             .filter(res.getResponseContent());\n+ *             System.out.println(&quot;cpu:&quot; + cpu + &quot; host: &quot; + res.getHost() );\n+ *         }\n+ *     });\n+ * pc.releaseExternalResources();\n+ * </code>\n+ * </pre>\n+ * \n+ * @author Yuanteng Jeff Pei\n+ */\n+\n+public class ParallelClient {\n+\n+    /** The logger. must move this logger to the very front. */\n+    private static Logger logger = LoggerFactory\n+            .getLogger(ParallelClient.class);\n+\n+    /** The task manager. */\n+    public ParallelTaskManager taskManager = ParallelTaskManager.getInstance();\n+\n+    /** The http client store. */\n+    public HttpClientStore httpClientStore = HttpClientStore.getInstance();\n+\n+    /** The tcp client store. */\n+    public TcpSshPingResourceStore tcpClientStore = TcpSshPingResourceStore.getInstance();\n+\n+    /** The is closed is marked when all resources are released/not initialized. */\n+    public static AtomicBoolean isClosed = new AtomicBoolean(true);\n+\n+    /**\n+     * Instantiates a new parallel client. call initialize();\n+     */\n+    public ParallelClient() {\n+        initialize();\n+    }\n+\n+    /**\n+     * Initialize. create the httpClientStore, tcpClientStore\n+     */\n+    public void initialize() {\n+        if (isClosed.get()) {\n+            logger.info(\"Initialing Parallel Client Resources: actor system, HttpClientStore, Task Manager ....\");\n+            ActorConfig.createAndGetActorSystem();\n+            httpClientStore.init();\n+            tcpClientStore.init();\n+            ParallelTaskManager.getInstance();\n+            isClosed.set(false);\n+            logger.info(\"Parallel Client Resources has been initialized.\");\n+        } else {\n+            logger.info(\"NO OP. Parallel Client Resources has already been initialized.\");\n+        }\n+    }\n+\n+    /**\n+     * Releases the external resources that this object depends on. You should\n+     * not call this method if you still want to use the external resources\n+     * (e.g. akka system, sync and async http client store, thread pool for\n+     * SSH/TCP) are in use by other objects.\n+     * \n+     * \n+     * \n+     */\n+\n+    public void releaseExternalResources() {\n+\n+        if (!isClosed.get()) {\n+            logger.info(\"Releasing all ParallelClient resources... \");\n+            ActorConfig.shutDownActorSystemForce();\n+            httpClientStore.shutdown();\n+            tcpClientStore.shutdown();\n+            taskManager.cleanWaitTaskQueue();\n+            taskManager.cleanInprogressJobMap();\n+            isClosed.set(true);\n+            logger.info(\"Have released all ParallelClient resources \"\n+                    + \"(actor system + async+sync http client + task queue)\"\n+                    + \"\\nNow safe to stop your application.\");\n+\n+        } else {\n+            logger.info(\"NO OP. ParallelClient resources have already been released.\");\n+        }\n+\n+    }\n+\n+    /**\n+     * auto reinit if closed.\n+     */\n+\n+    public void reinitIfClosed() {\n+        if (isClosed.get() == true) {\n+            logger.info(\"External Resource was released. Now Re-initializing resources ...\");\n+\n+            ActorConfig.createAndGetActorSystem();\n+            httpClientStore.reinit();\n+            tcpClientStore.reinit();\n+            // TODO\n+            try {\n+                Thread.sleep(1000l);\n+            } catch (InterruptedException e) {\n+                logger.error(\"error reinit httpClientStore\", e);\n+            }\n+            isClosed.set(true);\n+            logger.info(\"Parallel Client Resources has been reinitialized.\");\n+        } else {\n+            logger.info(\"NO OP. Resource was not released.\");\n+        }\n+    }\n+\n+    /**\n+     * Prepare a parallel SSH Task.\n+     *\n+     * @return the parallel task builder\n+     */\n+    public ParallelTaskBuilder prepareSsh() {\n+        reinitIfClosed();\n+        ParallelTaskBuilder cb = new ParallelTaskBuilder();\n+        cb.setProtocol(RequestProtocol.SSH);\n+        return cb;\n+    }\n+\n+    /**\n+     * Prepare a parallel PING Task.\n+     *\n+     * @return the parallel task builder\n+     */\n+    public ParallelTaskBuilder preparePing() {\n+        reinitIfClosed();\n+        ParallelTaskBuilder cb = new ParallelTaskBuilder();\n+        cb.setProtocol(RequestProtocol.PING);\n+        return cb;\n+    }\n+\n+    /**\n+     * Prepare a parallel TCP Task.\n+     *\n+     * @param command\n+     *            the command\n+     * @return the parallel task builder\n+     */\n+    public ParallelTaskBuilder prepareTcp(String command) {\n+        reinitIfClosed();\n+        ParallelTaskBuilder cb = new ParallelTaskBuilder();\n+        cb.setProtocol(RequestProtocol.TCP);\n+        cb.getTcpMeta().setCommand(command);\n+        return cb;\n+    }\n+\n+    /**\n+     * Prepare a parallel HTTP GET Task.\n+     *\n+     * @param url\n+     *            the UrlPostfix: e.g. in http://localhost:8080/index.html.,the url is \"/index.html\"\n+     * @return the parallel task builder\n+     */\n+    public ParallelTaskBuilder prepareHttpGet(String url) {\n+        reinitIfClosed();\n+        ParallelTaskBuilder cb = new ParallelTaskBuilder();\n+        \n+        cb.getHttpMeta().setHttpMethod(HttpMethod.GET);\n+        cb.getHttpMeta().setRequestUrlPostfix(url);\n+        \n+        return cb;\n+    }\n+\n+    /**\n+     * Prepare a parallel HTTP POST Task.\n+     *\n+     * @param url\n+     *            the UrlPostfix: e.g. in http://localhost:8080/index.html.,the url is \"/index.html\"\n+     * @return the parallel task builder\n+     */\n+    public ParallelTaskBuilder prepareHttpPost(String url) {\n+        reinitIfClosed();\n+        ParallelTaskBuilder cb = new ParallelTaskBuilder();\n+        cb.getHttpMeta().setHttpMethod(HttpMethod.POST);\n+        cb.getHttpMeta().setRequestUrlPostfix(url);\n+        return cb;\n+    }\n+\n+    /**\n+     * Prepare a parallel HTTP DELETE Task.\n+     *\n+     * @param url\n+     *            the UrlPostfix: e.g. in http://localhost:8080/index.html.,the url is \"/index.html\"\n+     * @return the parallel task builder\n+     */\n+    public ParallelTaskBuilder prepareHttpDelete(String url) {\n+        reinitIfClosed();\n+        ParallelTaskBuilder cb = new ParallelTaskBuilder();\n+\n+        cb.getHttpMeta().setHttpMethod(HttpMethod.DELETE);\n+        cb.getHttpMeta().setRequestUrlPostfix(url);\n+        return cb;\n+    }\n+\n+    /**\n+     * Prepare a parallel HTTP PUT Task.\n+     *\n+     * @param url\n+     *            the UrlPostfix: e.g. in http://localhost:8080/index.html.,the url is \"/index.html\"\n+     * @return the parallel task builder\n+     */\n+    public ParallelTaskBuilder prepareHttpPut(String url) {\n+        reinitIfClosed();\n+        ParallelTaskBuilder cb = new ParallelTaskBuilder();\n+        cb.getHttpMeta().setHttpMethod(HttpMethod.PUT);\n+        cb.getHttpMeta().setRequestUrlPostfix(url);\n+        return cb;\n+\n+    }\n+\n+    /**\n+     * Prepare a parallel HTTP HEAD Task.\n+     *\n+     * @param url\n+     *            the UrlPostfix: e.g. in http://localhost:8080/index.html.,the url is \"/index.html\"\n+     * @return the parallel task builder\n+     */\n+    public ParallelTaskBuilder prepareHttpHead(String url) {\n+        reinitIfClosed();\n+        ParallelTaskBuilder cb = new ParallelTaskBuilder();\n+        cb.getHttpMeta().setHttpMethod(HttpMethod.HEAD);\n+        cb.getHttpMeta().setRequestUrlPostfix(url);\n+        return cb;\n+    }\n+\n+    /**\n+     * Prepare a parallel HTTP OPTION Task.\n+     *\n+     * @param url\n+     *            the UrlPostfix: e.g. in http://localhost:8080/index.html.,the url is \"/index.html\"\n+     * @return the parallel task builder\n+     */\n+    public ParallelTaskBuilder prepareHttpOptions(String url) {\n+        reinitIfClosed();\n+        ParallelTaskBuilder cb = new ParallelTaskBuilder();\n+        cb.getHttpMeta().setHttpMethod(HttpMethod.OPTIONS);\n+        cb.getHttpMeta().setRequestUrlPostfix(url);\n+        return cb;\n+\n+    }\n+\n+    /**\n+     * Sets the custom fast client in the httpClientStore.\n+     *\n+     * @param client\n+     *            the new custom client fast\n+     */\n+    public void setCustomClientFast(AsyncHttpClient client) {\n+        httpClientStore.setCustomClientFast(client);\n+    }\n+\n+    /**\n+     * Sets the custom fast client in the httpClientStore.\n+     *\n+     * @param client\n+     *            the new custom client slow\n+     */\n+    public void setCustomClientSlow(AsyncHttpClient client) {\n+        httpClientStore.setCustomClientSlow(client);\n+    }\n+\n+    /**\n+     * Sets the default client type that the httpClientStore.\n+     *\n+     * @param type\n+     *            the new http client type current default\n+     */\n+    public void setHttpClientTypeCurrentDefault(HttpClientType type) {\n+        httpClientStore.setHttpClientTypeCurrentDefault(type);\n+    }\n+\n+    /**\n+     * Reinit http clients.\n+     */\n+    public void reinitHttpClients() {\n+        httpClientStore.reinit();\n+    }\n+\n+    /**\n+     * Clean inprogress job map.\n+     */\n+    public void cleanInprogressJobMap() {\n+        taskManager.cleanInprogressJobMap();\n+    }\n+\n+    /**\n+     * Clean wait task queue.\n+     */\n+    public void cleanWaitTaskQueue() {\n+        taskManager.cleanWaitTaskQueue();\n+    }\n+\n+    /**\n+     * Gets the http client store.\n+     *\n+     * @return the http client store\n+     */\n+    public HttpClientStore getHttpClientStore() {\n+        return httpClientStore;\n+    }\n+\n+    /**\n+     * Log memory health.\n+     * \n+     * {@link MonitorProvider}} class (singleton) provider JVM memory, thread information.\n+     * \n+     * You may directly call MonitorProvider.getInstance() to access JVM memory / thread objects\n+     *\n+     * @return the string\n+     */\n+    public String logHealth() {\n+        return MonitorProvider.getInstance().getHealthMemory();\n+    }\n+\n+    /**\n+     * Gets the running job count.\n+     *\n+     * @return the running job count\n+     */\n+    public int getRunningJobCount() {\n+\n+        return ParallelTaskManager.getInstance().getInprogressTaskMap()\n+                .entrySet().size();\n+\n+    }\n+\n+}"
            },
            {
                "sha": "8c3ebcf4ab680dea365b8c8149fe734040aeb939",
                "filename": "src/main/java/io/parallec/core/ParallelTask.java",
                "status": "added",
                "additions": 1084,
                "deletions": 0,
                "changes": 1084,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FParallelTask.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FParallelTask.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FParallelTask.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,1084 @@\n+/*  \n+Copyright [2013-2015] eBay Software Foundation\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+    http://www.apache.org/licenses/LICENSE-2.0\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+ */\n+package io.parallec.core;\n+\n+import io.parallec.core.actor.message.CancelTaskOnHostRequest;\n+import io.parallec.core.actor.message.NodeReqResponse;\n+import io.parallec.core.actor.message.type.ExecutionManagerMsgType;\n+import io.parallec.core.bean.HttpMeta;\n+import io.parallec.core.bean.SetAndCount;\n+import io.parallec.core.bean.StrStrMap;\n+import io.parallec.core.bean.TargetHostMeta;\n+import io.parallec.core.bean.ping.PingMeta;\n+import io.parallec.core.bean.ssh.SshMeta;\n+import io.parallec.core.bean.tcp.TcpMeta;\n+import io.parallec.core.config.ParallecGlobalConfig;\n+import io.parallec.core.config.ParallelTaskConfig;\n+import io.parallec.core.exception.ParallelTaskInvalidException;\n+import io.parallec.core.task.ParallelTaskBean;\n+import io.parallec.core.task.ParallelTaskManager;\n+import io.parallec.core.task.ParallelTaskState;\n+import io.parallec.core.task.RequestReplacementType;\n+import io.parallec.core.task.TaskErrorMeta;\n+import io.parallec.core.util.PcDateUtils;\n+import io.parallec.core.util.PcStringUtils;\n+\n+import java.io.File;\n+import java.io.IOException;\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.LinkedHashMap;\n+import java.util.LinkedHashSet;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Map.Entry;\n+import java.util.UUID;\n+import java.util.concurrent.ConcurrentHashMap;\n+\n+import org.apache.commons.io.FileUtils;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import akka.actor.ActorRef;\n+\n+import com.ning.http.client.AsyncHttpClient;\n+\n+\n+/**\n+ * The key class represents a onetime execution on multiple requests. It contains all the task \n+ * and request metadata, target hosts, configs, and the responses.\n+ * \n+ * A ParallelTask is the returned object from the {@link ParallelTaskBuilder#execute()}\n+ * \n+ * <ul>\n+    <li>The metadata on this whole task, including config, running state, progress, request count, task id.&nbsp;</li>\n+    <li>The results of the task:&nbsp;parallelTaskResult,&nbsp;&nbsp;which is a hashmap of each target host map with its response. There is also a received count</li>\n+    <li>Detailed request metadata on HTTP/SSH/PING/TCP. &nbsp;The async http client used for this task ( you may replace it with your own )</li>\n+    <li>Target host list</li>\n+    <li>The user defined response handler</li>\n+    <li>A actorRef pointer to the command manager so that you may use it to cancel the whole task or those requests&nbsp;that match a sublist of target host lists.</li>\n+</ul>\n+ * \n+ *\n+ * @author Yuanteng Jeff Pei\n+ */\n+public class ParallelTask {\n+\n+    /** The logger. */\n+    private static Logger logger = LoggerFactory.getLogger(ParallelTask.class);\n+\n+    /** The config. */\n+    private ParallelTaskConfig config = new ParallelTaskConfig();\n+\n+    /** TODO: The start time. */\n+    private long submitTime;\n+\n+    /** The execute start time. */\n+    private long executeStartTime;\n+\n+    /** The end time. */\n+    private long executionEndTime;\n+\n+    /** The duration sec. */\n+    private double durationSec;\n+\n+    /** The request num. */\n+    private int requestNum;\n+\n+    /** The request num actual. */\n+    private int requestNumActual;\n+\n+    /** The responsed num. */\n+    private volatile int responsedNum = 0;\n+\n+    /** The task error metas. */\n+    private final List<TaskErrorMeta> taskErrorMetas = new ArrayList<TaskErrorMeta>();\n+\n+    /** The response context. */\n+    // cannot be final. must be able to be replacable to pass data out.\n+    private Map<String, Object> responseContext = new HashMap<String, Object>();\n+\n+    /** The state. */\n+    private ParallelTaskState state = ParallelTaskState.WAITING;;\n+\n+    /** The task id. */\n+    private String taskId;\n+\n+    /** The handler. */\n+    private ParallecResponseHandler handler;\n+\n+    /** The aggregate result map. */\n+    private final Map<String, LinkedHashSet<String>> aggregateResultMap = new LinkedHashMap<String, LinkedHashSet<String>>();\n+\n+    /** The parallel task result. */\n+    private Map<String, NodeReqResponse> parallelTaskResult = new ConcurrentHashMap<String, NodeReqResponse>();\n+\n+    /** The http meta. */\n+    private HttpMeta httpMeta;\n+\n+    /** The target host meta. */\n+    private TargetHostMeta targetHostMeta;\n+\n+    /** The ssh meta. */\n+    private SshMeta sshMeta;\n+\n+    /** The TCP meta. */\n+    private TcpMeta tcpMeta;\n+    \n+    /** The ping meta. */\n+    private PingMeta pingMeta;\n+    \n+    /**\n+     * The command manager. if private: getter/setter: openpojo unit test will\n+     * fail.\n+     */\n+    public ActorRef executionManager = null;\n+\n+    /** The replacement var map node specific. */\n+    private final Map<String, StrStrMap> replacementVarMapNodeSpecific = new ConcurrentHashMap<String, StrStrMap>();\n+\n+    /** The replacement var map. */\n+    private final Map<String, String> replacementVarMap = new ConcurrentHashMap<String, String>();\n+\n+    /** The request replacement type. */\n+    private RequestReplacementType requestReplacementType = RequestReplacementType.NO_REPLACEMENT;\n+\n+    /** The request protocol. */\n+    private RequestProtocol requestProtocol;\n+\n+    /** The concurrency. */\n+    private int concurrency;\n+\n+    // end member var\n+\n+    /**\n+     * Instantiates a new parallel task.\n+     */\n+    public ParallelTask() {\n+        this.setTaskId(generateTaskId());\n+        this.responsedNum = 0;\n+        this.requestNum = 0;\n+        this.state = ParallelTaskState.WAITING;\n+        \n+\n+        // use default config\n+        this.config = new ParallelTaskConfig();\n+\n+    }\n+\n+\n+    /**\n+     * Instantiates a new parallel task.\n+     *\n+     * @param requestProtocol the request protocol\n+     * @param concurrency the concurrency\n+     * @param httpMeta the http meta\n+     * @param targetHostMeta the target host meta\n+     * @param sshMeta the ssh meta\n+     * @param tcpMeta the tcp meta\n+     * @param pingMeta the ping meta\n+     * @param handler the handler\n+     * @param responseContext the response context\n+     * @param asyncHttpClient the async http client\n+     * @param replacementVarMapNodeSpecific the replacement var map node specific\n+     * @param replacementVarMap the replacement var map\n+     * @param requestReplacementType the request replacement type\n+     * @param config the config\n+     */\n+    public ParallelTask(RequestProtocol requestProtocol, int concurrency, HttpMeta httpMeta, TargetHostMeta targetHostMeta,\n+            SshMeta sshMeta, TcpMeta tcpMeta, PingMeta pingMeta, ParallecResponseHandler handler,\n+            Map<String, Object> responseContext,\n+            Map<String, StrStrMap> replacementVarMapNodeSpecific,\n+            Map<String, String> replacementVarMap,\n+            RequestReplacementType requestReplacementType, ParallelTaskConfig config\n+\n+    ) {\n+        this.requestProtocol = requestProtocol;\n+        this.concurrency = concurrency;\n+        this.targetHostMeta =targetHostMeta;\n+        // set taskid / requestNum must be after set target hosts meta;\n+        // as it is using the target hosts count\n+        this.taskId = this.generateTaskId();\n+        this.requestNum = targetHostMeta.getHosts().size();\n+        // make it the same as init num\n+        this.requestNumActual = requestNum;\n+\n+        this.httpMeta = httpMeta;\n+        this.tcpMeta = tcpMeta;\n+        this.sshMeta = sshMeta;\n+        this.pingMeta = pingMeta;\n+        this.handler = handler;\n+\n+        this.responsedNum = 0;\n+        this.state = ParallelTaskState.WAITING;\n+        if (responseContext != null)\n+            this.responseContext = responseContext;\n+\n+        this.replacementVarMapNodeSpecific\n+                .putAll(replacementVarMapNodeSpecific);\n+        this.replacementVarMap.putAll(replacementVarMap);\n+        this.requestReplacementType = requestReplacementType;\n+\n+        this.config = config;\n+    }\n+\n+    /**\n+     * Cancel on target hosts.\n+     *\n+     * @param targetHosts the target hosts\n+     * @return true, if successful\n+     */\n+    @SuppressWarnings(\"deprecation\")\n+    public boolean cancelOnTargetHosts(List<String> targetHosts) {\n+\n+        boolean success = false;\n+\n+        try {\n+\n+            switch (state) {\n+\n+            case IN_PROGRESS:\n+                if (executionManager != null && !executionManager.isTerminated()) {\n+                    executionManager.tell(\n+                            new CancelTaskOnHostRequest(targetHosts),\n+                            executionManager);\n+                    logger.info(\n+                            \"asked task to stop from running on target hosts with count {}...\",\n+                            targetHosts.size());\n+                } else {\n+                    logger.info(\"manager already killed or not exist.. NO OP\");\n+                }\n+                success = true;\n+                break;\n+            case COMPLETED_WITHOUT_ERROR:\n+            case COMPLETED_WITH_ERROR:\n+            case WAITING:\n+                logger.info(\"will NO OP for cancelOnTargetHost as it is not in IN_PROGRESS state\");\n+                success = true;\n+                break;\n+            default:\n+                break;\n+\n+            }\n+\n+        } catch (Exception e) {\n+            logger.error(\n+                    \"cancel task {} on hosts with count {} error with exception details \",\n+                    this.getTaskId(), targetHosts.size(), e);\n+        }\n+\n+        return success;\n+    }\n+\n+    /**\n+     * Cancel.\n+     *\n+     * @param sync the sync\n+     * @return true, if successful\n+     */\n+    @SuppressWarnings(\"deprecation\")\n+    public boolean cancel(boolean sync) {\n+\n+        boolean success = false;\n+\n+        try {\n+            switch (state) {\n+            case WAITING:\n+                ParallelTaskManager.getInstance().removeTaskFromWaitQ(this);\n+                this.state = ParallelTaskState.COMPLETED_WITHOUT_ERROR;\n+                success = true;\n+                break;\n+            case IN_PROGRESS:\n+                if (executionManager != null && !executionManager.isTerminated()) {\n+\n+                    executionManager.tell(ExecutionManagerMsgType.CANCEL,\n+                            executionManager);\n+                    logger.info(\n+                            \"Asked parallel task {} to stop from running...\",\n+                            this.taskId);\n+\n+                    if (sync) {\n+                        logger.info(\"Run cancel in SYNC mode... waiting for task to finish...\");\n+                        while (!isCompleted()) {\n+                            try {\n+                                Thread.sleep(100L);\n+                            } catch (InterruptedException e) {\n+                                logger.error(\n+                                        \"running task {} was interrupted  {}\",\n+                                        this.taskId, e);\n+                            }\n+                        }\n+                        logger.info(\"Task completed! Cancellation is completed.\");\n+                    } else {\n+                        logger.info(\"Run cancel in ASYNC mode... will now return...\");\n+                    }\n+\n+                } else {\n+                    logger.info(\"manager already killed or not exist..\");\n+                }\n+                this.state = ParallelTaskState.COMPLETED_WITH_ERROR;\n+                success = true;\n+                break;\n+            case COMPLETED_WITHOUT_ERROR:\n+            case COMPLETED_WITH_ERROR:\n+                logger.info(\"task are already in completed state..no operation...\");\n+                success = true;\n+                break;\n+            default:\n+                break;\n+\n+            }\n+\n+        } catch (Exception e) {\n+            logger.error(\"cancel task {} error with exception details \",\n+                    this.getTaskId(), e);\n+        }\n+\n+        return success;\n+    }\n+\n+    /**\n+     * Capacity used.\n+     *\n+     * @return the int\n+     */\n+    public int capacityUsed() {\n+        return Math.min(this.requestNum, this.getConcurrency());\n+    }\n+\n+    /**\n+     * will do validation. for empty will either throw exception or fill with\n+     * default values\n+     *\n+     * @return true, if successful\n+     * @throws ParallelTaskInvalidException\n+     *             the parallel task invalid exception\n+     */\n+    public boolean validateWithFillDefault()\n+            throws ParallelTaskInvalidException {\n+\n+        /**\n+         * for the client: will use the current default. note that that can be\n+         * overwritten!\n+         */\n+\n+        // validate if there are no hosts anymore\n+        if (this.targetHostMeta.getHosts().isEmpty()) {\n+            throw new ParallelTaskInvalidException(\n+                    \"Empty targetHosts! Please set target hosts and try again...return..\");\n+        }\n+        if (requestProtocol == null) {\n+            requestProtocol = RequestProtocol.HTTP;\n+            logger.info(\"USE DEFAULT HTTP PROTOCOL: Missing Protocol HTTP/HTTPS. SET protocol as default HTTP\");\n+        }\n+\n+        // concurrency check range\n+        if (this.getConcurrency() <= 0\n+                || this.getConcurrency() > ParallecGlobalConfig.maxCapacity) {\n+            logger.info(\"USE DEFAULT CONCURRENCY: User did not specify max concurrency \"\n+                    + \"or its out of max allowed capacity: \"\n+                    + ParallecGlobalConfig.concurrencyDefault);\n+            this.setConcurrency(ParallecGlobalConfig.concurrencyDefault);\n+        }\n+\n+        if (this.config == null) {\n+            logger.info(\"USE DEFAULT CONFIG: User did not specify\"\n+                    + \" config for task/actor timeout etc. \");\n+            this.config = new ParallelTaskConfig();\n+        }\n+\n+        // check if ssh\n+        if (this.requestProtocol==\n+                RequestProtocol.SSH) {\n+\n+            // this will throw ParallelTaskInvalidException\n+            this.sshMeta.validation();\n+            \n+            if (this.getConcurrency() > ParallecGlobalConfig.concurrencySshLimit){\n+                logger.info(\"SSH CONCURRENCY LIMIT is lower. Apply value as: \"\n+                        + ParallecGlobalConfig.concurrencySshLimit);\n+                this.setConcurrency(ParallecGlobalConfig.concurrencySshLimit);\n+            }\n+            if (this.httpMeta.isPollable() == true)\n+                throw new ParallelTaskInvalidException(\n+                        \"Not support pollable job with SSH.\");\n+\n+            this.httpMeta.initValuesNa();\n+            // remove tcp object\n+            this.tcpMeta = null;\n+            // remove ping object\n+            this.pingMeta = null;\n+        }else if (this.requestProtocol==\n+                RequestProtocol.PING) {\n+\n+            if (this.httpMeta.isPollable() == true)\n+                throw new ParallelTaskInvalidException(\n+                        \"Not support pollable job with PING.\");\n+            this.httpMeta.initValuesNa();\n+            \n+            this.pingMeta.validation();\n+            // remove ssh object\n+            this.sshMeta = null;\n+            // remove tcp object\n+            this.tcpMeta = null;\n+\n+            \n+        //TCP\n+        }else if (this.requestProtocol==\n+                RequestProtocol.TCP) { \n+            if (this.httpMeta.isPollable() == true)\n+                throw new ParallelTaskInvalidException(\n+                        \"Not support pollable job with TCP.\");\n+            this.httpMeta.initValuesNa();\n+            \n+            this.tcpMeta.validation();\n+            // remove ssh object\n+            this.sshMeta = null;\n+            // remove ping object\n+            this.pingMeta = null;            \n+        //HTTP/HTTPS\n+        } else {\n+            \n+            this.httpMeta.validation();\n+            // remove ssh object\n+            this.sshMeta = null;\n+            // remove tcp object\n+            this.tcpMeta = null;\n+            // remove ping object\n+            this.pingMeta = null;\n+        }// end else\n+\n+        boolean isValid = true;\n+        return isValid;\n+    }// end func\n+\n+    /**\n+     * Gen job id.\n+     *\n+     * @return the string\n+     */\n+    public String generateTaskId() {\n+        final String uuid = UUID.randomUUID().toString().substring(0, 12);\n+        int size = this.targetHostMeta == null ? 0 : this.targetHostMeta\n+                .getHosts().size();\n+        return \"PT_\" + size + \"_\"\n+                + PcDateUtils.getNowDateTimeStrConciseNoZone() + \"_\" + uuid;\n+    }\n+\n+    /**\n+     * Gets the progress.\n+     *\n+     * @return the progress\n+     */\n+    public Double getProgress() {\n+\n+        if (state.equals(ParallelTaskState.IN_PROGRESS)) {\n+            if (requestNum != 0) {\n+                return 100.0 * ((double) responsedNum / (double)requestNumActual);\n+            } else {\n+                return 0.0;\n+            }\n+        }\n+        \n+        if (state.equals(ParallelTaskState.WAITING)) {\n+            return 0.0;\n+        }\n+\n+        // fix task if fail validation, still try to poll progress 0901\n+        if (state.equals(ParallelTaskState.COMPLETED_WITH_ERROR)\n+                || state.equals(ParallelTaskState.COMPLETED_WITHOUT_ERROR)) {\n+            return 100.0;\n+        }\n+\n+\n+        return 0.0;\n+\n+    }\n+\n+    /**\n+     * state==ParallelTaskState.COMPLETED_WITHOUT_ERROR ||\n+     * state==ParallelTaskState.COMPLETED_WITH_ERROR;\n+     *\n+     * @return true, if is completed\n+     */\n+    public boolean isCompleted() {\n+        return state == ParallelTaskState.COMPLETED_WITHOUT_ERROR\n+                || state == ParallelTaskState.COMPLETED_WITH_ERROR;\n+    }\n+\n+    /**\n+     * Gets the async http client.\n+     *\n+     * @return the async http client\n+     */\n+    public AsyncHttpClient getAsyncHttpClient() {\n+        return this.httpMeta.getAsyncHttpClient();\n+    }\n+\n+    /**\n+     * Sets the async http client.\n+     *\n+     * @param asyncHttpClient\n+     *            the new async http client\n+     */\n+    public void setAsyncHttpClient(AsyncHttpClient asyncHttpClient) {\n+        this.httpMeta.setAsyncHttpClient(asyncHttpClient);\n+    }\n+\n+    /**\n+     * Gets the parallel task result.\n+     *\n+     * @return the parallel task result\n+     */\n+    public Map<String, NodeReqResponse> getParallelTaskResult() {\n+        return parallelTaskResult;\n+    }\n+\n+    /**\n+     * Sets the parallel task result.\n+     *\n+     * @param parallelTaskResult\n+     *            the parallel task result\n+     */\n+    public void setParallelTaskResult(\n+            Map<String, NodeReqResponse> parallelTaskResult) {\n+        this.parallelTaskResult = parallelTaskResult;\n+    }\n+\n+    /**\n+     * Gets the replacement var map node specific.\n+     *\n+     * @return the replacement var map node specific\n+     */\n+    public Map<String, StrStrMap> getReplacementVarMapNodeSpecific() {\n+        return replacementVarMapNodeSpecific;\n+    }\n+\n+    /**\n+     * Gets the replacement var map.\n+     *\n+     * @return the replacement var map\n+     */\n+    public Map<String, String> getReplacementVarMap() {\n+        return replacementVarMap;\n+    }\n+\n+    /**\n+     * Gets the request replacement type.\n+     *\n+     * @return the request replacement type\n+     */\n+    public RequestReplacementType getRequestReplacementType() {\n+        return requestReplacementType;\n+    }\n+\n+    /**\n+     * Sets the request replacement type.\n+     *\n+     * @param requestReplacementType\n+     *            the new request replacement type\n+     */\n+    public void setRequestReplacementType(\n+            RequestReplacementType requestReplacementType) {\n+        this.requestReplacementType = requestReplacementType;\n+    }\n+\n+    /**\n+     * Gets the task error metas.\n+     *\n+     * @return the task error metas\n+     */\n+    public List<TaskErrorMeta> getTaskErrorMetas() {\n+        return taskErrorMetas;\n+    }\n+\n+\n+\n+\n+    @Override\n+    public String toString() {\n+        return \"ParallelTask [config=\" + config + \", submitTime=\" + submitTime\n+                + \", executeStartTime=\" + executeStartTime\n+                + \", executionEndTime=\" + executionEndTime + \", durationSec=\"\n+                + durationSec + \", requestNum=\" + requestNum\n+                + \", requestNumActual=\" + requestNumActual + \", responsedNum=\"\n+                + responsedNum + \", taskErrorMetas=\" + taskErrorMetas\n+                + \", responseContext=\" + responseContext + \", state=\" + state\n+                + \", taskId=\" + taskId + \", handler=\" + handler\n+                + \", aggregateResultMap=\" + aggregateResultMap\n+                + \", parallelTaskResult=\" + parallelTaskResult + \", httpMeta=\"\n+                + httpMeta + \", targetHostMeta=\" + targetHostMeta\n+                + \", sshMeta=\" + sshMeta + \", tcpMeta=\" + tcpMeta\n+                + \", pingMeta=\" + pingMeta + \", executionManager=\"\n+                + executionManager + \", replacementVarMapNodeSpecific=\"\n+                + replacementVarMapNodeSpecific + \", replacementVarMap=\"\n+                + replacementVarMap + \", requestReplacementType=\"\n+                + requestReplacementType + \", requestProtocol=\"\n+                + requestProtocol + \", concurrency=\" + concurrency + \"]\";\n+    }\n+\n+\n+    /**\n+     * Gets the ssh meta.\n+     *\n+     * @return the ssh meta\n+     */\n+    public SshMeta getSshMeta() {\n+        return sshMeta;\n+    }\n+\n+    /**\n+     * Sets the ssh meta.\n+     *\n+     * @param sshMeta\n+     *            the new ssh meta\n+     */\n+    public void setSshMeta(SshMeta sshMeta) {\n+        this.sshMeta = sshMeta;\n+    }\n+\n+    /**\n+     * Gets the response context.\n+     *\n+     * @return the response context\n+     */\n+    public Map<String, Object> getResponseContext() {\n+        return responseContext;\n+    }\n+\n+    /**\n+     * Gets the target host meta.\n+     *\n+     * @return the target host meta\n+     */\n+    public TargetHostMeta getTargetHostMeta() {\n+        return targetHostMeta;\n+    }\n+\n+    /**\n+     * Sets the target host meta.\n+     *\n+     * @param targetHostMeta\n+     *            the new target host meta\n+     */\n+    public void setTargetHostMeta(TargetHostMeta targetHostMeta) {\n+        this.targetHostMeta = targetHostMeta;\n+    }\n+\n+    /**\n+     * Gets the command meta.\n+     *\n+     * @return the command meta\n+     */\n+    public HttpMeta getHttpMeta() {\n+        return httpMeta;\n+        \n+    }\n+\n+    /**\n+     * Sets the command meta.\n+     *\n+     * @param httpMeta the new http meta\n+     */\n+    public void setHttpMeta(HttpMeta httpMeta) {\n+        this.httpMeta = httpMeta;\n+    }\n+\n+    /**\n+     * Gets the task id.\n+     *\n+     * @return the task id\n+     */\n+    public String getTaskId() {\n+        return taskId;\n+    }\n+\n+    /**\n+     * Sets the task id.\n+     *\n+     * @param taskId\n+     *            the new task id\n+     */\n+    public void setTaskId(String taskId) {\n+        this.taskId = taskId;\n+    }\n+\n+    /**\n+     * Sets the response context.\n+     *\n+     * @param responseContext\n+     *            the response context\n+     */\n+    public void setResponseContext(Map<String, Object> responseContext) {\n+        this.responseContext = responseContext;\n+    }\n+\n+    /**\n+     * Gets the config.\n+     *\n+     * @return the config\n+     */\n+    public ParallelTaskConfig getConfig() {\n+        return config;\n+    }\n+\n+    /**\n+     * Sets the config.\n+     *\n+     * @param config\n+     *            the new config\n+     */\n+    public void setConfig(ParallelTaskConfig config) {\n+        this.config = config;\n+    }\n+\n+    /**\n+     * Pretty print info.\n+     *\n+     * @return the string\n+     */\n+    public String prettyPrintInfo() {\n+        return PcStringUtils.renderJson(new ParallelTaskBean(this));\n+    }\n+\n+    /**\n+     * Save log to local.\n+     *\n+     * @param path\n+     *            the path\n+     * @return true, if successful\n+     */\n+    public boolean saveLogToLocal(String path) {\n+        String content = PcStringUtils.renderJson(new ParallelTaskBean(this));\n+        File file = new File(path);\n+        boolean success = false;\n+        try {\n+            FileUtils.writeStringToFile(file, content);\n+            success = true;\n+        } catch (IOException e) {\n+            logger.error(\"error writing parallel task to path {} details \",\n+                    path, e);\n+        }\n+        logger.info(\n+                \"Save parallel task {} log  to disk at path {}. Success?: {}\",\n+                this.taskId, path, success);\n+        return success;\n+    }\n+\n+    /**\n+     * Save log to local.\n+     *\n+     * @return true, if successful\n+     */\n+    public boolean saveLogToLocal() {\n+        String path = ParallecGlobalConfig.taskLogFolderWithSlash + this.taskId\n+                + ParallecGlobalConfig.taskLogPostfix;\n+        return saveLogToLocal(path);\n+    }\n+\n+    /**\n+     * Gets the execution end time.\n+     *\n+     * @return the execution end time\n+     */\n+    public long getExecutionEndTime() {\n+        return executionEndTime;\n+    }\n+\n+    /**\n+     * Sets the execution end time.\n+     *\n+     * @param executionEndTime\n+     *            the new execution end time\n+     */\n+    public void setExecutionEndTime(long executionEndTime) {\n+        this.executionEndTime = executionEndTime;\n+    }\n+\n+    /**\n+     * Aggregate results to see the status code distribution with target hosts.\n+     *\n+     * @return the aggregateResultMap\n+     */\n+    public Map<String, SetAndCount> getAggregateResultFullSummary() {\n+\n+        Map<String, SetAndCount> summaryMap = new LinkedHashMap<String, SetAndCount>();\n+\n+        for (Entry<String, LinkedHashSet<String>> entry : aggregateResultMap\n+                .entrySet()) {\n+            summaryMap.put(entry.getKey(), new SetAndCount(entry.getValue()));\n+        }\n+\n+        return summaryMap;\n+    }\n+    \n+    public String getAggregatedResultHumanStr() {\n+        return PcStringUtils.getAggregatedResultHuman(aggregateResultMap);\n+    }\n+    \n+    \n+\n+    /**\n+     * Gets the aggregate result count summary. only list the counts for brief\n+     * understanding\n+     *\n+     * @return the aggregate result count summary\n+     */\n+    public Map<String, Integer> getAggregateResultCountSummary() {\n+\n+        Map<String, Integer> summaryMap = new LinkedHashMap<String, Integer>();\n+\n+        for (Entry<String, LinkedHashSet<String>> entry : aggregateResultMap\n+                .entrySet()) {\n+            summaryMap.put(entry.getKey(), entry.getValue().size());\n+        }\n+\n+        return summaryMap;\n+    }\n+\n+    /**\n+     * Gets the aggregate result map.\n+     *\n+     * @return the aggregate result map\n+     */\n+    public Map<String, LinkedHashSet<String>> getAggregateResultMap() {\n+        return aggregateResultMap;\n+    }\n+\n+    /**\n+     * Gets the duration sec.\n+     *\n+     * @return the duration sec\n+     */\n+    public double getDurationSec() {\n+        return durationSec;\n+    }\n+\n+    /**\n+     * Sets the duration sec.\n+     *\n+     * @param durationSec\n+     *            the new duration sec\n+     */\n+    public void setDurationSec(double durationSec) {\n+        this.durationSec = durationSec;\n+    }\n+\n+    /**\n+     * Gets the tcp meta.\n+     *\n+     * @return the tcp meta\n+     */\n+    public TcpMeta getTcpMeta() {\n+        return tcpMeta;\n+    }\n+\n+    /**\n+     * Sets the tcp meta.\n+     *\n+     * @param tcpMeta the new tcp meta\n+     */\n+    public void setTcpMeta(TcpMeta tcpMeta) {\n+        this.tcpMeta = tcpMeta;\n+    }\n+    \n+    /**\n+     * Gets the request protocol.\n+     *\n+     * @return the request protocol\n+     */\n+    public RequestProtocol getRequestProtocol() {\n+        return requestProtocol;\n+    }\n+\n+    /**\n+     * Sets the request protocol.\n+     *\n+     * @param requestProtocol\n+     *            the new request protocol\n+     */\n+    public void setRequestProtocol(RequestProtocol requestProtocol) {\n+        this.requestProtocol = requestProtocol;\n+    }\n+\n+    /**\n+     * Gets the concurrency.\n+     *\n+     * @return the concurrency\n+     */\n+    public int getConcurrency() {\n+        return concurrency;\n+    }\n+\n+    /**\n+     * Sets the concurrency.\n+     *\n+     * @param concurrency\n+     *            the new concurrency\n+     */\n+    public void setConcurrency(int concurrency) {\n+        this.concurrency = concurrency;\n+    }\n+    \n+    /**\n+     * Gets the submit time.\n+     *\n+     * @return the submit time\n+     */\n+    public long getSubmitTime() {\n+        return submitTime;\n+    }\n+\n+    /**\n+     * Sets the submit time.\n+     *\n+     * @param submitTime\n+     *            the new submit time\n+     */\n+    public void setSubmitTime(long submitTime) {\n+        this.submitTime = submitTime;\n+    }\n+\n+    /**\n+     * Gets the execute start time.\n+     *\n+     * @return the execute start time\n+     */\n+    public long getExecuteStartTime() {\n+        return executeStartTime;\n+    }\n+\n+    /**\n+     * Sets the execute start time.\n+     *\n+     * @param executeStartTime\n+     *            the new execute start time\n+     */\n+    public void setExecuteStartTime(long executeStartTime) {\n+        this.executeStartTime = executeStartTime;\n+    }\n+\n+    /**\n+     * Gets the request num.\n+     *\n+     * @return the request num\n+     */\n+    public int getRequestNum() {\n+        return requestNum;\n+    }\n+\n+    /**\n+     * Sets the request num.\n+     *\n+     * @param requestNum\n+     *            the new request num\n+     */\n+    public void setRequestNum(int requestNum) {\n+        this.requestNum = requestNum;\n+    }\n+\n+    /**\n+     * Gets the request num actual.\n+     *\n+     * @return the request num actual\n+     */\n+    public int getRequestNumActual() {\n+        return requestNumActual;\n+    }\n+\n+    /**\n+     * Sets the request num actual.\n+     *\n+     * @param requestNumActual\n+     *            the new request num actual\n+     */\n+    public void setRequestNumActual(int requestNumActual) {\n+        this.requestNumActual = requestNumActual;\n+    }\n+\n+    /**\n+     * Gets the responsed num.\n+     *\n+     * @return the responsed num\n+     */\n+    public int getResponsedNum() {\n+        return responsedNum;\n+    }\n+\n+    /**\n+     * Sets the responsed num.\n+     *\n+     * @param responsedNum\n+     *            the new responsed num\n+     */\n+    public void setResponsedNum(int responsedNum) {\n+        this.responsedNum = responsedNum;\n+    }\n+\n+    /**\n+     * Gets the state.\n+     *\n+     * @return the state\n+     */\n+    public ParallelTaskState getState() {\n+        return state;\n+    }\n+\n+    /**\n+     * Sets the state.\n+     *\n+     * @param state\n+     *            the new state\n+     */\n+    public void setState(ParallelTaskState state) {\n+        this.state = state;\n+    }\n+\n+    /**\n+     * Gets the handler.\n+     *\n+     * @return the handler\n+     */\n+    public ParallecResponseHandler getHandler() {\n+        return handler;\n+    }\n+\n+    /**\n+     * Sets the handler.\n+     *\n+     * @param handler\n+     *            the new handler\n+     */\n+    public void setHandler(ParallecResponseHandler handler) {\n+        this.handler = handler;\n+    }\n+\n+    /**\n+     * Gets the ping meta.\n+     *\n+     * @return the ping meta\n+     */\n+    public PingMeta getPingMeta() {\n+        return pingMeta;\n+    }\n+\n+    /**\n+     * Sets the ping meta.\n+     *\n+     * @param pingMeta the new ping meta\n+     */\n+    public void setPingMeta(PingMeta pingMeta) {\n+        this.pingMeta = pingMeta;\n+    }\n+\n+}"
            },
            {
                "sha": "75cfec61554434d1beced62c556d4fdbf300dcbc",
                "filename": "src/main/java/io/parallec/core/ParallelTaskBuilder.java",
                "status": "added",
                "additions": 1148,
                "deletions": 0,
                "changes": 1148,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FParallelTaskBuilder.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FParallelTaskBuilder.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FParallelTaskBuilder.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,1148 @@\n+/*  \n+Copyright [2013-2015] eBay Software Foundation\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+    http://www.apache.org/licenses/LICENSE-2.0\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+ */\n+package io.parallec.core;\n+\n+import io.parallec.core.actor.poll.HttpPollerProcessor;\n+import io.parallec.core.bean.HttpMeta;\n+import io.parallec.core.bean.StrStrMap;\n+import io.parallec.core.bean.TargetHostMeta;\n+import io.parallec.core.bean.TaskRunMode;\n+import io.parallec.core.bean.ping.PingMeta;\n+import io.parallec.core.bean.ping.PingMode;\n+import io.parallec.core.bean.ssh.SshLoginType;\n+import io.parallec.core.bean.ssh.SshMeta;\n+import io.parallec.core.bean.tcp.TcpMeta;\n+import io.parallec.core.config.HandlerExecutionLocation;\n+import io.parallec.core.config.ParallelTaskConfig;\n+import io.parallec.core.exception.ParallelTaskInvalidException;\n+import io.parallec.core.exception.TargetHostsLoadException;\n+import io.parallec.core.task.ParallelTaskManager;\n+import io.parallec.core.task.ParallelTaskState;\n+import io.parallec.core.task.RequestReplacementType;\n+import io.parallec.core.task.TaskErrorMeta;\n+import io.parallec.core.task.TaskErrorMeta.TaskErrorType;\n+import io.parallec.core.taskbuilder.targethosts.ITargetHostsBuilder;\n+import io.parallec.core.taskbuilder.targethosts.TargetHostsBuilder;\n+import io.parallec.core.util.PcConstants;\n+\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Map.Entry;\n+\n+import org.jboss.netty.channel.ChannelFactory;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import com.google.common.base.Strings;\n+import com.ning.http.client.AsyncHttpClient;\n+\n+/**\n+ * \n+ * This store all the metadata to build the ParallelTask\n+ * \n+ * Build the parallel task and then execute it after a validation. During the\n+ * validation, certain missing parameters will use the default values. execute()\n+ * is the key function\n+ *\n+ * @author Yuanteng Jeff Pei\n+ */\n+public class ParallelTaskBuilder {\n+\n+    /** The logger. */\n+    private static Logger logger = LoggerFactory\n+            .getLogger(ParallelTaskBuilder.class);\n+\n+    /** The metadata about the HTTP request. */\n+    private HttpMeta httpMeta = new HttpMeta();\n+\n+    /** The ssh meta. must be initialized here to avoid NPE */\n+    private SshMeta sshMeta = new SshMeta();\n+\n+    /** The TCP request meta data. */\n+    private TcpMeta tcpMeta = new TcpMeta();\n+\n+    /** The ping meta data. */\n+    private PingMeta pingMeta = new PingMeta();\n+    \n+    /** The target host meta data. */\n+    private TargetHostMeta targetHostMeta;\n+\n+    /** The replacement var map node specific. */\n+    private final Map<String, StrStrMap> replacementVarMapNodeSpecific = new HashMap<String, StrStrMap>();\n+\n+    /** The replacement var map. */\n+    private Map<String, String> replacementVarMap = new HashMap<String, String>();\n+\n+    /** The request replacement type. */\n+    private RequestReplacementType requestReplacementType = RequestReplacementType.NO_REPLACEMENT;\n+\n+    /** The target hosts. */\n+    private List<String> targetHosts = new ArrayList<String>();\n+\n+    /** The targetHostBuilder. */\n+    private ITargetHostsBuilder targetHostBuilder = new TargetHostsBuilder();\n+\n+    /** The response context. */\n+    private Map<String, Object> responseContext = new HashMap<String, Object>();\n+\n+    /** The mode. */\n+    public TaskRunMode mode = TaskRunMode.SYNC;\n+\n+    /** The config using default values. will never be null */\n+    private ParallelTaskConfig config = new ParallelTaskConfig();\n+\n+    /** The request protocol. */\n+    private RequestProtocol requestProtocol = null;\n+\n+    /** The concurrency. */\n+    private int concurrency = 0;\n+\n+\n+    /**\n+     * Instantiates a new parallel task builder.\n+     */\n+    public ParallelTaskBuilder() {\n+        super();\n+        logger.info(\"Initialized task builder with default config\");\n+    }\n+\n+    /**\n+     * Gets the response context.\n+     *\n+     * @return the response context\n+     */\n+    public Map<String, Object> getResponseContext() {\n+        return responseContext;\n+    }\n+\n+\n+\n+    /**\n+     * Sets the response context.\n+     *\n+     * @param responseContext\n+     *            the response context\n+     * @return the parallel task builder\n+     */\n+    public ParallelTaskBuilder setResponseContext(\n+            Map<String, Object> responseContext) {\n+        if (responseContext != null)\n+            this.responseContext = responseContext;\n+        else\n+            logger.error(\"context cannot be null. skip set.\");\n+        return this;\n+    }\n+\n+    /**\n+     * Call response handler in operation worker (in parallel before aggregation).\n+     * Handle the user defined onComplete() function in worker before aggregation (handle in parallel).\n+     * Be cautious on concurrency control if save the response to a common data store\n+     * Also when you definte the concurrency control, take into account of the time needed to hander the response.\n+     *\n+     * @return the parallel task builder\n+     */\n+    public ParallelTaskBuilder handleInWorker() {\n+        this.config.setHandlerExecutionLocation(HandlerExecutionLocation.OPERATION_WORKER);\n+        return this;\n+    }\n+    \n+    /**\n+     * Call response handler in manager (in a sequence after aggregation) Default mode. In this mode, will trigger the user defined response hander\n+     * after response is passed back from worker to manager. \n+     * \n+     * This is the default mode. Be cautious on using long blocking operation in the handler onComplete() function\n+     * \n+     * Since it is handled in manager, a long sync operation may block the whole flow \n+     * because each response will need to go through here. \n+     * \n+     * @return the parallel task builder\n+     */\n+    public ParallelTaskBuilder handleInManager() {\n+        this.config.setHandlerExecutionLocation(HandlerExecutionLocation.MANAGER);\n+        return this;\n+    }\n+    \n+    /**\n+     * Async.\n+     *\n+     * @return the parallel task builder\n+     */\n+    public ParallelTaskBuilder async() {\n+        this.mode = TaskRunMode.ASYNC;\n+        return this;\n+    }\n+\n+    /**\n+     * Sync. the default run mode\n+     *\n+     * @return the parallel task builder\n+     */\n+    public ParallelTaskBuilder sync() {\n+        this.mode = TaskRunMode.SYNC;\n+        return this;\n+    }\n+\n+    /**\n+     * Sets the mode.\n+     *\n+     * @param mode\n+     *            the new mode\n+     */\n+    public void setMode(TaskRunMode mode) {\n+        this.mode = mode;\n+    }\n+\n+    /**\n+     * key function. first validate if the ACM has adequate data; then execute\n+     * it after the validation. the new ParallelTask task guareetee to have the\n+     * targethost meta and command meta not null\n+     *\n+     * @param handler\n+     *            the handler\n+     * @return the parallel task\n+     */\n+\n+    public ParallelTask execute(ParallecResponseHandler handler) {\n+\n+        ParallelTask task = new ParallelTask();\n+\n+        try {\n+            targetHostMeta = new TargetHostMeta(targetHosts);\n+\n+            final ParallelTask taskReal = new ParallelTask(requestProtocol,\n+                    concurrency, httpMeta, targetHostMeta, sshMeta, tcpMeta, pingMeta,\n+                    handler, responseContext, \n+                    replacementVarMapNodeSpecific, replacementVarMap,\n+                    requestReplacementType, \n+                    config);\n+\n+            task = taskReal;\n+\n+            logger.info(\"***********START_PARALLEL_HTTP_TASK_\"\n+                    + task.getTaskId() + \"***********\");\n+\n+            // throws ParallelTaskInvalidException\n+            task.validateWithFillDefault();\n+\n+            task.setSubmitTime(System.currentTimeMillis());\n+\n+            if (task.getConfig().isEnableCapacityAwareTaskScheduler()) {\n+\n+                // add to the task\n+                ParallelTaskManager.getInstance().getWaitQ().add(task);\n+\n+                logger.info(\"Enabled CapacityAwareTaskScheduler. Submitted task to waitQ in builder.. \"\n+                        + task.getTaskId());\n+\n+            } else {\n+\n+                logger.info(\n+                        \"Disabled CapacityAwareTaskScheduler. Immediately execute task {} \",\n+                        task.getTaskId());\n+\n+                Runnable director = new Runnable() {\n+\n+                    public void run() {\n+                        ParallelTaskManager.getInstance()\n+                                .generateUpdateExecuteTask(taskReal);\n+                    }\n+                };\n+                new Thread(director).start();\n+            }\n+\n+            if (this.mode == TaskRunMode.SYNC) {\n+                logger.info(\"Executing task {} in SYNC mode...  \",\n+                        task.getTaskId());\n+\n+                while (task != null && !task.isCompleted()) {\n+\n+                    try {\n+                        Thread.sleep(500L);\n+                    } catch (InterruptedException e) {\n+                        logger.error(\"fail sleep interrup exception in executing task \"\n+                                + e);\n+                    }\n+                }\n+            }\n+        } catch (ParallelTaskInvalidException ex) {\n+\n+            logger.info(\"Request is invalid with missing parts. Details: \"\n+                    + ex.getMessage() + \" Cannot execute at this time. \"\n+                    + \" Please review your request and try again.\\nCommand:\"\n+                    + httpMeta.toString());\n+\n+            task.setState(ParallelTaskState.COMPLETED_WITH_ERROR);\n+            task.getTaskErrorMetas().add(\n+                    new TaskErrorMeta(TaskErrorType.VALIDATION_ERROR,\n+                            \"validation eror\"));\n+\n+        } catch (Exception t) {\n+            logger.error(\"fail task builder. Unknown error: \" + t, t);\n+            task.setState(ParallelTaskState.COMPLETED_WITH_ERROR);\n+            task.getTaskErrorMetas().add(\n+                    new TaskErrorMeta(TaskErrorType.UNKNOWN, \"validation eror\",\n+                            t));\n+        }\n+\n+        logger.info(\"***********FINISH_PARALLEL_HTTP_TASK_\" + task.getTaskId()\n+                + \"***********\");\n+        return task;\n+\n+    }// end func.\n+\n+    /**\n+     * add some validation to see if this miss anything.\n+     *\n+     * @return true, if successful\n+     * @throws ParallelTaskInvalidException\n+     *             the parallel task invalid exception\n+     */\n+\n+    public boolean validation() throws ParallelTaskInvalidException {\n+\n+        ParallelTask task = new ParallelTask();\n+        targetHostMeta = new TargetHostMeta(targetHosts);\n+\n+        task = new ParallelTask(requestProtocol, concurrency, httpMeta,\n+                targetHostMeta, sshMeta, tcpMeta, pingMeta, null, responseContext,\n+                 replacementVarMapNodeSpecific,\n+                replacementVarMap, requestReplacementType, config);\n+        boolean valid = false;\n+\n+        try {\n+            valid = task.validateWithFillDefault();\n+        } catch (ParallelTaskInvalidException e) {\n+            logger.info(\"task is invalid \" + e);\n+        }\n+\n+        return valid;\n+\n+    }\n+\n+\n+    /**\n+     * Sets the protocol.\n+     *\n+     * @param protocol\n+     *            the protocol\n+     * @return the parallel task builder\n+     */\n+    public ParallelTaskBuilder setProtocol(RequestProtocol protocol) {\n+        this.requestProtocol = protocol;\n+        return this;\n+    }\n+\n+\n+    /**\n+     * Sets the max concurrency.\n+     *\n+     * @param concurrency the concurrency\n+     * @return the parallel task builder\n+     */\n+    public ParallelTaskBuilder setConcurrency(int concurrency) {\n+        this.concurrency = concurrency;\n+        return this;\n+\n+    }\n+\n+    \n+    /**\n+     * Sets the body.\n+     *\n+     * @param body\n+     *            the body\n+     * @return the parallel task builder\n+     */\n+    public ParallelTaskBuilder setHttpEntityBody(String body) {\n+        this.httpMeta.setEntityBody(body);\n+        return this;\n+    }\n+\n+    /**\n+     * this will create the adhoc header.\n+     *\n+     * @param pheader\n+     *            the pheader\n+     * @return the parallel task builder\n+     */\n+\n+    public ParallelTaskBuilder setHttpHeaders(ParallecHeader pheader) {\n+        this.httpMeta.setHeaderMetadata(pheader);\n+        return this;\n+\n+    }\n+\n+\n+    /**\n+     * Sets the port.\n+     *\n+     * @param port\n+     *            the port\n+     * @return the parallel task builder\n+     */\n+    public ParallelTaskBuilder setHttpPort(int port) {\n+        this.httpMeta.setRequestPort(Integer.toString(port));\n+        return this;\n+\n+    }\n+\n+\n+ \n+\n+    /**\n+     * Sets the async http client.\n+     *\n+     * @param asyncHttpClient\n+     *            the async http client\n+     * @return the parallel task builder\n+     */\n+    public ParallelTaskBuilder setAsyncHttpClient(\n+            AsyncHttpClient asyncHttpClient) {\n+        this.httpMeta.setAsyncHttpClient(asyncHttpClient);\n+        return this;\n+    }\n+\n+    /**\n+     * Gets the HttpMeta.\n+     *\n+     * @return the httpMeta\n+     */\n+    public HttpMeta getHttpMeta() {\n+        return httpMeta;\n+    }\n+\n+    /**\n+     * Sets the HttpMeta.\n+     *\n+     * @param httpMeta\n+     *            the new httpMeta\n+     */\n+    public void setHttpMeta(HttpMeta httpMeta) {\n+        this.httpMeta = httpMeta;\n+    }\n+\n+    /**\n+     * Gets the async http client.\n+     *\n+     * @return the async http client\n+     */\n+    public AsyncHttpClient getAsyncHttpClient() {\n+        return this.httpMeta.getAsyncHttpClient();\n+    }\n+\n+    /**\n+     * Gets the target hosts.\n+     *\n+     * @return the target hosts\n+     */\n+    public List<String> getTargetHosts() {\n+        return targetHosts;\n+    }\n+\n+\n+    /**\n+     * Sets the target hosts from list.\n+     *\n+     * @param targetHosts\n+     *            the target hosts\n+     * @return the parallel task builder\n+     */\n+    public ParallelTaskBuilder setTargetHostsFromList(List<String> targetHosts) {\n+\n+        this.targetHosts = targetHostBuilder.setTargetHostsFromList(targetHosts);\n+        return this;\n+    }\n+\n+\n+\n+    /**\n+     * Sets the target hosts from string.\n+     *\n+     * @param targetHostsStr\n+     *            the target hosts str\n+     * @return the parallel task builder\n+     */\n+    public ParallelTaskBuilder setTargetHostsFromString(String targetHostsStr) {\n+\n+        this.targetHosts = targetHostBuilder.setTargetHostsFromString(targetHostsStr);\n+\n+        return this;\n+    }\n+\n+\n+    /**\n+     * Sets the target hosts from json path.\n+     *\n+     * @param jsonPath\n+     *            the json path\n+     * @param sourcePath\n+     *            the source path\n+     * @param sourceType\n+     *            the source type\n+     * @return the parallel task builder\n+     * @throws TargetHostsLoadException\n+     *             the target hosts load exception\n+     */\n+    public ParallelTaskBuilder setTargetHostsFromJsonPath(String jsonPath,\n+            String sourcePath, HostsSourceType sourceType)\n+            throws TargetHostsLoadException {\n+\n+        this.targetHosts = targetHostBuilder.setTargetHostsFromJsonPath(jsonPath, sourcePath,\n+                sourceType);\n+        return this;\n+\n+    }\n+\n+\n+    /**\n+     * Sets the target hosts from line by line text.\n+     *\n+     * @param sourcePath\n+     *            the source path\n+     * @param sourceType\n+     *            the source type\n+     * @return the parallel task builder\n+     * @throws TargetHostsLoadException\n+     *             the target hosts load exception\n+     */\n+    public ParallelTaskBuilder setTargetHostsFromLineByLineText(\n+            String sourcePath, HostsSourceType sourceType)\n+            throws TargetHostsLoadException {\n+\n+        this.targetHosts = targetHostBuilder.setTargetHostsFromLineByLineText(sourcePath,\n+                sourceType);\n+        return this;\n+    }\n+\n+\n+    /**\n+     * Sets the target hosts from cms query url.\n+     *\n+     * @param cmsQueryUrl\n+     *            the cms query url\n+     * @return the parallel task builder\n+     * @throws TargetHostsLoadException\n+     *             the target hosts load exception\n+     */\n+    public ParallelTaskBuilder setTargetHostsFromCmsQueryUrl(String cmsQueryUrl)\n+            throws TargetHostsLoadException {\n+\n+        this.targetHosts = targetHostBuilder.setTargetHostsFromCmsQueryUrl(cmsQueryUrl);\n+        return this;\n+    }\n+\n+    /**\n+     * CMS: configuration-management-service. \n+     * A.k.a. YiDB: http://www.yidb.org/\n+     * \n+     * Parallec supports CMS query\n+     * \n+     * http://ccoetech.ebay.com/cms-configuration-management-service-based-\n+     * mongodb\n+     *\n+     * @param cmsQueryUrl\n+     *            the cms query url\n+     * @param projection\n+     *            the projection\n+     * @return the parallel task builder\n+     * @throws TargetHostsLoadException\n+     *             the target hosts load exception\n+     */\n+\n+    public ParallelTaskBuilder setTargetHostsFromCmsQueryUrl(\n+            String cmsQueryUrl, String projection)\n+            throws TargetHostsLoadException {\n+        this.targetHosts = targetHostBuilder.setTargetHostsFromCmsQueryUrl(cmsQueryUrl,\n+                projection);\n+        return this;\n+    }\n+\n+    /**\n+     * Gets the TargetHostsBuilder.\n+     *\n+     * @return the thb\n+     */\n+    public ITargetHostsBuilder getTargetHostBuilder() {\n+        return targetHostBuilder;\n+    }\n+\n+    /**\n+     * Sets the TargetHostsBuilder.\n+     *\n+     * @param thb\n+     *            the new thb\n+     */\n+    public void setTargetHostBuilder(ITargetHostsBuilder thb) {\n+        this.targetHostBuilder = thb;\n+    }\n+\n+    /**\n+     * Gets the mode of either sync or async\n+     *\n+     * @return the mode\n+     */\n+    public TaskRunMode getMode() {\n+        return mode;\n+    }\n+\n+    \n+    /**\n+     * Gets the target host meta.\n+     *\n+     * @return the target host meta\n+     */\n+    public TargetHostMeta getTargetHostMeta() {\n+        return targetHostMeta;\n+    }\n+\n+    /**\n+     * Sets the target host meta.\n+     *\n+     * @param targetHostMeta the new target host meta\n+     */\n+    public void setTargetHostMeta(\n+            TargetHostMeta targetHostMeta) {\n+        this.targetHostMeta = targetHostMeta;\n+    }\n+\n+    /**\n+     * Gets the replacement var map node specific.\n+     *\n+     * @return the replacement var map node specific\n+     */\n+    public Map<String, StrStrMap> getReplacementVarMapNodeSpecific() {\n+        return replacementVarMapNodeSpecific;\n+    }\n+\n+\n+    /**\n+     * Sets the replacement var map node specific.\n+     *\n+     * @param replacementVarMapNodeSpecific\n+     *            the replacement var map node specific\n+     * @return the parallel task builder\n+     */\n+    public ParallelTaskBuilder setReplacementVarMapNodeSpecific(\n+            Map<String, StrStrMap> replacementVarMapNodeSpecific) {\n+        this.replacementVarMapNodeSpecific.clear();\n+        this.replacementVarMapNodeSpecific\n+                .putAll(replacementVarMapNodeSpecific);\n+\n+        this.requestReplacementType = RequestReplacementType.TARGET_HOST_SPECIFIC_VAR_REPLACEMENT;\n+        logger.info(\"Set requestReplacementType as {}\"\n+                + requestReplacementType.toString());\n+        return this;\n+    }\n+\n+\n+    /**\n+     * Sets the replace var map to single target from map.\n+     *\n+     * @param replacementVarMapNodeSpecific\n+     *            the replacement var map node specific\n+     * @param uniformTargetHost\n+     *            the uniform target host\n+     * @return the parallel task builder\n+     */\n+    public ParallelTaskBuilder setReplaceVarMapToSingleTargetFromMap(\n+            Map<String, StrStrMap> replacementVarMapNodeSpecific,\n+            String uniformTargetHost) {\n+        setReplacementVarMapNodeSpecific(replacementVarMapNodeSpecific);\n+\n+        if (uniformTargetHost == null || uniformTargetHost.isEmpty()) {\n+            logger.error(\"uniform target host is empty or null. skil setting.\");\n+            return this;\n+        }\n+        for (Entry<String, StrStrMap> entry : replacementVarMapNodeSpecific\n+                .entrySet()) {\n+\n+            if (entry.getValue() != null) {\n+                entry.getValue().addPair(PcConstants.UNIFORM_TARGET_HOST_VAR,\n+                        uniformTargetHost);\n+            }\n+        }\n+        return this;\n+    }\n+\n+    /**\n+     * Sets the replace var map to single target single var.\n+     *\n+     * @param variable\n+     *            the variable\n+     * @param replaceList\n+     *            : the list of strings that will replace the variable\n+     * @param uniformTargetHost\n+     *            the uniform target host\n+     * @return the parallel task builder\n+     */\n+    public ParallelTaskBuilder setReplaceVarMapToSingleTargetSingleVar(\n+            String variable, List<String> replaceList, String uniformTargetHost) {\n+\n+        if (uniformTargetHost == null || uniformTargetHost.isEmpty()) {\n+            logger.error(\"uniform target host is empty or null. skil setting.\");\n+            return this;\n+        }\n+        this.replacementVarMapNodeSpecific.clear();\n+        this.targetHosts.clear();\n+        int i = 0;\n+        for (String replace : replaceList) {\n+            if (replace == null)\n+                continue;\n+            String hostName = PcConstants.API_PREFIX + i;\n+\n+            replacementVarMapNodeSpecific.put(\n+                    hostName,\n+                    new StrStrMap().addPair(variable, replace).addPair(\n+                            PcConstants.UNIFORM_TARGET_HOST_VAR,\n+                            uniformTargetHost));\n+            targetHosts.add(hostName);\n+            ++i;\n+        }\n+        this.requestReplacementType = RequestReplacementType.TARGET_HOST_SPECIFIC_VAR_REPLACEMENT;\n+        logger.info(\n+                \"Set requestReplacementType as {} for single target. Will disable the set target hosts.\"\n+                        + \"Also Simulated \"\n+                        + \"Now Already set targetHost list with size {}. \\nPLEASE NOT TO SET TARGET HOSTS AGAIN WITH THIS API.\",\n+                requestReplacementType.toString(), targetHosts.size());\n+\n+        return this;\n+    }\n+\n+    /**\n+     * Sets the replace var map to single target.\n+     *\n+     * @param replacementVarMapList\n+     *            the replacement var map list\n+     * @param uniformTargetHost\n+     *            the uniform target host\n+     * @return the parallel task builder\n+     */\n+    public ParallelTaskBuilder setReplaceVarMapToSingleTarget(\n+            List<StrStrMap> replacementVarMapList, String uniformTargetHost) {\n+\n+        if (Strings.isNullOrEmpty(uniformTargetHost)) {\n+            logger.error(\"uniform target host is empty or null. skil setting.\");\n+            return this;\n+        }\n+        this.replacementVarMapNodeSpecific.clear();\n+        this.targetHosts.clear();\n+        int i = 0;\n+        for (StrStrMap ssm : replacementVarMapList) {\n+            if (ssm == null)\n+                continue;\n+            String hostName = PcConstants.API_PREFIX + i;\n+            ssm.addPair(PcConstants.UNIFORM_TARGET_HOST_VAR, uniformTargetHost);\n+            replacementVarMapNodeSpecific.put(hostName, ssm);\n+            targetHosts.add(hostName);\n+            ++i;\n+        }\n+        this.requestReplacementType = RequestReplacementType.TARGET_HOST_SPECIFIC_VAR_REPLACEMENT;\n+        logger.info(\n+                \"Set requestReplacementType as {} for single target. Will disable the set target hosts.\"\n+                        + \"Also Simulated \"\n+                        + \"Now Already set targetHost list with size {}. \\nPLEASE NOT TO SET TARGET HOSTS AGAIN WITH THIS API.\",\n+                requestReplacementType.toString(), targetHosts.size());\n+\n+        return this;\n+    }\n+\n+    /**\n+     * Gets the replacement var map.\n+     * \n+     * @return the replacement var map\n+     */\n+    public Map<String, String> getReplacementVarMap() {\n+        return replacementVarMap;\n+    }\n+\n+\n+    /**\n+     * Sets the replacement var map.\n+     *\n+     * @param replacementVarMap\n+     *            the replacement var map\n+     * @return the parallel task builder\n+     */\n+    public ParallelTaskBuilder setReplacementVarMap(\n+            Map<String, String> replacementVarMap) {\n+        this.replacementVarMap = replacementVarMap;\n+\n+        // TODO Check and warning of overwriting\n+        // set as uniform\n+        this.requestReplacementType = RequestReplacementType.UNIFORM_VAR_REPLACEMENT;\n+        return this;\n+    }\n+\n+    /**\n+     * Gets the request replacement type.\n+     *\n+     * @return the request replacement type\n+     */\n+    public RequestReplacementType getRequestReplacementType() {\n+        return requestReplacementType;\n+    }\n+\n+    /**\n+     * Sets the request replacement type.\n+     *\n+     * @param requestReplacementType            the new request replacement type\n+     * @return the parallel task builder\n+     */\n+    public ParallelTaskBuilder setRequestReplacementType(\n+            RequestReplacementType requestReplacementType) {\n+        this.requestReplacementType = requestReplacementType;\n+        return this;\n+    }\n+\n+    /**\n+     * Sets the HTTP pollable.\n+     * if the task is for an async API that needs to poll progress.\n+     * \n+     * @param isPollable\n+     *            the is pollable\n+     * @return the parallel task builder\n+     */\n+    public ParallelTaskBuilder setHttpPollable(boolean isPollable) {\n+        this.httpMeta.setPollable(isPollable);\n+\n+        return this;\n+    }\n+\n+    /**\n+     * Sets the HTTP poller processor to handle Async API.\n+     * Will auto enable the pollable mode with this call\n+     *\n+     * @param httpPollerProcessor\n+     *            the http poller processor\n+     * @return the parallel task builder\n+     */\n+    public ParallelTaskBuilder setHttpPollerProcessor(\n+            HttpPollerProcessor httpPollerProcessor) {\n+        this.httpMeta.setHttpPollerProcessor(httpPollerProcessor);\n+        this.httpMeta.setPollable(true);\n+        return this;\n+    }\n+\n+\n+    /* (non-Javadoc)\n+     * @see java.lang.Object#toString()\n+     */\n+    public String toString() {\n+        return \"PTaskBuilder [acm=\" + httpMeta + \", nodeGroupSourceMetadata=\"\n+                + targetHostMeta + \", replacementVarMapNodeSpecific=\"\n+                + replacementVarMapNodeSpecific + \", replacementVarMap=\"\n+                + replacementVarMap + \", requestReplacementType=\"\n+                + requestReplacementType + \", targetHosts=\" + targetHosts\n+                + \", thb=\" + targetHostBuilder \n+                + \", responseContext=\" + responseContext\n+                + \", mode=\" + mode + \"]\";\n+    }\n+\n+    /**\n+     * Sets the ssh command line.\n+     * @param commandLine\n+     *            the command line\n+     * @return the parallel task builder\n+     */\n+    public ParallelTaskBuilder setSshCommandLine(String commandLine) {\n+        this.sshMeta.setCommandLine(commandLine);\n+        return this;\n+    }\n+\n+    /**\n+     * Sets the ssh port.\n+     *\n+     * @param sshPort\n+     *            the ssh port\n+     * @return the parallel task builder\n+     */\n+    public ParallelTaskBuilder setSshPort(int sshPort) {\n+        this.sshMeta.setSshPort(sshPort);\n+        return this;\n+    }\n+\n+    /**\n+     * Sets the ssh user name.\n+     *\n+     * @param userName\n+     *            the user name\n+     * @return the parallel task builder\n+     */\n+    public ParallelTaskBuilder setSshUserName(String userName) {\n+        this.sshMeta.setUserName(userName);\n+        return this;\n+    }\n+\n+\n+    /**\n+     * Sets the ssh password.\n+     *\n+     * @param password\n+     *            the password\n+     * @return the parallel task builder\n+     */\n+    public ParallelTaskBuilder setSshPassword(String password) {\n+        this.sshMeta.setPassword(password);\n+        this.sshMeta.setSshLoginType(SshLoginType.PASSWORD);\n+        return this;\n+    }\n+\n+    /**\n+     * Sets the ssh login type.\n+     *\n+     * @param sshLoginType\n+     *            the ssh login type\n+     * @return the parallel task builder\n+     */\n+    public ParallelTaskBuilder setSshLoginType(SshLoginType sshLoginType) {\n+        this.sshMeta.setSshLoginType(sshLoginType);\n+        return this;\n+    }\n+\n+\n+    /**\n+     * Sets the ssh priv key relative path. \n+     * Note that must be relative path for now.\n+     * This default to no need of passphrase for the private key.\n+     * Will also auto set the login type to key based.\n+     * \n+     * @param privKeyRelativePath\n+     *            the priv key relative path\n+     * @return the parallel task builder\n+     */\n+    public ParallelTaskBuilder setSshPrivKeyRelativePath(\n+            String privKeyRelativePath) {\n+        this.sshMeta.setPrivKeyRelativePath(privKeyRelativePath);\n+        this.sshMeta.setSshLoginType(SshLoginType.KEY);\n+        return this;\n+    }\n+\n+    /**\n+     * Sets the ssh priv key need passphrase and set value.\n+     *\n+     * @param userName\n+     *            the user name\n+     * @return the parallel task builder\n+     */\n+    public ParallelTaskBuilder setSshPrivKeyRelativePathWtihPassphrase(\n+            String privKeyRelativePath, String passphrase) {\n+        this.sshMeta.setPrivKeyRelativePath(privKeyRelativePath);\n+        this.sshMeta.setPrivKeyUsePassphrase(true);\n+        this.sshMeta.setPassphrase(passphrase);\n+        this.sshMeta.setSshLoginType(SshLoginType.KEY);\n+        return this;\n+    }\n+\n+\n+    /**\n+     * Sets the ssh connection timeout millis.\n+     *\n+     * @param sshConnectionTimeoutMillis\n+     *            the ssh connection timeout millis\n+     * @return the parallel task builder\n+     */\n+    public ParallelTaskBuilder setSshConnectionTimeoutMillis(\n+            int sshConnectionTimeoutMillis) {\n+        this.sshMeta.setSshConnectionTimeoutMillis(sshConnectionTimeoutMillis);\n+        return this;\n+    }\n+\n+    /**\n+     * Sets the tcp port.\n+     *\n+     * @param tcpPort\n+     *            the tcp port\n+     * @return the parallel task builder\n+     */\n+    public ParallelTaskBuilder setTcpPort(int tcpPort) {\n+        this.tcpMeta.setTcpPort(tcpPort);\n+        return this;\n+    }\n+\n+    /**\n+     * Sets the tcp connect timeout millis.\n+     *\n+     * @param tcpConnectTimeoutMillis\n+     *            the tcp connect timeout millis\n+     * @return the parallel task builder\n+     */\n+    public ParallelTaskBuilder setTcpConnectTimeoutMillis(\n+            int tcpConnectTimeoutMillis) {\n+        this.tcpMeta.setTcpConnectTimeoutMillis(tcpConnectTimeoutMillis);\n+        return this;\n+    }\n+    \n+    /**\n+     * Sets the tcp idle timeout sec.\n+     *\n+     * @param tcpIdleTimeoutSec the tcp idle timeout sec\n+     * @return the parallel task builder\n+     */\n+    public ParallelTaskBuilder setTcpIdleTimeoutSec(\n+            int tcpIdleTimeoutSec) {\n+        this.tcpMeta.setTcpIdleTimeoutSec(tcpIdleTimeoutSec);\n+        return this;\n+    }\n+\n+    /**\n+     * Sets the tcp channel factory.\n+     *\n+     * @param channelFactory\n+     *            the channel factory\n+     * @return the parallel task builder\n+     */\n+    public ParallelTaskBuilder setTcpChannelFactory(\n+            ChannelFactory channelFactory) {\n+        this.tcpMeta.setChannelFactory(channelFactory);\n+        return this;\n+    }\n+\n+\n+    /**\n+     * Sets the config.\n+     *\n+     * @param config\n+     *            the config\n+     * @return the parallel task builder\n+     */\n+    public ParallelTaskBuilder setConfig(ParallelTaskConfig config) {\n+        this.config = config;\n+        return this;\n+    }\n+\n+    /**\n+     * Gets the config.\n+     *\n+     * @return the config\n+     */\n+    public ParallelTaskConfig getConfig() {\n+        return config;\n+    }\n+\n+    /**\n+     * Sets the save response to task.\n+     *\n+     * @param saveResponseToTask\n+     *            the save response to task\n+     * @return the parallel task builder\n+     */\n+    public ParallelTaskBuilder setSaveResponseToTask(boolean saveResponseToTask) {\n+        this.config.setSaveResponseToTask(saveResponseToTask);\n+        return this;\n+    }\n+\n+    /**\n+     * Sets the enable capacity aware task scheduler.\n+     * \n+     * OPTIONAL. DEFAULT: false. \n+     * @param enableCapacityAwareTaskScheduler\n+     *            the enable capacity aware task scheduler\n+     * @return the parallel task builder\n+     */\n+    public ParallelTaskBuilder setEnableCapacityAwareTaskScheduler(\n+            boolean enableCapacityAwareTaskScheduler) {\n+        this.config\n+                .setEnableCapacityAwareTaskScheduler(enableCapacityAwareTaskScheduler);\n+        return this;\n+    }\n+\n+    /**\n+     * Sets the auto save log to local.\n+     * \n+     * OPTIONAL. DEFAULT: false. \n+     * @param autoSaveLogToLocal\n+     *            the auto save log to local\n+     * @return the parallel task builder\n+     */\n+    public ParallelTaskBuilder setAutoSaveLogToLocal(boolean autoSaveLogToLocal) {\n+        this.config.setAutoSaveLogToLocal(autoSaveLogToLocal);\n+        return this;\n+    }\n+\n+    /**\n+     * Gets the tcp meta.\n+     *\n+     * @return the tcp meta\n+     */\n+    public TcpMeta getTcpMeta() {\n+        return tcpMeta;\n+    }\n+\n+    /**\n+     * Sets the tcp meta.\n+     *\n+     * @param tcpMeta\n+     *            the new tcp meta\n+     */\n+    public void setTcpMeta(TcpMeta tcpMeta) {\n+        this.tcpMeta = tcpMeta;\n+    }\n+\n+    /**\n+     * Gets the request protocol.\n+     *\n+     * @return the request protocol\n+     */\n+    public RequestProtocol getRequestProtocol() {\n+        return requestProtocol;\n+    }\n+\n+\n+    /**\n+     * Gets the concurrency.\n+     *\n+     * @return the concurrency\n+     */\n+    public int getConcurrency() {\n+        return concurrency;\n+    }\n+\n+    \n+    /**\n+     * Sets the ping mode.\n+     *\n+     * @param mode the mode\n+     * @return the parallel task builder\n+     */\n+    public ParallelTaskBuilder setPingMode(PingMode mode) {\n+        this.pingMeta.setMode(mode);\n+        return this;\n+    }\n+\n+    /**\n+     * Sets the ping timeout millis.\n+     *\n+     * @param pingTimeoutMillis the ping timeout millis\n+     * @return the parallel task builder\n+     */\n+    public ParallelTaskBuilder setPingTimeoutMillis(int pingTimeoutMillis) {\n+        this.pingMeta.setPingTimeoutMillis(pingTimeoutMillis);\n+        return this;\n+    }\n+\n+    /**\n+     * Sets the ping num retries.\n+     *\n+     * @param numRetries the num retries\n+     * @return the parallel task builder\n+     */\n+    public ParallelTaskBuilder setPingNumRetries(int numRetries) {\n+        this.pingMeta.setNumRetries(numRetries);\n+        return this;\n+    }\n+    \n+\n+    \n+}"
            },
            {
                "sha": "8dcfdefc03c6906acefdd9d1de1f6ac61c4e0455",
                "filename": "src/main/java/io/parallec/core/RequestProtocol.java",
                "status": "added",
                "additions": 46,
                "deletions": 0,
                "changes": 46,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FRequestProtocol.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FRequestProtocol.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FRequestProtocol.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,46 @@\n+/*  \n+Copyright [2013-2015] eBay Software Foundation\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+    http://www.apache.org/licenses/LICENSE-2.0\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+ */\n+package io.parallec.core;\n+\n+\n+/**\n+ * The Enum RequestProtocol.\n+ * \n+ * Currently values include HTTP, HTTPS, SSH, PING, TCP\n+ * \n+ * @author Yuanteng Jeff Pei\n+ */\n+public enum RequestProtocol {\n+\n+    /** The HTTP. */\n+    HTTP,\n+    /** The HTTPS. */\n+    HTTPS,\n+    /** The SSH. */\n+    SSH,\n+    /** The PING (ICMP). */\n+    PING,\n+    /** The TCP. */\n+    TCP;\n+    \n+    /*\n+     * (non-Javadoc)\n+     * \n+     * @see java.lang.Enum#toString()\n+     */\n+    @Override\n+    public String toString() {\n+        return super.toString().toLowerCase();\n+    }\n+\n+}"
            },
            {
                "sha": "bfddca8efaa309ade00650353f047d9eb5e6548a",
                "filename": "src/main/java/io/parallec/core/ResponseOnSingleTask.java",
                "status": "added",
                "additions": 306,
                "deletions": 0,
                "changes": 306,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FResponseOnSingleTask.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FResponseOnSingleTask.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2FResponseOnSingleTask.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,306 @@\n+/*  \n+Copyright [2013-2015] eBay Software Foundation\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+    http://www.apache.org/licenses/LICENSE-2.0\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+ */\n+package io.parallec.core;\n+\n+import io.parallec.core.bean.TaskRequest;\n+import io.parallec.core.util.PcConstants;\n+import io.parallec.core.util.PcStringUtils;\n+\n+import java.util.LinkedHashMap;\n+import java.util.Map;\n+\n+// TODO: Auto-generated Javadoc\n+/**\n+ * this includes the request\n+ * each target host will have one.\n+ * \n+ * For easy import and usability, move this class from message package to main package\n+ * @author Yuanteng Jeff Pei\n+ * \n+ */\n+/**\n+ * @author Yuanteng Jeff Pei\n+ *\n+ */\n+public class ResponseOnSingleTask {\n+\n+    /** The request. */\n+    // Request attributes\n+    private TaskRequest request;\n+\n+    /** The response content. */\n+    private String responseContent;\n+    // for pollable job: the complete time. otherwise it is the receive time for\n+    /** The receive time. */\n+    // the http response\n+    private String receiveTime = PcConstants.NA;\n+\n+    /** The receive time in manager. */\n+    private String receiveTimeInManager = PcConstants.NA;\n+\n+    /** The error. */\n+    private Boolean error = null;\n+\n+    /** The error message. */\n+    private String errorMessage = PcConstants.NA;\n+\n+    /** The stack trace. */\n+    private String stackTrace = PcConstants.NA;\n+\n+    /** The status code. */\n+    private String statusCode = PcConstants.NA;\n+\n+    /** The status code int. */\n+    private int statusCodeInt = PcConstants.NA_INT;\n+\n+    /**\n+     * The operation time millis. From when the Operation worker received the\n+     * request, to when operation worker finish and return back the response on\n+     * single task\n+     */\n+    private long operationTimeMillis;\n+\n+    /** The polling history map. */\n+    // for polling history 201412\n+    final private Map<String, String> pollingHistoryMap = new LinkedHashMap<String, String>();\n+\n+    /**\n+     * Gets the polling history map.\n+     *\n+     * @return the polling history map\n+     */\n+    public Map<String, String> getPollingHistoryMap() {\n+        return pollingHistoryMap;\n+    }\n+\n+    /**\n+     * Gets the polling history.\n+     *\n+     * @return the polling history\n+     */\n+    public String getPollingHistory() {\n+        return PcStringUtils.renderJson(pollingHistoryMap);\n+    }\n+\n+    /**\n+     * Instantiates a new response on single task.\n+     */\n+    public ResponseOnSingleTask() {\n+        super();\n+    }\n+\n+    /**\n+     * Gets the receive time.\n+     *\n+     * @return the receive time\n+     */\n+    public String getReceiveTime() {\n+        return receiveTime;\n+    }\n+\n+    /**\n+     * Sets the receive time.\n+     *\n+     * @param receiveTime\n+     *            the new receive time\n+     */\n+    public void setReceiveTime(String receiveTime) {\n+        this.receiveTime = receiveTime;\n+    }\n+\n+    /**\n+     * Gets the response content.\n+     *\n+     * @return the response content\n+     */\n+    public String getResponseContent() {\n+        return responseContent;\n+    }\n+\n+    /**\n+     * Sets the response content.\n+     *\n+     * @param responseContent\n+     *            the new response content\n+     */\n+    public void setResponseContent(String responseContent) {\n+        this.responseContent = responseContent;\n+    }\n+\n+    /**\n+     * Gets the receive time in manager.\n+     *\n+     * @return the receive time in manager\n+     */\n+    public String getReceiveTimeInManager() {\n+        return receiveTimeInManager;\n+    }\n+\n+    /**\n+     * Sets the receive time in manager.\n+     *\n+     * @param receiveTimeInManager\n+     *            the new receive time in manager\n+     */\n+    public void setReceiveTimeInManager(String receiveTimeInManager) {\n+        this.receiveTimeInManager = receiveTimeInManager;\n+    }\n+\n+    /**\n+     * Checks if is error.\n+     *\n+     * @return true, if is error\n+     */\n+    public boolean isError() {\n+        return error;\n+    }\n+\n+    /**\n+     * Sets the error.\n+     *\n+     * @param error\n+     *            the new error\n+     */\n+    public void setError(boolean error) {\n+        this.error = error;\n+    }\n+\n+    /**\n+     * Gets the stack trace.\n+     *\n+     * @return the stack trace\n+     */\n+    public String getStackTrace() {\n+        return stackTrace;\n+    }\n+\n+    /**\n+     * Sets the stack trace.\n+     *\n+     * @param stackTrace\n+     *            the new stack trace\n+     */\n+    public void setStackTrace(String stackTrace) {\n+        this.stackTrace = stackTrace;\n+    }\n+\n+    /**\n+     * Gets the operation time millis.\n+     *\n+     * @return the operation time millis\n+     */\n+    public long getOperationTimeMillis() {\n+        return operationTimeMillis;\n+    }\n+\n+    /**\n+     * Sets the operation time millis.\n+     *\n+     * @param operationTimeMillis\n+     *            the new operation time millis\n+     */\n+    public void setOperationTimeMillis(long operationTimeMillis) {\n+        this.operationTimeMillis = operationTimeMillis;\n+    }\n+\n+    /**\n+     * Gets the status code.\n+     *\n+     * @return the status code\n+     */\n+    public String getStatusCode() {\n+        return statusCode;\n+    }\n+\n+    /**\n+     * Sets the status code.\n+     *\n+     * @param statusCode\n+     *            the new status code\n+     */\n+    public void setStatusCode(String statusCode) {\n+        this.statusCode = statusCode;\n+    }\n+\n+    /**\n+     * Gets the request.\n+     *\n+     * @return the request\n+     */\n+    public TaskRequest getRequest() {\n+        return request;\n+    }\n+\n+    /**\n+     * Sets the request.\n+     *\n+     * @param request\n+     *            the new request\n+     */\n+    public void setRequest(TaskRequest request) {\n+        this.request = request;\n+    }\n+\n+    /**\n+     * Gets the host.\n+     *\n+     * @return the host\n+     */\n+    public String getHost() {\n+        return this.request == null ? PcConstants.NA : this.request.getHost();\n+    }\n+\n+    /**\n+     * Gets the error message.\n+     *\n+     * @return the error message\n+     */\n+    public String getErrorMessage() {\n+        return errorMessage;\n+    }\n+\n+    /**\n+     * Sets the error message.\n+     *\n+     * @param errorMessage\n+     *            the new error message\n+     */\n+    public void setErrorMessage(String errorMessage) {\n+        this.errorMessage = errorMessage;\n+    }\n+\n+    /*\n+     * (non-Javadoc)\n+     * \n+     * @see java.lang.Object#toString()\n+     */\n+    @Override\n+    public String toString() {\n+        return \"SingleTaskResponse [request=\" + request + \", responseContent=\"\n+                + responseContent + \", receiveTime=\" + receiveTime\n+                + \", receiveTimeInManager=\" + receiveTimeInManager + \", error=\"\n+                + error + \", errorMessage=\" + errorMessage + \", stackTrace=\"\n+                + stackTrace + \", statusCode=\" + statusCode\n+                + \", operationTimeMillis=\" + operationTimeMillis\n+                + \", pollingHistoryMap=\" + pollingHistoryMap + \"]\";\n+    }\n+\n+    public int getStatusCodeInt() {\n+        return statusCodeInt;\n+    }\n+\n+    public void setStatusCodeInt(int statusCodeInt) {\n+        this.statusCodeInt = statusCodeInt;\n+    }\n+\n+}"
            },
            {
                "sha": "407f6c9d4bd4d8e746a0dcdecda5701b9e4c8534",
                "filename": "src/main/java/io/parallec/core/actor/ActorConfig.java",
                "status": "added",
                "additions": 108,
                "deletions": 0,
                "changes": 108,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FActorConfig.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FActorConfig.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FActorConfig.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,108 @@\n+/*  \n+Copyright [2013-2015] eBay Software Foundation\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+    http://www.apache.org/licenses/LICENSE-2.0\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+ */\n+package io.parallec.core.actor;\n+\n+import io.parallec.core.util.PcConstants;\n+\n+import java.util.concurrent.TimeUnit;\n+import java.util.concurrent.atomic.AtomicInteger;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import scala.concurrent.duration.Duration;\n+import scala.concurrent.duration.FiniteDuration;\n+import akka.actor.ActorSystem;\n+\n+import com.typesafe.config.Config;\n+import com.typesafe.config.ConfigFactory;\n+\n+// TODO: Auto-generated Javadoc\n+/**\n+ * The static akka actor system\n+ */\n+public final class ActorConfig {\n+\n+    /** The conf. */\n+    private static Config conf = null;\n+\n+    /** The actor system. */\n+    private static ActorSystem actorSystem = null;\n+\n+    private static AtomicInteger runningJobCount = new AtomicInteger(0);\n+\n+    /** The logger. */\n+    private static Logger logger = LoggerFactory.getLogger(ActorConfig.class);\n+    static {\n+\n+        // load default\n+        conf = ConfigFactory.load(\"actorconfig.conf\");\n+        logger.debug(\"Load Actor config {}\", conf.toString());\n+        actorSystem = ActorSystem.create(PcConstants.ACTOR_SYSTEM, conf);\n+\n+    }\n+\n+    /**\n+     * Create and get actor system.\n+     *\n+     * @return the actor system\n+     */\n+    public static ActorSystem createAndGetActorSystem() {\n+        if (actorSystem == null || actorSystem.isTerminated()) {\n+            actorSystem = ActorSystem.create(PcConstants.ACTOR_SYSTEM, conf);\n+        }\n+        return actorSystem;\n+    }\n+\n+    /**\n+     * Shut down actor system when no job running.\n+     */\n+    public static void shutDownActorSystemWhenNoJobRunning() {\n+        if (!actorSystem.isTerminated() && runningJobCount.get() == 0) {\n+            actorSystem.shutdown();\n+        }\n+    }\n+\n+    /** The Constant timeOutDuration. */\n+    // wait for 10 seconds\n+    public static final FiniteDuration timeOutDuration = Duration.create(10,\n+            TimeUnit.SECONDS);\n+\n+    /**\n+     * Shut down actor system force.\n+     */\n+    public static void shutDownActorSystemForce() {\n+        if (!actorSystem.isTerminated()) {\n+            logger.info(\"shutting down actor system...\");\n+            actorSystem.shutdown();\n+            actorSystem.awaitTermination(timeOutDuration);\n+            logger.info(\"Actor system has been shut down.\");\n+        } else {\n+            logger.info(\"Actor system has been terminated already. NO OP.\");\n+        }\n+\n+    }\n+\n+\n+\n+\n+    /**\n+     * Gets the timeoutduration.\n+     *\n+     * @return the timeoutduration\n+     */\n+    public static FiniteDuration getTimeoutduration() {\n+        return timeOutDuration;\n+    }\n+\n+}"
            },
            {
                "sha": "7432eb097cc848eb93d0b970a161da741906b811",
                "filename": "src/main/java/io/parallec/core/actor/AssistantExecutionManager.java",
                "status": "added",
                "additions": 231,
                "deletions": 0,
                "changes": 231,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FAssistantExecutionManager.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FAssistantExecutionManager.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FAssistantExecutionManager.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,231 @@\n+/*  \n+Copyright [2013-2015] eBay Software Foundation\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+    http://www.apache.org/licenses/LICENSE-2.0\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+ */\n+package io.parallec.core.actor;\n+\n+import io.parallec.core.actor.message.ContinueToSendToBatchSenderAsstManager;\n+import io.parallec.core.actor.message.RequestToBatchSenderAsstManager;\n+import io.parallec.core.actor.message.ResponseCountToBatchSenderAsstManager;\n+import io.parallec.core.actor.message.type.OperationWorkerMsgType;\n+import io.parallec.core.config.ParallecGlobalConfig;\n+import io.parallec.core.util.PcDateUtils;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.concurrent.TimeUnit;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import scala.concurrent.duration.Duration;\n+import akka.actor.ActorRef;\n+import akka.actor.UntypedActor;\n+\n+// TODO: Auto-generated Javadoc\n+/**\n+ * \n+ * 20131014; update major logic to enable concurrency control\n+ * \n+ * 20130730 The assistant manager is soley for sending out requests in batch;\n+ * with interval based sleep 1. Enables IN PARALLEL sending batch requests and\n+ * geting response 2. Enables > 5K nodes per requests. The manager gives all\n+ * request sending task to this AssistantExecutionManager. this guy\n+ * tells workers to directly reply back to the original manager. So that\n+ * requests and replies can happen the same time.\n+ * \n+ * @author Yuanteng Jeff Pei\n+ * \n+ */\n+public class AssistantExecutionManager extends UntypedActor {\n+\n+    /** The logger. */\n+    private static Logger logger = LoggerFactory\n+            .getLogger(AssistantExecutionManager.class);\n+\n+    private long asstManagerRetryIntervalMillis;\n+\n+    /** The response count. */\n+    protected int responseCount = 0;\n+\n+    /** The request total count. */\n+    protected int requestTotalCount = 0;\n+\n+    /** The start time. */\n+    protected long startTime = System.currentTimeMillis();\n+\n+    /** The end time. */\n+    protected long endTime = -1L;\n+\n+    /** The original manager. */\n+    protected ActorRef originalManager = null;\n+\n+    /** The workers. */\n+    protected List<ActorRef> workers = new ArrayList<ActorRef>();\n+\n+    /** The max concurrency adjusted. */\n+    protected int maxConcurrencyAdjusted = ParallecGlobalConfig.concurrencyDefault;\n+\n+    /** The processed worker count. */\n+    protected int processedWorkerCount = 0;\n+\n+    protected String taskId = null;\n+\n+    protected String taskIdTrim = null;\n+\n+    /**\n+     * Instantiates a new assistant execution manager.\n+     */\n+    public AssistantExecutionManager() {\n+    };\n+\n+    /**\n+     * Note that if there is sleep in this method.\n+     *\n+     * @param stopCount\n+     *            the stop count\n+     */\n+\n+    public void sendMessageUntilStopCount(int stopCount) {\n+\n+        // always send with valid data.\n+        for (int i = processedWorkerCount; i < workers.size(); ++i) {\n+            ActorRef worker = workers.get(i);\n+            try {\n+\n+                /**\n+                 * !!! This is a must; without this sleep; stuck occured at 5K.\n+                 * AKKA seems cannot handle too much too fast message send out.\n+                 */\n+                Thread.sleep(1L);\n+\n+            } catch (InterruptedException e) {\n+                logger.error(\"sleep exception \" + e + \" details: \", e);\n+            }\n+\n+            // send as if the sender is the origin manager; so reply back to\n+            // origin manager\n+            worker.tell(OperationWorkerMsgType.PROCESS_REQUEST, originalManager);\n+\n+            processedWorkerCount++;\n+\n+            if (processedWorkerCount > stopCount) {\n+                return;\n+            }\n+\n+            logger.debug(\"REQ_SENT: {} / {} taskId {}\", \n+                 processedWorkerCount, requestTotalCount, taskIdTrim);\n+\n+        }// end for loop\n+    }\n+\n+    /**\n+     * Wait and retry.\n+     */\n+    public void waitAndRetry() {\n+        ContinueToSendToBatchSenderAsstManager continueToSendToBatchSenderAsstManager = new ContinueToSendToBatchSenderAsstManager(\n+                processedWorkerCount);\n+\n+        logger.debug(\"NOW WAIT Another \" + asstManagerRetryIntervalMillis\n+                + \" MS. at \" + PcDateUtils.getNowDateTimeStrStandard());\n+        getContext()\n+                .system()\n+                .scheduler()\n+                .scheduleOnce(\n+                        Duration.create(asstManagerRetryIntervalMillis,\n+                                TimeUnit.MILLISECONDS), getSelf(),\n+                        continueToSendToBatchSenderAsstManager,\n+                        getContext().system().dispatcher(), getSelf());\n+        return;\n+    }\n+\n+    /*\n+     * (non-Javadoc)\n+     * \n+     * @see akka.actor.UntypedActor#onReceive(java.lang.Object)\n+     */\n+    public void onReceive(Object message) {\n+\n+        // Start all workers\n+        if (message instanceof RequestToBatchSenderAsstManager) {\n+\n+            // clear responseMap\n+\n+            RequestToBatchSenderAsstManager request = (RequestToBatchSenderAsstManager) message;\n+            originalManager = getSender();\n+            taskId = request.getTaskId();\n+            asstManagerRetryIntervalMillis = request\n+                    .getAsstManagerRetryIntervalMillis();\n+            // assumption: at least 12\n+            taskIdTrim = taskId.length() <= 12 ? taskId\n+                    : taskId.substring(taskId.length() - 12,\n+                            taskId.length());\n+            workers = request.getWorkers();\n+            maxConcurrencyAdjusted = request.getMaxConcurrency();\n+\n+            requestTotalCount = workers.size();\n+\n+            sendMessageUntilStopCount(maxConcurrencyAdjusted);\n+\n+            // if not completed; will schedule a continue send msg\n+            if (processedWorkerCount < requestTotalCount) {\n+\n+                waitAndRetry();\n+                return;\n+            } else {\n+                logger.info(\"Now finished sending all needed messages. Done job of ASST Manager at \"\n+                        + PcDateUtils.getNowDateTimeStrStandard());\n+                return;\n+            }\n+        } else if (message instanceof ContinueToSendToBatchSenderAsstManager) {\n+\n+            // now reaching the end; have processed all of them, just waiting\n+            // the response to come back\n+            int notProcessedNodeCount = requestTotalCount\n+                    - processedWorkerCount;\n+            if (notProcessedNodeCount <= 0) {\n+                logger.info(\"!Finished sending all msg in ASST MANAGER at \"\n+                        + PcDateUtils.getNowDateTimeStrStandard()\n+\n+                        + \" STOP doing wait and retry.\");\n+                return;\n+            }\n+\n+            int extraSendCount = maxConcurrencyAdjusted\n+                    - (processedWorkerCount - responseCount);\n+\n+            if (extraSendCount > 0) {\n+                logger.info(\"HAVE ROOM to send extra of : \" + extraSendCount\n+                        + \" MSG. now Send at \"\n+                        + PcDateUtils.getNowDateTimeStrStandard());\n+\n+                sendMessageUntilStopCount(processedWorkerCount + extraSendCount);\n+                waitAndRetry();\n+            } else {\n+                logger.info(\"NO ROOM to send extra. Windowns is full. extraSendCount is negative: \"\n+                        + extraSendCount\n+                        + \" reschedule now at \"\n+                        + PcDateUtils.getNowDateTimeStrStandard());\n+                waitAndRetry();\n+\n+            }\n+        } else if (message instanceof ResponseCountToBatchSenderAsstManager) {\n+\n+            responseCount = ((ResponseCountToBatchSenderAsstManager) message)\n+                    .getResponseCount();\n+\n+            logger.debug(\"RECV IN batchSenderAsstManager FROM ExecutionManager responseCount: \"\n+                    + responseCount);\n+\n+        }\n+    }\n+\n+}"
            },
            {
                "sha": "d32302dc46ddbf55d9b9f952823fbb78fc321076",
                "filename": "src/main/java/io/parallec/core/actor/ExecutionManager.java",
                "status": "added",
                "additions": 674,
                "deletions": 0,
                "changes": 674,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FExecutionManager.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FExecutionManager.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FExecutionManager.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,674 @@\n+/*  \n+Copyright [2013-2015] eBay Software Foundation\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+    http://www.apache.org/licenses/LICENSE-2.0\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+ */\n+package io.parallec.core.actor;\n+\n+import io.parallec.core.ParallecResponseHandler;\n+import io.parallec.core.ParallelTask;\n+import io.parallec.core.RequestProtocol;\n+import io.parallec.core.ResponseOnSingleTask;\n+import io.parallec.core.actor.message.CancelTaskOnHostRequest;\n+import io.parallec.core.actor.message.InitialRequestToManager;\n+import io.parallec.core.actor.message.NodeReqResponse;\n+import io.parallec.core.actor.message.RequestToBatchSenderAsstManager;\n+import io.parallec.core.actor.message.ResponseCountToBatchSenderAsstManager;\n+import io.parallec.core.actor.message.ResponseFromManager;\n+import io.parallec.core.actor.message.type.ExecutionManagerMsgType;\n+import io.parallec.core.actor.message.type.OperationWorkerMsgType;\n+import io.parallec.core.bean.HttpMeta;\n+import io.parallec.core.bean.SingleTargetTaskStatus;\n+import io.parallec.core.bean.TargetHostMeta;\n+import io.parallec.core.bean.TaskRequest;\n+import io.parallec.core.bean.ping.PingMeta;\n+import io.parallec.core.bean.ssh.SshMeta;\n+import io.parallec.core.bean.tcp.TcpMeta;\n+import io.parallec.core.commander.workflow.InternalDataProvider;\n+import io.parallec.core.config.HandlerExecutionLocation;\n+import io.parallec.core.config.ParallecGlobalConfig;\n+import io.parallec.core.exception.ExecutionManagerExecutionException;\n+import io.parallec.core.exception.ExecutionManagerExecutionException.ManagerExceptionType;\n+import io.parallec.core.resources.HttpMethod;\n+import io.parallec.core.task.ParallelTaskState;\n+import io.parallec.core.task.TaskErrorMeta;\n+import io.parallec.core.task.TaskErrorMeta.TaskErrorType;\n+import io.parallec.core.util.PcConstants;\n+import io.parallec.core.util.PcDateUtils;\n+import io.parallec.core.util.PcHttpUtils;\n+\n+import java.util.ArrayList;\n+import java.util.Date;\n+import java.util.HashMap;\n+import java.util.LinkedHashMap;\n+import java.util.LinkedHashSet;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Map.Entry;\n+import java.util.UUID;\n+import java.util.concurrent.TimeUnit;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import scala.concurrent.duration.Duration;\n+import scala.concurrent.duration.FiniteDuration;\n+import akka.actor.ActorRef;\n+import akka.actor.Cancellable;\n+import akka.actor.Props;\n+import akka.actor.UntypedActor;\n+\n+import com.google.common.base.Strings;\n+import com.ning.http.client.AsyncHttpClient;\n+\n+/**\n+ * This is the Akka Actor that executes the ParallelTask.\n+ * \n+ * Will create a list of operation workers to match each of the target hosts.\n+ * \n+ * @author Yuanteng Jeff Pei\n+ * \n+ */\n+public class ExecutionManager extends UntypedActor {\n+\n+    /** The logger. */\n+    private static Logger logger = LoggerFactory\n+            .getLogger(ExecutionManager.class);\n+\n+    /** The response count. */\n+    protected int responseCount = 0;\n+\n+    /** The request count. */\n+    protected int requestCount = 0;\n+\n+    /** The start time. */\n+    protected long startTime = System.currentTimeMillis();\n+\n+    /** The was issued cancel. */\n+    protected boolean wasIssuedCancel = false;\n+\n+    /** The end time. */\n+    protected long endTime = -1L;\n+\n+    /** The director. */\n+    protected ActorRef director = null;\n+\n+    /** The workers. */\n+    protected final Map<String, ActorRef> workers = new LinkedHashMap<String, ActorRef>();\n+\n+    /** The batch sender asst manager. */\n+    protected ActorRef batchSenderAsstManager = null;\n+\n+    /** The response map. */\n+    protected final Map<String, ResponseOnSingleTask> responseMap = new HashMap<String, ResponseOnSingleTask>();\n+\n+    /** The task id. */\n+    protected String taskId = null;\n+\n+    /** The task id trim. */\n+    protected String taskIdTrim = null;\n+\n+    /** The timeout message cancellable. */\n+    protected Cancellable timeoutMessageCancellable = null;\n+\n+    /** The async http client global. */\n+    protected AsyncHttpClient asyncHttpClientGlobal = null;\n+\n+    /** The parallel task. */\n+    protected ParallelTask task = null;\n+\n+    /** The command metadata. */\n+    protected HttpMeta httpMeta = null;\n+\n+    /** The node group metadata. */\n+    protected TargetHostMeta targetHostMeta = null;\n+\n+    /**\n+     * Instantiates a new command manager.\n+     *\n+     * @param task the task\n+     */\n+    public ExecutionManager(ParallelTask task) {\n+        this.task = task;\n+    }\n+\n+    /** The Constant REDUCE_LEN. */\n+    public static final int REDUCE_LEN = 12;\n+\n+    /*\n+     * (non-Javadoc)\n+     * \n+     * @see akka.actor.UntypedActor#onReceive(java.lang.Object)\n+     */\n+    @Override\n+    public void onReceive(Object message) {\n+        try {\n+            // Start all workers\n+            if (message instanceof InitialRequestToManager) {\n+                director = getSender();\n+                logger.info(\"parallec task state : \"\n+                        + ParallelTaskState.IN_PROGRESS.toString());\n+                task.setState(ParallelTaskState.IN_PROGRESS);\n+                task.setExecuteStartTime(startTime);\n+\n+                taskId = task.getTaskId();\n+\n+                // assumption: at least REDUCE_LEN\n+                taskIdTrim = taskId.length() <= REDUCE_LEN ? taskId : taskId\n+                        .substring(taskId.length() - REDUCE_LEN,\n+                                taskId.length());\n+\n+                httpMeta = task.getHttpMeta();\n+                targetHostMeta = task.getTargetHostMeta();\n+                final RequestProtocol requestProtocol = task.getRequestProtocol();\n+\n+                // Get request parameters to construct a REST CALL\n+                final String requestUrlPrefixOrig = httpMeta\n+                        .getRequestUrlPostfix();\n+                final HttpMethod httpMethod = httpMeta.getHttpMethod();\n+                final int requestPort = Integer.parseInt(httpMeta\n+                        .getRequestPort());\n+                final boolean pollable = httpMeta.isPollable();\n+\n+                final int maxConcurrency = task.getConcurrency();\n+\n+                Map<String, NodeReqResponse> nodeDataMapValid = task\n+                        .getParallelTaskResult();\n+\n+                logger.info(\"Before Safety Check: total entry count: \"\n+                        + nodeDataMapValid.size());\n+\n+                Map<String, NodeReqResponse> nodeDataMapValidSafe = new HashMap<String, NodeReqResponse>();\n+\n+                InternalDataProvider.getInstance()\n+                        .filterUnsafeOrUnnecessaryRequest(nodeDataMapValid,\n+                                nodeDataMapValidSafe );\n+\n+                logger.info(\n+                        \"After Safety Check: total entry count in nodeDataMapValidSafe: {}\",\n+                        nodeDataMapValidSafe.size());\n+\n+                logger.debug(\"maxConcurrency : {}\", maxConcurrency);\n+\n+                // after filter, no duplicated target hosts for this count.\n+                requestCount = nodeDataMapValidSafe.size();\n+                task.setRequestNumActual(requestCount);\n+\n+                logger.info(\"!Obtain command request for target host meta id \"\n+                        + targetHostMeta.getTargetHostId() + \"  with count: \"\n+                        + requestCount);\n+                // If there are no target hosts in the incoming message, send a\n+                // message back\n+                if (requestCount <= 0) {\n+                    getSender().tell(new ResponseFromManager(requestCount),\n+                            getSelf());\n+                    logger.info(\"req count <=0. return\");\n+                    // not really error. just no task to run\n+                    reply(ParallelTaskState.COMPLETED_WITHOUT_ERROR,\n+                            new RuntimeException(\n+                                    \"ReqCount after trim is 0. Return.\"));\n+                    return;\n+                }\n+\n+                int sentRequestCounter = 0;\n+\n+                asyncHttpClientGlobal = task.getAsyncHttpClient();\n+\n+                final AsyncHttpClient asyncHttpClient = asyncHttpClientGlobal;\n+\n+                // always send with valid safe data.\n+                for (Entry<String, NodeReqResponse> entry : nodeDataMapValidSafe\n+                        .entrySet()) {\n+\n+                    final String targetHost = entry.getKey();\n+                    NodeReqResponse nodeReqResponse = entry.getValue();\n+\n+                    final String requestContentOrig = nodeReqResponse.getRequestParameters().get(\n+                                    PcConstants.REQUEST_BODY_PLACE_HOLDER);\n+\n+                    final String requestContent = NodeReqResponse\n+                            .replaceStrByMap(\n+                                    nodeReqResponse.getRequestParameters(),\n+                                    requestContentOrig);\n+                    final String resourcePath = NodeReqResponse\n+                            .replaceStrByMap(\n+                                    nodeReqResponse.getRequestParameters(),\n+                                    requestUrlPrefixOrig);\n+\n+                    //only pass when it is not in manager\n+                    final ParallecResponseHandler handler = \n+                            task.getConfig().getHandlerExecutionLocation()==HandlerExecutionLocation.MANAGER\n+                            ? null : task.getHandler();\n+                    final Map<String, Object> responseContext =\n+                            task.getConfig().getHandlerExecutionLocation()==HandlerExecutionLocation.MANAGER\n+                            ? null : task.getResponseContext();\n+                    Map<String, String> httpHeaderMapLocal = new HashMap<String, String>();\n+                    httpHeaderMapLocal.putAll(httpMeta.getHeaderMetadata()\n+                            .getHeaderMap());\n+\n+                    // 3rd, add the dynamic part ; generic var based\n+                    // replacement.\n+                    PcHttpUtils.replaceHttpHeaderMapNodeSpecific(\n+                            httpHeaderMapLocal,\n+                            nodeReqResponse.getRequestParameters());\n+\n+                    /**\n+                     * If want to print to check\n+                     */\n+                    if (task.getConfig().isPrintHttpTrueHeaderMap()) {\n+\n+                        for (Entry<String, String> headerEntry : httpHeaderMapLocal\n+                                .entrySet()) {\n+                            String headerKey = headerEntry.getKey();\n+                            String headerValue = headerEntry.getValue();\n+\n+                            nodeReqResponse\n+                                    .getRequestParameters()\n+                                    .put(PcConstants.REQUEST_PARAMETER_HTTP_HEADER_PREFIX\n+                                            + headerKey, headerValue);\n+                        }\n+\n+                    }\n+\n+                    if (task.getConfig().isPrintPoller()) {\n+                        // put the one before encoding\n+                        nodeReqResponse.getRequestParameters().put(\n+                                PcConstants.NODE_REQUEST_NEED_POLLER,\n+                                Boolean.toString(pollable));\n+                    }\n+\n+                    /**\n+                     * 20140310: END add pass HTTP header into Operation worker\n+                     * as part of the\n+                     */\n+\n+                    String targetHostNew = nodeReqResponse\n+                            .getRequestParameters()\n+                            .get(PcConstants.UNIFORM_TARGET_HOST_VAR_WHEN_CHECK);\n+                    if (targetHostNew != null) {\n+                        nodeReqResponse.getRequestParameters().put(\n+                                PcConstants.NODE_REQUEST_TRUE_TARGET_NODE,\n+                                targetHostNew);\n+                    }\n+\n+                    final String hostUniform = (targetHostNew == null) ? null\n+                            : targetHostNew;\n+\n+                    nodeReqResponse.getRequestParameters().put(\n+                            PcConstants.NODE_REQUEST_STATUS,\n+                            SingleTargetTaskStatus.IN_PROGRESS.toString());\n+\n+                    nodeReqResponse.getRequestParameters().put(\n+                            PcConstants.NODE_REQUEST_TRUE_CONTENT,\n+                            requestContent);\n+\n+                    // put the one before encoding\n+                    nodeReqResponse.getRequestParameters().put(\n+                            PcConstants.NODE_REQUEST_TRUE_URL, resourcePath);\n+\n+                    nodeReqResponse.getRequestParameters().put(\n+                            PcConstants.NODE_REQUEST_TRUE_PORT,\n+                            Integer.toString(requestPort));\n+\n+                    nodeReqResponse.getRequestParameters().put(\n+                            PcConstants.NODE_REQUEST_HTTP_HEADER_META,\n+                            httpMeta.getHeaderMetadata().getHeaderStr());\n+\n+                    long prepareRequestTime = System.currentTimeMillis();\n+\n+                    String prepareRequestTimeStr = PcDateUtils\n+                            .getDateTimeStrStandard(new Date(prepareRequestTime));\n+                    nodeReqResponse.getRequestParameters().put(\n+                            PcConstants.NODE_REQUEST_PREPARE_TIME,\n+                            prepareRequestTimeStr);\n+\n+                    final SshMeta sshMeta = task.getSshMeta();\n+                    final TcpMeta tcpMeta = task.getTcpMeta();\n+                    final PingMeta pingMeta = task.getPingMeta();\n+                    \n+                    logger.debug(\"REQUEST GENERATED: \"\n+                            + (int) (sentRequestCounter + 1)\n+                            + \" / \"\n+                            + requestCount\n+                            + \" after \"\n+                            + new Double(\n+                                    (prepareRequestTime - startTime) / 1000.0)\n+                                    .toString() + \" secs\"\n+                            + \":  (NOT SEND YET) \" + targetHost + \" at \"\n+                            + prepareRequestTimeStr);\n+\n+                    ActorRef worker = getContext().system().actorOf(\n+                            Props.create(\n+                                    OperationWorker.class,\n+                                    new TaskRequest(task.getConfig()\n+                                            .getActorMaxOperationTimeoutSec(),\n+                                            requestProtocol,\n+                                            targetHost, hostUniform,\n+                                            requestPort, resourcePath,\n+                                            requestContent, httpMethod\n+                                                    , pollable,\n+                                            httpHeaderMapLocal, \n+                                            handler,responseContext,\n+                                            sshMeta, tcpMeta, pingMeta),\n+                                    asyncHttpClient, task.getHttpMeta()\n+                                            .getHttpPollerProcessor()\n+\n+                            ));\n+\n+                    workers.put(targetHost, worker);\n+\n+                    ++sentRequestCounter;\n+\n+                }// end for loop\n+\n+                final RequestToBatchSenderAsstManager requestToBatchSenderAsstManager = new RequestToBatchSenderAsstManager(\n+                        taskId, task.getConfig()\n+                                .getAsstManagerRetryIntervalMillis(),\n+                        new ArrayList<ActorRef>(workers.values()), getSelf(),\n+                        maxConcurrency);\n+\n+                batchSenderAsstManager = getContext().system().actorOf(\n+                        Props.create(AssistantExecutionManager.class),\n+                        \"RequestToBatchSenderAsstManager-\"\n+                                + UUID.randomUUID().toString());\n+\n+                batchSenderAsstManager.tell(requestToBatchSenderAsstManager,\n+                        getSelf());\n+\n+                final FiniteDuration timeOutDuration = Duration\n+                        .create(task.getConfig().getTimeoutInManagerSec(),\n+                                TimeUnit.SECONDS);\n+                timeoutMessageCancellable = getContext()\n+                        .system()\n+                        .scheduler()\n+                        .scheduleOnce(timeOutDuration, getSelf(),\n+                                ExecutionManagerMsgType.OPERATION_TIMEOUT,\n+                                getContext().system().dispatcher(), getSelf());\n+\n+                logger.debug(\"Scheduled TIMEOUT_IN_MANAGER_SCONDS OPERATION_TIMEOUT after SEC {} \",\n+                         task.getConfig().getTimeoutInManagerSec());\n+            } else if (message instanceof ResponseOnSingleTask) {\n+\n+                ResponseOnSingleTask taskResponse = (ResponseOnSingleTask) message;\n+\n+                this.responseCount += 1;\n+                task.setResponsedNum(responseCount);\n+\n+                /**\n+                 * add feedback of current responseCount to asst manager\n+                 * ResponseCountToBatchSenderAsstManager\n+                 */\n+                final ResponseCountToBatchSenderAsstManager responseCountToBatchSenderAsstManager = new ResponseCountToBatchSenderAsstManager(\n+                        this.responseCount);\n+\n+                batchSenderAsstManager.tell(\n+                        responseCountToBatchSenderAsstManager, getSelf());\n+\n+                logger.debug(\"Send batchSenderAsstManager to responseCountToBatchSenderAsstManager: \"\n+                        + this.responseCount);\n+\n+                String hostName = taskResponse.getRequest().getHost();\n+                if (responseMap.containsKey(hostName)) {\n+\n+                    logger.error(\"ERROR: dupliated response received: \"\n+                            + hostName + PcDateUtils.getNowDateTimeStr());\n+                }\n+                responseMap.put(hostName, taskResponse);\n+\n+                String responseSummary = taskResponse.isError() ? \"FAIL_GET_RESPONSE: \"\n+                        + taskResponse.getErrorMessage()\n+                        : taskResponse.getStatusCode();\n+                Map<String, LinkedHashSet<String>> resultMap = task\n+                        .getAggregateResultMap();\n+                if (resultMap.containsKey(responseSummary)) {\n+                    resultMap.get(responseSummary).add(hostName);\n+                } else {\n+                    LinkedHashSet<String> set = new LinkedHashSet<String>();\n+                    set.add(hostName);\n+                    resultMap.put(responseSummary, set);\n+                }\n+\n+                // save response to result map\n+                NodeReqResponse nrr = task.getParallelTaskResult()\n+                        .get(hostName);\n+                nrr.setSingleTaskResponse(taskResponse);\n+\n+                String responseTrim = taskResponse.getResponseContent() == null ? null\n+                        : taskResponse.getResponseContent().trim();\n+                String displayResponse = (Strings.isNullOrEmpty(responseTrim)) ? \"EMPTY\"\n+                        : responseTrim\n+                                .substring(\n+                                        0,\n+                                        Math.min(\n+                                                PcConstants.AGNET_RESPONSE_MAX_RESPONSE_DISPLAY_BYTE,\n+                                                responseTrim.length()));\n+\n+                long responseReceiveTime = System.currentTimeMillis();\n+                // %.5g%n\n+                double progressPercent = (double) (responseCount)\n+                        / (double) (requestCount) * 100.0;\n+                String responseReceiveTimeStr = PcDateUtils\n+                        .getDateTimeStrStandard(new Date(responseReceiveTime));\n+                String secondElapsedStr = new Double(\n+                        (responseReceiveTime - startTime) / 1000.0).toString();\n+                \n+                // log the first/ last 5 percent; then sample the middle\n+                if(requestCount < ParallecGlobalConfig.logAllResponseIfTotalLessThan\n+                        || responseCount <= ParallecGlobalConfig.logAllResponseBeforeInitCount\n+                        || progressPercent < ParallecGlobalConfig.logAllResponseBeforePercent\n+                        || progressPercent > ParallecGlobalConfig.logAllResponseAfterPercent\n+                        || responseCount % ParallecGlobalConfig.logResponseInterval==0\n+                        ){\n+                    // percent is escaped using percent sign; \n+                    logger.info(String\n+                            .format(\"\\n[%d]__RESP_RECV_IN_MGR %d (+%d) / %d (%.5g%%)  \"\n+                                    + \"AFT %s S @ %s @ %s , TaskID : %s , CODE: %s, RESP_BRIEF: %s %s\",\n+                                    responseCount, responseCount, requestCount\n+                                    - responseCount, requestCount,\n+                                    progressPercent, secondElapsedStr, hostName,\n+                                    responseReceiveTimeStr, taskIdTrim,\n+                                    taskResponse.getStatusCode(), displayResponse,\n+                                    taskResponse.getErrorMessage()==null? \"\" : \", ERR: \"+ taskResponse.getErrorMessage()));\n+                }\n+\n+                nrr.getRequestParameters().put(PcConstants.NODE_REQUEST_STATUS,\n+                        SingleTargetTaskStatus.COMPLETED.toString());\n+\n+                if (task.getConfig().getHandlerExecutionLocation()==HandlerExecutionLocation.MANAGER\n+                        &&  task != null && task.getHandler() != null) {\n+                    try {\n+                        //logger.debug(\"HANDLE In manager: \" + taskResponse.getHost());\n+                        task.getHandler().onCompleted(taskResponse,\n+                                task.getResponseContext());\n+                    } catch (Exception t) {\n+                        logger.error(\"Error handling onCompleted in manager for response: {} Error {}\"\n+                                , taskResponse.toString(),  t.getLocalizedMessage());\n+                    }\n+                }\n+\n+                if (!task.getConfig().isSaveResponseToTask()) {\n+                    taskResponse.setResponseContent(PcConstants.NOT_SAVED);\n+                    logger.debug(\"Set single task response content as Not Saved to save space.\");\n+                }\n+\n+                if (this.responseCount == this.requestCount) {\n+                    if (wasIssuedCancel) {\n+                        ExecutionManagerExecutionException exCanceled = new ExecutionManagerExecutionException(\n+                                \"ExecutionManager: task was canceled by user\",\n+                                ManagerExceptionType.CANCEL);\n+                        reply(ParallelTaskState.COMPLETED_WITH_ERROR,\n+                                exCanceled);\n+                    } else {\n+                        reply(ParallelTaskState.COMPLETED_WITHOUT_ERROR, null);\n+                    }\n+\n+                }// end when all requests have resonponse\n+\n+            } else if (message instanceof CancelTaskOnHostRequest) {\n+                CancelTaskOnHostRequest msg = (CancelTaskOnHostRequest) message;\n+                cancelRequestAndWorkerOnHost(msg.getTargetHosts());\n+\n+            } else if (message instanceof ExecutionManagerMsgType) {\n+                switch ((ExecutionManagerMsgType) message) {\n+\n+                // this will immediately return. not waiting for the op workers\n+                // reply\n+                case OPERATION_TIMEOUT:\n+                    cancelRequestAndWorkers();\n+                    ExecutionManagerExecutionException ex = new ExecutionManagerExecutionException(\n+                            \"Manager timeout after\",\n+                            ManagerExceptionType.TIMEOUT);\n+                    reply(ParallelTaskState.COMPLETED_WITH_ERROR, ex);\n+                    break;\n+                // this will wait for the works to reply.\n+                case CANCEL:\n+                    cancelRequestAndWorkers();\n+                    wasIssuedCancel = true;\n+                    break;\n+                default:\n+                    break;\n+                }\n+            } else {\n+                logger.error(\"Unhandled: \" + message);\n+                unhandled(message);\n+            }\n+\n+        } catch (Exception t) {\n+            logger.error(\"Command Manager error: \" + t + \" trace: \", t);\n+\n+            // not to terminate: but add error details. Will exit after timeout\n+            // or cancel\n+            task.getTaskErrorMetas().add(\n+                    new TaskErrorMeta(TaskErrorType.COMMAND_MANAGER_ERROR,\n+                            t == null ? \"NA\" : t.getLocalizedMessage()));\n+            reply(ParallelTaskState.COMPLETED_WITH_ERROR, t);\n+\n+        }\n+\n+    }// end func\n+\n+    /**\n+     * reply will terminal the actor and return the results.\n+     *\n+     * @param state\n+     *            the state\n+     * @param t\n+     *            the exception\n+     */\n+    @SuppressWarnings(\"deprecation\")\n+    private void reply(ParallelTaskState state, Exception t) {\n+\n+        task.setState(state);\n+\n+        logger.info(\"task.state : \" + task.getState().toString());\n+\n+        logger.info(\"task.totalJobNumActual : \" + task.getRequestNumActual()\n+                + \" InitCount: \" + task.getRequestNum());\n+        logger.info(\"task.response received Num {} \", task.getResponsedNum());\n+\n+        if (state == ParallelTaskState.COMPLETED_WITH_ERROR) {\n+            task.getTaskErrorMetas().add(\n+                    new TaskErrorMeta(TaskErrorType.COMMAND_MANAGER_ERROR,\n+                            t == null ? \"NA\" : t.getLocalizedMessage()));\n+\n+            logger.info(\"COMPLETED_WITH_ERROR.  \" + this.requestCount\n+                    + \" at time: \" + PcDateUtils.getNowDateTimeStrStandard());\n+\n+        } else {\n+            logger.info(\"SUCCESSFUL GOT ON ALL RESPONSES: Received all the expected messages. Count matches: \"\n+                    + this.requestCount\n+                    + \" at time: \"\n+                    + PcDateUtils.getNowDateTimeStrStandard());\n+\n+        }\n+\n+        ResponseFromManager batchResponseFromManager = new ResponseFromManager(\n+                responseMap.size());\n+\n+        responseMap.clear();\n+        director.tell(batchResponseFromManager, getSelf());\n+\n+        // Send message to the future with the result\n+        endTime = System.currentTimeMillis();\n+\n+        task.setExecutionEndTime(endTime);\n+\n+        double durationSec = (endTime - startTime) / 1000.0;\n+        task.setDurationSec(durationSec);\n+        logger.info(\"\\nTime taken to get all responses back : \" + durationSec\n+                + \" secs\");\n+        task.setExecutionEndTime(endTime);\n+        for (ActorRef worker : workers.values()) {\n+            getContext().stop(worker);\n+        }\n+        workers.clear();\n+\n+        if (batchSenderAsstManager != null && !batchSenderAsstManager.isTerminated()) {\n+            getContext().stop(batchSenderAsstManager);\n+        }\n+\n+        if (timeoutMessageCancellable != null) {\n+            timeoutMessageCancellable.cancel();\n+        }\n+        \n+        if (getSelf() != null && !getSelf().isTerminated()) {\n+            getContext().stop(getSelf());\n+        }\n+    }\n+\n+    /**\n+     * Cancel request and workers.\n+     */\n+    @SuppressWarnings(\"deprecation\")\n+    private void cancelRequestAndWorkers() {\n+\n+        for (ActorRef worker : workers.values()) {\n+            if (worker != null && !worker.isTerminated()) {\n+                worker.tell(OperationWorkerMsgType.CANCEL, getSelf());\n+            }\n+        }\n+\n+        logger.info(\"ExecutionManager sending cancelPendingRequest at time: \"\n+                + PcDateUtils.getNowDateTimeStr());\n+    }\n+\n+    /**\n+     * Cancel request and worker on host.\n+     *\n+     * @param targetHosts the target hosts\n+     */\n+    @SuppressWarnings(\"deprecation\")\n+    private void cancelRequestAndWorkerOnHost(List<String> targetHosts) {\n+\n+        List<String> validTargetHosts = new ArrayList<String>(workers.keySet());\n+        validTargetHosts.retainAll(targetHosts);\n+        logger.info(\"targetHosts for cancel: Total: {}\"\n+                + \" Valid in current manager with worker threads: {}\",\n+                targetHosts.size(), validTargetHosts.size());\n+\n+        for (String targetHost : validTargetHosts) {\n+\n+            ActorRef worker = workers.get(targetHost);\n+\n+            if (worker != null && !worker.isTerminated()) {\n+                worker.tell(OperationWorkerMsgType.CANCEL, getSelf());\n+                logger.info(\"Submitted CANCEL request on Host {}\", targetHost);\n+            } else {\n+                logger.info(\n+                        \"Dit NOT Submitted \"\n+                                + \"CANCEL request on Host {} as worker on this host is null or already killed\",\n+                        targetHost);\n+            }\n+\n+        }\n+\n+    }\n+\n+}"
            },
            {
                "sha": "05c9ae6b8b2959657049e6053d056d2e200f3af6",
                "filename": "src/main/java/io/parallec/core/actor/HttpWorker.java",
                "status": "added",
                "additions": 444,
                "deletions": 0,
                "changes": 444,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FHttpWorker.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FHttpWorker.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FHttpWorker.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,444 @@\n+/*  \n+Copyright [2013-2015] eBay Software Foundation\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+    http://www.apache.org/licenses/LICENSE-2.0\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+ */\n+package io.parallec.core.actor;\n+\n+import io.parallec.core.actor.message.ResponseOnSingeRequest;\n+import io.parallec.core.actor.message.type.RequestWorkerMsgType;\n+import io.parallec.core.exception.ActorMessageTypeInvalidException;\n+import io.parallec.core.exception.HttpRequestCreateException;\n+import io.parallec.core.resources.HttpMethod;\n+import io.parallec.core.util.PcConstants;\n+import io.parallec.core.util.PcDateUtils;\n+import io.parallec.core.util.PcErrorMsgUtils;\n+import io.parallec.core.util.PcHttpUtils;\n+import io.parallec.core.util.PcStringUtils;\n+\n+import java.io.IOException;\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.concurrent.TimeUnit;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import scala.concurrent.duration.Duration;\n+import scala.concurrent.duration.FiniteDuration;\n+import akka.actor.ActorRef;\n+import akka.actor.Cancellable;\n+//import akka.actor.PoisonPill;\n+import akka.actor.UntypedActor;\n+\n+import com.ning.http.client.AsyncCompletionHandler;\n+import com.ning.http.client.AsyncHttpClient;\n+import com.ning.http.client.AsyncHttpClient.BoundRequestBuilder;\n+import com.ning.http.client.ListenableFuture;\n+import com.ning.http.client.Response;\n+\n+// TODO: Auto-generated Javadoc\n+/**\n+ * This is an akka actor with async http client.\n+ *\n+ * @author Yuanteng Jeff Pei\n+ */\n+public class HttpWorker extends UntypedActor {\n+\n+    private int actorMaxOperationTimeoutSec;\n+\n+    /** The client. */\n+    private final AsyncHttpClient client;\n+\n+    /** The request url. */\n+    private final String requestUrl;\n+\n+    /** The http method. */\n+    private final HttpMethod httpMethod;\n+\n+    /** The post data. */\n+    private final String postData;\n+\n+    /** The logger. */\n+    private static Logger logger = LoggerFactory.getLogger(HttpWorker.class);\n+\n+    /** The http header map. */\n+    // 20140310\n+    private final Map<String, String> httpHeaderMap = new HashMap<String, String>();\n+\n+    /** The sender. */\n+    private ActorRef sender = null;\n+\n+    /** The cause. */\n+    // cause will be the exception to log as in PROCESS_ON_EXCEPTION\n+    private Throwable cause;\n+\n+    /** The try count. */\n+    private int tryCount = 0;\n+\n+    /** The timeout message cancellable. */\n+    private Cancellable timeoutMessageCancellable = null;\n+\n+    /** The timeout duration. */\n+    private FiniteDuration timeoutDuration = null;\n+\n+    /** The sent reply. */\n+    // private FiniteDuration retryDuration = null;\n+    private boolean sentReply = false;\n+\n+    /** The response future. */\n+    // 20150221\n+    ListenableFuture<ResponseOnSingeRequest> responseFuture = null;\n+\n+    /**\n+     * Instantiates a new http worker.\n+     *\n+     * @param client\n+     *            the client\n+     * @param requestUrl\n+     *            the request url\n+     * @param httpMethod\n+     *            the http method\n+     * @param postData\n+     *            the post data\n+     * @param httpHeaderMap\n+     *            the http header map\n+     */\n+    public HttpWorker(final int actorMaxOperationTimeoutSec,\n+            final AsyncHttpClient client, final String requestUrl,\n+            final HttpMethod httpMethod, final String postData,\n+            final Map<String, String> httpHeaderMap\n+\n+    ) {\n+        this.actorMaxOperationTimeoutSec = actorMaxOperationTimeoutSec;\n+        this.client = client;\n+        this.requestUrl = requestUrl;\n+        this.httpMethod = httpMethod;\n+        this.postData = postData;\n+        if (httpHeaderMap != null)\n+            this.httpHeaderMap.putAll(httpHeaderMap);\n+\n+    }\n+\n+    /**\n+     * Creates the request.\n+     *\n+     * @return the bound request builder\n+     * @throws HttpRequestCreateException\n+     *             the http request create exception\n+     */\n+    public BoundRequestBuilder createRequest()\n+            throws HttpRequestCreateException {\n+        BoundRequestBuilder builder = null;\n+\n+        getLogger().debug(\"AHC completeUrl \" + requestUrl);\n+\n+        try {\n+\n+            switch (httpMethod) {\n+            case GET:\n+                builder = client.prepareGet(requestUrl);\n+                break;\n+            case POST:\n+                builder = client.preparePost(requestUrl);\n+                break;\n+            case PUT:\n+                builder = client.preparePut(requestUrl);\n+                break;\n+            case HEAD:\n+                builder = client.prepareHead(requestUrl);\n+                break;\n+            case OPTIONS:\n+                builder = client.prepareOptions(requestUrl);\n+                break;\n+            case DELETE:\n+                builder = client.prepareDelete(requestUrl);\n+                break;\n+            default:\n+                break;\n+            }\n+\n+            PcHttpUtils.addHeaders(builder, this.httpHeaderMap);\n+            if (!PcStringUtils.isNullOrEmpty(postData)) {\n+                builder.setBody(postData);\n+            }\n+\n+        } catch (Exception t) {\n+            throw new HttpRequestCreateException(\n+                    \"Error in creating request in Httpworker. \"\n+                            + \" If BoundRequestBuilder is null. Then fail to create.\",\n+                    t);\n+        }\n+\n+        return builder;\n+\n+    }\n+\n+    /*\n+     * (non-Javadoc)\n+     * \n+     * @see akka.actor.UntypedActor#onReceive(java.lang.Object)\n+     */\n+    @Override\n+    public void onReceive(Object message) throws Exception {\n+        try {\n+            if (message instanceof RequestWorkerMsgType) {\n+                switch ((RequestWorkerMsgType) message) {\n+                case PROCESS_REQUEST:\n+                    tryCount++;\n+\n+                    if (tryCount == 1) {\n+                        sender = getSender();\n+\n+                        BoundRequestBuilder request = createRequest();\n+\n+                        // 20150229: create the future and make sure future is\n+                        // killed when timeout.\n+                        responseFuture = request.execute(new HttpAsyncHandler(\n+                                this));\n+                        timeoutDuration = Duration.create(\n+                                actorMaxOperationTimeoutSec, TimeUnit.SECONDS);\n+\n+                        // To handle cases where nio response never comes back,\n+                        // we\n+                        // schedule a 'timeout' message to be sent to us 2\n+                        // seconds\n+                        // after NIO's SO_TIMEOUT\n+                        timeoutMessageCancellable = getContext()\n+                                .system()\n+                                .scheduler()\n+                                .scheduleOnce(\n+                                        timeoutDuration,\n+                                        getSelf(),\n+                                        RequestWorkerMsgType.PROCESS_ON_TIMEOUT,\n+                                        getContext().system().dispatcher(),\n+                                        getSelf());\n+                    } else {\n+                        getLogger().error(\n+                                \"duplicated PROCESS_REQUEST msg. ignore...\");\n+                    }\n+                    break;\n+\n+                case CANCEL:\n+                    getLogger().info(\n+                            \"Request was CANCELLED.................{}\",\n+                            requestUrl);\n+                    cancelCancellable();\n+                    if (sender == null)\n+                        sender = getSender();\n+                    reply(null, true, PcConstants.REQUEST_CANCELED,\n+                            PcConstants.REQUEST_CANCELED, PcConstants.NA,\n+                            PcConstants.NA_INT);\n+                    break;\n+\n+                case PROCESS_ON_EXCEPTION:\n+\n+                    String errorSummary = PcErrorMsgUtils.replaceErrorMsg(cause\n+                            .toString());\n+                    String stackTrace = PcStringUtils.printStackTrace(cause);\n+                    cancelCancellable();\n+                    reply(null, true, errorSummary, stackTrace, PcConstants.NA,\n+                            PcConstants.NA_INT);\n+\n+                    break;\n+\n+                case PROCESS_ON_TIMEOUT:\n+\n+                    getLogger().error(\"PROCESS_ON_TIMEOUT.................{}\",\n+                            requestUrl);\n+                    cancelCancellable();\n+\n+                    String errorMsg = String\n+                            .format(\"HttpWorker Timedout after %d SEC (no response but no exception catched). Check URL: may be very slow or stuck.\",\n+                                    actorMaxOperationTimeoutSec);\n+\n+                    reply(null, true, errorMsg, errorMsg, PcConstants.NA,\n+                            PcConstants.NA_INT);\n+                    break;\n+\n+                case CHECK_FUTURE_STATE:\n+                default:\n+                    this.cause = new ActorMessageTypeInvalidException(\n+                            \"ActorMessageTypeInvalidException error for url \"\n+                                    + this.requestUrl);\n+                    getSelf().tell(RequestWorkerMsgType.PROCESS_ON_EXCEPTION,\n+                            getSelf());\n+                    break;\n+                }\n+            } else {\n+                unhandled(message);\n+                this.cause = new ActorMessageTypeInvalidException(\n+                        \"ActorMessageTypeInvalidException error for url \"\n+                                + this.requestUrl);\n+                getSelf().tell(RequestWorkerMsgType.PROCESS_ON_EXCEPTION,\n+                        getSelf());\n+            }\n+        } catch (Exception e) {\n+            this.cause = e;\n+            getSelf()\n+                    .tell(RequestWorkerMsgType.PROCESS_ON_EXCEPTION, getSelf());\n+        }\n+    }\n+\n+    /**\n+     */\n+    public void cancelCancellable() {\n+\n+        // responseFuture: to cancel the future.boolean cancelResponseFuture\n+        // if (cancelResponseFuture && responseFuture != null &&\n+        // !responseFuture.isDone()) {\n+        // responseFuture.cancel(true);\n+        // }\n+\n+        if (timeoutMessageCancellable != null) {\n+            timeoutMessageCancellable.cancel();\n+        }\n+\n+    }\n+\n+    /**\n+     * Reply.\n+     *\n+     * @param response\n+     *            the response\n+     * @param error\n+     *            the error\n+     * @param errorMessage\n+     *            the error message\n+     * @param stackTrace\n+     *            the stack trace\n+     * @param statusCode\n+     *            the status code\n+     * @param statusCodeInt\n+     *            the status code int\n+     */\n+    private void reply(final String response, final boolean error,\n+            final String errorMessage, final String stackTrace,\n+            final String statusCode, final int statusCodeInt) {\n+\n+        if (!sentReply) {\n+            //must update sentReply first to avoid duplicated msg.\n+            sentReply = true;\n+            final ResponseOnSingeRequest res = new ResponseOnSingeRequest(\n+                    response, error, errorMessage, stackTrace, statusCode,\n+                    statusCodeInt, PcDateUtils.getNowDateTimeStrStandard());\n+            if (!getContext().system().deadLetters().equals(sender)) {\n+                sender.tell(res, getSelf());\n+            }\n+            \n+            getContext().stop(getSelf());\n+        }\n+\n+    }\n+\n+    /**\n+     * On complete.\n+     *\n+     * @param response\n+     *            the response\n+     * @return the response on singe request\n+     */\n+    public ResponseOnSingeRequest onComplete(Response response) {\n+\n+        cancelCancellable();\n+        try {\n+\n+            int statusCodeInt = response.getStatusCode();\n+            String statusCode = statusCodeInt + \" \" + response.getStatusText();\n+\n+            reply(response.getResponseBody(), false, null, null, statusCode,\n+                    statusCodeInt);\n+        } catch (IOException e) {\n+            getLogger().error(\"fail response.getResponseBody \" + e);\n+        }\n+\n+        return null;\n+    }\n+\n+    /**\n+     * On throwable.\n+     *\n+     * @param cause\n+     *            the cause\n+     */\n+    public void onThrowable(Throwable cause) {\n+        this.cause = cause;\n+        getSelf().tell(RequestWorkerMsgType.PROCESS_ON_EXCEPTION, getSelf());\n+\n+    }\n+\n+    /**\n+     * Gets the logger.\n+     *\n+     * @return the logger\n+     */\n+    public static Logger getLogger() {\n+        return logger;\n+    }\n+\n+    /**\n+     * Sets the logger.\n+     *\n+     * @param logger\n+     *            the new logger\n+     */\n+    public static void setLogger(Logger logger) {\n+        HttpWorker.logger = logger;\n+    }\n+\n+    /**\n+     * Async HTTP Client handler wrapper.\n+     */\n+    static class HttpAsyncHandler extends\n+            AsyncCompletionHandler<ResponseOnSingeRequest> {\n+\n+        /** The http worker. */\n+        private final HttpWorker httpWorker;\n+\n+        /**\n+         * Instantiates a new http async handler.\n+         *\n+         * @param httpWorker\n+         *            the http worker\n+         */\n+        public HttpAsyncHandler(HttpWorker httpWorker) {\n+            this.httpWorker = httpWorker;\n+        }\n+\n+        /*\n+         * (non-Javadoc)\n+         * \n+         * @see\n+         * com.ning.http.client.AsyncCompletionHandler#onCompleted(com.ning.\n+         * http.client.Response)\n+         */\n+        @Override\n+        public ResponseOnSingeRequest onCompleted(Response response)\n+                throws Exception {\n+\n+            ResponseOnSingeRequest myResponse = null;\n+            httpWorker.onComplete(response);\n+            return myResponse;\n+        }\n+\n+        /*\n+         * (non-Javadoc)\n+         * \n+         * @see\n+         * com.ning.http.client.AsyncCompletionHandler#onThrowable(java.lang\n+         * .Throwable)\n+         */\n+        @Override\n+        public void onThrowable(Throwable t) {\n+            httpWorker.onThrowable(t);\n+        }\n+    }// end class\n+\n+}"
            },
            {
                "sha": "2ebd36b928ec7b8267f6a208ba9c38d813b0d634",
                "filename": "src/main/java/io/parallec/core/actor/OperationWorker.java",
                "status": "added",
                "additions": 565,
                "deletions": 0,
                "changes": 565,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FOperationWorker.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FOperationWorker.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FOperationWorker.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,565 @@\n+/*  \n+Copyright [2013-2015] eBay Software Foundation\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+    http://www.apache.org/licenses/LICENSE-2.0\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+ */\n+package io.parallec.core.actor;\n+\n+import io.parallec.core.RequestProtocol;\n+import io.parallec.core.ResponseOnSingleTask;\n+import io.parallec.core.actor.message.ResponseOnSingeRequest;\n+import io.parallec.core.actor.message.type.OperationWorkerMsgType;\n+import io.parallec.core.actor.message.type.RequestWorkerMsgType;\n+import io.parallec.core.actor.poll.HttpPollerProcessor;\n+import io.parallec.core.actor.poll.PollerData;\n+import io.parallec.core.bean.TaskRequest;\n+import io.parallec.core.config.ParallelTaskConfigDefault;\n+import io.parallec.core.exception.ActorMessageTypeInvalidException;\n+import io.parallec.core.resources.HttpMethod;\n+import io.parallec.core.util.PcConstants;\n+import io.parallec.core.util.PcDateUtils;\n+import io.parallec.core.util.PcHttpUtils;\n+import io.parallec.core.util.PcStringUtils;\n+\n+import java.util.concurrent.TimeUnit;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import scala.concurrent.duration.Duration;\n+import scala.concurrent.duration.FiniteDuration;\n+import akka.actor.ActorRef;\n+import akka.actor.Cancellable;\n+//import akka.actor.PoisonPill;\n+import akka.actor.Props;\n+import akka.actor.UntypedActor;\n+\n+import com.ning.http.client.AsyncHttpClient;\n+\n+// TODO: Auto-generated Javadoc\n+/**\n+ * AHC based.\n+ *\n+ * @author Yuanteng Jeff Pei\n+ */\n+public class OperationWorker extends UntypedActor {\n+\n+    /** The client. */\n+    private final AsyncHttpClient client;\n+\n+    /** The logger. */\n+    private static Logger logger = LoggerFactory\n+            .getLogger(OperationWorker.class);\n+\n+    /** The polling error count. */\n+    // 20150710: poller: max poller error; and retry for polling\n+    private int pollingErrorCount = 0;\n+\n+    /** The request. */\n+    private final TaskRequest request;\n+\n+    /** The response. */\n+    private ResponseOnSingleTask response = new ResponseOnSingleTask();\n+\n+    /** The async worker. */\n+    private ActorRef asyncWorker = null;\n+\n+    /** The sender. */\n+    private ActorRef sender = null;\n+\n+    /** The timeout message cancellable. */\n+    private Cancellable timeoutMessageCancellable = null;\n+\n+    /** The poll message cancellable. */\n+    private Cancellable pollMessageCancellable = null;\n+\n+    /** The timeout duration. */\n+    private FiniteDuration timeoutDuration = null;\n+\n+    private int actorMaxOperationTimeoutSec = ParallelTaskConfigDefault.actorMaxOperationTimeoutSec;\n+\n+    /** The start time millis. */\n+    private long startTimeMillis = 0;\n+\n+    /** The sent reply. */\n+    private boolean sentReply = false;\n+\n+    /** The true target node. */\n+    // 20130917: change to add uniform target node capability\n+    private String trueTargetNode;\n+\n+    /** Http Poller. */\n+    private PollerData pollerData = null;\n+\n+    /** The http poller processor. */\n+    private HttpPollerProcessor httpPollerProcessor = null;\n+\n+    /**\n+     * Instantiates a new operation worker.\n+     *\n+     * @param request\n+     *            the request\n+     * @param client\n+     *            the client\n+     * @param httpPollerProcessor\n+     *            the http poller processor\n+     */\n+    public OperationWorker(final TaskRequest request,\n+            final AsyncHttpClient client,\n+            final HttpPollerProcessor httpPollerProcessor) {\n+        super();\n+\n+        this.client = client;\n+        this.request = request;\n+        /**\n+         * 20130917: change to add uniform target node capability\n+         */\n+        this.trueTargetNode = (request.getHostUniform() == null) ? request\n+                .getHost() : request.getHostUniform();\n+\n+        // if needs poller; init\n+        if (request.isPollable()) {\n+            pollerData = new PollerData();\n+            this.httpPollerProcessor = httpPollerProcessor;\n+            logger.info(\"Request is Pollable: poller info: \"\n+                    + httpPollerProcessor.toString());\n+        }\n+\n+    }\n+\n+    /*\n+     * (non-Javadoc)\n+     * \n+     * @see akka.actor.UntypedActor#onReceive(java.lang.Object)\n+     */\n+    @Override\n+    public void onReceive(Object message) throws Exception {\n+        try {\n+            if (message instanceof OperationWorkerMsgType) {\n+                switch ((OperationWorkerMsgType) message) {\n+\n+                case PROCESS_REQUEST:\n+                    processMainRequest();\n+                    break;\n+                case POLL_PROGRESS:\n+                    pollProgress();\n+                    break;\n+                case OPERATION_TIMEOUT:\n+                    operationTimeout();\n+                    break;\n+                case CANCEL:\n+                    // use the same function\n+                    cancel();\n+                    break;\n+                }// end switch\n+            } else if (message instanceof ResponseOnSingeRequest) {\n+                final ResponseOnSingeRequest myResponse = (ResponseOnSingeRequest) message;\n+                handleHttpWorkerResponse(myResponse);\n+            } else {\n+                unhandled(message);\n+                throw new ActorMessageTypeInvalidException(\n+                        \"invalid message type to OperationWorker\");\n+            }\n+        } catch (Exception e) {\n+            reply(true, e.toString(), PcStringUtils.printStackTrace(e),\n+                    PcConstants.NA, PcConstants.NA_INT);\n+        }\n+    }\n+\n+    /**\n+     * Poller.\n+     */\n+    private final void pollProgress() {\n+\n+        final String pollUrl = this.httpPollerProcessor\n+                .getPollerRequestUrl(pollerData.getJobId());\n+\n+        final HttpMethod pollerHttpMethod = HttpMethod.GET;\n+        final String postBodyForPoller = \"\";\n+        final ActorRef pollerWorker = getContext().actorOf(\n+                Props.create(HttpWorker.class, actorMaxOperationTimeoutSec,\n+                        client, String.format(\"%s://%s:%d%s\", request\n+                                .getProtocol().toString(), trueTargetNode,\n+                                request.getPort(), pollUrl), pollerHttpMethod,\n+                        postBodyForPoller, request.getHttpHeaderMap()));\n+\n+        logger.info(\"POLL_REQ_SEND\" + pollUrl + \" \"\n+                + PcDateUtils.getNowDateTimeStrStandard());\n+\n+        pollerData\n+                .getPollingHistoryMap()\n+                .put(\"POLL_REQ_SEND_\"\n+                        + PcDateUtils.getNowDateTimeStrConciseNoZone(), pollUrl);\n+\n+        pollerWorker.tell(RequestWorkerMsgType.PROCESS_REQUEST, getSelf());\n+\n+        // reschedule cancel\n+        cancelExistingIfAnyAndScheduleTimeoutCall();\n+\n+    }\n+\n+    /**\n+     * Handle http worker response.\n+     *\n+     * @param respOnSingleReq\n+     *            the my response\n+     * @throws Exception\n+     *             the exception\n+     */\n+    private final void handleHttpWorkerResponse(\n+            ResponseOnSingeRequest respOnSingleReq) throws Exception {\n+        // Successful response from GenericAsyncHttpWorker\n+\n+        // Jeff 20310411: use generic response\n+\n+        String responseContent = respOnSingleReq.getResponseBody();\n+        response.setResponseContent(respOnSingleReq.getResponseBody());\n+\n+        /**\n+         * Poller logic if pollable: check if need to poll/ or already complete\n+         * 1. init poller data and HttpPollerProcessor 2. check if task\n+         * complete, if not, send the request again.\n+         */\n+        if (request.isPollable()) {\n+            boolean scheduleNextPoll = false;\n+            boolean errorFindingUuid = false;\n+\n+            // set JobId of the poller\n+            if (!pollerData.isUuidHasBeenSet()) {\n+                String jobId = httpPollerProcessor\n+                        .getUuidFromResponse(respOnSingleReq);\n+\n+                if (jobId.equalsIgnoreCase(PcConstants.NA)) {\n+                    errorFindingUuid = true;\n+                    pollingErrorCount++;\n+                    logger.error(\"!!POLLING_JOB_FAIL_FIND_JOBID_IN_RESPONSE!! FAIL FAST NOW. PLEASE CHECK getJobIdRegex or retry. \"\n+\n+                            + \"DEBUG: REGEX_JOBID: \"\n+                            + httpPollerProcessor.getJobIdRegex()\n+\n+                            + \"RESPONSE: \"\n+                            + respOnSingleReq.getResponseBody()\n+                            + \" polling Error count\"\n+                            + pollingErrorCount\n+                            + \" at \" + PcDateUtils.getNowDateTimeStrStandard());\n+                    // fail fast\n+                    pollerData.setError(true);\n+                    pollerData.setComplete(true);\n+\n+                } else {\n+                    pollerData.setJobIdAndMarkHasBeenSet(jobId);\n+                    // if myResponse has other errors, mark poll data as error.\n+                    pollerData.setError(httpPollerProcessor\n+                            .ifThereIsErrorInResponse(respOnSingleReq));\n+                }\n+\n+            }\n+            if (!pollerData.isError()) {\n+\n+                pollerData\n+                        .setComplete(httpPollerProcessor\n+                                .ifTaskCompletedSuccessOrFailureFromResponse(respOnSingleReq));\n+                pollerData.setCurrentProgress(httpPollerProcessor\n+                        .getProgressFromResponse(respOnSingleReq));\n+            }\n+\n+            // poll again only if not complete AND no error; 2015: change to\n+            // over limit\n+            scheduleNextPoll = !pollerData.isComplete()\n+                    && (pollingErrorCount <= httpPollerProcessor\n+                            .getMaxPollError());\n+\n+            // Schedule next poll and return. (not to answer back to manager yet\n+            // )\n+            if (scheduleNextPoll\n+                    && (pollingErrorCount <= httpPollerProcessor\n+                            .getMaxPollError())) {\n+\n+                pollMessageCancellable = getContext()\n+                        .system()\n+                        .scheduler()\n+                        .scheduleOnce(\n+                                Duration.create(httpPollerProcessor\n+                                        .getPollIntervalMillis(),\n+                                        TimeUnit.MILLISECONDS), getSelf(),\n+                                OperationWorkerMsgType.POLL_PROGRESS,\n+                                getContext().system().dispatcher(), getSelf());\n+\n+                logger.info(\"\\nPOLLER_NOW_ANOTHER_POLL: POLL_RECV_SEND\"\n+                        + String.format(\"PROGRESS:%.3f, BODY:%s \",\n+                                pollerData.getCurrentProgress(),\n+                                responseContent,\n+                                PcDateUtils.getNowDateTimeStrStandard()));\n+\n+                String responseContentNew = errorFindingUuid ? responseContent\n+                        + \"_PollingErrorCount:\" + pollingErrorCount\n+                        : responseContent;\n+                logger.info(responseContentNew);\n+                // log\n+                pollerData.getPollingHistoryMap().put(\n+                        \"RECV_\" + PcDateUtils.getNowDateTimeStrConciseNoZone(),\n+                        String.format(\"PROGRESS:%.3f, BODY:%s\",\n+                                pollerData.getCurrentProgress(),\n+                                responseContent));\n+                return;\n+            } else {\n+                pollerData\n+                        .getPollingHistoryMap()\n+                        .put(\"RECV_\"\n+                                + PcDateUtils.getNowDateTimeStrConciseNoZone(),\n+                                String.format(\n+                                        \"POLL_COMPLETED_OR_ERROR: PROGRESS:%.3f, BODY:%s \",\n+                                        pollerData.getCurrentProgress(),\n+                                        responseContent));\n+            }\n+\n+        }// end if (request.isPollable())\n+\n+        reply(respOnSingleReq.isFailObtainResponse(),\n+                respOnSingleReq.getErrorMessage(),\n+                respOnSingleReq.getStackTrace(),\n+                respOnSingleReq.getStatusCode(),\n+                respOnSingleReq.getStatusCodeInt(),\n+                respOnSingleReq.getReceiveTime());\n+\n+    }// end func\n+\n+    /**\n+     * the 1st request from the manager.\n+     */\n+    private final void processMainRequest() {\n+\n+        sender = getSender();\n+        startTimeMillis = System.currentTimeMillis();\n+        timeoutDuration = Duration.create(\n+                request.getActorMaxOperationTimeoutSec(), TimeUnit.SECONDS);\n+\n+        actorMaxOperationTimeoutSec = request.getActorMaxOperationTimeoutSec();\n+\n+        if (request.getProtocol() == RequestProtocol.HTTP \n+                || request.getProtocol() == RequestProtocol.HTTPS) {\n+            String urlComplete = String.format(\"%s://%s:%d%s\", request\n+                    .getProtocol().toString(), trueTargetNode, request\n+                    .getPort(), request.getResourcePath());\n+\n+            // http://stackoverflow.com/questions/1600291/validating-url-in-java\n+            if (!PcHttpUtils.isUrlValid(urlComplete.trim())) {\n+                String errMsg = \"INVALID_URL\";\n+                logger.error(\"INVALID_URL: \" + urlComplete + \" return..\");\n+                reply(true, errMsg, errMsg, PcConstants.NA, PcConstants.NA_INT);\n+                return;\n+            } else {\n+                logger.debug(\"url pass validation: \" + urlComplete);\n+            }\n+\n+            asyncWorker = getContext().actorOf(\n+                    Props.create(HttpWorker.class, actorMaxOperationTimeoutSec,\n+                            client, urlComplete, request.getHttpMethod(),\n+                            request.getPostData(), request.getHttpHeaderMap()));\n+\n+        } else if (request.getProtocol() == RequestProtocol.SSH ){\n+            asyncWorker = getContext().actorOf(\n+                    Props.create(SshWorker.class, actorMaxOperationTimeoutSec,\n+                            request.getSshMeta(), trueTargetNode));\n+        } else if (request.getProtocol() == RequestProtocol.TCP ){\n+            asyncWorker = getContext().actorOf(\n+                    Props.create(TcpWorker.class, actorMaxOperationTimeoutSec,\n+                            request.getTcpMeta(), trueTargetNode));            \n+        } else if (request.getProtocol() == RequestProtocol.PING ){\n+            asyncWorker = getContext().actorOf(\n+                    Props.create(PingWorker.class, actorMaxOperationTimeoutSec, request.getPingMeta(),\n+                             trueTargetNode));\n+        }\n+\n+        asyncWorker.tell(RequestWorkerMsgType.PROCESS_REQUEST, getSelf());\n+\n+        cancelExistingIfAnyAndScheduleTimeoutCall();\n+\n+    }\n+\n+    /**\n+     * \n+     * 201412: now consider the poller. With poller, will cancel this future\n+     * task and reschedule\n+     */\n+    private void cancelExistingIfAnyAndScheduleTimeoutCall() {\n+        // To handle cases where this operation takes extremely long, schedule a\n+        // 'timeout' message to be sent to us\n+\n+        if (timeoutMessageCancellable != null\n+                && !timeoutMessageCancellable.isCancelled()) {\n+            timeoutMessageCancellable.cancel();\n+\n+        }\n+\n+        // now reschedule\n+        timeoutMessageCancellable = getContext()\n+                .system()\n+                .scheduler()\n+                .scheduleOnce(timeoutDuration, getSelf(),\n+                        OperationWorkerMsgType.OPERATION_TIMEOUT,\n+                        getContext().system().dispatcher(), getSelf());\n+    }\n+\n+    /**\n+     * will trigger workers to cancel then wait for it to report back.\n+     */\n+    @SuppressWarnings(\"deprecation\")\n+    private final void operationTimeout() {\n+\n+        /**\n+         * first kill async http worker; before suicide LESSON: MUST KILL AND\n+         * WAIT FOR CHILDREN to reply back before kill itself.\n+         */\n+        cancelCancellable();\n+        if (asyncWorker != null && !asyncWorker.isTerminated()) {\n+            asyncWorker\n+                    .tell(RequestWorkerMsgType.PROCESS_ON_TIMEOUT, getSelf());\n+\n+        } else {\n+            logger.info(\"asyncWorker has been killed or uninitialized (null). \"\n+                    + \"Not send PROCESS ON TIMEOUT.\\nREQ: \"\n+                    + request.toString());\n+            reply(true, PcConstants.OPERATION_TIMEOUT,\n+                    PcConstants.OPERATION_TIMEOUT, PcConstants.NA,\n+                    PcConstants.NA_INT);\n+        }\n+\n+    }\n+\n+    @SuppressWarnings(\"deprecation\")\n+    private final void cancel() {\n+        /**\n+         * first kill async http worker; before suicide LESSON: MUST KILL AND\n+         * WAIT FOR CHILDREN to reply back before kill itself.\n+         */\n+        cancelCancellable();\n+        if (asyncWorker != null && asyncWorker.isTerminated()) {\n+            asyncWorker.tell(RequestWorkerMsgType.CANCEL, getSelf());\n+\n+        } else {\n+            logger.info(\"asyncWorker has not been initilized (null). \"\n+                    + \"Will not tell it cancel\");\n+            // in case this is the 1st request. currently only manager can send\n+            // this.\n+            if (sender == null)\n+                sender = getSender();\n+            reply(true, PcConstants.REQUEST_CANCELED,\n+                    PcConstants.REQUEST_CANCELED, PcConstants.NA,\n+                    PcConstants.NA_INT);\n+        }\n+\n+    }\n+\n+    /**\n+     * Cancel cancellable.\n+     */\n+    private final void cancelCancellable() {\n+        if (timeoutMessageCancellable != null\n+                && !timeoutMessageCancellable.isCancelled()) {\n+            timeoutMessageCancellable.cancel();\n+        }\n+        if (pollMessageCancellable != null\n+                && !pollMessageCancellable.isCancelled()) {\n+            pollMessageCancellable.cancel();\n+        }\n+    }\n+\n+    /**\n+     * Reply.\n+     *\n+     * @param error\n+     *            the error\n+     * @param errorMessage\n+     *            the error message\n+     * @param stackTrace\n+     *            the stack trace\n+     * @param statusCode\n+     *            the status code\n+     */\n+    private final void reply(final boolean error, final String errorMessage,\n+            final String stackTrace, final String statusCode,\n+            final int statusCodeInt) {\n+        reply(error, errorMessage, stackTrace, statusCode, statusCodeInt,\n+                PcConstants.NA);\n+\n+    }\n+\n+    /**\n+     * Reply.\n+     *\n+     * @param error\n+     *            the error\n+     * @param errorMessage\n+     *            the error message\n+     * @param stackTrace\n+     *            the stack trace\n+     * @param statusCode\n+     *            the status code\n+     * @param receiveTime\n+     *            the receive time\n+     */\n+    @SuppressWarnings(\"deprecation\")\n+    private final void reply(final boolean error, final String errorMessage,\n+            final String stackTrace, final String statusCode,\n+            final int statusCodeInt, final String receiveTime) {\n+        \n+        if (!sentReply) {\n+            sentReply = true;\n+            //make sure not trigger timeout anymore\n+            cancelCancellable();\n+            \n+            final long operationTimeMillis = System.currentTimeMillis()\n+                    - startTimeMillis;\n+\n+            if (sender != null\n+                    && !sender.equals(getContext().system().deadLetters())) {\n+\n+                response.setReceiveTimeInManager(PcDateUtils\n+                        .getNowDateTimeStrStandard());\n+                response.setError(error);\n+                response.setErrorMessage(errorMessage);\n+                response.setStackTrace(stackTrace);\n+                response.setOperationTimeMillis(operationTimeMillis);\n+                response.setRequest(request);\n+                response.setStatusCode(statusCode);\n+                response.setStatusCodeInt(statusCodeInt);\n+                response.setReceiveTime(receiveTime);\n+\n+                // add history.\n+                if (request.isPollable() && pollerData != null) {\n+                    response.getPollingHistoryMap().putAll(\n+                            pollerData.getPollingHistoryMap());\n+                }\n+                \n+                // handle response. if handle in manager, getHandler() will be null\n+                if (request != null && request.getHandler() != null) {\n+                    try {\n+                        //logger.debug(\"HANDLE IN WORKER : \" + response.getHost());\n+                        request.getHandler().onCompleted(response,\n+                                request.getResponseContext());\n+                    } catch (Exception t) {\n+                        logger.error(\"Error handling onCompleted in manager for response: {} Error {}\"\n+                                , response.toString(),  t.getLocalizedMessage());\n+                    }\n+                }\n+                \n+                \n+                sender.tell(response, getSelf());\n+            }\n+\n+            \n+            if (asyncWorker != null && !asyncWorker.isTerminated()) {\n+                getContext().stop(asyncWorker);\n+            } \n+        }\n+    }\n+\n+}"
            },
            {
                "sha": "65e7a504dbc33fd5c33d0b220baca4d381d417fb",
                "filename": "src/main/java/io/parallec/core/actor/PingWorker.java",
                "status": "added",
                "additions": 397,
                "deletions": 0,
                "changes": 397,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FPingWorker.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FPingWorker.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FPingWorker.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,397 @@\n+/*  \n+Copyright [2013-2015] eBay Software Foundation\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+    http://www.apache.org/licenses/LICENSE-2.0\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+ */\n+package io.parallec.core.actor;\n+\n+import io.parallec.core.actor.message.ResponseOnSingeRequest;\n+import io.parallec.core.actor.message.type.RequestWorkerMsgType;\n+import io.parallec.core.bean.ping.PingMeta;\n+import io.parallec.core.commander.workflow.ping.PingProvider;\n+import io.parallec.core.config.ParallecGlobalConfig;\n+import io.parallec.core.exception.ActorMessageTypeInvalidException;\n+import io.parallec.core.resources.TcpSshPingResourceStore;\n+import io.parallec.core.util.PcConstants;\n+import io.parallec.core.util.PcDateUtils;\n+import io.parallec.core.util.PcErrorMsgUtils;\n+import io.parallec.core.util.PcStringUtils;\n+\n+import java.util.concurrent.Callable;\n+import java.util.concurrent.Future;\n+import java.util.concurrent.TimeUnit;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import scala.concurrent.duration.Duration;\n+import scala.concurrent.duration.FiniteDuration;\n+import akka.actor.ActorRef;\n+import akka.actor.Cancellable;\n+import akka.actor.UntypedActor;\n+\n+/**\n+ *\n+ * Using callable to start a new thread to run the Ping execution task (which\n+ * make take minutes). Check if future is read every 0.1 seconds. Make sure the\n+ * message are handled async. \n+ * \n+ * @author Yuanteng Jeff Pei\n+ */\n+public class PingWorker extends UntypedActor {\n+\n+\n+    /** The logger. */\n+    private static Logger logger = LoggerFactory.getLogger(PingWorker.class);\n+\n+    private int actorMaxOperationTimeoutSec;\n+\n+    /** The sender. */\n+    private ActorRef sender = null;\n+\n+    /** The cause. */\n+    private Throwable cause;\n+\n+    /** The try count. */\n+    private int tryCount = 0;\n+\n+    /** The timeout message cancellable. */\n+    private Cancellable timeoutMessageCancellable = null;\n+\n+    /** The timeout duration. */\n+    private FiniteDuration timeoutDuration = null;\n+\n+    /** The sent reply. */\n+    private boolean sentReply = false;\n+\n+    /** The target host. */\n+    private String targetHost;\n+\n+    /** The ping meta. */\n+    private PingMeta pingMeta;\n+    \n+    /** The response future. */\n+    private Future<ResponseOnSingeRequest> responseFuture;\n+\n+    /**\n+     * Instantiates a new ssh worker.\n+     *\n+     * @param targetHost\n+     *            the target host\n+     */\n+    public PingWorker(int actorMaxOperationTimeoutSec,PingMeta pingMeta,\n+            String targetHost) {\n+        super();\n+        this.actorMaxOperationTimeoutSec = actorMaxOperationTimeoutSec;\n+        this.pingMeta = pingMeta;\n+        this.targetHost = targetHost;\n+    }\n+\n+    /*\n+     * (non-Javadoc)\n+     * \n+     * @see akka.actor.UntypedActor#onReceive(java.lang.Object)\n+     */\n+    @Override\n+    public void onReceive(Object message) throws Exception {\n+        try {\n+            if (message instanceof RequestWorkerMsgType) {\n+                switch ((RequestWorkerMsgType) message) {\n+                case PROCESS_REQUEST:\n+                    tryCount++;\n+\n+                    if (tryCount == 1) {\n+                        sender = getSender();\n+                        timeoutDuration = Duration.create(\n+                                actorMaxOperationTimeoutSec, TimeUnit.SECONDS);\n+                        timeoutMessageCancellable = getContext()\n+                                .system()\n+                                .scheduler()\n+                                .scheduleOnce(\n+                                        timeoutDuration,\n+                                        getSelf(),\n+                                        RequestWorkerMsgType.PROCESS_ON_TIMEOUT,\n+                                        getContext().system().dispatcher(),\n+                                        getSelf());\n+\n+                        PingTask pingTask = new PingTask(targetHost, pingMeta);\n+                        setResponseFuture(TcpSshPingResourceStore.getInstance()\n+                                .getThreadPoolForSshPing().submit(pingTask));\n+\n+                        getContext()\n+                                .system()\n+                                .scheduler()\n+                                .scheduleOnce(\n+                                        (FiniteDuration) Duration.create(0.5,\n+                                                TimeUnit.SECONDS),\n+                                        new Runnable() {\n+                                            @Override\n+                                            public void run() {\n+                                                getSelf()\n+                                                        .tell(RequestWorkerMsgType.CHECK_FUTURE_STATE,\n+                                                                getSelf());\n+                                            }\n+                                        }, getContext().system().dispatcher());\n+\n+                    } else {\n+                        getLogger().error(\n+                                \"duplicated PROCESS_REQUEST msg. ignore...\");\n+                    }\n+\n+                    break;\n+\n+                case CHECK_FUTURE_STATE:\n+                    getLogger().debug(\n+                            \"checking if Ping callable future completed... for \"\n+                                    + targetHost);\n+                    if (getResponseFuture().isDone()) {\n+                        getLogger().debug(\n+                                \"Ping Provider callable returned. for \"\n+                                        + targetHost);\n+                        ResponseOnSingeRequest sshResponse = getResponseFuture()\n+                                .get();\n+                        onComplete(sshResponse);\n+                        break;\n+                    } else {\n+                        // schedule again\n+                        getContext()\n+                                .system()\n+                                .scheduler()\n+                                .scheduleOnce(\n+                                        (FiniteDuration) Duration.create(\n+                                                ParallecGlobalConfig.pingFutureCheckIntervalSec,\n+                                                TimeUnit.SECONDS),\n+                                        new Runnable() {\n+                                            @Override\n+                                            public void run() {\n+                                                getSelf()\n+                                                        .tell(RequestWorkerMsgType.CHECK_FUTURE_STATE,\n+                                                                getSelf());\n+                                            }\n+                                        }, getContext().system().dispatcher());\n+\n+                    }\n+                    break;\n+                case CANCEL:\n+                    if (sender == null)\n+                        sender = getSender();\n+                    getLogger()\n+                            .info(\"Request was CANCELLED.................on SSH host {}\",\n+                                    targetHost);\n+                    cancelCancellable();\n+                    reply(null, true, PcConstants.REQUEST_CANCELED,\n+                            PcConstants.REQUEST_CANCELED, PcConstants.NA,\n+                            PcConstants.NA_INT);\n+                    break;\n+\n+                case PROCESS_ON_EXCEPTION:\n+\n+                    String displayError = PcErrorMsgUtils.replaceErrorMsg(cause\n+                            .toString());\n+\n+                    String stackTrace = PcStringUtils.printStackTrace(cause);\n+\n+                    cancelCancellable();\n+                    reply(null, true, displayError, stackTrace, PcConstants.NA,\n+                            PcConstants.NA_INT);\n+\n+                    break;\n+\n+                case PROCESS_ON_TIMEOUT:\n+                    getLogger().error(\n+                            \"Inside PROCESS_ON_TIMEOUT.................target: \"\n+                                    + this.targetHost + \"......... at \"\n+                                    + PcDateUtils.getNowDateTimeStrStandard());\n+                    cancelCancellable();\n+\n+                    String errorMsg = String\n+                            .format(\"SshWorker Timedout after %d SEC (no response but no exception catched). Details more info\",\n+                                    actorMaxOperationTimeoutSec);\n+                    reply(null, true, errorMsg, errorMsg, PcConstants.NA,\n+                            PcConstants.NA_INT);\n+                    break;\n+\n+                default:\n+                    break;\n+                }\n+            } else {\n+                unhandled(message);\n+                this.sender=getSender();\n+                this.cause = new ActorMessageTypeInvalidException(\n+                        \"ActorMessageTypeInvalidException error for host \"\n+                                + this.targetHost);\n+                getSelf().tell(RequestWorkerMsgType.PROCESS_ON_EXCEPTION,\n+                        getSelf());\n+            }\n+        } catch (Exception e) {\n+            this.cause = e;\n+            getSelf()\n+                    .tell(RequestWorkerMsgType.PROCESS_ON_EXCEPTION, getSelf());\n+        }\n+    }\n+\n+    /**\n+     * On complete.\n+     *\n+     * @param pingResponse\n+     *            the ssh response\n+     */\n+    public void onComplete(ResponseOnSingeRequest pingResponse) {\n+        cancelCancellable();\n+        reply(pingResponse.getResponseBody(),\n+                pingResponse.isFailObtainResponse(),\n+                pingResponse.getErrorMessage(), null,\n+                pingResponse.getStatusCode(), pingResponse.getStatusCodeInt());\n+    }\n+\n+    /**\n+     * Cancel cancellable.\n+     */\n+    public void cancelCancellable() {\n+\n+        if (timeoutMessageCancellable != null) {\n+            timeoutMessageCancellable.cancel();\n+        }\n+        if (getResponseFuture() != null && !getResponseFuture().isDone()) {\n+            getResponseFuture().cancel(true);\n+        }\n+    }\n+\n+    /**\n+     * Reply.\n+     *\n+     * @param response\n+     *            the response\n+     * @param failObtainResponse\n+     *            the fail obtain response\n+     * @param errorMessage\n+     *            the error message\n+     * @param stackTrace\n+     *            the stack trace\n+     * @param statusCode\n+     *            the status code\n+     * @param statusCodeInt\n+     *            the status code int\n+     */\n+    private void reply(final String response, final boolean failObtainResponse,\n+            final String errorMessage, final String stackTrace,\n+            final String statusCode, final int statusCodeInt) {\n+\n+        /**\n+         * this is needed if NIO has not even send out! MEMROY LEAK if not.\n+         * double check\n+         */\n+\n+        if (!isSentReply()) {\n+            //must update sentReply first to avoid duplicated msg.\n+            sentReply = true;\n+            final ResponseOnSingeRequest res = new ResponseOnSingeRequest(\n+                    response, failObtainResponse, errorMessage, stackTrace,\n+                    statusCode, statusCodeInt,\n+                    PcDateUtils.getNowDateTimeStrStandard());\n+\n+            if (!getContext().system().deadLetters().equals(sender)) {\n+                sender.tell(res, getSelf());\n+            }\n+\n+            getContext().stop(getSelf());\n+        }\n+    }\n+\n+    /**\n+     * Checks if is sent reply.\n+     *\n+     * @return true, if is sent reply\n+     */\n+    public boolean isSentReply() {\n+        return sentReply;\n+    }\n+\n+    /**\n+     * Sets the sent reply.\n+     *\n+     * @param sentReply\n+     *            the new sent reply\n+     */\n+    public void setSentReply(boolean sentReply) {\n+        this.sentReply = sentReply;\n+    }\n+\n+    /**\n+     * Gets the response future.\n+     *\n+     * @return the response future\n+     */\n+    public Future<ResponseOnSingeRequest> getResponseFuture() {\n+        return responseFuture;\n+    }\n+\n+    /**\n+     * Sets the response future.\n+     *\n+     * @param responseFuture\n+     *            the new response future\n+     */\n+    public void setResponseFuture(Future<ResponseOnSingeRequest> responseFuture) {\n+        this.responseFuture = responseFuture;\n+    }\n+\n+    /**\n+     * Gets the logger.\n+     *\n+     * @return the logger\n+     */\n+    public static Logger getLogger() {\n+        return logger;\n+    }\n+\n+    /**\n+     * Sets the logger.\n+     *\n+     * @param logger\n+     *            the new logger\n+     */\n+    public static void setLogger(Logger logger) {\n+        PingWorker.logger = logger;\n+    }\n+\n+    /**\n+     * thread to return the future.\n+     *\n+     * @author Yuanteng Jeff Pei\n+     */\n+    private static class PingTask implements Callable<ResponseOnSingeRequest> {\n+\n+\n+        /** The target host. */\n+        private String targetHost;\n+        private PingMeta pingMeta;\n+        public PingTask( String targetHost, PingMeta pingMeta) {\n+            this.targetHost = targetHost;\n+            this.pingMeta = pingMeta;\n+        }\n+\n+        /*\n+         * (non-Javadoc)\n+         * \n+         * @see java.util.concurrent.Callable#call()\n+         */\n+        @Override\n+        public ResponseOnSingeRequest call() throws Exception {\n+            boolean live =  PingProvider.getInstance().isReachableByPing( targetHost, pingMeta);\n+            ResponseOnSingeRequest pingResponse = new ResponseOnSingeRequest();\n+            pingResponse.setResponseBody(Boolean.toString(live));\n+            pingResponse.setStatusCode(live? \"LIVE\" : \"UNREACHABLE\");\n+            pingResponse.setFailObtainResponse(false);\n+            return pingResponse;\n+        }\n+    }// end class\n+\n+}"
            },
            {
                "sha": "d0a84c421e0f9dcaea393441fefc72f64897c380",
                "filename": "src/main/java/io/parallec/core/actor/SshWorker.java",
                "status": "added",
                "additions": 413,
                "deletions": 0,
                "changes": 413,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FSshWorker.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FSshWorker.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FSshWorker.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,413 @@\n+/*  \n+Copyright [2013-2015] eBay Software Foundation\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+    http://www.apache.org/licenses/LICENSE-2.0\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+ */\n+package io.parallec.core.actor;\n+\n+import io.parallec.core.actor.message.ResponseOnSingeRequest;\n+import io.parallec.core.actor.message.type.RequestWorkerMsgType;\n+import io.parallec.core.bean.ssh.SshMeta;\n+import io.parallec.core.commander.workflow.ssh.SshProvider;\n+import io.parallec.core.config.ParallecGlobalConfig;\n+import io.parallec.core.exception.ActorMessageTypeInvalidException;\n+import io.parallec.core.resources.TcpSshPingResourceStore;\n+import io.parallec.core.util.PcConstants;\n+import io.parallec.core.util.PcDateUtils;\n+import io.parallec.core.util.PcErrorMsgUtils;\n+import io.parallec.core.util.PcStringUtils;\n+\n+import java.util.concurrent.Callable;\n+import java.util.concurrent.Future;\n+import java.util.concurrent.TimeUnit;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import scala.concurrent.duration.Duration;\n+import scala.concurrent.duration.FiniteDuration;\n+import akka.actor.ActorRef;\n+import akka.actor.Cancellable;\n+//import akka.actor.PoisonPill;\n+import akka.actor.UntypedActor;\n+\n+// TODO: Auto-generated Javadoc\n+/**\n+ *\n+ * Using callable to start a new thread to run the SSH execution task (which\n+ * make take minutes). Check if future is read every 0.5seconds Make sure the\n+ * message are handled async. Note that a blocking message will block all\n+ * subsequent messages.\n+ * \n+ * \n+ * @author Yuanteng Jeff Pei\n+ */\n+public class SshWorker extends UntypedActor {\n+\n+    /** The logger. */\n+    private static Logger logger = LoggerFactory.getLogger(SshWorker.class);\n+    \n+    private int actorMaxOperationTimeoutSec;\n+\n+    /** The sender. */\n+    private ActorRef sender = null;\n+\n+    /** The cause. */\n+    private Throwable cause;\n+\n+    /** The try count. */\n+    private int tryCount = 0;\n+\n+    /** The timeout message cancellable. */\n+    private Cancellable timeoutMessageCancellable = null;\n+\n+    /** The timeout duration. */\n+    private FiniteDuration timeoutDuration = null;\n+\n+    /** The sent reply. */\n+    private boolean sentReply = false;\n+\n+    /** The ssh meta. */\n+    private SshMeta sshMeta;\n+\n+    /** The target host. */\n+    private String targetHost;\n+\n+    /** The response future. */\n+    private Future<ResponseOnSingeRequest> responseFuture;\n+\n+    /**\n+     * Instantiates a new ssh worker.\n+     *\n+     * @param sshMeta\n+     *            the ssh meta\n+     * @param targetHost\n+     *            the target host\n+     */\n+    public SshWorker(int actorMaxOperationTimeoutSec, SshMeta sshMeta,\n+            String targetHost) {\n+        super();\n+        this.actorMaxOperationTimeoutSec = actorMaxOperationTimeoutSec;\n+        this.sshMeta = sshMeta;\n+        this.targetHost = targetHost;\n+    }\n+\n+    /*\n+     * (non-Javadoc)\n+     * \n+     * @see akka.actor.UntypedActor#onReceive(java.lang.Object)\n+     */\n+    @Override\n+    public void onReceive(Object message) throws Exception {\n+        try {\n+            if (message instanceof RequestWorkerMsgType) {\n+                switch ((RequestWorkerMsgType) message) {\n+                case PROCESS_REQUEST:\n+                    tryCount++;\n+\n+                    if (tryCount == 1) {\n+                        sender = getSender();\n+                        timeoutDuration = Duration.create(\n+                                actorMaxOperationTimeoutSec, TimeUnit.SECONDS);\n+                        timeoutMessageCancellable = getContext()\n+                                .system()\n+                                .scheduler()\n+                                .scheduleOnce(\n+                                        timeoutDuration,\n+                                        getSelf(),\n+                                        RequestWorkerMsgType.PROCESS_ON_TIMEOUT,\n+                                        getContext().system().dispatcher(),\n+                                        getSelf());\n+\n+                        SshTask sshTask = new SshTask(sshMeta, targetHost);\n+                        setResponseFuture(TcpSshPingResourceStore.getInstance()\n+                                .getThreadPoolForSshPing().submit(sshTask));\n+\n+                        getContext()\n+                                .system()\n+                                .scheduler()\n+                                .scheduleOnce(\n+                                        (FiniteDuration) Duration.create(0.5,\n+                                                TimeUnit.SECONDS),\n+                                        new Runnable() {\n+                                            @Override\n+                                            public void run() {\n+                                                getSelf()\n+                                                        .tell(RequestWorkerMsgType.CHECK_FUTURE_STATE,\n+                                                                getSelf());\n+                                            }\n+                                        }, getContext().system().dispatcher());\n+\n+                    } else {\n+                        getLogger().error(\n+                                \"duplicated PROCESS_REQUEST msg. ignore...\");\n+                    }\n+\n+                    break;\n+\n+                case CHECK_FUTURE_STATE:\n+                    getLogger().debug(\n+                            \"checking if SSH callable future completed... for \"\n+                                    + targetHost);\n+                    if (getResponseFuture().isDone()) {\n+                        getLogger().debug(\n+                                \"SSH Provider callable returned. for \"\n+                                        + targetHost);\n+                        ResponseOnSingeRequest sshResponse = getResponseFuture()\n+                                .get();\n+                        onComplete(sshResponse);\n+                        break;\n+                    } else {\n+                        // schedule again\n+                        getContext()\n+                                .system()\n+                                .scheduler()\n+                                .scheduleOnce(\n+                                        (FiniteDuration) Duration.create(\n+                                                ParallecGlobalConfig.sshFutureCheckIntervalSec,\n+                                                TimeUnit.SECONDS),\n+                                        new Runnable() {\n+                                            @Override\n+                                            public void run() {\n+                                                getSelf()\n+                                                        .tell(RequestWorkerMsgType.CHECK_FUTURE_STATE,\n+                                                                getSelf());\n+                                            }\n+                                        }, getContext().system().dispatcher());\n+\n+                    }\n+                    break;\n+                case CANCEL:\n+                    getLogger()\n+                            .info(\"Request was CANCELLED.................on SSH host {}\",\n+                                    targetHost);\n+                    cancelCancellable();\n+                    if (sender == null)\n+                        sender = getSender();\n+                    reply(null, true, PcConstants.REQUEST_CANCELED,\n+                            PcConstants.REQUEST_CANCELED, PcConstants.NA,\n+                            PcConstants.NA_INT);\n+                    break;\n+\n+                case PROCESS_ON_EXCEPTION:\n+\n+                    String displayError = PcErrorMsgUtils.replaceErrorMsg(cause\n+                            .toString());\n+\n+                    String stackTrace = PcStringUtils.printStackTrace(cause);\n+\n+                    cancelCancellable();\n+                    reply(null, true, displayError, stackTrace, PcConstants.NA,\n+                            PcConstants.NA_INT);\n+\n+                    break;\n+\n+                case PROCESS_ON_TIMEOUT:\n+                    getLogger().error(\n+                            \"Inside PROCESS_ON_TIMEOUT.................target: \"\n+                                    + this.targetHost + \"......... at \"\n+                                    + PcDateUtils.getNowDateTimeStrStandard());\n+                    cancelCancellable();\n+\n+                    String errorMsg = String\n+                            .format(\"SshWorker Timedout after %d SEC (no response but no exception catched). Details more info\",\n+                                    actorMaxOperationTimeoutSec);\n+                    reply(null, true, errorMsg, errorMsg, PcConstants.NA,\n+                            PcConstants.NA_INT);\n+                    break;\n+\n+                default:\n+                    break;\n+                }\n+            } else {\n+                unhandled(message);\n+                this.cause = new ActorMessageTypeInvalidException(\n+                        \"ActorMessageTypeInvalidException error for host \"\n+                                + this.targetHost);\n+                getSelf().tell(RequestWorkerMsgType.PROCESS_ON_EXCEPTION,\n+                        getSelf());\n+            }\n+        } catch (Exception e) {\n+            this.cause = e;\n+            getSelf()\n+                    .tell(RequestWorkerMsgType.PROCESS_ON_EXCEPTION, getSelf());\n+        }\n+    }\n+\n+    /**\n+     * On complete.\n+     *\n+     * @param sshResponse\n+     *            the ssh response\n+     */\n+    public void onComplete(ResponseOnSingeRequest sshResponse) {\n+        cancelCancellable();\n+        reply(sshResponse.getResponseBody(),\n+                sshResponse.isFailObtainResponse(),\n+                sshResponse.getErrorMessage(), null,\n+                sshResponse.getStatusCode(), sshResponse.getStatusCodeInt());\n+    }\n+\n+    /**\n+     * Cancel cancellable.\n+     */\n+    public void cancelCancellable() {\n+\n+        if (timeoutMessageCancellable != null) {\n+            timeoutMessageCancellable.cancel();\n+        }\n+        if (getResponseFuture() != null && !getResponseFuture().isDone()) {\n+            getResponseFuture().cancel(true);\n+        }\n+    }\n+\n+    /**\n+     * Reply.\n+     *\n+     * @param response\n+     *            the response\n+     * @param failObtainResponse\n+     *            the fail obtain response\n+     * @param errorMessage\n+     *            the error message\n+     * @param stackTrace\n+     *            the stack trace\n+     * @param statusCode\n+     *            the status code\n+     * @param statusCodeInt\n+     *            the status code int\n+     */\n+    private void reply(final String response, final boolean failObtainResponse,\n+            final String errorMessage, final String stackTrace,\n+            final String statusCode, final int statusCodeInt) {\n+\n+        /**\n+         * this is needed if NIO has not even send out! MEMROY LEAK if not.\n+         * double check\n+         */\n+\n+        if (!isSentReply()) {\n+            //must update sentReply first to avoid duplicated msg.\n+            sentReply = true;\n+            final ResponseOnSingeRequest res = new ResponseOnSingeRequest(\n+                    response, failObtainResponse, errorMessage, stackTrace,\n+                    statusCode, statusCodeInt,\n+                    PcDateUtils.getNowDateTimeStrStandard());\n+\n+            if (!getContext().system().deadLetters().equals(sender)) {\n+                sender.tell(res, getSelf());\n+            }\n+\n+            getLogger().debug(\n+                    \"DEBUG: real response: \" + response + \" err: \"\n+                            + errorMessage);\n+\n+            getContext().stop(getSelf());\n+        }\n+    }\n+\n+    /**\n+     * Checks if is sent reply.\n+     *\n+     * @return true, if is sent reply\n+     */\n+    public boolean isSentReply() {\n+        return sentReply;\n+    }\n+\n+    /**\n+     * Sets the sent reply.\n+     *\n+     * @param sentReply\n+     *            the new sent reply\n+     */\n+    public void setSentReply(boolean sentReply) {\n+        this.sentReply = sentReply;\n+    }\n+\n+    /**\n+     * Gets the response future.\n+     *\n+     * @return the response future\n+     */\n+    public Future<ResponseOnSingeRequest> getResponseFuture() {\n+        return responseFuture;\n+    }\n+\n+    /**\n+     * Sets the response future.\n+     *\n+     * @param responseFuture\n+     *            the new response future\n+     */\n+    public void setResponseFuture(Future<ResponseOnSingeRequest> responseFuture) {\n+        this.responseFuture = responseFuture;\n+    }\n+\n+    /**\n+     * Gets the logger.\n+     *\n+     * @return the logger\n+     */\n+    public static Logger getLogger() {\n+        return logger;\n+    }\n+\n+    /**\n+     * Sets the logger.\n+     *\n+     * @param logger\n+     *            the new logger\n+     */\n+    public static void setLogger(Logger logger) {\n+        SshWorker.logger = logger;\n+    }\n+\n+    /**\n+     * thread to return the future.\n+     *\n+     * @author Yuanteng Jeff Pei\n+     */\n+    private static class SshTask implements Callable<ResponseOnSingeRequest> {\n+\n+        /** The ssh meta. */\n+        private SshMeta sshMeta;\n+\n+        /** The target host. */\n+        private String targetHost;\n+\n+        /**\n+         * Instantiates a new ssh task.\n+         *\n+         * @param sshMeta\n+         *            the ssh meta\n+         * @param targetHost\n+         *            the target host\n+         */\n+        public SshTask(SshMeta sshMeta, String targetHost) {\n+            this.sshMeta = sshMeta;\n+            this.targetHost = targetHost;\n+        }\n+\n+        /*\n+         * (non-Javadoc)\n+         * \n+         * @see java.util.concurrent.Callable#call()\n+         */\n+        @Override\n+        public ResponseOnSingeRequest call() throws Exception {\n+            SshProvider sshProvider = new SshProvider(sshMeta, targetHost);\n+            ResponseOnSingeRequest sshResponse = sshProvider\n+                    .executeSshCommand();\n+            return sshResponse;\n+        }\n+    }// end class\n+\n+}"
            },
            {
                "sha": "476b4a34b67582e189a7abfd1c1b5b629feb6f48",
                "filename": "src/main/java/io/parallec/core/actor/TcpWorker.java",
                "status": "added",
                "additions": 571,
                "deletions": 0,
                "changes": 571,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FTcpWorker.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FTcpWorker.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FTcpWorker.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,571 @@\n+/*  \n+Copyright [2013-2015] eBay Software Foundation\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+    http://www.apache.org/licenses/LICENSE-2.0\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+ */\n+package io.parallec.core.actor;\n+\n+import io.parallec.core.actor.message.ResponseOnSingeRequest;\n+import io.parallec.core.actor.message.type.RequestWorkerMsgType;\n+import io.parallec.core.bean.tcp.TcpMeta;\n+import io.parallec.core.exception.ActorMessageTypeInvalidException;\n+import io.parallec.core.exception.HttpRequestCreateException;\n+import io.parallec.core.exception.TcpRequestCreateException;\n+import io.parallec.core.resources.TcpSshPingResourceStore;\n+import io.parallec.core.util.PcConstants;\n+import io.parallec.core.util.PcDateUtils;\n+import io.parallec.core.util.PcErrorMsgUtils;\n+import io.parallec.core.util.PcStringUtils;\n+\n+import java.net.InetSocketAddress;\n+import java.util.concurrent.TimeUnit;\n+\n+import org.jboss.netty.bootstrap.ClientBootstrap;\n+import org.jboss.netty.channel.Channel;\n+import org.jboss.netty.channel.ChannelFuture;\n+import org.jboss.netty.channel.ChannelHandler;\n+import org.jboss.netty.channel.ChannelHandlerContext;\n+import org.jboss.netty.channel.ChannelPipeline;\n+import org.jboss.netty.channel.ChannelPipelineFactory;\n+import org.jboss.netty.channel.ChannelStateEvent;\n+import org.jboss.netty.channel.Channels;\n+import org.jboss.netty.channel.ExceptionEvent;\n+import org.jboss.netty.channel.MessageEvent;\n+import org.jboss.netty.channel.SimpleChannelHandler;\n+import org.jboss.netty.handler.codec.frame.DelimiterBasedFrameDecoder;\n+import org.jboss.netty.handler.codec.frame.Delimiters;\n+import org.jboss.netty.handler.timeout.IdleState;\n+import org.jboss.netty.handler.timeout.IdleStateAwareChannelHandler;\n+import org.jboss.netty.handler.timeout.IdleStateEvent;\n+import org.jboss.netty.handler.timeout.IdleStateHandler;\n+import org.jboss.netty.util.Timer;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import scala.concurrent.duration.Duration;\n+import scala.concurrent.duration.FiniteDuration;\n+import akka.actor.ActorRef;\n+import akka.actor.Cancellable;\n+//import akka.actor.PoisonPill;\n+import akka.actor.UntypedActor;\n+\n+/**\n+ * A worker for single TCP request class \n+ *\n+ * @author Yuanteng Jeff Pei\n+ */\n+public class TcpWorker extends UntypedActor {\n+\n+    /** The actor max operation timeout sec. */\n+    private int actorMaxOperationTimeoutSec;\n+\n+    /** The tcp meta. */\n+    private final TcpMeta tcpMeta;\n+    \n+    /** The target host. */\n+    private String targetHost;\n+\n+    /** The logger. */\n+    private static Logger logger = LoggerFactory.getLogger(TcpWorker.class);\n+\n+    /** The sender. */\n+    private ActorRef sender = null;\n+\n+    /** The cause. */\n+    // cause will be the exception to log as in PROCESS_ON_EXCEPTION\n+    private Throwable cause;\n+\n+    /** The try count. */\n+    private int tryCount = 0;\n+\n+    /** The timeout message cancellable. */\n+    private Cancellable timeoutMessageCancellable = null;\n+\n+    /** The timeout duration. */\n+    private FiniteDuration timeoutDuration = null;\n+\n+    /** The sent reply. */\n+    // private FiniteDuration retryDuration = null;\n+    private boolean sentReply = false;\n+\n+    /** The channel. */\n+    private Channel channel = null;\n+    \n+    /** The response sb. */\n+    private StringBuilder responseSb = new StringBuilder();\n+    \n+    \n+    /**\n+     * Instantiates a new tcp worker.\n+     *\n+     * @param actorMaxOperationTimeoutSec the actor max operation timeout sec\n+     * @param tcpMeta the tcp meta\n+     * @param targetHost the target host\n+     */\n+    public TcpWorker(final int actorMaxOperationTimeoutSec,\n+            final TcpMeta tcpMeta, final String targetHost) {\n+        super();\n+        this.actorMaxOperationTimeoutSec = actorMaxOperationTimeoutSec;\n+        this.tcpMeta = tcpMeta;\n+        this.targetHost = targetHost;\n+    }\n+\n+    /**\n+     * Creates the tcpClient with proper handler.\n+     *\n+     * @return the bound request builder\n+     * @throws HttpRequestCreateException\n+     *             the http request create exception\n+     */\n+    public ClientBootstrap bootStrapTcpClient()\n+            throws HttpRequestCreateException {\n+\n+        ClientBootstrap tcpClient = null;\n+        try {\n+\n+            // Configure the client.\n+            tcpClient = new ClientBootstrap(tcpMeta.getChannelFactory());\n+\n+\n+            // Configure the pipeline factory.\n+            tcpClient.setPipelineFactory(new MyPipelineFactory(TcpSshPingResourceStore.getInstance().getTimer(),\n+                    this, tcpMeta.getTcpIdleTimeoutSec())\n+            );\n+\n+            tcpClient.setOption(\"connectTimeoutMillis\",\n+                    tcpMeta.getTcpConnectTimeoutMillis());\n+            tcpClient.setOption(\"tcpNoDelay\", true);\n+          // tcpClient.setOption(\"keepAlive\", true);\n+\n+        } catch (Exception t) {\n+            throw new TcpRequestCreateException(\n+                    \"Error in creating request in Tcpworker. \"\n+                            + \" If tcpClient is null. Then fail to create.\", t);\n+        }\n+\n+        return tcpClient;\n+\n+    }\n+\n+    /*\n+     * (non-Javadoc)\n+     * \n+     * @see akka.actor.UntypedActor#onReceive(java.lang.Object)\n+     */\n+    @Override\n+    public void onReceive(Object message) throws Exception {\n+        try {\n+            if (message instanceof RequestWorkerMsgType) {\n+                switch ((RequestWorkerMsgType) message) {\n+                case PROCESS_REQUEST:\n+                    tryCount++;\n+\n+                    if (tryCount == 1) {\n+                        sender = getSender();\n+\n+                        ClientBootstrap tcpClient = bootStrapTcpClient();\n+\n+                        // Start the connection attempt.\n+                        ChannelFuture future = tcpClient\n+                                .connect(new InetSocketAddress(targetHost,\n+                                        tcpMeta.getTcpPort()));\n+\n+\n+                        //first schedule timeout before the sync wait\n+                        timeoutDuration = Duration.create(\n+                                actorMaxOperationTimeoutSec, TimeUnit.SECONDS);\n+\n+                        timeoutMessageCancellable = getContext()\n+                                .system()\n+                                .scheduler()\n+                                .scheduleOnce(\n+                                        timeoutDuration,\n+                                        getSelf(),\n+                                        RequestWorkerMsgType.PROCESS_ON_TIMEOUT,\n+                                        getContext().system().dispatcher(),\n+                                        getSelf());\n+                        \n+                        // Wait until the connection attempt succeeds or fails.\n+                        channel = future.awaitUninterruptibly()\n+                                .getChannel();\n+                        ChannelFuture requestFuture = null;\n+\n+                        // Sends the line to server need. line ending\n+                        requestFuture = channel.write(tcpMeta.getCommand()\n+                                + \"\\r\\n\");\n+\n+                        // Wait until all messages are flushed before closing\n+                        // the channel.\n+                        if (requestFuture != null) {\n+                            requestFuture.await();\n+                        }\n+                    } else {\n+                        getLogger().error(\n+                                \"duplicated PROCESS_REQUEST msg. ignore...\");\n+                    }\n+                    break;\n+\n+                case CANCEL:\n+                    if (sender == null)\n+                        sender = getSender();\n+                    getLogger().info(\n+                            \"TCP Request was CANCELLED.................{}\",\n+                            targetHost);\n+                    cancelCancellable();\n+                    reply(null, true, PcConstants.REQUEST_CANCELED,\n+                            PcConstants.REQUEST_CANCELED, PcConstants.NA,\n+                            PcConstants.NA_INT);\n+                    break;\n+\n+                case PROCESS_ON_EXCEPTION:\n+\n+                    String errorSummary = PcErrorMsgUtils.replaceErrorMsg(cause\n+                            .toString());\n+                    String stackTrace = PcStringUtils.printStackTrace(cause);\n+                    cancelCancellable();\n+                    reply(null, true, errorSummary, stackTrace, PcConstants.NA,\n+                            PcConstants.NA_INT);\n+\n+                    break;\n+\n+                case PROCESS_ON_TIMEOUT:\n+\n+                    getLogger().error(\"PROCESS_ON_TIMEOUT.................{}\",\n+                            targetHost);\n+                    cancelCancellable();\n+\n+                    String errorMsg = String\n+                            .format(\"TcpWorker Timedout after %d SEC (no response but no exception catched). Check URL: may be very slow or stuck.\",\n+                                    actorMaxOperationTimeoutSec);\n+\n+                    reply(null, true, errorMsg, errorMsg, PcConstants.NA,\n+                            PcConstants.NA_INT);\n+                    break;\n+\n+                case CHECK_FUTURE_STATE:\n+                default:\n+                    this.cause = new ActorMessageTypeInvalidException(\n+                            \"ActorMessageTypeInvalidException error for on \"\n+                                    + this.targetHost);\n+                    getSelf().tell(RequestWorkerMsgType.PROCESS_ON_EXCEPTION,\n+                            getSelf());\n+                    break;\n+                }\n+            } else {\n+                unhandled(message);\n+                sender = getSender();\n+                this.cause = new ActorMessageTypeInvalidException(\n+                        \"ActorMessageTypeInvalidException error for TCP on \"\n+                                + this.targetHost);\n+                getSelf().tell(RequestWorkerMsgType.PROCESS_ON_EXCEPTION,\n+                        getSelf());\n+            }\n+        } catch (Exception e) {\n+            this.cause = e;\n+            getSelf()\n+                    .tell(RequestWorkerMsgType.PROCESS_ON_EXCEPTION, getSelf());\n+        }\n+    }\n+\n+    /**\n+     * Cancel cancellable.\n+     */\n+    public void cancelCancellable() {\n+\n+        if (timeoutMessageCancellable != null) {\n+            timeoutMessageCancellable.cancel();\n+        }\n+\n+    }\n+\n+    /**\n+     * First close the connection. Then reply.\n+     *\n+     * @param response\n+     *            the response\n+     * @param error\n+     *            the error\n+     * @param errorMessage\n+     *            the error message\n+     * @param stackTrace\n+     *            the stack trace\n+     * @param statusCode\n+     *            the status code\n+     * @param statusCodeInt\n+     *            the status code int\n+     */\n+    private void reply(final String response, final boolean error,\n+            final String errorMessage, final String stackTrace,\n+            final String statusCode, final int statusCodeInt) {\n+\n+        \n+        if (!sentReply) {\n+            \n+            //must update sentReply first to avoid duplicated msg.\n+            sentReply = true;\n+            // Close the connection. Make sure the close operation ends because\n+            // all I/O operations are asynchronous in Netty.\n+            if(channel!=null && channel.isOpen())\n+                channel.close().awaitUninterruptibly();\n+            final ResponseOnSingeRequest res = new ResponseOnSingeRequest(\n+                    response, error, errorMessage, stackTrace, statusCode,\n+                    statusCodeInt, PcDateUtils.getNowDateTimeStrStandard());\n+            if (!getContext().system().deadLetters().equals(sender)) {\n+                sender.tell(res, getSelf());\n+            }\n+\n+            getContext().stop(getSelf());\n+        }\n+\n+    }\n+\n+    /**\n+     * On complete.\n+     *\n+     * @param response the response\n+     * @param error the error\n+     * @param errorMessage the error message\n+     * @param stackTrace the stack trace\n+     * @param statusCode the status code\n+     * @param statusCodeInt the status code int\n+     */\n+    public void onComplete(String response, boolean error,\n+            String errorMessage, final String stackTrace,\n+            String statusCode,  int statusCodeInt\n+            ) {\n+        cancelCancellable();\n+        reply(response, error, errorMessage, stackTrace, statusCode, statusCodeInt);\n+    }\n+\n+    /**\n+     * On throwable.\n+     *\n+     * @param cause the cause\n+     */\n+    public void onThrowable(Throwable cause) {\n+        this.cause = cause;\n+        getSelf().tell(RequestWorkerMsgType.PROCESS_ON_EXCEPTION, getSelf());\n+\n+    }\n+\n+    /**\n+     * Gets the logger.\n+     *\n+     * @return the logger\n+     */\n+    public static Logger getLogger() {\n+        return logger;\n+    }\n+\n+    /**\n+     * Sets the logger.\n+     *\n+     * @param logger\n+     *            the new logger\n+     */\n+    public static void setLogger(Logger logger) {\n+        TcpWorker.logger = logger;\n+    }\n+\n+    /**\n+     * Gets the response sb.\n+     *\n+     * @return the response sb\n+     */\n+    public StringBuilder getResponseSb() {\n+        return responseSb;\n+    }\n+\n+    /**\n+     * Sets the response sb.\n+     *\n+     * @param responseSb the new response sb\n+     */\n+    public void setResponseSb(StringBuilder responseSb) {\n+        this.responseSb = responseSb;\n+    }\n+\n+    /**\n+     * define the list of handlers for this channel.\n+     *\n+     * @author Yuanteng Jeff Pei\n+     */\n+    public static class MyPipelineFactory implements ChannelPipelineFactory{\n+        \n+        /** The idle state handler. */\n+        private final ChannelHandler idleStateHandler;\n+        \n+        /** The tcp worker. */\n+        private final TcpWorker tcpWorker;\n+        \n+        /** The my idle handler. */\n+        private final MyIdleHandler myIdleHandler;\n+        \n+        /**\n+         * Instantiates a new my pipeline factory.\n+         *\n+         * @param timer the timer\n+         * @param tcpWorker the tcp worker\n+         * @param idleTimeoutSec the idle timeout sec\n+         */\n+        public MyPipelineFactory(Timer timer, TcpWorker tcpWorker, int idleTimeoutSec) {\n+            this.tcpWorker = tcpWorker;\n+            this.idleStateHandler = new IdleStateHandler(timer, 0, 0, idleTimeoutSec); \n+            this.myIdleHandler = new MyIdleHandler(tcpWorker);\n+        }\n+\n+        /* (non-Javadoc)\n+         * @see org.jboss.netty.channel.ChannelPipelineFactory#getPipeline()\n+         */\n+        public ChannelPipeline getPipeline() {\n+            \n+            ChannelPipeline pipeline = Channels.pipeline();\n+            pipeline.addLast(\"idleTimer\",idleStateHandler);\n+            pipeline.addLast(\"idleHandler\",myIdleHandler);\n+            pipeline.addLast(\"framer\", new DelimiterBasedFrameDecoder(\n+                    1024, Delimiters.lineDelimiter()));\n+            pipeline.addLast(\"stringDecoder\", TcpMeta.stringDecoder);\n+            pipeline.addLast(\"stringEncoder\", TcpMeta.stringEncoder);\n+            pipeline.addLast(\"handler\",\n+                    new TcpChannelHandler(tcpWorker));\n+\n+            return pipeline;\n+        }\n+        \n+    }\n+    \n+    \n+    \n+    /**\n+     * how to pass the idle event back to the worker.\n+     *\n+     * @author Yuanteng Jeff Pei\n+     */\n+    public static class MyIdleHandler extends IdleStateAwareChannelHandler {\n+\n+        /** The tcp worker. */\n+        private final TcpWorker tcpWorker;\n+        \n+        /**\n+         * Instantiates a new my idle handler.\n+         *\n+         * @param tcpWorker the tcp worker\n+         */\n+        public MyIdleHandler(TcpWorker tcpWorker) {\n+            super();\n+            this.tcpWorker = tcpWorker;\n+            \n+        }\n+        \n+        /* (non-Javadoc)\n+         * @see org.jboss.netty.handler.timeout.IdleStateAwareChannelHandler#channelIdle(org.jboss.netty.channel.ChannelHandlerContext, org.jboss.netty.handler.timeout.IdleStateEvent)\n+         */\n+        @Override\n+        public void channelIdle(ChannelHandlerContext ctx, IdleStateEvent e) {\n+            logger.info(\"In IDLE event handler for TCP...\");\n+            \n+            //there are 3 states. READER/WRITER/ALL\n+            if (e.getState() == IdleState.ALL_IDLE){\n+                int statusCodeInt = 0;\n+                String statusCode = statusCodeInt + \" SUCCESSFUL\";\n+                String errMsg=\"idleTimeout to finish\";\n+                \n+                tcpWorker.onComplete(tcpWorker.getResponseSb().toString(), false, \n+                        errMsg, errMsg, statusCode, statusCodeInt);\n+            }\n+        }\n+    }\n+    \n+\n+    /**\n+     * The Netty response/channel handler.\n+     *\n+     * @author Yuanteng Jeff Pei\n+     */\n+    public static class TcpChannelHandler extends SimpleChannelHandler {\n+\n+        /** The has caught exception. */\n+        public boolean hasCaughtException = false;\n+        \n+        /** The tcp worker. */\n+        private final TcpWorker tcpWorker;\n+\n+        /**\n+         * Instantiates a new tcp channel handler.\n+         *\n+         * @param tcpWorker the tcp worker\n+         */\n+        public TcpChannelHandler(TcpWorker tcpWorker) {\n+            super();\n+            this.tcpWorker = tcpWorker;\n+\n+        }\n+\n+        /** The msg recv count. */\n+        private int msgRecvCount = 0;\n+\n+        \n+\n+        /* (non-Javadoc)\n+         * @see org.jboss.netty.channel.SimpleChannelHandler#messageReceived(org.jboss.netty.channel.ChannelHandlerContext, org.jboss.netty.channel.MessageEvent)\n+         */\n+        @Override\n+        public void messageReceived(ChannelHandlerContext ctx, MessageEvent e) {\n+            //add \\n to the end\n+            tcpWorker.getResponseSb().append(e.getMessage().toString()+\"\\n\");\n+            logger.debug(\"DONE.\" + ++msgRecvCount);\n+            logger.debug(\"MSG_RECEIVED_AT_TCP_CLIENT: {}\", e.getMessage().toString());\n+        }\n+\n+        /**\n+         * Why not use channelClosed: if fail to establish a channel \n+         * (e.g. connection refused). will also call channelClosed. \n+         *\n+         * @param ctx the ctx\n+         * @param e the e\n+         * @throws Exception the exception\n+         */\n+        @Override\n+        public void channelDisconnected(ChannelHandlerContext ctx, ChannelStateEvent e)\n+                throws Exception {\n+            logger.debug(\"channel is closed. \");\n+            \n+            int statusCodeInt = 0;\n+            String statusCode = statusCodeInt + \" SUCCESSFUL\";\n+            \n+            tcpWorker.onComplete(tcpWorker.getResponseSb().toString(), false, \n+                    null, null, statusCode, statusCodeInt);\n+\n+        }\n+        \n+\n+        /* (non-Javadoc)\n+         * @see org.jboss.netty.channel.SimpleChannelHandler#exceptionCaught(org.jboss.netty.channel.ChannelHandlerContext, org.jboss.netty.channel.ExceptionEvent)\n+         */\n+        @Override\n+        public void exceptionCaught(ChannelHandlerContext ctx, ExceptionEvent e) {\n+            \n+            if(!hasCaughtException){\n+                hasCaughtException=true;\n+                e.getChannel().close();\n+                String errMsg = e.getCause().getLocalizedMessage();\n+                logger.error(\"TCP Handler exceptionCaught: {} . \", errMsg);\n+                \n+                int statusCodeInt = 1;\n+                String statusCode = statusCodeInt + \" FAILURE\";\n+                \n+                tcpWorker.onComplete(tcpWorker.getResponseSb().toString(), true, \n+                        errMsg, errMsg, statusCode, statusCodeInt);\n+                \n+            }\n+        }\n+    }// end handler class\n+\n+}"
            },
            {
                "sha": "693d7e7752412f98258098d0ce6e71daf71f7aec",
                "filename": "src/main/java/io/parallec/core/actor/message/CancelTaskOnHostRequest.java",
                "status": "added",
                "additions": 35,
                "deletions": 0,
                "changes": 35,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2Fmessage%2FCancelTaskOnHostRequest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2Fmessage%2FCancelTaskOnHostRequest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2Fmessage%2FCancelTaskOnHostRequest.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,35 @@\n+/*  \n+Copyright [2013-2015] eBay Software Foundation\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+    http://www.apache.org/licenses/LICENSE-2.0\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+ */\n+package io.parallec.core.actor.message;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+// TODO: Auto-generated Javadoc\n+/**\n+ * The Class CancelTaskOnHostRequestToManager.\n+ */\n+public class CancelTaskOnHostRequest {\n+\n+    private final List<String> targetHosts = new ArrayList<String>();\n+\n+    public CancelTaskOnHostRequest(List<String> targetHosts) {\n+        super();\n+        this.targetHosts.addAll(targetHosts);\n+    }\n+\n+    public List<String> getTargetHosts() {\n+        return targetHosts;\n+    }\n+\n+}"
            },
            {
                "sha": "f515b2fe28864b64328fe6583f3eb0023b9f8eb9",
                "filename": "src/main/java/io/parallec/core/actor/message/ContinueToSendToBatchSenderAsstManager.java",
                "status": "added",
                "additions": 35,
                "deletions": 0,
                "changes": 35,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2Fmessage%2FContinueToSendToBatchSenderAsstManager.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2Fmessage%2FContinueToSendToBatchSenderAsstManager.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2Fmessage%2FContinueToSendToBatchSenderAsstManager.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,35 @@\n+/*  \n+Copyright [2013-2015] eBay Software Foundation\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+    http://www.apache.org/licenses/LICENSE-2.0\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+ */\n+package io.parallec.core.actor.message;\n+\n+// TODO: Auto-generated Javadoc\n+/**\n+ * The Class ContinueToSendToBatchSenderAsstManager.\n+ */\n+public class ContinueToSendToBatchSenderAsstManager {\n+\n+    /** The processed worker count. */\n+    public final int processedWorkerCount;\n+\n+    /**\n+     * Instantiates a new continue to send to batch sender asst manager.\n+     *\n+     * @param processedWorkerCount\n+     *            the processed worker count\n+     */\n+    public ContinueToSendToBatchSenderAsstManager(int processedWorkerCount) {\n+        super();\n+        this.processedWorkerCount = processedWorkerCount;\n+    }\n+\n+}"
            },
            {
                "sha": "0ef83e2d6e6dd764a9d3842b067775ef5e6d8ec8",
                "filename": "src/main/java/io/parallec/core/actor/message/InitialRequestToManager.java",
                "status": "added",
                "additions": 32,
                "deletions": 0,
                "changes": 32,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2Fmessage%2FInitialRequestToManager.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2Fmessage%2FInitialRequestToManager.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2Fmessage%2FInitialRequestToManager.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,32 @@\n+/*  \n+Copyright [2013-2015] eBay Software Foundation\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+    http://www.apache.org/licenses/LICENSE-2.0\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+ */\n+package io.parallec.core.actor.message;\n+\n+import io.parallec.core.ParallelTask;\n+\n+/**\n+ * The Class InitialRequestToManager.\n+ */\n+public class InitialRequestToManager {\n+\n+    /**\n+     * Instantiates a new initial request to manager with parallel task\n+     *\n+     * @param parallelTask\n+     *            the parallel task\n+     */\n+    public InitialRequestToManager(ParallelTask parallelTask) {\n+        super();\n+    }\n+\n+}"
            },
            {
                "sha": "6a9c2912fa9fc2387a7ffa6db525a904415b938c",
                "filename": "src/main/java/io/parallec/core/actor/message/NodeReqResponse.java",
                "status": "added",
                "additions": 190,
                "deletions": 0,
                "changes": 190,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2Fmessage%2FNodeReqResponse.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2Fmessage%2FNodeReqResponse.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2Fmessage%2FNodeReqResponse.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,190 @@\n+/*  \n+Copyright [2013-2015] eBay Software Foundation\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+    http://www.apache.org/licenses/LICENSE-2.0\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+ */\n+package io.parallec.core.actor.message;\n+\n+import io.parallec.core.ResponseOnSingleTask;\n+import io.parallec.core.util.PcConstants;\n+\n+import java.util.LinkedHashMap;\n+import java.util.Map;\n+import java.util.Map.Entry;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+// TODO: Auto-generated Javadoc\n+/**\n+ * To save the content request and response By default the responseContent is\n+ * NULL because dont need it in InProgress entries. But must init!! when in\n+ * valid entries.\n+ * \n+ * @author Yuanteng Jeff Pei\n+ * \n+ */\n+public class NodeReqResponse {\n+\n+    /** The logger. */\n+    @SuppressWarnings(\"unused\")\n+    private static Logger logger = LoggerFactory\n+            .getLogger(NodeReqResponse.class);\n+\n+    /** The request parameters. */\n+    private final Map<String, String> requestParameters = new LinkedHashMap<String, String>();\n+\n+    /** The host name. */\n+    private String hostName;\n+\n+    /*\n+     * (non-Javadoc)\n+     * \n+     * @see java.lang.Object#toString()\n+     */\n+    @Override\n+    public String toString() {\n+        return \"NodeReqResponse [requestParameters=\" + requestParameters\n+                + \", singleTaskResponse=\" + singleTaskResponse + \"]\";\n+    }\n+\n+    /** The single task response. */\n+    private ResponseOnSingleTask singleTaskResponse = null;\n+\n+    /**\n+     * Instantiates a new node req response.\n+     *\n+     * @param hostName\n+     *            the host name\n+     */\n+    public NodeReqResponse(String hostName) {\n+        super();\n+        this.setHostName(hostName);\n+    }\n+\n+    /**\n+     * 20130507: auto replace part.\n+     *\n+     * @param requestParameters\n+     *            the request parameters\n+     * @param sourceContent\n+     *            the source content\n+     * @return the string\n+     */\n+    public static String replaceStrByMap(Map<String, String> requestParameters,\n+            String sourceContent) {\n+\n+        String contentAfterReplace = sourceContent;\n+\n+        for (Entry<String, String> entry : requestParameters.entrySet()) {\n+\n+            String sourceContentHelperNew = contentAfterReplace;\n+            String varName = entry.getKey();\n+            String replacement = entry.getValue();\n+\n+            if (varName.contains(PcConstants.NODE_REQUEST_PREFIX_REPLACE_VAR)) {\n+\n+                String varTrueName = \"$\"\n+                        + varName\n+                                .replace(\n+                                        PcConstants.NODE_REQUEST_PREFIX_REPLACE_VAR,\n+                                        \"\");\n+                sourceContentHelperNew = contentAfterReplace.replace(\n+                        varTrueName, replacement);\n+                contentAfterReplace = sourceContentHelperNew;\n+            }\n+\n+        }\n+\n+        return contentAfterReplace;\n+    }\n+\n+    /**\n+     * Sets the default reqest content.\n+     *\n+     * @param requestFullContent\n+     *            the new default reqest content\n+     */\n+    public void setDefaultReqestContent(String requestFullContent) {\n+\n+        requestParameters.put(PcConstants.REQUEST_BODY_PLACE_HOLDER,\n+                requestFullContent);\n+    }\n+\n+    /**\n+     * Sets the default empty reqest content.\n+     */\n+    public void setDefaultEmptyReqestContent() {\n+\n+        requestParameters.put(PcConstants.REQUEST_BODY_PLACE_HOLDER, \"\");\n+    }\n+\n+    /**\n+     * Sets the custom reqest content.\n+     *\n+     * @param requestVarName\n+     *            the request var name\n+     * @param requestVarContent\n+     *            the request var content\n+     */\n+    public void setCustomReqestContent(String requestVarName,\n+            String requestVarContent) {\n+\n+        requestParameters.put(requestVarName, requestVarContent);\n+    }\n+\n+    /**\n+     * Gets the request parameters.\n+     *\n+     * @return the request parameters\n+     */\n+    public Map<String, String> getRequestParameters() {\n+        return requestParameters;\n+    }\n+\n+    /**\n+     * Gets the single task response.\n+     *\n+     * @return the single task response\n+     */\n+    public ResponseOnSingleTask getSingleTaskResponse() {\n+        return singleTaskResponse;\n+    }\n+\n+    /**\n+     * Sets the single task response.\n+     *\n+     * @param singleTaskResponse\n+     *            the new single task response\n+     */\n+    public void setSingleTaskResponse(ResponseOnSingleTask singleTaskResponse) {\n+        this.singleTaskResponse = singleTaskResponse;\n+    }\n+\n+    /**\n+     * Gets the host name.\n+     *\n+     * @return the host name\n+     */\n+    public String getHostName() {\n+        return hostName;\n+    }\n+\n+    /**\n+     * Sets the host name.\n+     *\n+     * @param hostName\n+     *            the new host name\n+     */\n+    public void setHostName(String hostName) {\n+        this.hostName = hostName;\n+    }\n+\n+}"
            },
            {
                "sha": "e82ab716a440600c864bba6906ba5c25b862bb41",
                "filename": "src/main/java/io/parallec/core/actor/message/RequestToBatchSenderAsstManager.java",
                "status": "added",
                "additions": 118,
                "deletions": 0,
                "changes": 118,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2Fmessage%2FRequestToBatchSenderAsstManager.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2Fmessage%2FRequestToBatchSenderAsstManager.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2Fmessage%2FRequestToBatchSenderAsstManager.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,118 @@\n+/*  \n+Copyright [2013-2015] eBay Software Foundation\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+    http://www.apache.org/licenses/LICENSE-2.0\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+ */\n+package io.parallec.core.actor.message;\n+\n+import io.parallec.core.config.ParallecGlobalConfig;\n+\n+import java.util.List;\n+\n+import akka.actor.ActorRef;\n+\n+/**\n+ * The Class RequestToBatchSenderAsstManager.\n+ */\n+public class RequestToBatchSenderAsstManager {\n+\n+    /** The task id. */\n+    private final String taskId;\n+\n+    /** The asst manager retry interval millis. */\n+    private final long asstManagerRetryIntervalMillis;\n+\n+    /** The max concurrency. */\n+    private final int maxConcurrency;\n+\n+    /**\n+     * The workers: list of actor ref. cannot be empty because coming from\n+     * */\n+    private final List<ActorRef> workers;\n+\n+    /** The sender. */\n+    private final ActorRef sender;\n+\n+    /** used for pojo test only. */\n+    public RequestToBatchSenderAsstManager() {\n+        super();\n+        this.taskId = null;\n+        this.asstManagerRetryIntervalMillis = 250L;\n+        this.workers = null;\n+        this.sender = null;\n+        this.maxConcurrency = ParallecGlobalConfig.concurrencyDefault;\n+    }\n+\n+    /**\n+     * Instantiates a new request to batch sender asst manager.\n+     *\n+     * @param directorJobId            the director job id\n+     * @param asstManagerRetryIntervalMillis the asst manager retry interval millis\n+     * @param workers            the workers\n+     * @param sender            the sender\n+     * @param maxConcurrency            the max concurrency\n+     */\n+    public RequestToBatchSenderAsstManager(String directorJobId,\n+            long asstManagerRetryIntervalMillis, List<ActorRef> workers,\n+            ActorRef sender, int maxConcurrency) {\n+        super();\n+        this.taskId = directorJobId;\n+        this.asstManagerRetryIntervalMillis = asstManagerRetryIntervalMillis;\n+        this.workers = workers;\n+        this.sender = sender;\n+        this.maxConcurrency = maxConcurrency;\n+    }\n+\n+    /**\n+     * Gets the max concurrency.\n+     *\n+     * @return the max concurrency\n+     */\n+    public int getMaxConcurrency() {\n+        return maxConcurrency;\n+    }\n+\n+    /**\n+     * Gets the task id.\n+     *\n+     * @return the task id\n+     */\n+    public String getTaskId() {\n+        return taskId;\n+    }\n+\n+    /**\n+     * Gets the workers.\n+     *\n+     * @return the workers\n+     */\n+    public List<ActorRef> getWorkers() {\n+        return workers;\n+    }\n+\n+    /**\n+     * Gets the sender.\n+     *\n+     * @return the sender\n+     */\n+    public ActorRef getSender() {\n+        return sender;\n+    }\n+\n+    /**\n+     * Gets the asst manager retry interval millis.\n+     *\n+     * @return the asst manager retry interval millis\n+     */\n+    public long getAsstManagerRetryIntervalMillis() {\n+        return asstManagerRetryIntervalMillis;\n+    }\n+\n+}"
            },
            {
                "sha": "d505f44e7872c87fc17437a1ad3160eefaf1b309",
                "filename": "src/main/java/io/parallec/core/actor/message/ResponseCountToBatchSenderAsstManager.java",
                "status": "added",
                "additions": 46,
                "deletions": 0,
                "changes": 46,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2Fmessage%2FResponseCountToBatchSenderAsstManager.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2Fmessage%2FResponseCountToBatchSenderAsstManager.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2Fmessage%2FResponseCountToBatchSenderAsstManager.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,46 @@\n+/*  \n+Copyright [2013-2015] eBay Software Foundation\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+    http://www.apache.org/licenses/LICENSE-2.0\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+ */\n+package io.parallec.core.actor.message;\n+\n+// TODO: Auto-generated Javadoc\n+/**\n+ * Receive count from the manager to asst manager; for flow control.\n+ *\n+ * @author Yuanteng Jeff Pei\n+ */\n+public class ResponseCountToBatchSenderAsstManager {\n+\n+    /** The response count. */\n+    private final int responseCount;\n+\n+    /**\n+     * Instantiates a new response count to batch sender asst manager.\n+     *\n+     * @param responseCount\n+     *            the response count\n+     */\n+    public ResponseCountToBatchSenderAsstManager(int responseCount) {\n+        super();\n+        this.responseCount = responseCount;\n+    }\n+\n+    /**\n+     * Gets the response count.\n+     *\n+     * @return the response count\n+     */\n+    public int getResponseCount() {\n+        return responseCount;\n+    }\n+\n+}"
            },
            {
                "sha": "8bf6962121e2afe2fe5415878244a4305da05ebc",
                "filename": "src/main/java/io/parallec/core/actor/message/ResponseFromManager.java",
                "status": "added",
                "additions": 35,
                "deletions": 0,
                "changes": 35,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2Fmessage%2FResponseFromManager.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2Fmessage%2FResponseFromManager.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2Fmessage%2FResponseFromManager.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,35 @@\n+/*  \n+Copyright [2013-2015] eBay Software Foundation\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+    http://www.apache.org/licenses/LICENSE-2.0\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+ */\n+package io.parallec.core.actor.message;\n+\n+/**\n+ * The Class BatchResponseFromManager.\n+ */\n+public class ResponseFromManager {\n+\n+    private int responseCount;\n+\n+    public ResponseFromManager(int responseCount) {\n+        super();\n+        this.responseCount = responseCount;\n+    }\n+\n+    public int getResponseCount() {\n+        return responseCount;\n+    }\n+\n+    public void setResponseCount(int responseCount) {\n+        this.responseCount = responseCount;\n+    }\n+\n+}"
            },
            {
                "sha": "2638ab6cdafc881b0cf65bc0be2c8c0f7771e91c",
                "filename": "src/main/java/io/parallec/core/actor/message/ResponseOnSingeRequest.java",
                "status": "added",
                "additions": 255,
                "deletions": 0,
                "changes": 255,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2Fmessage%2FResponseOnSingeRequest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2Fmessage%2FResponseOnSingeRequest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2Fmessage%2FResponseOnSingeRequest.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,255 @@\n+/*  \n+Copyright [2013-2015] eBay Software Foundation\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+    http://www.apache.org/licenses/LICENSE-2.0\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+ */\n+package io.parallec.core.actor.message;\n+\n+import io.parallec.core.util.PcConstants;\n+import io.parallec.core.util.PcDateUtils;\n+\n+// TODO: Auto-generated Javadoc\n+/**\n+ * a single HTTP response for each http request\n+ * \n+ * Note that the failObtainResponse in the response is whether work successfully\n+ * received. it is not about 200 code.\n+ * \n+ * The Single Response will be in error when the HTTP Worker fail to obtain the\n+ * response back on condition of CANCEL PROCESS_ON_EXCEPTION PROCESS_ON_TIMEOUT\n+ * \n+ * @author Yuanteng Jeff Pei\n+ *\n+ */\n+public class ResponseOnSingeRequest {\n+\n+    /** The response body. */\n+    // Response attributes\n+    private String responseBody;\n+\n+    /** The fail obtain response. */\n+    private boolean failObtainResponse;\n+\n+    /** The error message. */\n+    private String errorMessage;\n+\n+    /** The stack trace. */\n+    private String stackTrace;\n+\n+    /** The status code int. */\n+    private int statusCodeInt;\n+\n+    /** The status code. */\n+    private String statusCode;\n+\n+    /**\n+     * Checks if is fail obtain response.\n+     *\n+     * @return true, if is fail obtain response\n+     */\n+    public boolean isFailObtainResponse() {\n+        return failObtainResponse;\n+    }\n+\n+    /**\n+     * Sets the fail obtain response.\n+     *\n+     * @param failObtainResponse\n+     *            the new fail obtain response\n+     */\n+    public void setFailObtainResponse(boolean failObtainResponse) {\n+        this.failObtainResponse = failObtainResponse;\n+    }\n+\n+    /**\n+     * Sets the response body.\n+     *\n+     * @param responseBody\n+     *            the new response body\n+     */\n+    public void setResponseBody(String responseBody) {\n+        this.responseBody = responseBody;\n+    }\n+\n+    /**\n+     * Sets the error message.\n+     *\n+     * @param errorMessage\n+     *            the new error message\n+     */\n+    public void setErrorMessage(String errorMessage) {\n+        this.errorMessage = errorMessage;\n+    }\n+\n+    /**\n+     * Sets the stack trace.\n+     *\n+     * @param stackTrace\n+     *            the new stack trace\n+     */\n+    public void setStackTrace(String stackTrace) {\n+        this.stackTrace = stackTrace;\n+    }\n+\n+    /**\n+     * Sets the status code.\n+     *\n+     * @param statusCode\n+     *            the new status code\n+     */\n+    public void setStatusCode(String statusCode) {\n+        this.statusCode = statusCode;\n+    }\n+\n+    /** The receive time. */\n+    private String receiveTime = PcConstants.NA;\n+\n+    /**\n+     * Instantiates a new response on singe request.\n+     *\n+     * @param responseBody\n+     *            the response body\n+     * @param failObtainResponse\n+     *            the fail obtain response\n+     * @param errorMessage\n+     *            the error message\n+     * @param stackTrace\n+     *            the stack trace\n+     * @param statusCode\n+     *            the status code\n+     * @param statusCodeInt\n+     *            the status code int\n+     * @param receiveTime\n+     *            the receive time\n+     */\n+    public ResponseOnSingeRequest(String responseBody,\n+            boolean failObtainResponse, String errorMessage, String stackTrace,\n+            String statusCode, int statusCodeInt, String receiveTime) {\n+        super();\n+\n+        this.responseBody = responseBody;\n+        this.failObtainResponse = failObtainResponse;\n+        this.errorMessage = errorMessage;\n+        this.stackTrace = stackTrace;\n+        this.statusCode = statusCode;\n+        this.setStatusCodeInt(statusCodeInt);\n+        this.setReceiveTime(receiveTime);\n+    }\n+\n+    /**\n+     * Instantiates a new response on singe request.\n+     */\n+    public ResponseOnSingeRequest() {\n+        this.responseBody = null;\n+        this.failObtainResponse = true;\n+        this.errorMessage = null;\n+        this.stackTrace = null;\n+        this.statusCode = null;\n+        this.setStatusCodeInt(PcConstants.NA_INT);\n+        this.setReceiveTime(null);\n+    }\n+\n+    /**\n+     * Gets the response body.\n+     *\n+     * @return the response body\n+     */\n+    public String getResponseBody() {\n+        return responseBody;\n+    }\n+\n+    /**\n+     * Gets the error message.\n+     *\n+     * @return the error message\n+     */\n+    public String getErrorMessage() {\n+        return errorMessage;\n+    }\n+\n+    /**\n+     * Gets the stack trace.\n+     *\n+     * @return the stack trace\n+     */\n+    public String getStackTrace() {\n+        return stackTrace;\n+    }\n+\n+    /**\n+     * Gets the status code.\n+     *\n+     * @return the status code\n+     */\n+    public String getStatusCode() {\n+        return statusCode;\n+    }\n+\n+    /**\n+     * Gets the receive time.\n+     *\n+     * @return the receive time\n+     */\n+    public String getReceiveTime() {\n+        return receiveTime;\n+    }\n+\n+    /**\n+     * Sets the receive time now.\n+     */\n+    public void setReceiveTimeNow() {\n+        this.receiveTime = PcDateUtils.getNowDateTimeStrStandard();\n+    }\n+\n+    /**\n+     * Sets the receive time.\n+     *\n+     * @param receiveTime\n+     *            the new receive time\n+     */\n+    public void setReceiveTime(String receiveTime) {\n+        this.receiveTime = receiveTime;\n+    }\n+\n+    /**\n+     * Gets the status code int.\n+     *\n+     * @return the status code int\n+     */\n+    public int getStatusCodeInt() {\n+        return statusCodeInt;\n+    }\n+\n+    /**\n+     * Sets the status code int.\n+     *\n+     * @param statusCodeInt\n+     *            the new status code int\n+     */\n+    public void setStatusCodeInt(int statusCodeInt) {\n+        this.statusCodeInt = statusCodeInt;\n+    }\n+\n+    /*\n+     * (non-Javadoc)\n+     * \n+     * @see java.lang.Object#toString()\n+     */\n+    @Override\n+    public String toString() {\n+        return \"ResponseOnSingeReq [responseBody=\" + responseBody\n+                + \", failObtainResponse=\" + failObtainResponse\n+                + \", errorMessage=\" + errorMessage + \", stackTrace=\"\n+                + stackTrace + \", statusCodeInt=\" + statusCodeInt\n+                + \", statusCode=\" + statusCode + \", receiveTime=\" + receiveTime\n+                + \"]\";\n+    }\n+\n+}// end subclass\n\\ No newline at end of file"
            },
            {
                "sha": "67a4bba01b84f6e0d842958c3b27c9b0db0916e4",
                "filename": "src/main/java/io/parallec/core/actor/message/package-info.java",
                "status": "added",
                "additions": 4,
                "deletions": 0,
                "changes": 4,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2Fmessage%2Fpackage-info.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2Fmessage%2Fpackage-info.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2Fmessage%2Fpackage-info.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,4 @@\n+/**\n+ * Actor messages.\n+ */\n+package io.parallec.core.actor.message;\n\\ No newline at end of file"
            },
            {
                "sha": "58773deb96bfc5144cf4562317964713d3ba55c6",
                "filename": "src/main/java/io/parallec/core/actor/message/type/ExecutionManagerMsgType.java",
                "status": "added",
                "additions": 11,
                "deletions": 0,
                "changes": 11,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2Fmessage%2Ftype%2FExecutionManagerMsgType.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2Fmessage%2Ftype%2FExecutionManagerMsgType.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2Fmessage%2Ftype%2FExecutionManagerMsgType.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,11 @@\n+package io.parallec.core.actor.message.type;\n+\n+/**\n+ * The Enum ExecutionManagerMsgType.\n+ */\n+public enum ExecutionManagerMsgType {\n+    /** The operation timeout. */\n+    OPERATION_TIMEOUT,\n+    /** The cancel. */\n+    CANCEL\n+}\n\\ No newline at end of file"
            },
            {
                "sha": "2c295658ede3dddeffdf2bf43efbb6551f4cfd5c",
                "filename": "src/main/java/io/parallec/core/actor/message/type/OperationWorkerMsgType.java",
                "status": "added",
                "additions": 29,
                "deletions": 0,
                "changes": 29,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2Fmessage%2Ftype%2FOperationWorkerMsgType.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2Fmessage%2Ftype%2FOperationWorkerMsgType.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2Fmessage%2Ftype%2FOperationWorkerMsgType.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,29 @@\n+/*  \n+Copyright [2013-2015] eBay Software Foundation\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+    http://www.apache.org/licenses/LICENSE-2.0\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+ */\n+package io.parallec.core.actor.message.type;\n+\n+// TODO: Auto-generated Javadoc\n+/**\n+ * The Enum OperationWorkerMsgType.\n+ */\n+public enum OperationWorkerMsgType {\n+\n+    /** The poll progress. */\n+    POLL_PROGRESS,\n+    /** The operation timeout. */\n+    OPERATION_TIMEOUT,\n+    /** The process request. */\n+    PROCESS_REQUEST,\n+    /** The cancel. */\n+    CANCEL\n+}\n\\ No newline at end of file"
            },
            {
                "sha": "3f5e0aa2cf12932b48d4a8e97e298e45edaae79c",
                "filename": "src/main/java/io/parallec/core/actor/message/type/RequestWorkerMsgType.java",
                "status": "added",
                "additions": 31,
                "deletions": 0,
                "changes": 31,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2Fmessage%2Ftype%2FRequestWorkerMsgType.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2Fmessage%2Ftype%2FRequestWorkerMsgType.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2Fmessage%2Ftype%2FRequestWorkerMsgType.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,31 @@\n+/*  \n+Copyright [2013-2015] eBay Software Foundation\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+    http://www.apache.org/licenses/LICENSE-2.0\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+ */\n+package io.parallec.core.actor.message.type;\n+\n+// TODO: Auto-generated Javadoc\n+/**\n+ * The Enum RequestWorkerMsgType. for SSH/HTTP Workers only.\n+ */\n+public enum RequestWorkerMsgType {\n+\n+    /** The process request. */\n+    PROCESS_REQUEST,\n+    /** The check ssh progress. */\n+    CHECK_FUTURE_STATE,\n+    /** The cancel. */\n+    CANCEL,\n+    /** The process on exception. */\n+    PROCESS_ON_EXCEPTION,\n+    /** The process on timeout. */\n+    PROCESS_ON_TIMEOUT\n+}\n\\ No newline at end of file"
            },
            {
                "sha": "33abcc6b7ef2181cf28e8df03c2736511150d04b",
                "filename": "src/main/java/io/parallec/core/actor/message/type/package-info.java",
                "status": "added",
                "additions": 4,
                "deletions": 0,
                "changes": 4,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2Fmessage%2Ftype%2Fpackage-info.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2Fmessage%2Ftype%2Fpackage-info.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2Fmessage%2Ftype%2Fpackage-info.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,4 @@\n+/**\n+ * Actor message types.\n+ */\n+package io.parallec.core.actor.message.type;\n\\ No newline at end of file"
            },
            {
                "sha": "f2f02b1360b6cce0ee91e96aebb5dcf6c990d1ae",
                "filename": "src/main/java/io/parallec/core/actor/package-info.java",
                "status": "added",
                "additions": 4,
                "deletions": 0,
                "changes": 4,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2Fpackage-info.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2Fpackage-info.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2Fpackage-info.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,4 @@\n+/**\n+ * Actors to execute parallel task and return responses.\n+ */\n+package io.parallec.core.actor;\n\\ No newline at end of file"
            },
            {
                "sha": "a6212caf2eca500507cf1de8bd78d6240e7619af",
                "filename": "src/main/java/io/parallec/core/actor/poll/HttpPollerProcessor.java",
                "status": "added",
                "additions": 426,
                "deletions": 0,
                "changes": 426,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2Fpoll%2FHttpPollerProcessor.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2Fpoll%2FHttpPollerProcessor.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2Fpoll%2FHttpPollerProcessor.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,426 @@\n+/*  \n+Copyright [2013-2015] eBay Software Foundation\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+    http://www.apache.org/licenses/LICENSE-2.0\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+ */\n+package io.parallec.core.actor.poll;\n+\n+import io.parallec.core.actor.message.ResponseOnSingeRequest;\n+import io.parallec.core.util.PcConstants;\n+\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+// TODO: Auto-generated Javadoc\n+/**\n+ * Define how to poll progress 1. how to get the job id from the 1st response.\n+ * 2. what is the URL template to poll progress (assuming it is a HTTP GET) 3.\n+ * the regex to get the progress num. Note that this progress regex is not used\n+ * to check if the job is completed. just for record. 4.\n+ * \n+ * Poll API: assume the HTTP Method for poll: is GET / no body/ and with the\n+ * same header as the 1st reqwuest\n+ * \n+ * @author Yuanteng Jeff Pei\n+ * \n+ */\n+public class HttpPollerProcessor {\n+\n+    /** The logger. */\n+    private static Logger logger = LoggerFactory\n+            .getLogger(HttpPollerProcessor.class);\n+\n+    /** The poller type. */\n+    private String pollerType;\n+\n+    /** The success regex. */\n+    private String successRegex;\n+\n+    /** The failure regex. */\n+    private String failureRegex;\n+\n+    /** The job id regex. */\n+    // matching pattern \"status\": \"/status/uuid\"\n+    private String jobIdRegex;\n+\n+    /** The progress regex. */\n+    // optional for checking stuck\n+    private String progressRegex;\n+\n+    /** The progress stuck timeout seconds. */\n+    private int progressStuckTimeoutSeconds;\n+\n+    /** The max poll error. */\n+    private int maxPollError;\n+\n+    /** The poll interval millis. */\n+    private long pollIntervalMillis;\n+\n+    /** The poller request template. */\n+    private String pollerRequestTemplate;\n+\n+    /** The job id place holder. */\n+    private String jobIdPlaceHolder;\n+\n+    /**\n+     * default as the cronus agent poller\n+     * \n+     * Assuming the polling API is By HTTP GET; without any postbody (for GET, no\n+     * post body for sure)\n+     * \n+     */\n+\n+    public HttpPollerProcessor() {\n+        super();\n+\n+    }\n+\n+    /**\n+     * Instantiates a new http poller processor.\n+     *\n+     * @param pollerType\n+     *            the poller type\n+     * @param successRegex\n+     *            the success regex\n+     * @param failureRegex\n+     *            the failure regex\n+     * @param uuidRegex\n+     *            the uuid regex\n+     * @param progressRegex\n+     *            the progress regex\n+     * @param progressStuckTimeoutSeconds\n+     *            the progress stuck timeout seconds\n+     * @param pollIntervalMillis\n+     *            the poll interval millis\n+     * @param pollerRequestTemplate\n+     *            the poller request template\n+     * @param jobIdPlaceHolder\n+     *            the job id place holder\n+     * @param maxPollError\n+     *            the max poll error\n+     */\n+    public HttpPollerProcessor(String pollerType, String successRegex,\n+            String failureRegex, String uuidRegex, String progressRegex,\n+            int progressStuckTimeoutSeconds, long pollIntervalMillis,\n+            String pollerRequestTemplate, String jobIdPlaceHolder,\n+            int maxPollError) {\n+        super();\n+        this.pollerType = pollerType;\n+        this.successRegex = successRegex;\n+        this.failureRegex = failureRegex;\n+        this.setJobIdRegex(uuidRegex);\n+        this.progressRegex = progressRegex;\n+        this.progressStuckTimeoutSeconds = progressStuckTimeoutSeconds;\n+        this.pollIntervalMillis = pollIntervalMillis;\n+        this.pollerRequestTemplate = pollerRequestTemplate;\n+        this.jobIdPlaceHolder = jobIdPlaceHolder;\n+        this.setMaxPollError(maxPollError);\n+    }\n+\n+    /**\n+     * Important. get the poller URL\n+     *\n+     * @param uuid\n+     *            the uuid\n+     * @return the poller request url\n+     */\n+    public String getPollerRequestUrl(String uuid) {\n+        String pollerUrl = pollerRequestTemplate\n+                .replace(jobIdPlaceHolder, uuid);\n+        return pollerUrl;\n+    }\n+\n+    /**\n+     * Gets the poll interval millis.\n+     *\n+     * @return the poll interval millis\n+     */\n+    public long getPollIntervalMillis() {\n+        return pollIntervalMillis;\n+    }\n+\n+    /**\n+     * Sets the poll interval millis.\n+     *\n+     * @param pollIntervalMillis\n+     *            the new poll interval millis\n+     */\n+    public void setPollIntervalMillis(long pollIntervalMillis) {\n+        this.pollIntervalMillis = pollIntervalMillis;\n+    }\n+\n+    /**\n+     * Gets the poller request template.\n+     *\n+     * @return the poller request template\n+     */\n+    public String getPollerRequestTemplate() {\n+        return pollerRequestTemplate;\n+    }\n+\n+    /**\n+     * Sets the poller request template.\n+     *\n+     * @param pollerRequestTemplate\n+     *            the new poller request template\n+     */\n+    public void setPollerRequestTemplate(String pollerRequestTemplate) {\n+        this.pollerRequestTemplate = pollerRequestTemplate;\n+    }\n+\n+    /**\n+     * Gets the uuid from response.\n+     *\n+     * @param myResponse\n+     *            the my response\n+     * @return the uuid from response\n+     */\n+    public String getUuidFromResponse(ResponseOnSingeRequest myResponse) {\n+\n+        String uuid = PcConstants.NA;\n+        String responseBody = myResponse.getResponseBody();\n+        Pattern regex = Pattern.compile(getJobIdRegex());\n+        Matcher matcher = regex.matcher(responseBody);\n+        if (matcher.matches()) {\n+            uuid = matcher.group(1);\n+        }\n+\n+        return uuid;\n+    }\n+\n+    /**\n+     * Gets the progress from response.\n+     *\n+     * @param myResponse\n+     *            the my response\n+     * @return the progress from response\n+     */\n+    public double getProgressFromResponse(ResponseOnSingeRequest myResponse) {\n+\n+        double progress = 0.0;\n+        try {\n+\n+            if (myResponse == null || myResponse.isFailObtainResponse()) {\n+                return progress;\n+            }\n+\n+            String responseBody = myResponse.getResponseBody();\n+            Pattern regex = Pattern.compile(progressRegex);\n+            Matcher matcher = regex.matcher(responseBody);\n+            if (matcher.matches()) {\n+                String progressStr = matcher.group(1);\n+                progress = Double.parseDouble(progressStr);\n+            }\n+\n+        } catch (Exception t) {\n+            logger.error(\"fail\" + t);\n+\n+        }\n+\n+        return progress;\n+    }\n+\n+    /**\n+     * If there is error in response.\n+     *\n+     * @param myResponse\n+     *            the my response\n+     * @return true, if successful\n+     */\n+    public boolean ifThereIsErrorInResponse(ResponseOnSingeRequest myResponse) {\n+\n+        return myResponse == null ? true : myResponse.isFailObtainResponse();\n+    }\n+\n+    /**\n+     * If task completed success or failure from response.\n+     *\n+     * @param myResponse\n+     *            the my response\n+     * @return true, if successful\n+     */\n+    public boolean ifTaskCompletedSuccessOrFailureFromResponse(\n+            ResponseOnSingeRequest myResponse) {\n+\n+        boolean isCompleted = false;\n+        try {\n+\n+            if (myResponse == null || myResponse.isFailObtainResponse()) {\n+                return isCompleted;\n+            }\n+\n+            String responseBody = myResponse.getResponseBody();\n+            if (responseBody.matches(successRegex)\n+                    || responseBody.matches(failureRegex)) {\n+                isCompleted = true;\n+            }\n+\n+        } catch (Exception t) {\n+            logger.error(\"fail\" + t);\n+\n+        }\n+        return isCompleted;\n+    }\n+\n+    /**\n+     * Gets the poller type.\n+     *\n+     * @return the poller type\n+     */\n+    public String getPollerType() {\n+        return pollerType;\n+    }\n+\n+    /**\n+     * Sets the poller type.\n+     *\n+     * @param pollerType\n+     *            the new poller type\n+     */\n+    public void setPollerType(String pollerType) {\n+        this.pollerType = pollerType;\n+    }\n+\n+    /**\n+     * Gets the failure regex.\n+     *\n+     * @return the failure regex\n+     */\n+    public String getFailureRegex() {\n+        return failureRegex;\n+    }\n+\n+    /**\n+     * Sets the failure regex.\n+     *\n+     * @param failureRegex\n+     *            the new failure regex\n+     */\n+    public void setFailureRegex(String failureRegex) {\n+        this.failureRegex = failureRegex;\n+    }\n+\n+    /**\n+     * Gets the progress regex.\n+     *\n+     * @return the progress regex\n+     */\n+    public String getProgressRegex() {\n+        return progressRegex;\n+    }\n+\n+    /**\n+     * Sets the progress regex.\n+     *\n+     * @param progressRegex\n+     *            the new progress regex\n+     */\n+    public void setProgressRegex(String progressRegex) {\n+        this.progressRegex = progressRegex;\n+    }\n+\n+    /**\n+     * Gets the progress stuck timeout seconds.\n+     *\n+     * @return the progress stuck timeout seconds\n+     */\n+    public int getProgressStuckTimeoutSeconds() {\n+        return progressStuckTimeoutSeconds;\n+    }\n+\n+    /**\n+     * Sets the progress stuck timeout seconds.\n+     *\n+     * @param progressStuckTimeoutSeconds\n+     *            the new progress stuck timeout seconds\n+     */\n+    public void setProgressStuckTimeoutSeconds(int progressStuckTimeoutSeconds) {\n+        this.progressStuckTimeoutSeconds = progressStuckTimeoutSeconds;\n+    }\n+\n+    /*\n+     * (non-Javadoc)\n+     * \n+     * @see java.lang.Object#toString()\n+     */\n+    @Override\n+    public String toString() {\n+        return \"HttpPollerProcessor [pollerType=\" + pollerType\n+                + \", successRegex=\" + successRegex + \", failureRegex=\"\n+                + failureRegex + \", uuidRegex=\" + getJobIdRegex()\n+                + \", progressRegex=\" + progressRegex\n+                + \", progressStuckTimeoutSeconds=\"\n+                + progressStuckTimeoutSeconds + \", pollIntervalMillis=\"\n+                + pollIntervalMillis + \", pollerRequestTemplate=\"\n+                + pollerRequestTemplate + \", jobIdPlaceHolder=\"\n+                + jobIdPlaceHolder + \"]\";\n+    }\n+\n+    /**\n+     * Gets the job id place holder.\n+     *\n+     * @return the job id place holder\n+     */\n+    public String getJobIdPlaceHolder() {\n+        return jobIdPlaceHolder;\n+    }\n+\n+    /**\n+     * Sets the job id place holder.\n+     *\n+     * @param jobIdPlaceHolder\n+     *            the new job id place holder\n+     */\n+    public void setJobIdPlaceHolder(String jobIdPlaceHolder) {\n+        this.jobIdPlaceHolder = jobIdPlaceHolder;\n+    }\n+\n+    /**\n+     * Gets the job id regex.\n+     *\n+     * @return the job id regex\n+     */\n+    public String getJobIdRegex() {\n+        return jobIdRegex;\n+    }\n+\n+    /**\n+     * Sets the job id regex.\n+     *\n+     * @param jobIdRegex\n+     *            the new job id regex\n+     */\n+    public void setJobIdRegex(String jobIdRegex) {\n+        this.jobIdRegex = jobIdRegex;\n+    }\n+\n+    /**\n+     * Gets the max poll error.\n+     *\n+     * @return the max poll error\n+     */\n+    public int getMaxPollError() {\n+        return maxPollError;\n+    }\n+\n+    /**\n+     * Sets the max poll error.\n+     *\n+     * @param maxPollError\n+     *            the new max poll error\n+     */\n+    public void setMaxPollError(int maxPollError) {\n+        this.maxPollError = maxPollError;\n+    }\n+\n+}"
            },
            {
                "sha": "82ca3b696031cff8c895077ee38e1b405d222fc3",
                "filename": "src/main/java/io/parallec/core/actor/poll/PollerData.java",
                "status": "added",
                "additions": 232,
                "deletions": 0,
                "changes": 232,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2Fpoll%2FPollerData.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2Fpoll%2FPollerData.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2Fpoll%2FPollerData.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,232 @@\n+/*  \n+Copyright [2013-2015] eBay Software Foundation\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+    http://www.apache.org/licenses/LICENSE-2.0\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+ */\n+package io.parallec.core.actor.poll;\n+\n+import io.parallec.core.util.PcConstants;\n+\n+import java.util.LinkedHashMap;\n+import java.util.Map;\n+\n+// TODO: Auto-generated Javadoc\n+/**\n+ * the currentProgress is just for display.\n+ * \n+ * @author Yuanteng Jeff Pei\n+ *\n+ */\n+public class PollerData {\n+\n+    /** The current progress. */\n+    private double currentProgress = 0.0;\n+\n+    /** The is error. */\n+    private boolean isError = false;\n+\n+    /** The is complete. */\n+    private boolean isComplete = false;\n+\n+    /** The is stuck progress. */\n+    private boolean isStuckProgress = false;\n+\n+    /** The job id. */\n+    private String jobId = PcConstants.NA;\n+\n+    /** The uuid has been set. */\n+    private boolean uuidHasBeenSet = false;\n+\n+    /** The metadata. */\n+    private String metadata;\n+\n+    /** The polling history map. */\n+    final private Map<String, String> pollingHistoryMap = new LinkedHashMap<String, String>();\n+\n+    /**\n+     * Instantiates a new poller data.\n+     */\n+    public PollerData() {\n+        currentProgress = 0.0;\n+        isError = false;\n+        isComplete = false;\n+        isStuckProgress = false;\n+        jobId = PcConstants.NA;\n+        uuidHasBeenSet = false;\n+    }\n+\n+    /**\n+     * Gets the current progress.\n+     *\n+     * @return the current progress\n+     */\n+    public double getCurrentProgress() {\n+        return currentProgress;\n+    }\n+\n+    /**\n+     * Sets the current progress.\n+     *\n+     * @param currentProgress\n+     *            the new current progress\n+     */\n+    public void setCurrentProgress(double currentProgress) {\n+        this.currentProgress = currentProgress;\n+    }\n+\n+    /**\n+     * Checks if is error.\n+     *\n+     * @return true, if is error\n+     */\n+    public boolean isError() {\n+        return isError;\n+    }\n+\n+    /**\n+     * Sets the error.\n+     *\n+     * @param isError\n+     *            the new error\n+     */\n+    public void setError(boolean isError) {\n+        this.isError = isError;\n+    }\n+\n+    /**\n+     * Checks if is complete.\n+     *\n+     * @return true, if is complete\n+     */\n+    public boolean isComplete() {\n+        return isComplete;\n+    }\n+\n+    /**\n+     * Sets the complete.\n+     *\n+     * @param isComplete\n+     *            the new complete\n+     */\n+    public void setComplete(boolean isComplete) {\n+        this.isComplete = isComplete;\n+    }\n+\n+    /**\n+     * Checks if is stuck progress.\n+     *\n+     * @return true, if is stuck progress\n+     */\n+    public boolean isStuckProgress() {\n+        return isStuckProgress;\n+    }\n+\n+    /**\n+     * Sets the stuck progress.\n+     *\n+     * @param isStuckProgress\n+     *            the new stuck progress\n+     */\n+    public void setStuckProgress(boolean isStuckProgress) {\n+        this.isStuckProgress = isStuckProgress;\n+    }\n+\n+    /**\n+     * Gets the job id.\n+     *\n+     * @return the job id\n+     */\n+    public String getJobId() {\n+        return jobId;\n+    }\n+\n+    /**\n+     * also mark as set.\n+     *\n+     * @param uuid\n+     *            the new job id and mark has been set\n+     */\n+    public void setJobIdAndMarkHasBeenSet(String uuid) {\n+        this.jobId = uuid;\n+        this.uuidHasBeenSet = true;\n+    }\n+\n+    /**\n+     * Gets the metadata.\n+     *\n+     * @return the metadata\n+     */\n+    public String getMetadata() {\n+        return metadata;\n+    }\n+\n+    /**\n+     * Sets the metadata.\n+     *\n+     * @param metadata\n+     *            the new metadata\n+     */\n+    public void setMetadata(String metadata) {\n+        this.metadata = metadata;\n+    }\n+\n+    /**\n+     * Checks if is uuid has been set.\n+     *\n+     * @return true, if is uuid has been set\n+     */\n+    public boolean isUuidHasBeenSet() {\n+        return uuidHasBeenSet;\n+    }\n+\n+    /**\n+     * Sets the uuid has been set.\n+     *\n+     * @param uuidHasBeenSet\n+     *            the new uuid has been set\n+     */\n+    public void setUuidHasBeenSet(boolean uuidHasBeenSet) {\n+        this.uuidHasBeenSet = uuidHasBeenSet;\n+    }\n+\n+    /**\n+     * Sets the uuid.\n+     *\n+     * @param uuid\n+     *            the new uuid\n+     */\n+    public void setUuid(String uuid) {\n+        this.jobId = uuid;\n+    }\n+\n+    /**\n+     * Gets the polling history map.\n+     *\n+     * @return the polling history map\n+     */\n+    public Map<String, String> getPollingHistoryMap() {\n+        return pollingHistoryMap;\n+    }\n+\n+    /*\n+     * (non-Javadoc)\n+     * \n+     * @see java.lang.Object#toString()\n+     */\n+    @Override\n+    public String toString() {\n+        return \"PollerData [currentProgress=\" + currentProgress + \", isError=\"\n+                + isError + \", isComplete=\" + isComplete + \", isStuckProgress=\"\n+                + isStuckProgress + \", uuid=\" + jobId + \", uuidHasBeenSet=\"\n+                + uuidHasBeenSet + \", metadata=\" + metadata\n+                + \", pollingHistoryMap=\" + pollingHistoryMap + \"]\";\n+    }\n+\n+}"
            },
            {
                "sha": "c44b7b3dfd6d79cce3819274b4992fbc76b64be4",
                "filename": "src/main/java/io/parallec/core/actor/poll/package-info.java",
                "status": "added",
                "additions": 5,
                "deletions": 0,
                "changes": 5,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2Fpoll%2Fpackage-info.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2Fpoll%2Fpackage-info.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2Fpoll%2Fpackage-info.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,5 @@\n+/**\n+ * Classes for handling Async APIs with polling progress APIs \n+ * with success / failure criteria\n+ */\n+package io.parallec.core.actor.poll;\n\\ No newline at end of file"
            },
            {
                "sha": "3c2db4365d32aea6f9838bf0456c2365242ff56b",
                "filename": "src/main/java/io/parallec/core/app/ParallecAppMin.java",
                "status": "added",
                "additions": 49,
                "deletions": 0,
                "changes": 49,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fapp%2FParallecAppMin.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fapp%2FParallecAppMin.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fapp%2FParallecAppMin.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,49 @@\n+/*  \n+Copyright [2013-2015] eBay Software Foundation\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+    http://www.apache.org/licenses/LICENSE-2.0\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+ */\n+package io.parallec.core.app;\n+\n+import io.parallec.core.ParallecResponseHandler;\n+import io.parallec.core.ParallelClient;\n+import io.parallec.core.ResponseOnSingleTask;\n+\n+import java.util.Map;\n+\n+/**\n+ * The Class ParallecAppMin to demonstrate Parallec with 10 lines.\n+ */\n+public class ParallecAppMin {\n+\n+    /**\n+     * The main method.\n+     *\n+     * @param args\n+     *            the arguments\n+     */\n+    public static void main(String[] args) {\n+\n+        ParallelClient pc = new ParallelClient();\n+        pc.prepareHttpGet(\"/validateInternals.html\")\n+                .setConcurrency(1000)\n+                .setTargetHostsFromString(\n+                        \"parallec.github.io www.jeffpei.com www.restcommander.com\")\n+                .execute(new ParallecResponseHandler() {\n+\n+                    @Override\n+                    public void onCompleted(ResponseOnSingleTask res,\n+                            Map<String, Object> responseContext) {\n+                        System.out.println(res);\n+                    }\n+                });\n+        pc.releaseExternalResources();\n+    }\n+}"
            },
            {
                "sha": "3da64c6b19d7381b7557684702eb233bc27ee5d3",
                "filename": "src/main/java/io/parallec/core/app/package-info.java",
                "status": "added",
                "additions": 6,
                "deletions": 0,
                "changes": 6,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fapp%2Fpackage-info.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fapp%2Fpackage-info.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fapp%2Fpackage-info.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,6 @@\n+/**\n+ * The package for storing sample applications using Parallec.\n+ * @author Yuanteng Jeff Pei\n+ *\n+ */\n+package io.parallec.core.app;\n\\ No newline at end of file"
            },
            {
                "sha": "8864d3b6fe42d978aa55145740efcb6ff79c3271",
                "filename": "src/main/java/io/parallec/core/bean/HttpMeta.java",
                "status": "added",
                "additions": 308,
                "deletions": 0,
                "changes": 308,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2FHttpMeta.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2FHttpMeta.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2FHttpMeta.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,308 @@\n+/*  \n+Copyright [2013-2015] eBay Software Foundation\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+    http://www.apache.org/licenses/LICENSE-2.0\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+ */\n+package io.parallec.core.bean;\n+\n+import io.parallec.core.ParallecHeader;\n+import io.parallec.core.actor.poll.HttpPollerProcessor;\n+import io.parallec.core.exception.ParallelTaskInvalidException;\n+import io.parallec.core.resources.HttpClientStore;\n+import io.parallec.core.resources.HttpMethod;\n+import io.parallec.core.util.PcConstants;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import com.ning.http.client.AsyncHttpClient;\n+\n+/**\n+ * The metadata about the HTTP request (url/port/header/concurrency etc) It does\n+ * not include the target hosts information.\n+ * \n+ * @author Yuanteng Jeff Pei\n+ */\n+public class HttpMeta {\n+    /** The logger. */\n+    private static Logger logger = LoggerFactory.getLogger(HttpMeta.class);\n+    /** The http method. */\n+    private HttpMethod httpMethod;\n+\n+    /** The request url postfix. */\n+    private String requestUrlPostfix;\n+\n+    /** The request entityBody */\n+    private String entityBody;\n+\n+    /** The request port. */\n+    private String requestPort;\n+\n+    /** The parallec header. */\n+    private ParallecHeader parallecHeader;\n+\n+    /** The http poller processor. */\n+    private HttpPollerProcessor httpPollerProcessor = null;\n+\n+    // 0910\n+    /** The is pollable. */\n+    // pollable\n+    private boolean isPollable = false;\n+\n+    /** The async http client. */\n+    private AsyncHttpClient asyncHttpClient;\n+\n+    /**\n+     * Instantiates a new command meta.\n+     */\n+    // when init PTask Builder\n+    public HttpMeta() {\n+        this.httpMethod = null;\n+        this.requestUrlPostfix = null;\n+        this.entityBody = null;\n+        this.requestPort = null;\n+        this.parallecHeader = null;\n+        this.httpPollerProcessor = null;\n+        this.isPollable = false;\n+        this.asyncHttpClient = null;\n+    };\n+\n+    /**\n+     * for none HTTP type: set some default for HTTP (not used) to avoid NPE.\n+     */\n+    public void initValuesNa() {\n+        // just set some default as not used\n+        setRequestPort(\"0\");\n+        setHeaderMetadata(new ParallecHeader());\n+        setHttpMethod(HttpMethod.NA);\n+        setEntityBody(PcConstants.COMMAND_VAR_DEFAULT_REQUEST_CONTENT);\n+        setRequestUrlPostfix(\"\");\n+        this.httpPollerProcessor = null;\n+        this.isPollable = false;\n+        this.asyncHttpClient = null;\n+    }\n+\n+\n+\n+    /**\n+     * Validation.\n+     *\n+     * @return true, if successful\n+     * @throws ParallelTaskInvalidException\n+     *             the parallel task invalid exception\n+     */\n+    public boolean validation() throws ParallelTaskInvalidException {\n+\n+        if (this.getAsyncHttpClient() == null) {\n+            logger.info(\"USE DEFAULT HTTP CLIENT: Did not set special asyncHttpClient, will use the current default one: \"\n+                    + HttpClientStore.getInstance()\n+                            .getHttpClientTypeCurrentDefault().toString());\n+            this.asyncHttpClient = HttpClientStore.getInstance()\n+                    .getCurrentDefaultClient();\n+        }\n+\n+        \n+        if (this.getHttpMethod() == null)\n+            throw new ParallelTaskInvalidException(\"Missing getHttpMethod!\");\n+        if (this.getHeaderMetadata() == null) {\n+            logger.info(\"USE DEFAULT EMPTY HEADER: Did not specify HTTP header. Will use empty header.\"\n+                    + \" Use .setHeaders to add headers\");\n+            this.setHeaderMetadata(new ParallecHeader());\n+        }\n+        // if null it is OK, just set as the default\n+        if (this.getEntityBody() == null)\n+                               setEntityBody(PcConstants.COMMAND_VAR_DEFAULT_REQUEST_CONTENT);\n+\n+        if (this.getRequestPort() == null) {\n+            setRequestPort(\"80\");\n+            logger.info(\"USE DEFAULT PORT: Missing port. SET default port to be 80\");\n+        }\n+\n+        if (this.getRequestUrlPostfix() == null\n+                || this.getRequestUrlPostfix().trim().isEmpty()) {\n+            setRequestUrlPostfix(\"\");\n+            logger.info(\"USE DEFAULT URL: RequestUrlPostfix is null or empty. SET as empty \\\"\\\". e.g. just want to GET http://parallec.io\");\n+        }\n+        if (this.isPollable() == true &&\n+                this.getHttpPollerProcessor() == null) {\n+                throw new ParallelTaskInvalidException(\n+                        \"set pollable but httpPollerProcessor is null!! Invalid. please set httpPollerProcessor() \");\n+        }\n+\n+        return true;\n+\n+    }\n+    \n+\n+\n+    /**\n+     * Gets the request port.\n+     *\n+     * @return the request port\n+     */\n+    public String getRequestPort() {\n+        return requestPort;\n+    }\n+\n+    /**\n+     * Sets the request port.\n+     *\n+     * @param requestPort\n+     *            the new request port\n+     */\n+    public void setRequestPort(String requestPort) {\n+        this.requestPort = requestPort;\n+    }\n+\n+\n+    /**\n+     * Gets the http method.\n+     *\n+     * @return the http method\n+     */\n+    public HttpMethod getHttpMethod() {\n+        return httpMethod;\n+    }\n+\n+    /**\n+     * Sets the http method.\n+     *\n+     * @param httpMethod\n+     *            the new http method\n+     */\n+    public void setHttpMethod(HttpMethod httpMethod) {\n+        this.httpMethod = httpMethod;\n+    }\n+\n+    /**\n+     * Gets the request url postfix.\n+     *\n+     * @return the request url postfix\n+     */\n+    public String getRequestUrlPostfix() {\n+        return requestUrlPostfix;\n+    }\n+\n+    /**\n+     * will trim the leading and trailing whitespace if not null.\n+     *\n+     * @param requestUrlPostfix\n+     *            the new request url postfix\n+     */\n+    public void setRequestUrlPostfix(String requestUrlPostfix) {\n+        this.requestUrlPostfix = requestUrlPostfix != null ? requestUrlPostfix\n+                .trim() : null;\n+    }\n+\n+    /**\n+     * Gets the request content template.\n+     *\n+     * @return the request content template\n+     */\n+    public String getEntityBody() {\n+        return entityBody;\n+    }\n+\n+    public void setEntityBody(String entityBody) {\n+        this.entityBody = entityBody;\n+    }\n+\n+\n+    @Override\n+    public String toString() {\n+        return \"HttpMeta [httpMethod=\" + httpMethod + \", requestUrlPostfix=\"\n+                + requestUrlPostfix + \", entityBody=\"\n+                + entityBody + \", requestPort=\" + requestPort\n+                + \", parallecHeader=\" + parallecHeader + \"]\";\n+    }\n+\n+    /**\n+     * Replace full request content.\n+     *\n+     * @param requestContentTemplate\n+     *            the request content template\n+     * @param replacementString\n+     *            the replacement string\n+     * @return the string\n+     */\n+    public static String replaceFullRequestContent(\n+            String requestContentTemplate, String replacementString) {\n+        return (requestContentTemplate.replace(\n+                PcConstants.COMMAND_VAR_DEFAULT_REQUEST_CONTENT,\n+                replacementString));\n+    }\n+\n+    /**\n+     * Replace default full request content.\n+     *\n+     * @param requestContentTemplate\n+     *            the request content template\n+     * @return the string\n+     */\n+    // only replace AGENT_COMMAND_VAR_DEFAULT_REQUEST_CONTENT by \"\"\n+    public static String replaceDefaultFullRequestContent(\n+            String requestContentTemplate) {\n+        return replaceFullRequestContent(requestContentTemplate, \"\");\n+    }\n+\n+    /**\n+     * Gets the header metadata.\n+     *\n+     * @return the header metadata\n+     */\n+    public ParallecHeader getHeaderMetadata() {\n+        return parallecHeader;\n+    }\n+\n+    /**\n+     * Sets the header metadata.\n+     *\n+     * @param parallecHeader\n+     *            the new header metadata\n+     */\n+    public void setHeaderMetadata(ParallecHeader parallecHeader) {\n+        this.parallecHeader = parallecHeader;\n+    }\n+\n+    public HttpMeta(HttpMethod httpMethod, String requestUrlPostfix,\n+            String entityBody, String requestPort, ParallecHeader parallecHeader) {\n+        super();\n+        this.httpMethod = httpMethod;\n+        this.requestUrlPostfix = requestUrlPostfix;\n+        this.entityBody = entityBody;\n+        this.requestPort = requestPort;\n+        this.parallecHeader = parallecHeader;\n+    }\n+\n+    public HttpPollerProcessor getHttpPollerProcessor() {\n+        return httpPollerProcessor;\n+    }\n+\n+    public void setHttpPollerProcessor(HttpPollerProcessor httpPollerProcessor) {\n+        this.httpPollerProcessor = httpPollerProcessor;\n+    }\n+\n+    public boolean isPollable() {\n+        return isPollable;\n+    }\n+\n+    public void setPollable(boolean isPollable) {\n+        this.isPollable = isPollable;\n+    }\n+\n+    public AsyncHttpClient getAsyncHttpClient() {\n+        return asyncHttpClient;\n+    }\n+\n+    public void setAsyncHttpClient(AsyncHttpClient asyncHttpClient) {\n+        this.asyncHttpClient = asyncHttpClient;\n+    }\n+\n+}"
            },
            {
                "sha": "849a7c949d108980cd1feb2c5983663db436e2eb",
                "filename": "src/main/java/io/parallec/core/bean/SetAndCount.java",
                "status": "added",
                "additions": 80,
                "deletions": 0,
                "changes": 80,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2FSetAndCount.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2FSetAndCount.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2FSetAndCount.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,80 @@\n+/*  \n+Copyright [2013-2015] eBay Software Foundation\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+    http://www.apache.org/licenses/LICENSE-2.0\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+ */\n+package io.parallec.core.bean;\n+\n+import java.util.LinkedHashSet;\n+import java.util.Set;\n+\n+/**\n+ * The class used to represent the target hosts and a count when aggregation\n+ * \n+ * @author Yuanteng Jeff Pei\n+ */\n+public class SetAndCount {\n+\n+\n+    /** The count. */\n+    private int count;\n+\n+    /** The set. */\n+    private final Set<String> set = new LinkedHashSet<String>();\n+\n+    /**\n+     * Instantiates a new sets the and count.\n+     *\n+     * @param set\n+     *            the set\n+     */\n+    public SetAndCount(Set<String> set) {\n+        super();\n+        this.set.addAll(set);\n+        this.count = set.size();\n+    }\n+\n+    /**\n+     * Gets the count.\n+     *\n+     * @return the count\n+     */\n+    public int getCount() {\n+        return count;\n+    }\n+\n+    /**\n+     * Sets the count.\n+     *\n+     * @param count\n+     *            the new count\n+     */\n+    public void setCount(int count) {\n+        this.count = count;\n+    }\n+\n+    /**\n+     * Gets the sets the.\n+     *\n+     * @return the sets the\n+     */\n+    public Set<String> getSet() {\n+        return set;\n+    }\n+\n+    /**\n+     * \"SetAndCount [count=\" + count + \", set=\" + set + \"]\";\n+     */\n+    @Override\n+    public String toString() {\n+        return \"SetAndCount [count=\" + count + \", set=\" + set + \"]\";\n+    }\n+\n+}"
            },
            {
                "sha": "e3c3cba91ac3530f46e6a0c71e6f458116fdbbf9",
                "filename": "src/main/java/io/parallec/core/bean/SingleTargetTaskStatus.java",
                "status": "added",
                "additions": 25,
                "deletions": 0,
                "changes": 25,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2FSingleTargetTaskStatus.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2FSingleTargetTaskStatus.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2FSingleTargetTaskStatus.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,25 @@\n+/*  \n+Copyright [2013-2015] eBay Software Foundation\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+    http://www.apache.org/licenses/LICENSE-2.0\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+ */\n+package io.parallec.core.bean;\n+\n+/**\n+ * The Enum SingleTargetTaskStatus.\n+ * \n+ * @author Yuanteng Jeff Pei\n+ */\n+public enum SingleTargetTaskStatus {\n+\n+    /** The in progress. */\n+    IN_PROGRESS, /** The completed. */\n+    COMPLETED\n+}"
            },
            {
                "sha": "a0760802aeff77b9ef4d06391e30ad6bf3b95862",
                "filename": "src/main/java/io/parallec/core/bean/StrStrMap.java",
                "status": "added",
                "additions": 81,
                "deletions": 0,
                "changes": 81,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2FStrStrMap.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2FStrStrMap.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2FStrStrMap.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,81 @@\n+/*  \n+Copyright [2013-2015] eBay Software Foundation\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+    http://www.apache.org/licenses/LICENSE-2.0\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+ */\n+package io.parallec.core.bean;\n+\n+import java.util.LinkedHashMap;\n+import java.util.Map;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * This allow you to replace multiple variables with multiple values key: the\n+ * variable name : e.g. GET /checkProgress/$JOBID value: the actual value string\n+ * that will replace the JOBID\n+ * \n+ * @author Yuanteng Jeff Pei\n+ */\n+public class StrStrMap {\n+\n+    /** The map. */\n+    private final Map<String, String> map = new LinkedHashMap<String, String>();\n+\n+    /** The logger. */\n+    private static Logger logger = LoggerFactory.getLogger(StrStrMap.class);\n+\n+    /**\n+     * Gets the map.\n+     *\n+     * @return the map\n+     */\n+    public Map<String, String> getMap() {\n+        return map;\n+    }\n+\n+    /**\n+     * Instantiates a new str str map.\n+     */\n+    public StrStrMap() {\n+    }\n+\n+    /**\n+     * Instantiates a new str str map.\n+     *\n+     * @param map\n+     *            the map\n+     */\n+    public StrStrMap(Map<String, String> map) {\n+        this.map.putAll(map);\n+    }\n+\n+    /**\n+     * Adds the pair.\n+     *\n+     * @param key\n+     *            the key\n+     * @param value\n+     *            the value\n+     * @return the str str map\n+     */\n+    public StrStrMap addPair(String key, String value) {\n+        if (key == null || value == null) {\n+            logger.error(\"invalid key value as null. ignore pair\");\n+\n+        } else {\n+\n+            this.map.put(key, value);\n+        }\n+\n+        return this;\n+    }\n+}"
            },
            {
                "sha": "2b38e2cbac32d17d8f04b1b294b35637074de1e7",
                "filename": "src/main/java/io/parallec/core/bean/TargetHostMeta.java",
                "status": "added",
                "additions": 81,
                "deletions": 0,
                "changes": 81,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2FTargetHostMeta.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2FTargetHostMeta.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2FTargetHostMeta.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,81 @@\n+/*  \n+Copyright [2013-2015] eBay Software Foundation\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+    http://www.apache.org/licenses/LICENSE-2.0\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+ */\n+package io.parallec.core.bean;\n+\n+import io.parallec.core.util.PcDateUtils;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.UUID;\n+\n+/**\n+ * The metadata about the targetHost, which is mainly a list of hostnames (IP or FQDN)\n+ *  the primary key is the targetHostId, generated with timestamp\n+ * \n+ * @author Yuanteng Jeff Pei\n+ */\n+public class TargetHostMeta {\n+\n+    /** The target host id. */\n+    private String targetHostId;\n+\n+    /** The target host list. */\n+    private final List<String> hosts = new ArrayList<String>();\n+\n+    /**\n+     * Instantiates a new target host meta.\n+     *\n+     * @param hosts the hosts\n+     */\n+    public TargetHostMeta(List<String> hosts) {\n+        super();\n+\n+        final String uuid = UUID.randomUUID().toString().substring(0, 12);\n+        this.hosts.addAll(hosts);\n+\n+        this.setTargetHostId(\"THM_\" + hosts.size() + \"_\"\n+                + PcDateUtils.getNowDateTimeStrConciseNoZone() + \"_\" + uuid);\n+\n+    }\n+\n+    /**\n+     * Instantiates a new target host meta.\n+     */\n+    public TargetHostMeta() {\n+    };\n+\n+    /**\n+     * Gets the node list.\n+     *\n+     * @return the node list\n+     */\n+    public List<String> getHosts() {\n+        return hosts;\n+    }\n+    public String getTargetHostId() {\n+        return targetHostId;\n+    }\n+\n+    public void setTargetHostId(String targetHostId) {\n+        this.targetHostId = targetHostId;\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return \"TargetHostMeta [targetHostId=\" + targetHostId + \", hosts size:\"\n+                + hosts.size() + \"]\";\n+    }\n+    \n+    \n+\n+}"
            },
            {
                "sha": "a3bc64cce0aa002882486c5c808e75a6ac8514ea",
                "filename": "src/main/java/io/parallec/core/bean/TaskRequest.java",
                "status": "added",
                "additions": 247,
                "deletions": 0,
                "changes": 247,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2FTaskRequest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2FTaskRequest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2FTaskRequest.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,247 @@\n+/*  \n+Copyright [2013-2015] eBay Software Foundation\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+    http://www.apache.org/licenses/LICENSE-2.0\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+ */\n+package io.parallec.core.bean;\n+\n+import io.parallec.core.ParallecResponseHandler;\n+import io.parallec.core.RequestProtocol;\n+import io.parallec.core.bean.ping.PingMeta;\n+import io.parallec.core.bean.ssh.SshMeta;\n+import io.parallec.core.bean.tcp.TcpMeta;\n+import io.parallec.core.resources.HttpMethod;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * This is the request send to the operation worker. \n+ * It contains the actual request that has been replaced if there are variables defined.\n+ * \n+ * @author Yuanteng Jeff Pei \n+ */\n+public class TaskRequest {\n+\n+    /** The logger. */\n+    @SuppressWarnings(\"unused\")\n+    private static Logger logger = LoggerFactory.getLogger(TaskRequest.class);\n+\n+    private final int actorMaxOperationTimeoutSec;\n+\n+    /** The resource path. */\n+    private final String resourcePath;\n+\n+    /** The request content. */\n+    private final String requestContent;\n+\n+    /** The http method. */\n+    private final HttpMethod httpMethod;\n+\n+    /** The pollable. */\n+    private final boolean pollable;\n+\n+    /** The http header map. */\n+    private final Map<String, String> httpHeaderMap = new HashMap<String, String>();\n+\n+    /** The protocol. */\n+    private final RequestProtocol protocol;\n+\n+    /** The host. */\n+    private final String host;\n+    // 20130917 ASSUMPTION: WHEN IT IS NOT NULL: THIS ONE WILL REPLACE THE host\n+    /** The host uniform. */\n+    // to send the HTTP REQUEST.\n+    private final String hostUniform;\n+\n+    /** The port. */\n+    private final int port;\n+\n+    /** The ssh meta. */\n+    private final SshMeta sshMeta;\n+\n+    /** The tcp meta. */\n+    private final TcpMeta tcpMeta;\n+\n+    /** The ping meta. */\n+    private final PingMeta pingMeta;\n+    \n+    private final ParallecResponseHandler handler;\n+    \n+    private final Map<String, Object> responseContext;\n+\n+    public TaskRequest(\n+\n+            // add for config\n+            int actorMaxOperationTimeoutSec,\n+            RequestProtocol protocol, String host, String hostUniform,\n+            int port, String resourcePath, String requestContent,\n+            HttpMethod httpMethod, boolean pollable,\n+            Map<String, String> httpHeaderMap, \n+            ParallecResponseHandler handler, \n+            Map<String, Object> responseContext,\n+            SshMeta sshMeta, TcpMeta tcpMeta, PingMeta pingMeta\n+\n+    ) {\n+        this.actorMaxOperationTimeoutSec = actorMaxOperationTimeoutSec;\n+        this.protocol = protocol;\n+        this.host = host;\n+        this.hostUniform = hostUniform;\n+        this.port = port;\n+        this.pollable = pollable;\n+        if (httpHeaderMap != null)\n+            this.httpHeaderMap.putAll(httpHeaderMap);\n+\n+        this.resourcePath = resourcePath;\n+        this.requestContent = requestContent;\n+        this.httpMethod = httpMethod;\n+\n+        this.handler = handler;\n+        this.responseContext = responseContext;\n+        this.sshMeta = sshMeta;\n+        this.tcpMeta = tcpMeta;\n+        this.pingMeta = pingMeta;\n+\n+    }\n+\n+    /**\n+     * Gets the resource path.\n+     *\n+     * @return the resource path\n+     */\n+    public String getResourcePath() {\n+        return resourcePath;\n+    }\n+\n+    /**\n+     * Gets the http method.\n+     *\n+     * @return the http method\n+     */\n+    public HttpMethod getHttpMethod() {\n+        return httpMethod;\n+    }\n+\n+    /**\n+     * Gets the post data.\n+     *\n+     * @return the post data\n+     */\n+    public String getPostData() {\n+        return requestContent;\n+    }\n+\n+    /**\n+     * Gets the request content.\n+     *\n+     * @return the request content\n+     */\n+    public String getRequestContent() {\n+        return requestContent;\n+    }\n+\n+    /**\n+     * Checks if is pollable.\n+     *\n+     * @return true, if is pollable\n+     */\n+    public boolean isPollable() {\n+        return pollable;\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return \"TaskRequest [actorMaxOperationTimeoutSec=\"\n+                + actorMaxOperationTimeoutSec + \", resourcePath=\"\n+                + resourcePath + \", requestContent=\" + requestContent\n+                + \", httpMethod=\" + httpMethod + \", pollable=\" + pollable\n+                + \", httpHeaderMap=\" + httpHeaderMap + \", protocol=\" + protocol\n+                + \", host=\" + host + \", hostUniform=\" + hostUniform + \", port=\"\n+                + port + \", sshMeta=\" + sshMeta + \"]\";\n+    }\n+\n+    /**\n+     * Gets the http header map.\n+     *\n+     * @return the http header map\n+     */\n+    public Map<String, String> getHttpHeaderMap() {\n+        return httpHeaderMap;\n+    }\n+\n+    /**\n+     * Gets the protocol.\n+     *\n+     * @return the protocol\n+     */\n+    public RequestProtocol getProtocol() {\n+        return protocol;\n+    }\n+\n+    /**\n+     * Gets the host.\n+     *\n+     * @return the host\n+     */\n+    public String getHost() {\n+        return host;\n+    }\n+\n+    /**\n+     * Gets the host uniform.\n+     *\n+     * @return the host uniform\n+     */\n+    public String getHostUniform() {\n+        return hostUniform;\n+    }\n+\n+    /**\n+     * Gets the port.\n+     *\n+     * @return the port\n+     */\n+    public int getPort() {\n+        return port;\n+    }\n+\n+    /**\n+     * Gets the ssh meta.\n+     *\n+     * @return the ssh meta\n+     */\n+    public SshMeta getSshMeta() {\n+        return sshMeta;\n+    }\n+\n+    public int getActorMaxOperationTimeoutSec() {\n+        return actorMaxOperationTimeoutSec;\n+    }\n+\n+    public TcpMeta getTcpMeta() {\n+        return tcpMeta;\n+    }\n+\n+    public PingMeta getPingMeta() {\n+        return pingMeta;\n+    }\n+\n+    public ParallecResponseHandler getHandler() {\n+        return handler;\n+    }\n+\n+    public Map<String, Object> getResponseContext() {\n+        return responseContext;\n+    }\n+\n+}"
            },
            {
                "sha": "3db41dc5fef44e99b4468dff29ec1dd5f155558c",
                "filename": "src/main/java/io/parallec/core/bean/TaskRunMode.java",
                "status": "added",
                "additions": 12,
                "deletions": 0,
                "changes": 12,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2FTaskRunMode.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2FTaskRunMode.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2FTaskRunMode.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,12 @@\n+package io.parallec.core.bean;\n+\n+/**\n+ * The Enum Mode of running Parallel Task: async or sync. \n+ */\n+public enum TaskRunMode {\n+\n+    /** The sync. */\n+    SYNC,\n+    /** The async. */\n+    ASYNC\n+}\n\\ No newline at end of file"
            },
            {
                "sha": "e6c711bea01a0c97331714676dcc0ddcede09203",
                "filename": "src/main/java/io/parallec/core/bean/package-info.java",
                "status": "added",
                "additions": 4,
                "deletions": 0,
                "changes": 4,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2Fpackage-info.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2Fpackage-info.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2Fpackage-info.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,4 @@\n+/**\n+ * Beans.\n+ */\n+package io.parallec.core.bean;\n\\ No newline at end of file"
            },
            {
                "sha": "a91a490ecfee95445c7ad3dae8687fbb432260be",
                "filename": "src/main/java/io/parallec/core/bean/ping/PingMeta.java",
                "status": "added",
                "additions": 90,
                "deletions": 0,
                "changes": 90,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2Fping%2FPingMeta.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2Fping%2FPingMeta.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2Fping%2FPingMeta.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,90 @@\n+/*  \n+Copyright [2013-2015] eBay Software Foundation\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+    http://www.apache.org/licenses/LICENSE-2.0\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+ */\n+package io.parallec.core.bean.ping;\n+\n+import io.parallec.core.config.ParallecGlobalConfig;\n+import io.parallec.core.exception.ParallelTaskInvalidException;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+\n+/**\n+ * The Ping metadata on mode,timeout and retries. \n+ * \n+ * @author Yuanteng Jeff Pei\n+ *\n+ */\n+public class PingMeta {\n+    /** The logger. */\n+    private static Logger logger = LoggerFactory.getLogger(PingMeta.class);\n+\n+    private PingMode mode;\n+    private Integer pingTimeoutMillis;\n+    private Integer numRetries;\n+    \n+\n+    public PingMeta() {\n+        super();\n+        this.mode = null;\n+        this.pingTimeoutMillis = null;\n+        this.numRetries = null;\n+    } \n+    \n+    public boolean validation() throws ParallelTaskInvalidException {\n+        \n+        if (this.mode == null) {\n+            logger.info(\"SET DEFAULT PING MODE: INET_ADDRESS_REACHABLE_NEED_ROOT.\"\n+                    + \"WARNING. MUST run as ROOT for accuracy.\"\n+                    + \" \");\n+            this.mode= ParallecGlobalConfig.pingModeDefault;\n+        }\n+ \n+        if (this.pingTimeoutMillis == null) {\n+            logger.info(\"SET DEFAULT PING TIMEOUT: 500ms \");\n+            this.pingTimeoutMillis= ParallecGlobalConfig.pingTimeoutMillisDefault;\n+        }\n+        \n+        if (this.numRetries == null) {\n+            logger.info(\"SET DEFAULT PING NUM OF RETRIES: 1 \");\n+            this.numRetries= ParallecGlobalConfig.pingNumRetriesDefault;\n+        }\n+        return true;\n+\n+    }\n+   \n+\n+    public PingMode getMode() {\n+        return mode;\n+    }\n+\n+    public void setMode(PingMode mode) {\n+        this.mode = mode;\n+    }\n+\n+    public Integer getPingTimeoutMillis() {\n+        return pingTimeoutMillis;\n+    }\n+\n+    public void setPingTimeoutMillis(Integer pingTimeoutMillis) {\n+        this.pingTimeoutMillis = pingTimeoutMillis;\n+    }\n+\n+    public Integer getNumRetries() {\n+        return numRetries;\n+    }\n+\n+    public void setNumRetries(Integer numRetries) {\n+        this.numRetries = numRetries;\n+    }\n+}"
            },
            {
                "sha": "42fd7550c8ede4c7b104963764928ead8e3db256",
                "filename": "src/main/java/io/parallec/core/bean/ping/PingMode.java",
                "status": "added",
                "additions": 41,
                "deletions": 0,
                "changes": 41,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2Fping%2FPingMode.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2Fping%2FPingMode.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2Fping%2FPingMode.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,41 @@\n+/*  \n+Copyright [2013-2015] eBay Software Foundation\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+    http://www.apache.org/licenses/LICENSE-2.0\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+ */\n+package io.parallec.core.bean.ping;\n+\n+/**\n+ * The Enum of Ping Mode. Process or INET_ADDRESS_REACHABLE based.\n+ * Default as InetAddress mode. InetAddress requires Root privilege. \n+ * @author Yuanteng Jeff Pei\n+ */\n+public enum PingMode {\n+\n+    /** Start a process to run the real ping command from the OS \n+     * current did not specify the timeout. \n+     * This is slower due to creating process for each request that limits the concurrency.\n+     * Suggest maximum concurrency less than 400. \n+     * if not adjust your ulimit. Only use this when you do not run as Root.*/\n+    PROCESS,\n+    \n+    /** The inet address reachable. please only use in linux model with Root privilege.\n+     *  This is the way faster approach.\n+     * This normally needs ROOT privilege to really use ICMP protocol. \n+     * Test whether that address is reachable. \n+     * Best effort is made by the implementation to try to reach the host, \n+     * but firewalls and server configuration may block requests resulting in a unreachable status \n+     * while some specific ports may be accessible. \n+     * A typical implementation will use ICMP ECHO REQUESTs if the privilege can be obtained, \n+     * otherwise it will try to establish a TCP connection on port 7 (Echo) of the destination host.\n+     * \n+     * */\n+    INET_ADDRESS_REACHABLE_NEED_ROOT \n+}\n\\ No newline at end of file"
            },
            {
                "sha": "8de602ca08e6dd7a27068f20182d696c63d72431",
                "filename": "src/main/java/io/parallec/core/bean/ping/package-info.java",
                "status": "added",
                "additions": 5,
                "deletions": 0,
                "changes": 5,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2Fping%2Fpackage-info.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2Fping%2Fpackage-info.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2Fping%2Fpackage-info.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,5 @@\n+/**\n+ * Beans related to ping.\n+ *\n+ */\n+package io.parallec.core.bean.ping;\n\\ No newline at end of file"
            },
            {
                "sha": "ddb2844c0700e4b62ee3b86ac9c0670767d895d3",
                "filename": "src/main/java/io/parallec/core/bean/ssh/SshLoginType.java",
                "status": "added",
                "additions": 24,
                "deletions": 0,
                "changes": 24,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2Fssh%2FSshLoginType.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2Fssh%2FSshLoginType.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2Fssh%2FSshLoginType.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,24 @@\n+/*  \n+Copyright [2013-2015] eBay Software Foundation\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+    http://www.apache.org/licenses/LICENSE-2.0\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+ */\n+package io.parallec.core.bean.ssh;\n+\n+/**\n+ * The Enum SshLoginType. login via password, or the private/public key pair\n+ */\n+public enum SshLoginType {\n+\n+    /** The password. */\n+    PASSWORD,\n+    /** The key. */\n+    KEY\n+}\n\\ No newline at end of file"
            },
            {
                "sha": "3f69ef219bf077bab3f918686994bc18817ee371",
                "filename": "src/main/java/io/parallec/core/bean/ssh/SshMeta.java",
                "status": "added",
                "additions": 327,
                "deletions": 0,
                "changes": 327,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2Fssh%2FSshMeta.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2Fssh%2FSshMeta.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2Fssh%2FSshMeta.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,327 @@\n+/*  \n+Copyright [2013-2015] eBay Software Foundation\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+    http://www.apache.org/licenses/LICENSE-2.0\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+ */\n+package io.parallec.core.bean.ssh;\n+\n+import io.parallec.core.config.ParallecGlobalConfig;\n+import io.parallec.core.exception.ParallelTaskInvalidException;\n+\n+// TODO: Auto-generated Javadoc\n+/**\n+ * all ssh metadata except for the target host name. also those timeout configs\n+ * and\n+ * \n+ * @author Yuanteng Jeff Pei\n+ *\n+ */\n+public class SshMeta {\n+\n+    /** The command line. */\n+    private String commandLine;\n+\n+    /** The user name. */\n+    private String userName;\n+\n+    /** The ssh port. */\n+    private int sshPort;\n+\n+    /** The ssh login type. */\n+    // key or password based\n+    private SshLoginType sshLoginType;\n+\n+    /** The priv key relative path. */\n+    private String privKeyRelativePath;\n+\n+    /** The password. */\n+    private String password;\n+\n+    /** The priv key use passphrase. */\n+    private boolean privKeyUsePassphrase;\n+\n+    /** The passphrase. */\n+    private String passphrase;\n+\n+    /** The ssh connection timeout millis. */\n+    // ssh\n+    private int sshConnectionTimeoutMillis;\n+\n+    /**\n+     * Checks if is priv key use passphrase.\n+     *\n+     * @return true, if is priv key use passphrase\n+     */\n+    public boolean isPrivKeyUsePassphrase() {\n+        return privKeyUsePassphrase;\n+    }\n+\n+    /**\n+     * Sets the priv key use passphrase.\n+     *\n+     * @param privKeyUsePassphrase\n+     *            the new priv key use passphrase\n+     */\n+    public void setPrivKeyUsePassphrase(boolean privKeyUsePassphrase) {\n+        this.privKeyUsePassphrase = privKeyUsePassphrase;\n+    }\n+\n+    /**\n+     * Gets the passphrase.\n+     *\n+     * @return the passphrase\n+     */\n+    public String getPassphrase() {\n+        return passphrase;\n+    }\n+\n+    /**\n+     * Sets the passphrase.\n+     *\n+     * @param passphrase\n+     *            the new passphrase\n+     */\n+    public void setPassphrase(String passphrase) {\n+        this.passphrase = passphrase;\n+    }\n+\n+    /**\n+     * Instantiates a new ssh meta.\n+     *\n+     * @param commandLine\n+     *            the command line\n+     * @param userName\n+     *            the user name\n+     * @param sshPort\n+     *            the ssh port\n+     * @param sshLoginType\n+     *            the ssh login type\n+     * @param privKeyRelativePath\n+     *            the priv key relative path\n+     * @param password\n+     *            the password\n+     * @param privKeyUsePassphrase\n+     *            the priv key use passphrase\n+     * @param passphrase\n+     *            the passphrase\n+     */\n+    public SshMeta(String commandLine, String userName, int sshPort,\n+            SshLoginType sshLoginType, String privKeyRelativePath,\n+            String password, boolean privKeyUsePassphrase, String passphrase,\n+            int sshConnectionTimeoutMillis) {\n+        super();\n+        this.commandLine = commandLine;\n+        this.userName = userName;\n+        this.sshPort = sshPort;\n+        this.sshLoginType = sshLoginType;\n+        this.privKeyRelativePath = privKeyRelativePath;\n+        this.password = password;\n+        this.privKeyUsePassphrase = privKeyUsePassphrase;\n+        this.passphrase = passphrase;\n+        this.sshConnectionTimeoutMillis = sshConnectionTimeoutMillis;\n+    }\n+\n+    /**\n+     * Instantiates a new ssh meta. timeout using the default one:\n+     * sshConnectionTimeoutMillis\n+     */\n+    public SshMeta() {\n+\n+        this.commandLine = null;\n+        this.userName = null;\n+        this.sshPort = 22;\n+        this.sshLoginType = null;\n+        this.privKeyRelativePath = null;\n+        this.password = null;\n+        this.privKeyUsePassphrase = false;\n+        this.passphrase = null;\n+        this.sshConnectionTimeoutMillis = ParallecGlobalConfig.sshConnectionTimeoutMillisDefault;\n+\n+    };\n+\n+    /**\n+     * Validation.\n+     *\n+     * @return true, if successful\n+     * @throws ParallelTaskInvalidException\n+     *             the parallel task invalid exception\n+     */\n+    public boolean validation() throws ParallelTaskInvalidException {\n+\n+        if (this.commandLine == null) {\n+            throw new ParallelTaskInvalidException(\n+                    \"commandSshLine is null for ssh\");\n+        }\n+        if (this.sshLoginType == null) {\n+            throw new ParallelTaskInvalidException(\n+                    \"sshLoginType is null for ssh\");\n+        }\n+\n+        if (this.userName == null) {\n+            throw new ParallelTaskInvalidException(\"userName is null for ssh. \"\n+                    + \"UserName is required for both key/password based login\");\n+        }\n+\n+\n+        if (this.sshLoginType == SshLoginType.PASSWORD && password == null) {\n+            throw new ParallelTaskInvalidException(\n+                    \"use password but it is null for ssh\");\n+        }\n+        if (this.sshLoginType == SshLoginType.KEY\n+                && this.privKeyRelativePath == null) {\n+            throw new ParallelTaskInvalidException(\n+                    \"use public key but private key path is null for ssh\");\n+        }\n+\n+        if (this.sshLoginType == SshLoginType.KEY\n+                && this.privKeyUsePassphrase == true && this.passphrase == null) {\n+            throw new ParallelTaskInvalidException(\n+                    \"use public key and also with private key passphrase but it is null for ssh\");\n+        }\n+\n+        return true;\n+\n+    }\n+\n+    /**\n+     * Gets the command line.\n+     *\n+     * @return the command line\n+     */\n+    public String getCommandLine() {\n+        return commandLine;\n+    }\n+\n+    /**\n+     * Sets the command line.\n+     *\n+     * @param commandLine\n+     *            the new command line\n+     */\n+    public void setCommandLine(String commandLine) {\n+        this.commandLine = commandLine;\n+    }\n+\n+    /**\n+     * Gets the password.\n+     *\n+     * @return the password\n+     */\n+    public String getPassword() {\n+        return password;\n+    }\n+\n+    /**\n+     * Sets the password.\n+     *\n+     * @param password\n+     *            the new password\n+     */\n+    public void setPassword(String password) {\n+        this.password = password;\n+    }\n+\n+    /**\n+     * Gets the ssh login type.\n+     *\n+     * @return the ssh login type\n+     */\n+    public SshLoginType getSshLoginType() {\n+        return sshLoginType;\n+    }\n+\n+    /**\n+     * Sets the ssh login type.\n+     *\n+     * @param sshLoginType\n+     *            the new ssh login type\n+     */\n+    public void setSshLoginType(SshLoginType sshLoginType) {\n+        this.sshLoginType = sshLoginType;\n+    }\n+\n+    /**\n+     * Gets the ssh port.\n+     *\n+     * @return the ssh port\n+     */\n+    public int getSshPort() {\n+        return sshPort;\n+    }\n+\n+    /**\n+     * Sets the ssh port.\n+     *\n+     * @param sshPort\n+     *            the new ssh port\n+     */\n+    public void setSshPort(int sshPort) {\n+        this.sshPort = sshPort;\n+    }\n+\n+    /**\n+     * Gets the priv key relative path.\n+     *\n+     * @return the priv key relative path\n+     */\n+    public String getPrivKeyRelativePath() {\n+        return privKeyRelativePath;\n+    }\n+\n+    /**\n+     * Sets the priv key relative path.\n+     *\n+     * @param privKeyRelativePath\n+     *            the new priv key relative path\n+     */\n+    public void setPrivKeyRelativePath(String privKeyRelativePath) {\n+        this.privKeyRelativePath = privKeyRelativePath;\n+    }\n+\n+    /**\n+     * Gets the user name.\n+     *\n+     * @return the user name\n+     */\n+    public String getUserName() {\n+        return userName;\n+    }\n+\n+    /**\n+     * Sets the user name.\n+     *\n+     * @param userName\n+     *            the new user name\n+     */\n+    public void setUserName(String userName) {\n+        this.userName = userName;\n+    }\n+\n+    /**\n+     * Gets the priv key abs path.\n+     *\n+     * @return the priv key abs path\n+     */\n+    public String getPrivKeyAbsPath() {\n+\n+        String workingDir = System.getProperty(\"user.dir\");\n+        String privKeyAbsPath = workingDir + \"/\" + getPrivKeyRelativePath();\n+        return privKeyAbsPath;\n+    }\n+\n+    public int getSshConnectionTimeoutMillis() {\n+        return sshConnectionTimeoutMillis;\n+    }\n+\n+    public void setSshConnectionTimeoutMillis(int sshConnectionTimeoutMillis) {\n+        this.sshConnectionTimeoutMillis = sshConnectionTimeoutMillis;\n+    }\n+\n+}"
            },
            {
                "sha": "2942428178dc7bfb66ce65137e84022b78872cc2",
                "filename": "src/main/java/io/parallec/core/bean/ssh/package-info.java",
                "status": "added",
                "additions": 4,
                "deletions": 0,
                "changes": 4,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2Fssh%2Fpackage-info.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2Fssh%2Fpackage-info.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2Fssh%2Fpackage-info.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,4 @@\n+/**\n+ * Beans related to ssh. \n+ */\n+package io.parallec.core.bean.ssh;\n\\ No newline at end of file"
            },
            {
                "sha": "f9fdb8565886c1240eab93a09159f98155fabbd7",
                "filename": "src/main/java/io/parallec/core/bean/tcp/TcpMeta.java",
                "status": "added",
                "additions": 157,
                "deletions": 0,
                "changes": 157,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2Ftcp%2FTcpMeta.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2Ftcp%2FTcpMeta.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2Ftcp%2FTcpMeta.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,157 @@\n+/*  \n+Copyright [2013-2015] eBay Software Foundation\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+    http://www.apache.org/licenses/LICENSE-2.0\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+ */\n+package io.parallec.core.bean.tcp;\n+\n+import io.parallec.core.config.ParallecGlobalConfig;\n+import io.parallec.core.exception.ParallelTaskInvalidException;\n+import io.parallec.core.resources.TcpSshPingResourceStore;\n+\n+import org.jboss.netty.channel.ChannelFactory;\n+import org.jboss.netty.channel.ChannelHandler;\n+import org.jboss.netty.handler.codec.string.StringDecoder;\n+import org.jboss.netty.handler.codec.string.StringEncoder;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+\n+\n+// TODO: Auto-generated Javadoc\n+/**\n+ * all ssh metadata except for the target host name. also those timeout configs\n+ * and\n+ * \n+ * @author Yuanteng Jeff Pei\n+ *\n+ */\n+public class TcpMeta {\n+    \n+    /** The logger. */\n+    private static Logger logger = LoggerFactory.getLogger(TcpMeta.class);\n+\n+    public static final ChannelHandler stringDecoder = new StringDecoder();\n+    public static final ChannelHandler stringEncoder = new StringEncoder();\n+    \n+\n+    \n+    /** The command */\n+    private String command;\n+\n+    /** The tcp port. */\n+    private Integer tcpPort;\n+\n+    private Integer tcpConnectTimeoutMillis;\n+\n+    private Integer tcpIdleTimeoutSec;\n+    \n+    private ChannelFactory channelFactory;\n+    \n+    public TcpMeta(String command, int tcpPort, int tcpConnectTimeoutMillis,\n+            int tcpIdleTimeoutSec,\n+            ChannelFactory channelFactory) {\n+        super();\n+        this.command = command;\n+        this.tcpPort = tcpPort;\n+        this.tcpConnectTimeoutMillis = tcpConnectTimeoutMillis;\n+        this.tcpIdleTimeoutSec = tcpIdleTimeoutSec;\n+        this.channelFactory = channelFactory;\n+        \n+    }\n+\n+\n+    public TcpMeta() {\n+        super();\n+        this.command=null;\n+        this.tcpPort=null;\n+        this.channelFactory=null;\n+        this.tcpConnectTimeoutMillis= null;\n+        this.tcpIdleTimeoutSec=null;\n+        \n+        // TODO Auto-generated constructor stub\n+    }\n+\n+    public boolean validation() throws ParallelTaskInvalidException {\n+\n+        if (this.command == null) {\n+            throw new ParallelTaskInvalidException(\n+                    \"command is null for TCP\");\n+        }\n+\n+        if (this.tcpPort == null) {\n+            throw new ParallelTaskInvalidException(\"tcpPort is null. please set\");\n+        }\n+        \n+        if (this.tcpConnectTimeoutMillis == null) {\n+            logger.info(\"SET DEFAULT TCP CONNECT TIMEOUT: TCP tcpConnectTimeoutMillis is set as default\");\n+            this.tcpConnectTimeoutMillis= ParallecGlobalConfig.tcpConnectionTimeoutMillisDefault;\n+        }\n+        \n+        if (this.tcpIdleTimeoutSec == null) {\n+            logger.info(\"SET DEFAULT TCP IDLE TIMEOUT: TCP tcpIdleTimeoutSec is set as default\");\n+            this.tcpIdleTimeoutSec= ParallecGlobalConfig.tcpIdleTimeoutSecDefault;\n+        }\n+        \n+        if (this.channelFactory == null) {\n+            logger.info(\"SET DEFAULT TCP NETTY CHANNEL FACTORY: TCP channelFactory is set as default\");\n+            this.channelFactory=TcpSshPingResourceStore.getInstance().getChannelFactory();\n+        }\n+\n+        return true;\n+\n+    }\n+    public String getCommand() {\n+        return command;\n+    }\n+\n+    public void setCommand(String command) {\n+        this.command = command;\n+    }\n+\n+    public int getTcpPort() {\n+        return tcpPort;\n+    }\n+\n+    public void setTcpPort(int tcpPort) {\n+        this.tcpPort = tcpPort;\n+    }\n+\n+    public int getTcpConnectTimeoutMillis() {\n+        return tcpConnectTimeoutMillis;\n+    }\n+\n+    public void setTcpConnectTimeoutMillis(int tcpConnectTimeoutMillis) {\n+        this.tcpConnectTimeoutMillis = tcpConnectTimeoutMillis;\n+    }\n+\n+\n+    public ChannelFactory getChannelFactory() {\n+        return channelFactory;\n+    }\n+\n+\n+    public void setChannelFactory(ChannelFactory channelFactory) {\n+        this.channelFactory = channelFactory;\n+    }\n+\n+\n+    public Integer getTcpIdleTimeoutSec() {\n+        return tcpIdleTimeoutSec;\n+    }\n+\n+\n+    public void setTcpIdleTimeoutSec(Integer tcpIdleTimeoutSec) {\n+        this.tcpIdleTimeoutSec = tcpIdleTimeoutSec;\n+    }\n+\n+ \n+\n+}"
            },
            {
                "sha": "988f4a9277a8d00aab01440abcaa2c4838473c0a",
                "filename": "src/main/java/io/parallec/core/bean/tcp/package-info.java",
                "status": "added",
                "additions": 4,
                "deletions": 0,
                "changes": 4,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2Ftcp%2Fpackage-info.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2Ftcp%2Fpackage-info.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2Ftcp%2Fpackage-info.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,4 @@\n+/**\n+ * Beans related to TCP.\n+ */\n+package io.parallec.core.bean.tcp;\n\\ No newline at end of file"
            },
            {
                "sha": "9b3c376b0c3b4e1c05926570198dfc8967e48a31",
                "filename": "src/main/java/io/parallec/core/commander/workflow/InternalDataProvider.java",
                "status": "added",
                "additions": 151,
                "deletions": 0,
                "changes": 151,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fcommander%2Fworkflow%2FInternalDataProvider.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fcommander%2Fworkflow%2FInternalDataProvider.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fcommander%2Fworkflow%2FInternalDataProvider.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,151 @@\n+/*  \n+Copyright [2013-2015] eBay Software Foundation\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+    http://www.apache.org/licenses/LICENSE-2.0\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+ */\n+package io.parallec.core.commander.workflow;\n+\n+import io.parallec.core.ParallelTask;\n+import io.parallec.core.actor.message.NodeReqResponse;\n+import io.parallec.core.bean.HttpMeta;\n+import io.parallec.core.bean.TargetHostMeta;\n+import io.parallec.core.util.PcConstants;\n+import io.parallec.core.util.PcDateUtils;\n+\n+import java.util.Map;\n+import java.util.Map.Entry;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * generate the node data; make sure it is not null.\n+ * \n+ * @author Yuanteng Jeff Pei\n+ * \n+ */\n+public class InternalDataProvider {\n+\n+    /** The logger. */\n+    private static Logger logger = LoggerFactory\n+            .getLogger(InternalDataProvider.class);\n+\n+    /** The Constant instance. */\n+    private static final InternalDataProvider instance = new InternalDataProvider();\n+\n+    /**\n+     * Gets the single instance of InternalDataProvider.\n+     *\n+     * @return single instance of InternalDataProvider\n+     */\n+    public static InternalDataProvider getInstance() {\n+        return instance;\n+    }\n+\n+    /**\n+     * Instantiates a new internal data provider.\n+     */\n+    private InternalDataProvider() {\n+    }\n+\n+    /**\n+     * Gen node data map.\n+     *\n+     * @param task\n+     *            the job info\n+     */\n+    public void genNodeDataMap(ParallelTask task) {\n+\n+        TargetHostMeta nodeGroupSourceMetadata = task.getTargetHostMeta();\n+\n+        HttpMeta httpMeta = task.getHttpMeta();\n+\n+        String entityBody = httpMeta\n+                .getEntityBody();\n+        String requestContent = HttpMeta\n+                .replaceDefaultFullRequestContent(entityBody);\n+\n+        // 2015 new\n+        Map<String, NodeReqResponse> parallelTaskResult = task\n+                .getParallelTaskResult();\n+        try {\n+            for (String fqdn : nodeGroupSourceMetadata.getHosts()) {\n+                NodeReqResponse nodeReqResponse = new NodeReqResponse(fqdn);\n+                nodeReqResponse.setDefaultReqestContent(requestContent);\n+                parallelTaskResult.put(fqdn, nodeReqResponse);\n+\n+            }\n+\n+        } catch (Exception e) {\n+            logger.error(\"sleep exception \" + e + \" details: \", e);\n+        }\n+\n+    }// end func.\n+\n+    /**\n+     * Check if it will execute VarUtils.NODE_REQUEST_WILL_EXECUTE each target\n+     * host is unique as in the key of the hash map.\n+     * \n+     * So there will not be duplicated target hosts.\n+     * \n+     * \n+     * @param nodeDataMapValidSource\n+     *            the node data map valid source\n+     * @param nodeDataMapValidSafe\n+     *            the node data map valid safe\n+     * @param commandType\n+     *            the command type\n+     */\n+    public void filterUnsafeOrUnnecessaryRequest(\n+            Map<String, NodeReqResponse> nodeDataMapValidSource,\n+            Map<String, NodeReqResponse> nodeDataMapValidSafe\n+            ) {\n+\n+        for (Entry<String, NodeReqResponse> entry : nodeDataMapValidSource\n+                .entrySet()) {\n+\n+            String hostName = entry.getKey();\n+            NodeReqResponse nrr = entry.getValue();\n+\n+            if (nrr == null) {\n+                logger.error(\"NodeReqResponse is NULL \"\n+                        + \"in filterUnsafeRequest for host {}\", hostName);\n+                continue;\n+            }\n+            // now get the content.\n+            Map<String, String> map = nrr.getRequestParameters();\n+\n+            /**\n+             * 20130507: will generally apply to all requests: if have this\n+             * field and this field is false\n+             */\n+            if (map.containsKey(PcConstants.NODE_REQUEST_WILL_EXECUTE)) {\n+\n+                Boolean willExecute = Boolean.parseBoolean(map\n+                        .get(PcConstants.NODE_REQUEST_WILL_EXECUTE));\n+\n+                if (willExecute == false) {\n+                    logger.info(\"NOT_EXECUTE_COMMAND \"\n+                             + \" on target: \" + hostName + \" at \"\n+                            + PcDateUtils.getNowDateTimeStrStandard());\n+                    continue;\n+                }\n+            }\n+\n+            // now safely to add this node in.\n+\n+            // note that this is shallow copy; put the pointer of the source\n+            // in...\n+            nodeDataMapValidSafe.put(hostName, nrr);\n+        }// end for loop\n+\n+    }\n+\n+}"
            },
            {
                "sha": "fac672250256772dc25618f791cf624c38d947f6",
                "filename": "src/main/java/io/parallec/core/commander/workflow/VarReplacementProvider.java",
                "status": "added",
                "additions": 272,
                "deletions": 0,
                "changes": 272,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fcommander%2Fworkflow%2FVarReplacementProvider.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fcommander%2Fworkflow%2FVarReplacementProvider.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fcommander%2Fworkflow%2FVarReplacementProvider.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,272 @@\n+/*  \n+Copyright [2013-2015] eBay Software Foundation\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+    http://www.apache.org/licenses/LICENSE-2.0\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+ */\n+package io.parallec.core.commander.workflow;\n+\n+import io.parallec.core.ParallelTask;\n+import io.parallec.core.actor.message.NodeReqResponse;\n+import io.parallec.core.bean.HttpMeta;\n+import io.parallec.core.bean.StrStrMap;\n+import io.parallec.core.bean.TargetHostMeta;\n+import io.parallec.core.util.PcConstants;\n+import io.parallec.core.util.PcDateUtils;\n+\n+import java.util.Map;\n+import java.util.Map.Entry;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * Deal with WISB Var generator and get values\n+ * \n+ * extending from replacing only WISB based. now to also API based.\n+ * \n+ * @author Yuanteng Jeff Pei\n+ * \n+ */\n+public class VarReplacementProvider {\n+\n+    /** The logger. */\n+    private static Logger logger = LoggerFactory\n+            .getLogger(VarReplacementProvider.class);\n+\n+    /** The Constant instance. */\n+    private static final VarReplacementProvider instance = new VarReplacementProvider();\n+\n+    /**\n+     * Gets the single instance of VarReplacementProvider.\n+     *\n+     * @return single instance of VarReplacementProvider\n+     */\n+    public static VarReplacementProvider getInstance() {\n+        return instance;\n+    }\n+\n+    /**\n+     * Instantiates a new var replacement provider.\n+     */\n+    private VarReplacementProvider() {\n+\n+    }\n+    \n+    /**\n+     * \n+     * 20130916: add node specific replacement Var Map; replacementVarMap VS.\n+     * replacementVarMap\n+     * \n+     * replacementVarMap: is for the *uniform * var replacement identical to all\n+     * nodes replacementVarMapNodeSpecific: is for node specific var\n+     * replacement; e.g. each node wants a diff id, hwpath etc\n+     *\n+     * @param task\n+     *            the parallel task\n+     * @param useReplacementVarMap\n+     *            boolean: use uniform replacement map\n+     * @param replacementVarMap\n+     *            the replacement variable map\n+     * @param useReplacementVarMapNodeSpecific\n+     *            boolean: use target host specific replacement map\n+     * @param replacementVarMapNodeSpecific\n+     *            the replacement variable map node specific\n+     * @return the string\n+     */\n+    public void updateRequestWithReplacement(\n+            ParallelTask task, boolean useReplacementVarMap,\n+            Map<String, String> replacementVarMap,\n+            boolean useReplacementVarMapNodeSpecific,\n+            Map<String, StrStrMap> replacementVarMapNodeSpecific) {\n+\n+        try {\n+\n+            TargetHostMeta targetHostMeta = task.getTargetHostMeta();\n+            HttpMeta cmd = task.getHttpMeta();\n+            if (targetHostMeta == null || cmd == null) {\n+\n+                String errMessage = \"nodeGroupSourceMetadata  is NULL or agentCommandType is NULL in updateRequestContentGenericHelper. EXIT!!\"\n+                        + PcDateUtils.getNowDateTimeStrStandard();\n+                logger.error(errMessage);\n+            }\n+\n+            /**\n+             * \n+             * ENABLE CRETIRIA: useReplacementVarMap==true\n+             * \n+             */\n+            if (useReplacementVarMap == true && replacementVarMap != null) {\n+\n+                for (Entry<String, String> entry : replacementVarMap.entrySet()) {\n+\n+                    String replaceVarKey = entry.getKey();\n+                    String replaceVarValue = entry.getValue();\n+\n+                    VarReplacementProvider.getInstance()\n+                            .updateRequestByAddingReplaceVarPair(task,\n+                                    replaceVarKey, replaceVarValue);\n+\n+                }// end for loop\n+\n+            }// end if\n+\n+            /**\n+             * ENABLE CRETIRIA: useReplacementVarMap==true\n+             */\n+            if (useReplacementVarMapNodeSpecific == true\n+                    && replacementVarMapNodeSpecific != null) {\n+                VarReplacementProvider.getInstance()\n+                        .updateRequestByAddingReplaceVarPairNodeSpecific(task,\n+                                replacementVarMapNodeSpecific);\n+            }// end if\n+\n+        } catch (Exception e) {\n+            logger.error(\" exception updateRequestWithReplacement \", e);\n+        }\n+\n+    }// end func.\n+    \n+    \n+\n+    /**\n+     * GENERIC!!! HELPER FUNCION FOR REPLACEMENT\n+     * \n+     * update the var: DYNAMIC REPLACEMENT of VAR.\n+     * \n+     * Every task must have matching command data and task result\n+     *\n+     * @param task\n+     *            the task\n+     * @param replaceVarKey\n+     *            the replace var key\n+     * @param replaceVarValue\n+     *            the replace var value\n+     */\n+    public void updateRequestByAddingReplaceVarPair(\n+            ParallelTask task, String replaceVarKey, String replaceVarValue) {\n+\n+        Map<String, NodeReqResponse> taskResult = task.getParallelTaskResult();\n+\n+        for (Entry<String, NodeReqResponse> entry : taskResult.entrySet()) {\n+            NodeReqResponse nodeReqResponse = entry.getValue();\n+\n+            nodeReqResponse.getRequestParameters()\n+                    .put(PcConstants.NODE_REQUEST_PREFIX_REPLACE_VAR\n+                            + replaceVarKey, replaceVarValue);\n+            nodeReqResponse.getRequestParameters().put(\n+                    PcConstants.NODE_REQUEST_WILL_EXECUTE,\n+                    new Boolean(true).toString());\n+\n+        }// end for loop\n+\n+    }// end func\n+\n+    /**\n+     * \n+     * Will change replacementVarMapNodeSpecific according to each node\n+     * specifically\n+     * \n+     * With KEY set as NA; will not run the command ONLY if the NA is\n+     * the last replacement; note in this logic; when it is not NA; will set AS\n+     * True.\n+     *\n+     * @param task\n+     *            the task\n+     * @param replacementVarMapNodeSpecific\n+     *            the replacement var map node specific\n+     */\n+    public void updateRequestByAddingReplaceVarPairNodeSpecific(\n+            ParallelTask task,\n+            Map<String, StrStrMap> replacementVarMapNodeSpecific\n+\n+    ) {\n+\n+        Map<String, NodeReqResponse> taskResult = task.getParallelTaskResult();\n+\n+        for (Entry<String, NodeReqResponse> entry : taskResult.entrySet()) {\n+\n+            String fqdn = entry.getKey();\n+            StrStrMap replacementVarMapForThisNode = replacementVarMapNodeSpecific\n+                    .get(fqdn);\n+\n+            // 20140105: fix NPE.\n+            if (replacementVarMapForThisNode == null\n+                    || replacementVarMapForThisNode.getMap() == null) {\n+                logger.error(\"replacementVarMapForThisNode is null in \"\n+                        + \"genericUpdateRequestByAddingReplaceVarKeyValuePairHelperNodeSpecific for fqnd \"\n+                        + fqdn + \" at \"\n+                        + PcDateUtils.getNowDateTimeStrStandard());\n+\n+                continue;\n+            }\n+\n+            for (Entry<String, String> entryReplaceMap : replacementVarMapForThisNode\n+                    .getMap().entrySet()) {\n+\n+                String replaceVarKey = entryReplaceMap.getKey();\n+                String replaceVarValue = entryReplaceMap.getValue();\n+\n+                NodeReqResponse nodeReqResponse = entry.getValue();\n+\n+                // Safeguard!! When the wisbVarValue is \"NA\" (e.g. fail to\n+                // get\n+                // the wisb) should alert that\n+                // Safeguard: if NA, then dont run it!\n+                if (replaceVarKey.equalsIgnoreCase(PcConstants.NA)) {\n+\n+                    logger.info(\"Replace NA means to disable this item.\"\n+                            + PcDateUtils.getNowDateTimeStrStandard());\n+\n+                    // 20130731: add error msg\n+                    nodeReqResponse\n+                            .getRequestParameters()\n+                            .put(PcConstants.NODE_REQUEST_EXECUTE_MSG,\n+                                    PcConstants.NODE_REQUEST_EXECUTE_MSG_DETAIL_REPLACEMENT_VAR_VALUE_NA);\n+\n+                    nodeReqResponse.getRequestParameters().put(\n+                            PcConstants.NODE_REQUEST_WILL_EXECUTE,\n+                            new Boolean(false).toString());\n+\n+                    /**\n+                     * 20130828: make it generic to check NULL KEY/VALUE\n+                     */\n+                } else {\n+                    nodeReqResponse.getRequestParameters().put(\n+                            PcConstants.NODE_REQUEST_PREFIX_REPLACE_VAR\n+                                    + replaceVarKey, replaceVarValue);\n+\n+                    // CAREFUL! This is added to prevent a last time run\n+                    // \"NOT EXECUTE\" to continue to be effective this time.\n+                    // Since the whole nodeReqResponse will not replaced\n+                    // everytime\n+\n+                    /*\n+                     * 20131205: to prevent this overwrite when there is a NA\n+                     * field passed in. This will check\n+                     */\n+                    if (replacementVarMapForThisNode.getMap().keySet()\n+                            .contains(PcConstants.NA)) {\n+                        nodeReqResponse.getRequestParameters().put(\n+                                PcConstants.NODE_REQUEST_WILL_EXECUTE,\n+                                new Boolean(false).toString());\n+                    } else {\n+                        nodeReqResponse.getRequestParameters().put(\n+                                PcConstants.NODE_REQUEST_WILL_EXECUTE,\n+                                new Boolean(true).toString());\n+                    }\n+\n+                }\n+\n+            }// end loop thru entryReplaceMap\n+\n+        }// end for loop of nodeData\n+\n+    }// end func\n+}"
            },
            {
                "sha": "412b538a1b337f744180e8c48f724281d9313481",
                "filename": "src/main/java/io/parallec/core/commander/workflow/package-info.java",
                "status": "added",
                "additions": 4,
                "deletions": 0,
                "changes": 4,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fcommander%2Fworkflow%2Fpackage-info.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fcommander%2Fworkflow%2Fpackage-info.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fcommander%2Fworkflow%2Fpackage-info.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,4 @@\n+/**\n+ * Work flow and variable replacement utilities.\n+ */\n+package io.parallec.core.commander.workflow;\n\\ No newline at end of file"
            },
            {
                "sha": "92658e0de7bc13a831246ae9c4f9301616620f56",
                "filename": "src/main/java/io/parallec/core/commander/workflow/ping/PingProvider.java",
                "status": "added",
                "additions": 67,
                "deletions": 0,
                "changes": 67,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fcommander%2Fworkflow%2Fping%2FPingProvider.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fcommander%2Fworkflow%2Fping%2FPingProvider.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fcommander%2Fworkflow%2Fping%2FPingProvider.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,67 @@\n+package io.parallec.core.commander.workflow.ping;\n+\n+import io.parallec.core.bean.ping.PingMeta;\n+import io.parallec.core.bean.ping.PingMode;\n+\n+import java.net.InetAddress;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class PingProvider {\n+    /** The logger. */\n+    private static Logger logger = LoggerFactory.getLogger(PingProvider.class);\n+\n+    private static PingProvider instance = new PingProvider();\n+    \n+    private PingProvider(){\n+    }\n+    \n+    public static PingProvider getInstance(){\n+        return instance;\n+    }\n+    \n+    public boolean isReachableByPing(String targetHost, PingMeta pingMeta) {\n+        \n+        boolean live = isReachableByPingHelper(targetHost, pingMeta);\n+        int retryLeft = pingMeta.getNumRetries();\n+        while(!live && retryLeft>0){\n+            live = isReachableByPingHelper(targetHost, pingMeta);\n+            retryLeft--;\n+        }\n+        return live;\n+        \n+    }\n+    \n+    public boolean isReachableByPingHelper(String targetHost, PingMeta pingMeta) {\n+        try {\n+            \n+            if(pingMeta.getMode()==PingMode.INET_ADDRESS_REACHABLE_NEED_ROOT){\n+                InetAddress address = InetAddress.getByName(targetHost);\n+                return address.isReachable(pingMeta.getPingTimeoutMillis());\n+            }else{\n+                String cmd = \"\";\n+                if (System.getProperty(\"os.name\").startsWith(\"Windows\")) {\n+                    // For Windows\n+                    cmd = \"ping -n 1 \" + targetHost;\n+                } else {\n+                    // For Linux and OSX\n+                    cmd = \"ping -c 1 \" + targetHost;\n+                }\n+                \n+                Process myProcess = Runtime.getRuntime().exec(cmd);\n+                myProcess.waitFor();\n+                if (myProcess.exitValue() == 0) {\n+                    return true;\n+                } else {\n+                    return false;\n+                }\n+                \n+            }\n+            \n+        } catch (Exception e) {\n+            logger.info(\"Bad hostname {} with err {} \", targetHost, e.getLocalizedMessage());\n+            return false;\n+        }\n+    }\n+}"
            },
            {
                "sha": "a776c2360e4b12b9ba2c67a5514bbafb50e7a7b2",
                "filename": "src/main/java/io/parallec/core/commander/workflow/ping/package-info.java",
                "status": "added",
                "additions": 4,
                "deletions": 0,
                "changes": 4,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fcommander%2Fworkflow%2Fping%2Fpackage-info.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fcommander%2Fworkflow%2Fping%2Fpackage-info.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fcommander%2Fworkflow%2Fping%2Fpackage-info.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,4 @@\n+/**\n+ * Work flow utilities on ping.\n+ */\n+package io.parallec.core.commander.workflow.ping;\n\\ No newline at end of file"
            },
            {
                "sha": "8043299bb224d4c73c01b5ebc68a9d3302933596",
                "filename": "src/main/java/io/parallec/core/commander/workflow/ssh/SshProvider.java",
                "status": "added",
                "additions": 295,
                "deletions": 0,
                "changes": 295,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fcommander%2Fworkflow%2Fssh%2FSshProvider.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fcommander%2Fworkflow%2Fssh%2FSshProvider.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fcommander%2Fworkflow%2Fssh%2FSshProvider.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,295 @@\n+/*  \n+Copyright [2013-2015] eBay Software Foundation\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+    http://www.apache.org/licenses/LICENSE-2.0\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+ */\n+package io.parallec.core.commander.workflow.ssh;\n+\n+import io.parallec.core.actor.message.ResponseOnSingeRequest;\n+import io.parallec.core.bean.ssh.SshLoginType;\n+import io.parallec.core.bean.ssh.SshMeta;\n+import io.parallec.core.config.ParallecGlobalConfig;\n+import io.parallec.core.util.PcErrorMsgUtils;\n+import io.parallec.core.util.PcFileNetworkIoUtils;\n+import io.parallec.core.util.PcStringUtils;\n+\n+import java.io.ByteArrayOutputStream;\n+import java.io.InputStream;\n+import java.io.OutputStream;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import com.jcraft.jsch.Channel;\n+import com.jcraft.jsch.ChannelExec;\n+import com.jcraft.jsch.JSch;\n+import com.jcraft.jsch.JSchException;\n+import com.jcraft.jsch.Session;\n+\n+/**\n+ * based on Jsch. tested with real VM with Key/password cases. Run ssh. This is\n+ * a basic one that works with password. If needed we may replace this\n+ * SshProvider after defining an interface.\n+ * \n+ * @author Yuanteng Jeff Pei\n+ *\n+ */\n+public class SshProvider {\n+\n+    /** The logger. */\n+    private static Logger logger = LoggerFactory.getLogger(SshProvider.class);\n+\n+    /** The ssh meta. */\n+    private SshMeta sshMeta;\n+\n+    /** The target host. */\n+    private String targetHost;\n+\n+    /**\n+     * Instantiates a new ssh provider.\n+     *\n+     * @param sshMeta\n+     *            the ssh meta\n+     * @param targetHost\n+     *            the target host\n+     */\n+    public SshProvider(SshMeta sshMeta, String targetHost) {\n+        super();\n+        this.sshMeta = sshMeta;\n+        this.targetHost = targetHost;\n+    }\n+\n+    /**\n+     * Instantiates a new ssh provider.\n+     */\n+    public SshProvider() {\n+    }\n+\n+    /** The session. */\n+    private Session session = null;\n+\n+    /** The channel. */\n+    private Channel channel = null;\n+\n+    /**\n+     * finally: will close the connection.\n+     *\n+     * @return the response on singe request\n+     */\n+    public ResponseOnSingeRequest executeSshCommand() {\n+        ResponseOnSingeRequest sshResponse = new ResponseOnSingeRequest();\n+\n+        try {\n+            session = startSshSessionAndObtainSession();\n+            channel = sessionConnectGenerateChannel(session);\n+            sshResponse = executeAndGenResponse((ChannelExec) channel);\n+\n+        } catch (Exception e) {\n+            sshResponse = genErrorResponse(e);\n+        } finally {\n+\n+            if (session != null)\n+                session.disconnect();\n+            if (channel != null)\n+                channel.disconnect();\n+        }\n+\n+        return sshResponse;\n+\n+    }\n+\n+    /**\n+     * Start ssh session and obtain session.\n+     *\n+     * @return the session\n+     */\n+    public Session startSshSessionAndObtainSession() {\n+\n+        Session session = null;\n+        try {\n+\n+            JSch jsch = new JSch();\n+            if (sshMeta.getSshLoginType() == SshLoginType.KEY) {\n+\n+                String workingDir = System.getProperty(\"user.dir\");\n+                String privKeyAbsPath = workingDir + \"/\"\n+                        + sshMeta.getPrivKeyRelativePath();\n+                logger.debug(\"use privkey: path: \" + privKeyAbsPath);\n+\n+                if (!PcFileNetworkIoUtils.isFileExist(privKeyAbsPath)) {\n+                    throw new RuntimeException(\"file not found at \"\n+                            + privKeyAbsPath);\n+                }\n+\n+                if (sshMeta.isPrivKeyUsePassphrase()\n+                        && sshMeta.getPassphrase() != null) {\n+                    jsch.addIdentity(privKeyAbsPath, sshMeta.getPassphrase());\n+                } else {\n+                    jsch.addIdentity(privKeyAbsPath);\n+                }\n+            }\n+\n+            session = jsch.getSession(sshMeta.getUserName(), targetHost,\n+                    sshMeta.getSshPort());\n+            if (sshMeta.getSshLoginType() == SshLoginType.PASSWORD) {\n+                session.setPassword(sshMeta.getPassword());\n+            }\n+\n+            session.setConfig(\"StrictHostKeyChecking\", \"no\");\n+        } catch (Exception t) {\n+            throw new RuntimeException(t);\n+        }\n+        return session;\n+    }\n+\n+    /**\n+     * Session connect generate channel.\n+     *\n+     * @param session\n+     *            the session\n+     * @return the channel\n+     * @throws JSchException\n+     *             the j sch exception\n+     */\n+    public Channel sessionConnectGenerateChannel(Session session)\n+            throws JSchException {\n+        Channel channel = null;\n+        // set timeout\n+        session.connect(sshMeta.getSshConnectionTimeoutMillis());\n+\n+        channel = session.openChannel(\"exec\");\n+        ((ChannelExec) channel).setCommand(sshMeta.getCommandLine());\n+        // X Forwarding\n+        // channel.setXForwarding(true);\n+\n+        channel.setInputStream(null);\n+        channel.connect();\n+\n+        return channel;\n+\n+    }\n+\n+    /**\n+     * Seems there are bad naming in the library the sysout is in\n+     * channel.getInputStream(); the syserr is in\n+     * ((ChannelExec)channel).setErrStream(os);\n+     *\n+     * @param channel\n+     *            the channel\n+     * @return the response on singe request\n+     */\n+    public ResponseOnSingeRequest executeAndGenResponse(ChannelExec channel) {\n+        ResponseOnSingeRequest sshResponse = new ResponseOnSingeRequest();\n+\n+        InputStream in = null;\n+        OutputStream outputStreamStdErr = new ByteArrayOutputStream();\n+        StringBuilder sbStdOut = new StringBuilder();\n+        try {\n+\n+            in = channel.getInputStream();\n+            ((ChannelExec) channel).setErrStream(outputStreamStdErr);\n+\n+            byte[] tmp = new byte[ParallecGlobalConfig.sshBufferSize];\n+            while (true) {\n+                while (in.available() > 0) {\n+                    int i = in.read(tmp, 0, ParallecGlobalConfig.sshBufferSize);\n+                    if (i < 0)\n+                        break;\n+                    sbStdOut.append(new String(tmp, 0, i));\n+\n+                }\n+\n+                if (channel.isClosed()) {\n+                    if (in.available() > 0)\n+                        continue;\n+                    sshResponse.setFailObtainResponse(false);\n+\n+                    // exit 0 is good\n+                    int exitStatus = channel.getExitStatus();\n+                    sshResponse.setStatusCodeInt(exitStatus);\n+                    sshResponse.setStatusCode(\"\" + exitStatus);\n+                    break;\n+                }\n+\n+                Thread.sleep(ParallecGlobalConfig.sshSleepMIllisBtwReadBuffer);\n+            }\n+\n+            sshResponse.setResponseBody(sbStdOut.toString());\n+            sshResponse.setErrorMessage(outputStreamStdErr.toString());\n+            sshResponse.setReceiveTimeNow();\n+        } catch (Exception t) {\n+            throw new RuntimeException(t);\n+        }\n+\n+        return sshResponse;\n+    }\n+\n+    /**\n+     * Gen error response.\n+     *\n+     * @param t\n+     *            the t\n+     * @return the response on single request\n+     */\n+    public ResponseOnSingeRequest genErrorResponse(Exception t) {\n+        ResponseOnSingeRequest sshResponse = new ResponseOnSingeRequest();\n+        String displayError = PcErrorMsgUtils.replaceErrorMsg(t.toString());\n+\n+        sshResponse.setStackTrace(PcStringUtils.printStackTrace(t));\n+        sshResponse.setErrorMessage(displayError);\n+        sshResponse.setFailObtainResponse(true);\n+\n+        logger.error(\"error in exec SSH. \\nIf exection is JSchException: \"\n+                + \"Auth cancel and using public key. \"\n+                + \"\\nMake sure 1. private key full path is right (try sshMeta.getPrivKeyAbsPath()). \"\n+                + \"\\n2. the user name and key matches  \" + t);\n+\n+        return sshResponse;\n+    }\n+\n+    /**\n+     * Gets the ssh meta.\n+     *\n+     * @return the ssh meta\n+     */\n+    public SshMeta getSshMeta() {\n+        return sshMeta;\n+    }\n+\n+    /**\n+     * Sets the ssh meta.\n+     *\n+     * @param sshMeta\n+     *            the new ssh meta\n+     */\n+    public void setSshMeta(SshMeta sshMeta) {\n+        this.sshMeta = sshMeta;\n+    }\n+\n+    /**\n+     * Gets the target host.\n+     *\n+     * @return the target host\n+     */\n+    public String getTargetHost() {\n+        return targetHost;\n+    }\n+\n+    /**\n+     * Sets the target host.\n+     *\n+     * @param targetHost\n+     *            the new target host\n+     */\n+    public void setTargetHost(String targetHost) {\n+        this.targetHost = targetHost;\n+    }\n+\n+}"
            },
            {
                "sha": "89ecbde7130af58a74fb0250ecd7dd2f07fdc781",
                "filename": "src/main/java/io/parallec/core/commander/workflow/ssh/package-info.java",
                "status": "added",
                "additions": 4,
                "deletions": 0,
                "changes": 4,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fcommander%2Fworkflow%2Fssh%2Fpackage-info.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fcommander%2Fworkflow%2Fssh%2Fpackage-info.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fcommander%2Fworkflow%2Fssh%2Fpackage-info.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,4 @@\n+/**\n+ * Work flow utilities on ssh.\n+ */\n+package io.parallec.core.commander.workflow.ssh;\n\\ No newline at end of file"
            },
            {
                "sha": "61cf81bdef17e1bcad55215278ff8e11c3ac9395",
                "filename": "src/main/java/io/parallec/core/config/HandlerExecutionLocation.java",
                "status": "added",
                "additions": 6,
                "deletions": 0,
                "changes": 6,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fconfig%2FHandlerExecutionLocation.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fconfig%2FHandlerExecutionLocation.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fconfig%2FHandlerExecutionLocation.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,6 @@\n+package io.parallec.core.config;\n+\n+public enum HandlerExecutionLocation {\n+\n+    OPERATION_WORKER, MANAGER\n+}"
            },
            {
                "sha": "0e52714f5f9bb8ca48e58491cfa8bda1a1a9102f",
                "filename": "src/main/java/io/parallec/core/config/ParallecGlobalConfig.java",
                "status": "added",
                "additions": 114,
                "deletions": 0,
                "changes": 114,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fconfig%2FParallecGlobalConfig.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fconfig%2FParallecGlobalConfig.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fconfig%2FParallecGlobalConfig.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,114 @@\n+/*  \n+Copyright [2013-2015] eBay Software Foundation\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+    http://www.apache.org/licenses/LICENSE-2.0\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+ */\n+package io.parallec.core.config;\n+\n+import io.parallec.core.bean.ping.PingMode;\n+\n+/**\n+ * this is the global system config. You can replace the values here before executing them. \n+ * Different from those settings defined in ParallelTaskConfig, \n+ * settings here are effective to all executions, and cannot be overwritten for a particular task.\n+ * \n+ *  @author Yuanteng Jeff Pei\n+ */\n+public class ParallecGlobalConfig {\n+\n+    /** The max capacity for the job scheduler. default 2500 */\n+    public static int maxCapacity = 2500;\n+\n+    /** The concurrency for each task. default 1000 */\n+    public static int concurrencyDefault = 1000;\n+    \n+    /** The max concurrency for SSH task. default 400. */\n+    public static int concurrencySshLimit= 400;\n+\n+    /** The scheduler check interval. default 500ms */\n+    public static long schedulerCheckInterval = 500L;\n+\n+    /** The scheduler init delay. default 500 ms */\n+    public static long schedulerInitDelay = 500L;\n+\n+    /** The ning slow client request timeout millis. */\n+    public static int ningSlowClientRequestTimeoutMillis = 60000;\n+\n+    /** The ning slow client connection timeout millis. */\n+    public static int ningSlowClientConnectionTimeoutMillis = 15000;\n+\n+    /** The ning fast client request timeout millis. */\n+    public static int ningFastClientRequestTimeoutMillis = 14000;\n+\n+    /** The ning fast client connection timeout millis. */\n+    public static int ningFastClientConnectionTimeoutMillis = 4000;\n+\n+    /** The ssh connection timeout millis default. */\n+    public static int sshConnectionTimeoutMillisDefault = 5000;\n+\n+    /** The ssh sleep millis btw read buffer. */\n+    public static int sshSleepMIllisBtwReadBuffer = 100;\n+\n+    /** The ssh buffer size. */\n+    public static int sshBufferSize = 1024;\n+\n+    \n+    /** The tcp connection timeout millis default. */\n+    public static int tcpConnectionTimeoutMillisDefault = 2000;\n+    \n+    /** The tcp idle timeout seconds default. */\n+    public static int tcpIdleTimeoutSecDefault = 5;\n+    \n+    /** The ping timeout millis default. */\n+    public static int pingTimeoutMillisDefault = 500;\n+    \n+    /** The ping mode default. */\n+    public static PingMode pingModeDefault = PingMode.INET_ADDRESS_REACHABLE_NEED_ROOT;\n+    \n+    /** The ping num retries default. */\n+    public static int pingNumRetriesDefault = 1;\n+    \n+    /** The Constant USERDATA_FOLDER_WITH_SLASH. */\n+    public static String userDataFolderWithSlash = \"userdata/\";\n+\n+    /** The task log folder with slash. */\n+    public static String taskLogFolderWithSlash = userDataFolderWithSlash\n+            + \"tasklogs/\";\n+\n+    /** The task log postfix. */\n+    public static String taskLogPostfix = \".jsonlog.txt\";\n+\n+    /** The ssh future check interval sec. */\n+    public static double sshFutureCheckIntervalSec = 0.5;\n+    \n+    /** The ping future check interval sec. */\n+    public static double pingFutureCheckIntervalSec = 0.1;\n+    \n+    /** The log response interval. */\n+    public static int logResponseInterval = 1;\n+    \n+    /** The log all response after percent. */\n+    public static double logAllResponseAfterPercent = 95.0;\n+    \n+    /** The log all response before percent. */\n+    public static double logAllResponseBeforePercent = 5.0;\n+    \n+    /** The log all response before init count. */\n+    public static int logAllResponseBeforeInitCount = 2;\n+    \n+    /** The log all response if total less than. */\n+    public static int logAllResponseIfTotalLessThan = 11;\n+    \n+    /** The url connection connect timeout millis. Used when load target host from URL/CMS*/\n+    public static int urlConnectionConnectTimeoutMillis = 6000;\n+    \n+    /** The url connection read timeout millis. Used when load target host from URL/CMS*/\n+    public static int urlConnectionReadTimeoutMillis = 15000;\n+}"
            },
            {
                "sha": "86b7ea283d6c71f20f6520c8cee6ffe4a5f7cdfa",
                "filename": "src/main/java/io/parallec/core/config/ParallelTaskConfig.java",
                "status": "added",
                "additions": 185,
                "deletions": 0,
                "changes": 185,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fconfig%2FParallelTaskConfig.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fconfig%2FParallelTaskConfig.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fconfig%2FParallelTaskConfig.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,185 @@\n+/*  \n+Copyright [2013-2015] eBay Software Foundation\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+    http://www.apache.org/licenses/LICENSE-2.0\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+ */\n+package io.parallec.core.config;\n+\n+import io.parallec.core.ParallelTask;\n+\n+/**\n+ * Configuration class to use with a {@link ParallelTask}. \n+ * \n+ * This can be overwritten for each task. \n+ * \n+ * Configs about various timeout, whether to auto save responses,\n+ * whether to enable the s  \n+ * will load from the default value from {@link ParallelTaskConfigDefault}\n+ *\n+ */\n+public class ParallelTaskConfig {\n+\n+    public ParallelTaskConfig() {\n+        super();\n+        this.asstManagerRetryIntervalMillis = ParallelTaskConfigDefault.asstManagerRetryIntervalMillis;\n+        this.actorMaxOperationTimeoutSec = ParallelTaskConfigDefault.actorMaxOperationTimeoutSec;\n+        this.timeoutInManagerSec = ParallelTaskConfigDefault.timeoutInManagerSec;\n+        this.timeoutAskManagerSec = ParallelTaskConfigDefault.timeoutAskManagerSec;\n+        this.printHttpTrueHeaderMap = ParallelTaskConfigDefault.printHttpTrueHeaderMap;\n+        this.printPoller = ParallelTaskConfigDefault.printPoller;\n+        this.saveResponseToTask = ParallelTaskConfigDefault.saveResponseToTask;\n+        this.enableCapacityAwareTaskScheduler = ParallelTaskConfigDefault.enableCapacityAwareTaskScheduler;\n+        this.autoSaveLogToLocal = ParallelTaskConfigDefault.autoSaveLogToLocal;\n+        this.handlerExecutionLocation = ParallelTaskConfigDefault.handlerExecutionLocationDefault;\n+    }\n+\n+    /** The asst manager retry interval millis. */\n+    private long asstManagerRetryIntervalMillis;\n+\n+    /** The actor max operation timeout sec. */\n+    private int actorMaxOperationTimeoutSec;\n+\n+    /**\n+     * The command manager internal timeout and cancel itself time in seconds\n+     * Note this may need to be adjusted for long polling jobs.\n+     */\n+    private long timeoutInManagerSec;\n+\n+    /** The timeout the director send to the manager to cancel it from outside. */\n+    private long timeoutAskManagerSec;\n+\n+    /** The print http true header map. */\n+    private boolean printHttpTrueHeaderMap;\n+\n+    private boolean printPoller;\n+\n+    private boolean saveResponseToTask;\n+\n+    /**\n+     * The enable capacity protection. When enabled, a parallec task may not be\n+     * immediately executed. Instead, it is submitted to a wait q. Every 0.5\n+     * second, a deamon thread (SingleThreadScheduledExecutor) is used to check\n+     * if there is capacity to put the new node in.\n+     * \n+     * a parallel task capacity is calculated as Min(task.maxConcurrency,\n+     * requestNum)\n+     * \n+     * <p>\n+     * details check ParallelTaskManager initTaskScheduler\n+     * </p>\n+     * */\n+    private boolean enableCapacityAwareTaskScheduler;\n+\n+    private boolean autoSaveLogToLocal;\n+    \n+    private HandlerExecutionLocation handlerExecutionLocation;\n+    \n+    \n+\n+    public long getAsstManagerRetryIntervalMillis() {\n+        return asstManagerRetryIntervalMillis;\n+    }\n+\n+    public void setAsstManagerRetryIntervalMillis(\n+            long asstManagerRetryIntervalMillis) {\n+        this.asstManagerRetryIntervalMillis = asstManagerRetryIntervalMillis;\n+    }\n+\n+    public int getActorMaxOperationTimeoutSec() {\n+        return actorMaxOperationTimeoutSec;\n+    }\n+\n+    public void setActorMaxOperationTimeoutSec(int actorMaxOperationTimeoutSec) {\n+        this.actorMaxOperationTimeoutSec = actorMaxOperationTimeoutSec;\n+    }\n+\n+    public long getTimeoutInManagerSec() {\n+        return timeoutInManagerSec;\n+    }\n+\n+    public void setTimeoutInManagerSec(long timeoutInManagerSec) {\n+        this.timeoutInManagerSec = timeoutInManagerSec;\n+    }\n+\n+    public long getTimeoutAskManagerSec() {\n+        return timeoutAskManagerSec;\n+    }\n+\n+    public void setTimeoutAskManagerSec(long timeoutAskManagerSec) {\n+        this.timeoutAskManagerSec = timeoutAskManagerSec;\n+    }\n+\n+    public boolean isPrintHttpTrueHeaderMap() {\n+        return printHttpTrueHeaderMap;\n+    }\n+\n+    public void setPrintHttpTrueHeaderMap(boolean printHttpTrueHeaderMap) {\n+        this.printHttpTrueHeaderMap = printHttpTrueHeaderMap;\n+    }\n+\n+    public boolean isPrintPoller() {\n+        return printPoller;\n+    }\n+\n+    public void setPrintPoller(boolean printPoller) {\n+        this.printPoller = printPoller;\n+    }\n+\n+    public boolean isSaveResponseToTask() {\n+        return saveResponseToTask;\n+    }\n+\n+    public void setSaveResponseToTask(boolean saveResponseToTask) {\n+        this.saveResponseToTask = saveResponseToTask;\n+    }\n+\n+    public boolean isEnableCapacityAwareTaskScheduler() {\n+        return enableCapacityAwareTaskScheduler;\n+    }\n+\n+    public void setEnableCapacityAwareTaskScheduler(\n+            boolean enableCapacityAwareTaskScheduler) {\n+        this.enableCapacityAwareTaskScheduler = enableCapacityAwareTaskScheduler;\n+    }\n+\n+    public boolean isAutoSaveLogToLocal() {\n+        return autoSaveLogToLocal;\n+    }\n+\n+    public void setAutoSaveLogToLocal(boolean autoSaveLogToLocal) {\n+        this.autoSaveLogToLocal = autoSaveLogToLocal;\n+    }\n+\n+    public HandlerExecutionLocation getHandlerExecutionLocation() {\n+        return handlerExecutionLocation;\n+    }\n+\n+    public void setHandlerExecutionLocation(HandlerExecutionLocation handlerExecutionLocation) {\n+        this.handlerExecutionLocation = handlerExecutionLocation;\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return \"ParallelTaskConfig [asstManagerRetryIntervalMillis=\"\n+                + asstManagerRetryIntervalMillis\n+                + \", actorMaxOperationTimeoutSec=\"\n+                + actorMaxOperationTimeoutSec + \", timeoutInManagerSec=\"\n+                + timeoutInManagerSec + \", timeoutAskManagerSec=\"\n+                + timeoutAskManagerSec + \", printHttpTrueHeaderMap=\"\n+                + printHttpTrueHeaderMap + \", printPoller=\" + printPoller\n+                + \", saveResponseToTask=\" + saveResponseToTask\n+                + \", enableCapacityAwareTaskScheduler=\"\n+                + enableCapacityAwareTaskScheduler + \", autoSaveLogToLocal=\"\n+                + autoSaveLogToLocal + \", handlerExecutionLocation=\"\n+                + handlerExecutionLocation + \"]\";\n+    }\n+\n+    \n+}"
            },
            {
                "sha": "de1bedcbb2e74562b94439b3428ec9d73d48a659",
                "filename": "src/main/java/io/parallec/core/config/ParallelTaskConfigDefault.java",
                "status": "added",
                "additions": 61,
                "deletions": 0,
                "changes": 61,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fconfig%2FParallelTaskConfigDefault.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fconfig%2FParallelTaskConfigDefault.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fconfig%2FParallelTaskConfigDefault.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,61 @@\n+/*  \n+Copyright [2013-2015] eBay Software Foundation\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+    http://www.apache.org/licenses/LICENSE-2.0\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+ */\n+package io.parallec.core.config;\n+\n+\n+/**\n+ * The default values for {@link ParallelTaskConfig}  \n+ *\n+ */\n+public class ParallelTaskConfigDefault {\n+\n+    /** The asst manager retry interval millis. */\n+    public static long asstManagerRetryIntervalMillis = 250L;\n+\n+    /** The actor max operation timeout sec. */\n+    public static int actorMaxOperationTimeoutSec = 15;\n+\n+    /**\n+     * The command manager internal timeout and cancel itself time in seconds\n+     * Note this may need to be adjusted for long polling jobs.\n+     */\n+    public static long timeoutInManagerSec = 600;\n+\n+    /** The timeout the director send to the manager to cancel it from outside. */\n+    public static long timeoutAskManagerSec = timeoutInManagerSec + 10;\n+\n+    /** The print http true header map. */\n+    public static boolean printHttpTrueHeaderMap = true;\n+\n+    /** The print poller. */\n+    public static boolean printPoller = true;\n+\n+    /** The save response to task. */\n+    public static boolean saveResponseToTask = false;\n+\n+    /** The auto save log to local. */\n+    public static boolean autoSaveLogToLocal = false;\n+\n+    /** The enable capacity aware task scheduler. */\n+    public static boolean enableCapacityAwareTaskScheduler = false;\n+\n+    /** The handler execution location default as in Manager after aggregation. */\n+    public static  HandlerExecutionLocation handlerExecutionLocationDefault = HandlerExecutionLocation.MANAGER;\n+    /**\n+     * Instantiates a new parallel task config.\n+     */\n+    public ParallelTaskConfigDefault() {\n+        super();\n+    }\n+\n+}"
            },
            {
                "sha": "6136fd7871165c7ec9bc0c170d02222ccb2f63e2",
                "filename": "src/main/java/io/parallec/core/config/package-info.java",
                "status": "added",
                "additions": 4,
                "deletions": 0,
                "changes": 4,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fconfig%2Fpackage-info.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fconfig%2Fpackage-info.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fconfig%2Fpackage-info.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,4 @@\n+/**\n+ * Configurations on global and task levels.\n+ */\n+package io.parallec.core.config;\n\\ No newline at end of file"
            },
            {
                "sha": "32fc28f9eb403dd4cedce29c7ab30f16b66765e4",
                "filename": "src/main/java/io/parallec/core/exception/ActorMessageTypeInvalidException.java",
                "status": "added",
                "additions": 35,
                "deletions": 0,
                "changes": 35,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fexception%2FActorMessageTypeInvalidException.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fexception%2FActorMessageTypeInvalidException.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fexception%2FActorMessageTypeInvalidException.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,35 @@\n+/*  \n+Copyright [2013-2015] eBay Software Foundation\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+    http://www.apache.org/licenses/LICENSE-2.0\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+ */\n+package io.parallec.core.exception;\n+\n+/**\n+ * The Class ActorMessageTypeInvalidException.\n+ * \n+ * @author Yuanteng Jeff Pei\n+ */\n+public class ActorMessageTypeInvalidException extends RuntimeException {\n+\n+    /** The Constant serialVersionUID. */\n+    private static final long serialVersionUID = 1L;\n+\n+    /**\n+     * Instantiates a new actor message type invalid exception.\n+     *\n+     * @param error\n+     *            the error\n+     */\n+    public ActorMessageTypeInvalidException(String error) {\n+        super(error);\n+    }\n+\n+}"
            },
            {
                "sha": "cbbb12a9c17492515fe186a95433027f1120ec09",
                "filename": "src/main/java/io/parallec/core/exception/ExecutionManagerExecutionException.java",
                "status": "added",
                "additions": 70,
                "deletions": 0,
                "changes": 70,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fexception%2FExecutionManagerExecutionException.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fexception%2FExecutionManagerExecutionException.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fexception%2FExecutionManagerExecutionException.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,70 @@\n+/*  \n+Copyright [2013-2015] eBay Software Foundation\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+    http://www.apache.org/licenses/LICENSE-2.0\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+ */\n+package io.parallec.core.exception;\n+\n+/**\n+ * The Class ExecutionManagerExecutionException.\n+ */\n+public class ExecutionManagerExecutionException extends RuntimeException {\n+\n+    /** The Constant serialVersionUID. */\n+    private static final long serialVersionUID = 1L;\n+\n+    /** The type. */\n+    private ManagerExceptionType type;\n+\n+    /**\n+     * The Enum ManagerExceptionType.\n+     */\n+    public enum ManagerExceptionType {\n+\n+        /** The timeout. */\n+        TIMEOUT,\n+        /** The cancel. */\n+        CANCEL\n+    }\n+\n+    /**\n+     * Instantiates a new command manager execution exception.\n+     *\n+     * @param error\n+     *            the error\n+     * @param type\n+     *            the type\n+     */\n+    public ExecutionManagerExecutionException(String error,\n+            ManagerExceptionType type) {\n+        super(error);\n+        this.setType(type);\n+    }\n+\n+    /**\n+     * Gets the type.\n+     *\n+     * @return the type\n+     */\n+    public ManagerExceptionType getType() {\n+        return type;\n+    }\n+\n+    /**\n+     * Sets the type.\n+     *\n+     * @param type\n+     *            the new type\n+     */\n+    public void setType(ManagerExceptionType type) {\n+        this.type = type;\n+    }\n+\n+}"
            },
            {
                "sha": "bf8df30558ae17470ab30f31c0fd28947807a93e",
                "filename": "src/main/java/io/parallec/core/exception/HttpRequestCreateException.java",
                "status": "added",
                "additions": 36,
                "deletions": 0,
                "changes": 36,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fexception%2FHttpRequestCreateException.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fexception%2FHttpRequestCreateException.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fexception%2FHttpRequestCreateException.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,36 @@\n+/*  \n+Copyright [2013-2015] eBay Software Foundation\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+    http://www.apache.org/licenses/LICENSE-2.0\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+ */\n+package io.parallec.core.exception;\n+\n+// TODO: Auto-generated Javadoc\n+/**\n+ * The Class HttpRequestCreateException.\n+ */\n+public class HttpRequestCreateException extends RuntimeException {\n+\n+    /** The Constant serialVersionUID. */\n+    private static final long serialVersionUID = 1L;\n+\n+    /**\n+     * Instantiates a new http request create exception.\n+     *\n+     * @param error\n+     *            the error\n+     * @param t\n+     *            the t\n+     */\n+    public HttpRequestCreateException(String error, Exception t) {\n+        super(error, t);\n+    }\n+\n+}"
            },
            {
                "sha": "b2a0d5a26cfa81d8497a7959063590bbf95316ea",
                "filename": "src/main/java/io/parallec/core/exception/ParallelTaskInvalidException.java",
                "status": "added",
                "additions": 46,
                "deletions": 0,
                "changes": 46,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fexception%2FParallelTaskInvalidException.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fexception%2FParallelTaskInvalidException.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fexception%2FParallelTaskInvalidException.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,46 @@\n+/*  \n+Copyright [2013-2015] eBay Software Foundation\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+    http://www.apache.org/licenses/LICENSE-2.0\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+ */\n+package io.parallec.core.exception;\n+\n+// TODO: Auto-generated Javadoc\n+/**\n+ * The Class ParallelTaskInvalidException.\n+ */\n+public class ParallelTaskInvalidException extends RuntimeException {\n+\n+    /** The Constant serialVersionUID. */\n+    private static final long serialVersionUID = 1L;\n+\n+    /**\n+     * Instantiates a new parallel task invalid exception.\n+     *\n+     * @param error\n+     *            the error\n+     * @param t\n+     *            the t\n+     */\n+    public ParallelTaskInvalidException(String error, Exception t) {\n+        super(error, t);\n+    }\n+\n+    /**\n+     * Instantiates a new parallel task invalid exception.\n+     *\n+     * @param error\n+     *            the error\n+     */\n+    public ParallelTaskInvalidException(String error) {\n+        super(error);\n+    }\n+\n+}"
            },
            {
                "sha": "ed2dfd7c7a8bf716c541cfcaafff0c55a9c2ede3",
                "filename": "src/main/java/io/parallec/core/exception/TargetHostsLoadException.java",
                "status": "added",
                "additions": 36,
                "deletions": 0,
                "changes": 36,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fexception%2FTargetHostsLoadException.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fexception%2FTargetHostsLoadException.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fexception%2FTargetHostsLoadException.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,36 @@\n+/*  \n+Copyright [2013-2015] eBay Software Foundation\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+    http://www.apache.org/licenses/LICENSE-2.0\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+ */\n+package io.parallec.core.exception;\n+\n+// TODO: Auto-generated Javadoc\n+/**\n+ * The Class TargetHostsLoadException.\n+ */\n+public class TargetHostsLoadException extends RuntimeException {\n+\n+    /** The Constant serialVersionUID. */\n+    private static final long serialVersionUID = 1L;\n+\n+    /**\n+     * Instantiates a new target hosts load exception.\n+     *\n+     * @param error\n+     *            the error\n+     * @param t\n+     *            the t\n+     */\n+    public TargetHostsLoadException(String error, Exception t) {\n+        super(error, t);\n+    }\n+\n+}"
            },
            {
                "sha": "14f0956c7d1a5f839867842a8e32dc18dd2d68bb",
                "filename": "src/main/java/io/parallec/core/exception/TcpRequestCreateException.java",
                "status": "added",
                "additions": 36,
                "deletions": 0,
                "changes": 36,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fexception%2FTcpRequestCreateException.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fexception%2FTcpRequestCreateException.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fexception%2FTcpRequestCreateException.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,36 @@\n+/*  \n+Copyright [2013-2015] eBay Software Foundation\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+    http://www.apache.org/licenses/LICENSE-2.0\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+ */\n+package io.parallec.core.exception;\n+\n+// TODO: Auto-generated Javadoc\n+/**\n+ * The Class HttpRequestCreateException.\n+ */\n+public class TcpRequestCreateException extends RuntimeException {\n+\n+    /** The Constant serialVersionUID. */\n+    private static final long serialVersionUID = 1L;\n+\n+    /**\n+     * Instantiates a new TCP request create exception.\n+     *\n+     * @param error\n+     *            the error\n+     * @param t\n+     *            the t\n+     */\n+    public TcpRequestCreateException(String error, Exception t) {\n+        super(error, t);\n+    }\n+\n+}"
            },
            {
                "sha": "d7948edaf88dec5643b198d1bb0cfac5b2b51b77",
                "filename": "src/main/java/io/parallec/core/exception/package-info.java",
                "status": "added",
                "additions": 4,
                "deletions": 0,
                "changes": 4,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fexception%2Fpackage-info.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fexception%2Fpackage-info.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fexception%2Fpackage-info.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,4 @@\n+/**\n+ * Exceptions.\n+ */\n+package io.parallec.core.exception;\n\\ No newline at end of file"
            },
            {
                "sha": "b4b02735dd2a597d01fdf6de26b324e5758f19a1",
                "filename": "src/main/java/io/parallec/core/monitor/MonitorProvider.java",
                "status": "added",
                "additions": 253,
                "deletions": 0,
                "changes": 253,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fmonitor%2FMonitorProvider.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fmonitor%2FMonitorProvider.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fmonitor%2FMonitorProvider.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,253 @@\n+/*  \n+Copyright [2013-2015] eBay Software Foundation\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+    http://www.apache.org/licenses/LICENSE-2.0\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+*/\n+package io.parallec.core.monitor;\n+\n+import io.parallec.core.util.PcDateUtils;\n+import io.parallec.core.util.PcNumberUtils;\n+\n+import java.lang.management.ManagementFactory;\n+import java.lang.management.ThreadInfo;\n+import java.lang.management.ThreadMXBean;\n+import java.lang.reflect.Modifier;\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import com.google.gson.GsonBuilder;\n+\n+// TODO: Auto-generated Javadoc\n+/**\n+ * The Class MonitorProvider.\n+ */\n+public class MonitorProvider {\n+    \n+    /** The logger. */\n+    @SuppressWarnings(\"unused\")\n+    private static Logger logger = LoggerFactory\n+            .getLogger(MonitorProvider.class);\n+    \n+    /** The threshold percent. */\n+    public static int THRESHOLD_PERCENT = 90;\n+\n+    /** The instance. */\n+    private static MonitorProvider instance = new MonitorProvider();\n+\n+    /**\n+     * Gets the single instance of MonitorProvider.\n+     *\n+     * @return single instance of MonitorProvider\n+     */\n+    public static MonitorProvider getInstance() {\n+        return instance;\n+    }\n+\n+    /**\n+     * Instantiates a new monitor provider.\n+     */\n+    private MonitorProvider() {\n+    }\n+\n+    /** The current jvm perform usage. */\n+    public PerformUsage currentJvmPerformUsage;\n+\n+    /**\n+     * Gets the JVM memory usage.\n+     *\n+     * @return the JVM memory usage\n+     */\n+    public PerformUsage getJVMMemoryUsage() {\n+        int mb = 1024 * 1024;\n+        Runtime rt = Runtime.getRuntime();\n+        PerformUsage usage = new PerformUsage();\n+        usage.totalMemory = (double) rt.totalMemory() / mb;\n+        usage.freeMemory = (double) rt.freeMemory() / mb;\n+        usage.usedMemory = (double) rt.totalMemory() / mb - rt.freeMemory()\n+                / mb;\n+        usage.maxMemory = (double) rt.maxMemory() / mb;\n+        usage.memoryUsagePercent = usage.usedMemory / usage.maxMemory * 100.0;\n+\n+        // update current\n+        currentJvmPerformUsage = usage;\n+        return usage;\n+    }\n+\n+    /**\n+     * Gets the thread dump.\n+     *\n+     * @return the thread dump\n+     */\n+    public ThreadInfo[] getThreadDump() {\n+        ThreadMXBean threadMxBean = ManagementFactory.getThreadMXBean();\n+        return threadMxBean.dumpAllThreads(true, true);\n+    }\n+\n+    public int getLiveThreadCount() {\n+        return ManagementFactory.getThreadMXBean().getThreadCount(); \n+    }\n+    \n+    /**\n+     * Gets the thread usage.\n+     *\n+     * @return the thread usage\n+     */\n+    public ThreadUsage getThreadUsage() {\n+        ThreadMXBean threadMxBean = ManagementFactory.getThreadMXBean();\n+        \n+        ThreadUsage threadUsage = new ThreadUsage();\n+        long[] threadIds = threadMxBean.getAllThreadIds();\n+        threadUsage.liveThreadCount = threadIds.length;\n+\n+        for (long tId : threadIds) {\n+            ThreadInfo threadInfo = threadMxBean.getThreadInfo(tId);\n+            if(threadInfo==null) continue;\n+            threadUsage.threadData.put(\n+                    Long.valueOf(tId).toString(),\n+                    new ThreadData(threadInfo.getThreadName(), threadInfo\n+                            .getThreadState().name(), threadMxBean\n+                            .getThreadCpuTime(tId)));\n+\n+        }\n+        return threadUsage;\n+    }\n+\n+    /**\n+     * Log health.\n+     */\n+    public String getHealthMemory() {\n+        StringBuilder sb = new StringBuilder();\n+        sb.append(\"Logging JVM Stats\\n\");\n+        MonitorProvider mp = MonitorProvider.getInstance();\n+        PerformUsage perf = mp.getJVMMemoryUsage();\n+        sb.append(perf.toString());\n+        \n+        if (perf.memoryUsagePercent >= THRESHOLD_PERCENT) {\n+            sb.append(\"========= WARNING: MEM USAGE > \"+ THRESHOLD_PERCENT +\"!!\");\n+            sb.append(\" !! Live Threads List=============\\n\");\n+            sb.append(mp.getThreadUsage().toString());\n+            sb.append(\"========================================\\n\");\n+            sb.append(\"========================JVM Thread Dump====================\\n\");\n+            ThreadInfo[] threadDump = mp.getThreadDump();\n+            for (ThreadInfo threadInfo : threadDump) {\n+                sb.append(threadInfo.toString()+\"\\n\");\n+            }\n+            sb.append(\"===========================================================\\n\");\n+        }\n+        sb.append(\"Logged JVM Stats\\n\");\n+        \n+        return sb.toString();\n+    }\n+\n+    /**\n+     * The Class ThreadUsage.\n+     */\n+    public static class ThreadUsage extends Jsonable {\n+        \n+        /** The live thread count. */\n+        public int liveThreadCount;\n+        \n+        /** The thread data. */\n+        public Map<String, ThreadData> threadData = new HashMap<String, ThreadData>();\n+    }\n+\n+    /**\n+     * The Class ThreadData.\n+     */\n+    public static class ThreadData extends Jsonable {\n+\n+        /** The thread name. */\n+        public String threadName;\n+        \n+        /** The thread state. */\n+        public String threadState;\n+        \n+        /** The cpu time in nano seconds. */\n+        public long cpuTimeInNanoSeconds;\n+\n+        /**\n+         * Instantiates a new thread data.\n+         *\n+         * @param threadName the thread name\n+         * @param threadState the thread state\n+         * @param cpuTimeInNanoSeconds the cpu time in nano seconds\n+         */\n+        public ThreadData(String threadName, String threadState,\n+                long cpuTimeInNanoSeconds) {\n+            this.threadName = threadName;\n+            this.threadState = threadState;\n+            this.cpuTimeInNanoSeconds = cpuTimeInNanoSeconds;\n+        }\n+\n+    }\n+\n+    /**\n+     * The Class PerformUsage.\n+     */\n+    public static class PerformUsage extends Jsonable {\n+        \n+        /** The date. */\n+        public String date = PcDateUtils.getNowDateTimeStrStandard();\n+        \n+        /** The total memory. */\n+        public double totalMemory;\n+        \n+        /** The free memory. */\n+        public double freeMemory;\n+        \n+        /** The used memory. */\n+        public double usedMemory;\n+        \n+        /** The max memory. */\n+        public double maxMemory;\n+        \n+        /** The memory usage percent. */\n+        public double memoryUsagePercent;\n+\n+        /**\n+         * Gets the summary.\n+         *\n+         * @return the summary\n+         */\n+        public String getSummary() {\n+            String summary = PcNumberUtils\n+                    .getStringFromDouble(memoryUsagePercent)\n+                    + \"% (\"\n+                    + PcNumberUtils.getStringFromDouble(usedMemory)\n+                    + \"/\"\n+                    + PcNumberUtils.getStringFromDouble(totalMemory)\n+                    + \") Max \"\n+                    + PcNumberUtils.getStringFromDouble(maxMemory);\n+\n+            return summary;\n+        }\n+\n+    }\n+\n+    /**\n+     * The Class Jsonable.\n+     */\n+    public abstract static class Jsonable {\n+\n+        /* (non-Javadoc)\n+         * @see java.lang.Object#toString()\n+         */\n+        @Override\n+        public String toString() {\n+            return new GsonBuilder()\n+                    .excludeFieldsWithModifiers(Modifier.STATIC).create()\n+                    .toJson(this);\n+        }\n+    }\n+\n+}"
            },
            {
                "sha": "228b2595dab9e05ee7b01d5fbc0a396b946996a1",
                "filename": "src/main/java/io/parallec/core/monitor/package-info.java",
                "status": "added",
                "additions": 4,
                "deletions": 0,
                "changes": 4,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fmonitor%2Fpackage-info.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fmonitor%2Fpackage-info.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fmonitor%2Fpackage-info.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,4 @@\n+/**\n+ * On demand monitoring on threads and memory. \n+ */\n+package io.parallec.core.monitor;\n\\ No newline at end of file"
            },
            {
                "sha": "ddea10d240982b97445aa1b9b27d2547690daf06",
                "filename": "src/main/java/io/parallec/core/package-info.java",
                "status": "added",
                "additions": 5,
                "deletions": 0,
                "changes": 5,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fpackage-info.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fpackage-info.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fpackage-info.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,5 @@\n+/**\n+ * Main package, including most user-facing classes such as the ParallelClient,\n+ * ParallelTask etc.\n+ */\n+package io.parallec.core;\n\\ No newline at end of file"
            },
            {
                "sha": "597dbfcfd354addd4d4d383afbeb94451116ad3e",
                "filename": "src/main/java/io/parallec/core/resources/AsyncHttpClientFactoryEmbed.java",
                "status": "added",
                "additions": 196,
                "deletions": 0,
                "changes": 196,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fresources%2FAsyncHttpClientFactoryEmbed.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fresources%2FAsyncHttpClientFactoryEmbed.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fresources%2FAsyncHttpClientFactoryEmbed.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,196 @@\n+/*  \n+\n+Copyright [2013-2014] eBay Software Foundation\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+\n+    http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+\n+ */\n+package io.parallec.core.resources;\n+\n+import io.parallec.core.config.ParallecGlobalConfig;\n+\n+import java.security.KeyManagementException;\n+import java.security.NoSuchAlgorithmException;\n+import java.security.SecureRandom;\n+import java.security.cert.X509Certificate;\n+\n+import javax.net.ssl.HostnameVerifier;\n+import javax.net.ssl.HttpsURLConnection;\n+import javax.net.ssl.SSLContext;\n+import javax.net.ssl.SSLSession;\n+import javax.net.ssl.SSLSocketFactory;\n+import javax.net.ssl.TrustManager;\n+import javax.net.ssl.X509TrustManager;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import com.ning.http.client.AsyncHttpClient;\n+import com.ning.http.client.AsyncHttpClientConfigBean;\n+\n+// TODO: Auto-generated Javadoc\n+/**\n+ * The Class HttpClientFactoryEmbed.\n+ *\n+ * @author Yuanteng Jeff Pei\n+ */\n+public final class AsyncHttpClientFactoryEmbed {\n+\n+    /** The logger. */\n+    private static Logger logger = LoggerFactory\n+            .getLogger(AsyncHttpClientFactoryEmbed.class);\n+\n+    /** The fast client. */\n+    private final AsyncHttpClient fastClient;\n+\n+    /** The slow client. */\n+    private final AsyncHttpClient slowClient;\n+\n+    /**\n+     * Instantiates a new http client factory embed.\n+     */\n+    public AsyncHttpClientFactoryEmbed() {\n+        AsyncHttpClient fastClient = null;\n+        AsyncHttpClient slowClient = null;\n+\n+        try {\n+            // create and configure async http client\n+            AsyncHttpClientConfigBean configFastClient = new AsyncHttpClientConfigBean();\n+\n+            logger.info(\n+                    \"FastClient: ningFastClientConnectionTimeoutMillis: {}\",\n+                    ParallecGlobalConfig.ningFastClientConnectionTimeoutMillis);\n+            configFastClient\n+                    .setConnectionTimeOutInMs(ParallecGlobalConfig.ningFastClientConnectionTimeoutMillis);\n+\n+            logger.info(\"FastClient: ningFastClientRequestTimeoutMillis: {}\",\n+                    ParallecGlobalConfig.ningFastClientRequestTimeoutMillis);\n+            configFastClient\n+                    .setRequestTimeoutInMs(ParallecGlobalConfig.ningFastClientRequestTimeoutMillis);\n+            fastClient = new AsyncHttpClient(configFastClient);\n+\n+            // TODO added\n+            // configFastClient.setMaxRequestRetry(3);\n+\n+            AsyncHttpClientConfigBean configSlowClient = new AsyncHttpClientConfigBean();\n+            configSlowClient\n+                    .setConnectionTimeOutInMs(ParallecGlobalConfig.ningSlowClientConnectionTimeoutMillis);\n+            configSlowClient\n+                    .setRequestTimeoutInMs(ParallecGlobalConfig.ningSlowClientRequestTimeoutMillis);\n+            slowClient = new AsyncHttpClient(configSlowClient);\n+\n+            disableCertificateVerification();\n+        } catch (Exception e) {\n+            logger.error(\"ERROR IN HttpClientFactoryEmbed \"\n+                    + e.getLocalizedMessage());\n+        }\n+\n+        this.fastClient = fastClient;\n+        this.slowClient = slowClient;\n+    }\n+\n+    /**\n+     * Gets the fast client.\n+     *\n+     * @return the fast client\n+     */\n+    public AsyncHttpClient getFastClient() {\n+        return fastClient;\n+    }\n+\n+    /**\n+     * Gets the slow client.\n+     *\n+     * @return the slow client\n+     */\n+    public AsyncHttpClient getSlowClient() {\n+        return slowClient;\n+    }\n+\n+    /**\n+     * Disable certificate verification.\n+     *\n+     * @throws KeyManagementException\n+     *             the key management exception\n+     * @throws NoSuchAlgorithmException\n+     *             the no such algorithm exception\n+     */\n+    private void disableCertificateVerification()\n+            throws KeyManagementException, NoSuchAlgorithmException {\n+        // Create a trust manager that does not validate certificate chains\n+        final TrustManager[] trustAllCerts = new TrustManager[] { new CustomTrustManager() };\n+\n+        // Install the all-trusting trust manager\n+        final SSLContext sslContext = SSLContext.getInstance(\"SSL\");\n+        sslContext.init(null, trustAllCerts, new SecureRandom());\n+        final SSLSocketFactory sslSocketFactory = sslContext.getSocketFactory();\n+        HttpsURLConnection.setDefaultSSLSocketFactory(sslSocketFactory);\n+        final HostnameVerifier verifier = new HostnameVerifier() {\n+            @Override\n+            public boolean verify(final String hostname,\n+                    final SSLSession session) {\n+                return true;\n+            }\n+        };\n+\n+        HttpsURLConnection.setDefaultHostnameVerifier(verifier);\n+    }\n+\n+    /**\n+     * dummy.\n+     */\n+    public void state() {\n+        logger.info(\"Initializing Default AHC CLient Factory...\");\n+    }\n+\n+    /**\n+     * class CustomTrustManager.\n+     */\n+    private static class CustomTrustManager implements X509TrustManager {\n+\n+        /**\n+         * Gets the accepted issuers.\n+         *\n+         * @return certificate.\n+         */\n+        public X509Certificate[] getAcceptedIssuers() {\n+            return (X509Certificate[]) null;\n+        }\n+\n+        /**\n+         * Check client trusted.\n+         *\n+         * @param certs\n+         *            the certs\n+         * @param authType\n+         *            the auth type\n+         */\n+        public void checkClientTrusted(final X509Certificate[] certs,\n+                final String authType) {\n+            /* no op */\n+        }\n+\n+        /**\n+         * Check server trusted.\n+         *\n+         * @param certs\n+         *            the certs\n+         * @param authType\n+         *            the auth type\n+         */\n+        public void checkServerTrusted(final X509Certificate[] certs,\n+                final String authType) {\n+            /* no op */\n+        }\n+    }\n+}\n\\ No newline at end of file"
            },
            {
                "sha": "054c22f1da0aa15488ab15bc02b7d7c87bda7b37",
                "filename": "src/main/java/io/parallec/core/resources/HttpClientStore.java",
                "status": "added",
                "additions": 226,
                "deletions": 0,
                "changes": 226,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fresources%2FHttpClientStore.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fresources%2FHttpClientStore.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fresources%2FHttpClientStore.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,226 @@\n+/*  \n+Copyright [2013-2015] eBay Software Foundation\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+    http://www.apache.org/licenses/LICENSE-2.0\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+ */\n+package io.parallec.core.resources;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.Map.Entry;\n+\n+import com.ning.http.client.AsyncHttpClient;\n+\n+// TODO: Auto-generated Javadoc\n+/**\n+ * this stores a pair of default fast/slow AsyncHttpClient, and another pair of\n+ * customized fast/slow AsyncHttpClient the default.\n+ * \n+ * For each Parallel Task, will by default load the Embed-fast client in AsyncHttpClientStore \n+ *  unless you load your specific async http client.\n+ * \n+ * Apache HTTP Client is only used for CMS query or load target hosts for URLs.\n+ * \n+ * @author Yuanteng Jeff Pei\n+ */\n+public class HttpClientStore {\n+\n+    /** The http client type current default. */\n+    private HttpClientType httpClientTypeCurrentDefault;\n+\n+    /** The Constant map. */\n+    private final Map<HttpClientType, AsyncHttpClient> map = new HashMap<HttpClientType, AsyncHttpClient>();\n+\n+    /** The http client factory embed. */\n+    private AsyncHttpClientFactoryEmbed httpClientFactoryEmbed;\n+\n+\n+    /** The singleton instance. */\n+    private final static HttpClientStore instance = new HttpClientStore();\n+\n+    public static HttpClientStore getInstance() {\n+        return instance;\n+    }\n+\n+    /**\n+     * Instantiates a new http client store.\n+     */\n+    private HttpClientStore() {\n+        init();\n+    }\n+\n+    /**\n+     * Initialize\n+     */\n+    public synchronized void init() {\n+        httpClientFactoryEmbed = new AsyncHttpClientFactoryEmbed();\n+        map.put(HttpClientType.EMBED_FAST, httpClientFactoryEmbed.getFastClient());\n+        map.put(HttpClientType.EMBED_SLOW, httpClientFactoryEmbed.getSlowClient());\n+\n+        // custom default are also the embed one; unless a change\n+        map.put(HttpClientType.CUSTOM_FAST, httpClientFactoryEmbed.getFastClient());\n+        map.put(HttpClientType.CUSTOM_SLOW, httpClientFactoryEmbed.getSlowClient());\n+\n+        // make sure to use the default fast\n+        setHttpClientTypeCurrentDefault(HttpClientType.EMBED_FAST);\n+    }\n+\n+    /**\n+     * close and clean up the http client, then create the new ones.\n+     */\n+    public synchronized void reinit() {\n+\n+        // first shutdown existing ones.\n+        shutdown();\n+        init();\n+    }\n+\n+    /**\n+     * Shutdown.\n+     */\n+    public void shutdown() {\n+\n+        for (Entry<HttpClientType, AsyncHttpClient> entry : map.entrySet()) {\n+            AsyncHttpClient client = entry.getValue();\n+            if (client != null)\n+                client.close();\n+        }\n+\n+    }\n+\n+    /**\n+     * default fast is the default.\n+     *\n+     * @return the embed client fast\n+     */\n+    public AsyncHttpClient getEmbedClientFast() {\n+        return map.get(HttpClientType.EMBED_FAST);\n+    }\n+\n+    /**\n+     * Gets the embed client slow.\n+     *\n+     * @return the embed client slow\n+     */\n+    public AsyncHttpClient getEmbedClientSlow() {\n+        return map.get(HttpClientType.EMBED_SLOW);\n+    }\n+\n+    /**\n+     * Gets the custom client fast.\n+     *\n+     * @return the custom client fast\n+     */\n+    public AsyncHttpClient getCustomClientFast() {\n+        return map.get(HttpClientType.CUSTOM_FAST);\n+    }\n+\n+    /**\n+     * Gets the custom client slow.\n+     *\n+     * @return the custom client slow\n+     */\n+    public AsyncHttpClient getCustomClientSlow() {\n+        return map.get(HttpClientType.CUSTOM_SLOW);\n+    }\n+\n+    /**\n+     * Gets the client by type.\n+     *\n+     * @param type\n+     *            the type\n+     * @return the client by type\n+     */\n+    public AsyncHttpClient getClientByType(HttpClientType type) {\n+        return map.get(type);\n+\n+    }\n+\n+    /**\n+     * Gets the current default client.\n+     *\n+     * @return the current default client\n+     */\n+    public AsyncHttpClient getCurrentDefaultClient() {\n+        return map.get(httpClientTypeCurrentDefault);\n+\n+    }\n+\n+    /**\n+     * Sets the custom client fast.\n+     *\n+     * @param client\n+     *            the new custom client fast\n+     */\n+    public void setCustomClientFast(AsyncHttpClient client) {\n+        map.put(HttpClientType.CUSTOM_FAST, client);\n+    }\n+\n+    /**\n+     * Sets the custom client slow.\n+     *\n+     * @param client\n+     *            the new custom client slow\n+     */\n+    public void setCustomClientSlow(AsyncHttpClient client) {\n+        map.put(HttpClientType.CUSTOM_SLOW, client);\n+    }\n+\n+    /**\n+     * Gets the http client type current default.\n+     *\n+     * @return the http client type current default\n+     */\n+    public HttpClientType getHttpClientTypeCurrentDefault() {\n+        return httpClientTypeCurrentDefault;\n+    }\n+\n+    /**\n+     * this is a key function, and all new command builder will use this one .\n+     *\n+     * @param httpClientTypeCurrentDefault\n+     *            the new http client type current default\n+     */\n+    public void setHttpClientTypeCurrentDefault(\n+            HttpClientType httpClientTypeCurrentDefault) {\n+        this.httpClientTypeCurrentDefault = httpClientTypeCurrentDefault;\n+    }\n+\n+    /**\n+     * Gets the map.\n+     *\n+     * @return the map\n+     */\n+    public Map<HttpClientType, AsyncHttpClient> getMap() {\n+        return map;\n+    }\n+\n+    /**\n+     * Gets the http client factory embed.\n+     *\n+     * @return the http client factory embed\n+     */\n+    public AsyncHttpClientFactoryEmbed getHttpClientFactoryEmbed() {\n+        return httpClientFactoryEmbed;\n+    }\n+\n+    /**\n+     * Sets the http client factory embed.\n+     *\n+     * @param httpClientFactoryEmbed\n+     *            the new http client factory embed\n+     */\n+    public void setHttpClientFactoryEmbed(\n+            AsyncHttpClientFactoryEmbed httpClientFactoryEmbed) {\n+        this.httpClientFactoryEmbed = httpClientFactoryEmbed;\n+    }\n+\n+\n+}"
            },
            {
                "sha": "67b17ca79cec87acd16141011db66f16f5ea1fda",
                "filename": "src/main/java/io/parallec/core/resources/HttpClientType.java",
                "status": "added",
                "additions": 29,
                "deletions": 0,
                "changes": 29,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fresources%2FHttpClientType.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fresources%2FHttpClientType.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fresources%2FHttpClientType.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,29 @@\n+/*  \n+Copyright [2013-2015] eBay Software Foundation\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+    http://www.apache.org/licenses/LICENSE-2.0\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+ */\n+package io.parallec.core.resources;\n+\n+// TODO: Auto-generated Javadoc\n+/**\n+ * The Enum HCTYPE.\n+ */\n+public enum HttpClientType {\n+\n+    /** The embed fast. */\n+    EMBED_FAST,\n+    /** The embed slow. */\n+    EMBED_SLOW,\n+    /** The custom fast. */\n+    CUSTOM_FAST,\n+    /** The custom slow. */\n+    CUSTOM_SLOW\n+}\n\\ No newline at end of file"
            },
            {
                "sha": "76d48ad5284636282c13f01fae9e772d65293e6c",
                "filename": "src/main/java/io/parallec/core/resources/HttpMethod.java",
                "status": "added",
                "additions": 35,
                "deletions": 0,
                "changes": 35,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fresources%2FHttpMethod.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fresources%2FHttpMethod.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fresources%2FHttpMethod.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,35 @@\n+/*  \n+Copyright [2013-2015] eBay Software Foundation\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+    http://www.apache.org/licenses/LICENSE-2.0\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+ */\n+package io.parallec.core.resources;\n+\n+// TODO: Auto-generated Javadoc\n+/**\n+ * The Enum HttpMethod.\n+ */\n+public enum HttpMethod {\n+\n+    /** The head. */\n+    HEAD,\n+    /** The get. */\n+    GET,\n+    /** The post. */\n+    POST,\n+    /** The put. */\n+    PUT,\n+    /** The delete. */\n+    DELETE,\n+    /** The options. */\n+    OPTIONS,\n+    /** The na. */\n+    NA\n+}"
            },
            {
                "sha": "64bb268a1e3c6bdf3926eb71d66c182ae96284c1",
                "filename": "src/main/java/io/parallec/core/resources/TcpSshPingResourceStore.java",
                "status": "added",
                "additions": 97,
                "deletions": 0,
                "changes": 97,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fresources%2FTcpSshPingResourceStore.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fresources%2FTcpSshPingResourceStore.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fresources%2FTcpSshPingResourceStore.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,97 @@\n+/*  \n+Copyright [2013-2015] eBay Software Foundation\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+    http://www.apache.org/licenses/LICENSE-2.0\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+ */\n+package io.parallec.core.resources;\n+\n+import java.util.concurrent.ExecutorService;\n+import java.util.concurrent.Executors;\n+\n+import org.jboss.netty.channel.ChannelFactory;\n+import org.jboss.netty.channel.socket.nio.NioClientSocketChannelFactory;\n+import org.jboss.netty.util.HashedWheelTimer;\n+\n+/**\n+ * Provide external resources needed for netty based TCP worker:\n+ * ChannelFactory and HashedWheelTimer timer\n+ *\n+ * @author Yuanteng Jeff Pei\n+ */\n+public class TcpSshPingResourceStore {\n+\n+\n+    /** The singleton instance. */\n+    private final static TcpSshPingResourceStore instance = new TcpSshPingResourceStore();\n+\n+    public static TcpSshPingResourceStore getInstance() {\n+        return instance;\n+    }\n+    private ChannelFactory channelFactory; \n+    private HashedWheelTimer timer = null;\n+    \n+    private ExecutorService threadPoolForSshPing = Executors.newCachedThreadPool();\n+    \n+    public void shutdown(){\n+        if(channelFactory!=null){\n+            channelFactory.releaseExternalResources();\n+        }\n+        if(timer!=null) timer.stop();\n+    }\n+    /**\n+     * Instantiates a new http client store.\n+     */\n+    private TcpSshPingResourceStore() {\n+        init();\n+    }\n+\n+    /**\n+     * Initialize\n+     */\n+    public synchronized void init() {\n+        channelFactory = new NioClientSocketChannelFactory(\n+                Executors.newCachedThreadPool(),\n+                Executors.newCachedThreadPool());\n+        timer = new HashedWheelTimer();\n+    }\n+\n+    /**\n+     * close and clean up the http client, then create the new ones.\n+     */\n+    public synchronized void reinit() {\n+\n+        // first shutdown existing ones.\n+        shutdown();\n+        init();\n+    }\n+    public ChannelFactory getChannelFactory() {\n+        return channelFactory;\n+    }\n+    public void setChannelFactory(ChannelFactory channelFactory) {\n+        this.channelFactory = channelFactory;\n+    }\n+    public HashedWheelTimer getTimer() {\n+        return timer;\n+    }\n+    public void setTimer(HashedWheelTimer timer) {\n+        this.timer = timer;\n+    }\n+\n+    public ExecutorService getThreadPoolForSshPing() {\n+        return threadPoolForSshPing;\n+    }\n+\n+    public void setThreadPoolForSshPing(ExecutorService threadPoolForSshPing) {\n+        this.threadPoolForSshPing = threadPoolForSshPing;\n+    }\n+ \n+   \n+\n+}"
            },
            {
                "sha": "8edc01657a670de790d9f674b3d3e9aad030c989",
                "filename": "src/main/java/io/parallec/core/resources/package-info.java",
                "status": "added",
                "additions": 4,
                "deletions": 0,
                "changes": 4,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fresources%2Fpackage-info.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fresources%2Fpackage-info.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Fresources%2Fpackage-info.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,4 @@\n+/**\n+ * External resources on async http client stores, thread pools for netty/ping/ssh.\n+ */\n+package io.parallec.core.resources;\n\\ No newline at end of file"
            },
            {
                "sha": "aa9733b4b475d89c78705e91df6dde6199923763",
                "filename": "src/main/java/io/parallec/core/task/CapacityAwareTaskScheduler.java",
                "status": "added",
                "additions": 105,
                "deletions": 0,
                "changes": 105,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Ftask%2FCapacityAwareTaskScheduler.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Ftask%2FCapacityAwareTaskScheduler.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Ftask%2FCapacityAwareTaskScheduler.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,105 @@\n+/*  \n+Copyright [2013-2015] eBay Software Foundation\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+    http://www.apache.org/licenses/LICENSE-2.0\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+ */\n+package io.parallec.core.task;\n+\n+import io.parallec.core.ParallelTask;\n+import io.parallec.core.config.ParallecGlobalConfig;\n+\n+import java.util.Queue;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+// TODO: Auto-generated Javadoc\n+/**\n+ * \n+ * TODO Doc: The Class EvalTaskInWaitQRunner.\n+ * \n+ * \n+ * \n+ * A task scheduler runnable to check if there are capacity to run a task in\n+ * from the waitQ\n+ * \n+ */\n+public class CapacityAwareTaskScheduler implements Runnable {\n+\n+    /** The Constant logger. */\n+    private static final Logger logger = LoggerFactory\n+            .getLogger(CapacityAwareTaskScheduler.class);\n+\n+    /*\n+     * (non-Javadoc)\n+     * \n+     * @see java.lang.Runnable#run()\n+     */\n+    public void run() {\n+        try {\n+\n+            Queue<ParallelTask> waitQ = ParallelTaskManager.getInstance()\n+                    .getWaitQ();\n+\n+            logger.debug(\n+                    \"TASK_WAIT_Q: Current waitQ has task count: {} in Thread scheduler\",\n+                    waitQ.size());\n+\n+            final ParallelTask task = waitQ.peek();\n+            if (task != null) {\n+\n+                int totalUsedCapacityBefore = ParallelTaskManager.getInstance()\n+                        .getTotalUsedCapacity();\n+\n+                int capacityThisTask = task.capacityUsed();\n+                int capacityRemain = ParallecGlobalConfig.maxCapacity\n+                        - totalUsedCapacityBefore;\n+                int totalUsedCapacityNew = totalUsedCapacityBefore\n+                        + capacityThisTask;\n+\n+                logger.info(\n+                        \"TASK_WAIT_Q: Exists Task in WaitQ with head of queue task id {}\"\n+                                + \"....Current used capacity {}, and remaining capacity is {}\",\n+                        task.getTaskId(), totalUsedCapacityBefore,\n+                        capacityRemain);\n+                // condition to add to the in progress map\n+                if (totalUsedCapacityNew <= ParallecGlobalConfig.maxCapacity) {\n+                    logger.info(\n+                            \"TASK_WAIT_Q: Sufficent capacity. Execute new task from wait queue. Task capacity {}\"\n+                                    + \" with total used capacity is now {}, capacityRemain will be {}\",\n+                            capacityThisTask, totalUsedCapacityNew,\n+                            ParallecGlobalConfig.maxCapacity\n+                                    - totalUsedCapacityNew);\n+\n+                    waitQ.poll(); // dequeue\n+                    Runnable taskRunnable = new Runnable() {\n+                        @Override\n+                        public void run() {\n+                            ParallelTaskManager.getInstance()\n+                                    .generateUpdateExecuteTask(task);\n+                        }\n+                    };\n+                    new Thread(taskRunnable).start();\n+                } else {\n+                    logger.info(\n+                            \"TASK_WAIT_Q: Skip execution new task. Insufficent capacity. \"\n+                                    + \"Head of queue task needs capacity {}. However capacityRemain is only {}.\",\n+                            capacityThisTask, capacityRemain);\n+                }\n+\n+            }\n+\n+        } catch (Exception e) {\n+            logger.error(\"TASK_WAIT_Q: fail in EvalTaskInWaitQRunner \" + e\n+                    + \" details \", e);\n+        }\n+    }\n+\n+}"
            },
            {
                "sha": "3c3ac264762cf047d52c4e22f23ebf3fbe216603",
                "filename": "src/main/java/io/parallec/core/task/ParallelTaskBean.java",
                "status": "added",
                "additions": 491,
                "deletions": 0,
                "changes": 491,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Ftask%2FParallelTaskBean.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Ftask%2FParallelTaskBean.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Ftask%2FParallelTaskBean.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,491 @@\n+/*  \n+Copyright [2013-2015] eBay Software Foundation\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+    http://www.apache.org/licenses/LICENSE-2.0\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+ */\n+package io.parallec.core.task;\n+\n+import io.parallec.core.ParallecResponseHandler;\n+import io.parallec.core.ParallelTask;\n+import io.parallec.core.actor.message.NodeReqResponse;\n+import io.parallec.core.actor.poll.HttpPollerProcessor;\n+import io.parallec.core.bean.HttpMeta;\n+import io.parallec.core.bean.StrStrMap;\n+import io.parallec.core.bean.TargetHostMeta;\n+import io.parallec.core.bean.ssh.SshMeta;\n+import io.parallec.core.bean.tcp.TcpMeta;\n+import io.parallec.core.util.BeanMapper;\n+import io.parallec.core.util.PcDateUtils;\n+\n+import java.util.ArrayList;\n+import java.util.Date;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+\n+import akka.actor.ActorRef;\n+\n+// TODO: Auto-generated Javadoc\n+/**\n+ * The Class ParallelTaskBean. this is for serialization and see as a snapshot\n+ */\n+public class ParallelTaskBean {\n+\n+    /**\n+     * Instantiates a new parallel task bean.\n+     *\n+     * @param task\n+     *            the task\n+     */\n+    public ParallelTaskBean(ParallelTask task) {\n+        super();\n+        BeanMapper.copy(task, this);\n+        this.parallelTaskResult.putAll(task.getParallelTaskResult());\n+        this.taskErrorMetas.addAll(task.getTaskErrorMetas());\n+        this.replacementVarMap.putAll(task.getReplacementVarMap());\n+        this.state = task.getState().toString();\n+\n+        this.submitTime = PcDateUtils.getDateTimeStrStandard(new Date(task\n+                .getSubmitTime()));\n+        this.executeStartTime = PcDateUtils.getDateTimeStrStandard(new Date(\n+                task.getExecuteStartTime()));\n+        this.executionEndTime = PcDateUtils.getDateTimeStrStandard(new Date(\n+                task.getExecutionEndTime()));\n+\n+    }\n+\n+    /** The time stamp. */\n+    private String timeStamp;\n+\n+    /** TODO: The start time. */\n+    private String submitTime;\n+\n+    /** The execute start time. */\n+    private String executeStartTime;\n+\n+    /** The end time. */\n+    private String executionEndTime;\n+\n+    /** The duration sec. */\n+    private double durationSec;\n+\n+    /** The request num. */\n+    private Integer requestNum = null;\n+\n+    /** The request num actual. */\n+    private Integer requestNumActual = null;\n+\n+    /** The response received number. */\n+    private volatile Integer responsedNum = null;\n+\n+    /** The task error metas. */\n+    private final List<TaskErrorMeta> taskErrorMetas = new ArrayList<TaskErrorMeta>();\n+\n+    /** The response context. */\n+    // cannot be final. must be able to be replacable to pass data out.\n+    private Map<String, Object> responseContext = new HashMap<String, Object>();\n+\n+    /** The state. */\n+    private String state;\n+\n+    /** The job id. */\n+    private String taskId;\n+\n+    /** The handler. */\n+    private ParallecResponseHandler handler;\n+\n+    /** The parallel task result. */\n+    private Map<String, NodeReqResponse> parallelTaskResult = new HashMap<String, NodeReqResponse>();\n+\n+    /** The command meta. */\n+    private HttpMeta commandMeta;\n+\n+    /** The target host meta. */\n+    private TargetHostMeta targetHostMeta;\n+\n+    /** The ssh meta. */\n+    private SshMeta sshMeta;\n+\n+    /** The ssh meta. */\n+    private TcpMeta tcpMeta;\n+    \n+    /** The executionManager. */\n+    public ActorRef executionManager = null;\n+\n+    /** The replacement var map node specific. */\n+    private final Map<String, StrStrMap> replacementVarMapNodeSpecific = new HashMap<String, StrStrMap>();\n+\n+    /** The replacement var map. */\n+    private final Map<String, String> replacementVarMap = new HashMap<String, String>();\n+\n+    /** The request replacement type. */\n+    private RequestReplacementType requestReplacementType = RequestReplacementType.NO_REPLACEMENT;\n+\n+    /** The is pollable. */\n+    private boolean isPollable = false;\n+\n+    /** The http poller processor. */\n+    private HttpPollerProcessor httpPollerProcessor = null;\n+\n+    /**\n+     * Gets the time stamp.\n+     *\n+     * @return the time stamp\n+     */\n+    public String getTimeStamp() {\n+        return timeStamp;\n+    }\n+\n+    /**\n+     * Sets the time stamp.\n+     *\n+     * @param timeStamp\n+     *            the new time stamp\n+     */\n+    public void setTimeStamp(String timeStamp) {\n+        this.timeStamp = timeStamp;\n+    }\n+\n+    /**\n+     * Gets the request num.\n+     *\n+     * @return the request num\n+     */\n+    public Integer getRequestNum() {\n+        return requestNum;\n+    }\n+\n+    /**\n+     * Sets the request num.\n+     *\n+     * @param requestNum\n+     *            the new request num\n+     */\n+    public void setRequestNum(Integer requestNum) {\n+        this.requestNum = requestNum;\n+    }\n+\n+    /**\n+     * Gets the request num actual.\n+     *\n+     * @return the request num actual\n+     */\n+    public Integer getRequestNumActual() {\n+        return requestNumActual;\n+    }\n+\n+    /**\n+     * Sets the request num actual.\n+     *\n+     * @param requestNumActual\n+     *            the new request num actual\n+     */\n+    public void setRequestNumActual(Integer requestNumActual) {\n+        this.requestNumActual = requestNumActual;\n+    }\n+\n+    /**\n+     * Gets the responsed num.\n+     *\n+     * @return the responsed num\n+     */\n+    public Integer getResponsedNum() {\n+        return responsedNum;\n+    }\n+\n+    /**\n+     * Sets the responsed num.\n+     *\n+     * @param responsedNum\n+     *            the new responsed num\n+     */\n+    public void setResponsedNum(Integer responsedNum) {\n+        this.responsedNum = responsedNum;\n+    }\n+\n+    /**\n+     * Gets the response context.\n+     *\n+     * @return the response context\n+     */\n+    public Map<String, Object> getResponseContext() {\n+        return responseContext;\n+    }\n+\n+    /**\n+     * Sets the response context.\n+     *\n+     * @param responseContext\n+     *            the response context\n+     */\n+    public void setResponseContext(Map<String, Object> responseContext) {\n+        this.responseContext = responseContext;\n+    }\n+\n+    /**\n+     * Gets the state.\n+     *\n+     * @return the state\n+     */\n+    public String getState() {\n+        return state;\n+    }\n+\n+    /**\n+     * Sets the state.\n+     *\n+     * @param state\n+     *            the new state\n+     */\n+    public void setState(String state) {\n+        this.state = state;\n+    }\n+\n+    /**\n+     * Gets the handler.\n+     *\n+     * @return the handler\n+     */\n+    public ParallecResponseHandler getHandler() {\n+        return handler;\n+    }\n+\n+    /**\n+     * Sets the handler.\n+     *\n+     * @param handler\n+     *            the new handler\n+     */\n+    public void setHandler(ParallecResponseHandler handler) {\n+        this.handler = handler;\n+    }\n+\n+    /**\n+     * Gets the parallel task result.\n+     *\n+     * @return the parallel task result\n+     */\n+    public Map<String, NodeReqResponse> getParallelTaskResult() {\n+        return parallelTaskResult;\n+    }\n+\n+    /**\n+     * Sets the parallel task result.\n+     *\n+     * @param parallelTaskResult\n+     *            the parallel task result\n+     */\n+    public void setParallelTaskResult(\n+            Map<String, NodeReqResponse> parallelTaskResult) {\n+        this.parallelTaskResult = parallelTaskResult;\n+    }\n+\n+    /**\n+     * Gets the command meta.\n+     *\n+     * @return the command meta\n+     */\n+    public HttpMeta getCommandMeta() {\n+        return commandMeta;\n+    }\n+\n+    /**\n+     * Sets the command meta.\n+     *\n+     * @param commandMeta\n+     *            the new command meta\n+     */\n+    public void setCommandMeta(HttpMeta commandMeta) {\n+        this.commandMeta = commandMeta;\n+    }\n+\n+    /**\n+     * Gets the target host meta.\n+     *\n+     * @return the target host meta\n+     */\n+    public TargetHostMeta getTargetHostMeta() {\n+        return targetHostMeta;\n+    }\n+\n+    /**\n+     * Sets the target host meta.\n+     *\n+     * @param targetHostMeta\n+     *            the new target host meta\n+     */\n+    public void setTargetHostMeta(TargetHostMeta targetHostMeta) {\n+        this.targetHostMeta = targetHostMeta;\n+    }\n+\n+    /**\n+     * Gets the ssh meta.\n+     *\n+     * @return the ssh meta\n+     */\n+    public SshMeta getSshMeta() {\n+        return sshMeta;\n+    }\n+\n+    /**\n+     * Sets the ssh meta.\n+     *\n+     * @param sshMeta\n+     *            the new ssh meta\n+     */\n+    public void setSshMeta(SshMeta sshMeta) {\n+        this.sshMeta = sshMeta;\n+    }\n+\n+    /**\n+     * Gets the request replacement type.\n+     *\n+     * @return the request replacement type\n+     */\n+    public RequestReplacementType getRequestReplacementType() {\n+        return requestReplacementType;\n+    }\n+\n+    /**\n+     * Sets the request replacement type.\n+     *\n+     * @param requestReplacementType\n+     *            the new request replacement type\n+     */\n+    public void setRequestReplacementType(\n+            RequestReplacementType requestReplacementType) {\n+        this.requestReplacementType = requestReplacementType;\n+    }\n+\n+    /**\n+     * Checks if is pollable.\n+     *\n+     * @return true, if is pollable\n+     */\n+    public boolean isPollable() {\n+        return isPollable;\n+    }\n+\n+    /**\n+     * Sets the pollable.\n+     *\n+     * @param isPollable\n+     *            the new pollable\n+     */\n+    public void setPollable(boolean isPollable) {\n+        this.isPollable = isPollable;\n+    }\n+\n+    /**\n+     * Gets the http poller processor.\n+     *\n+     * @return the http poller processor\n+     */\n+    public HttpPollerProcessor getHttpPollerProcessor() {\n+        return httpPollerProcessor;\n+    }\n+\n+    /**\n+     * Sets the http poller processor.\n+     *\n+     * @param httpPollerProcessor\n+     *            the new http poller processor\n+     */\n+    public void setHttpPollerProcessor(HttpPollerProcessor httpPollerProcessor) {\n+        this.httpPollerProcessor = httpPollerProcessor;\n+    }\n+\n+    /**\n+     * Gets the task error metas.\n+     *\n+     * @return the task error metas\n+     */\n+    public List<TaskErrorMeta> getTaskErrorMetas() {\n+        return taskErrorMetas;\n+    }\n+\n+    /**\n+     * Gets the replacement var map node specific.\n+     *\n+     * @return the replacement var map node specific\n+     */\n+    public Map<String, StrStrMap> getReplacementVarMapNodeSpecific() {\n+        return replacementVarMapNodeSpecific;\n+    }\n+\n+    /**\n+     * Gets the replacement var map.\n+     *\n+     * @return the replacement var map\n+     */\n+    public Map<String, String> getReplacementVarMap() {\n+        return replacementVarMap;\n+    }\n+\n+    /**\n+     * Gets the task id.\n+     *\n+     * @return the task id\n+     */\n+    public String getTaskId() {\n+        return taskId;\n+    }\n+\n+    /**\n+     * Sets the task id.\n+     *\n+     * @param taskId\n+     *            the new task id\n+     */\n+    public void setTaskId(String taskId) {\n+        this.taskId = taskId;\n+    }\n+\n+    public String getSubmitTime() {\n+        return submitTime;\n+    }\n+\n+    public void setSubmitTime(String submitTime) {\n+        this.submitTime = submitTime;\n+    }\n+\n+    public String getExecuteStartTime() {\n+        return executeStartTime;\n+    }\n+\n+    public void setExecuteStartTime(String executeStartTime) {\n+        this.executeStartTime = executeStartTime;\n+    }\n+\n+    public String getExecutionEndTime() {\n+        return executionEndTime;\n+    }\n+\n+    public void setExecutionEndTime(String executionEndTime) {\n+        this.executionEndTime = executionEndTime;\n+    }\n+\n+    public double getDurationSec() {\n+        return durationSec;\n+    }\n+\n+    public void setDurationSec(double durationSec) {\n+        this.durationSec = durationSec;\n+    }\n+\n+    public TcpMeta getTcpMeta() {\n+        return tcpMeta;\n+    }\n+\n+    public void setTcpMeta(TcpMeta tcpMeta) {\n+        this.tcpMeta = tcpMeta;\n+    }\n+\n+}"
            },
            {
                "sha": "51f28e5207a08a351b874caefa2158a7d8749c39",
                "filename": "src/main/java/io/parallec/core/task/ParallelTaskManager.java",
                "status": "added",
                "additions": 379,
                "deletions": 0,
                "changes": 379,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Ftask%2FParallelTaskManager.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Ftask%2FParallelTaskManager.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Ftask%2FParallelTaskManager.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,379 @@\n+/*  \n+Copyright [2013-2015] eBay Software Foundation\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+    http://www.apache.org/licenses/LICENSE-2.0\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+ */\n+package io.parallec.core.task;\n+\n+import io.parallec.core.ParallelTask;\n+import io.parallec.core.actor.ActorConfig;\n+import io.parallec.core.actor.ExecutionManager;\n+import io.parallec.core.actor.message.InitialRequestToManager;\n+import io.parallec.core.actor.message.ResponseFromManager;\n+import io.parallec.core.bean.StrStrMap;\n+import io.parallec.core.commander.workflow.InternalDataProvider;\n+import io.parallec.core.commander.workflow.VarReplacementProvider;\n+import io.parallec.core.config.ParallecGlobalConfig;\n+import io.parallec.core.task.TaskErrorMeta.TaskErrorType;\n+import io.parallec.core.util.DaemonThreadFactory;\n+import io.parallec.core.util.PcDateUtils;\n+\n+import java.util.Map;\n+import java.util.Map.Entry;\n+import java.util.Queue;\n+import java.util.concurrent.ConcurrentHashMap;\n+import java.util.concurrent.ConcurrentLinkedQueue;\n+import java.util.concurrent.Executors;\n+import java.util.concurrent.ScheduledExecutorService;\n+import java.util.concurrent.TimeUnit;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import scala.concurrent.Await;\n+import scala.concurrent.Future;\n+import scala.concurrent.duration.Duration;\n+import scala.concurrent.duration.FiniteDuration;\n+import akka.actor.ActorRef;\n+import akka.actor.Props;\n+import akka.pattern.Patterns;\n+import akka.util.Timeout;\n+\n+/**\n+ * \n+ * The class to manage the current running tasks and wait queue.  (Singleton) \n+ * {@link #generateUpdateExecuteTask } is the key function to execute a ParallelTask.\n+ * \n+ * It has access to the waiting task queue and the currently running map of ParallelTasks.\n+ * \n+ * @author Yuanteng Jeff Pei\n+ * @author Teng Song \n+ * \n+ */\n+public class ParallelTaskManager {\n+\n+    /** The logger. */\n+    // init in constructor\n+    private static Logger logger;\n+\n+    /** The Constant instance. */\n+    private final static ParallelTaskManager instance = new ParallelTaskManager();\n+\n+    /** The scheduler. */\n+    private ScheduledExecutorService scheduler;\n+\n+    /** The wait q. */\n+    private final Queue<ParallelTask> waitQ = new ConcurrentLinkedQueue<ParallelTask>();\n+   \n+    /** The inprogress task map. */\n+    // Key is JobID; this is the one before completes\n+    private final ConcurrentHashMap<String, ParallelTask> inprogressTaskMap = new ConcurrentHashMap<String, ParallelTask>();\n+\n+    \n+    /**\n+     * Gets the single instance of ParallelTaskManager.\n+     *\n+     * @return single instance of ParallelTaskManager\n+     */\n+    public static ParallelTaskManager getInstance() {\n+        return instance;\n+    }\n+    /**\n+     * Instantiates a new parallel task manager.\n+     */\n+    private ParallelTaskManager() {\n+        super();\n+\n+        // as a singleton this may be unnecessary; added just for sonar\n+        synchronized (this) {\n+            logger = LoggerFactory.getLogger(ParallelTaskManager.class);\n+        }\n+\n+        initTaskScheduler();\n+        logger.info(\"Initialized ParallelTaskManager...\");\n+\n+    }\n+\n+    /**\n+     * as it is daemon thread, save to use. no need to stop either.\n+     */\n+    public void initTaskScheduler() {\n+\n+        if (scheduler == null) {\n+            // TODO\n+            scheduler = Executors\n+                    .newSingleThreadScheduledExecutor(DaemonThreadFactory\n+                            .getInstance());\n+            CapacityAwareTaskScheduler runner = new CapacityAwareTaskScheduler();\n+            scheduler.scheduleAtFixedRate(runner,\n+                    ParallecGlobalConfig.schedulerInitDelay,\n+                    ParallecGlobalConfig.schedulerCheckInterval,\n+                    TimeUnit.MILLISECONDS);\n+            logger.info(\"initialized daemon task scheduler to evaluate waitQ tasks.\");\n+        }\n+    }\n+\n+ \n+\n+\n+    // waiting queue\n+\n+    /**\n+     * Gets the task from in progress map.\n+     *\n+     * @param jobId\n+     *            the job id\n+     * @return the task from in progress map\n+     */\n+    public ParallelTask getTaskFromInProgressMap(String jobId) {\n+        if (inprogressTaskMap.containsKey(jobId) == false)\n+            return null;\n+        return inprogressTaskMap.get(jobId);\n+    }\n+\n+    /**\n+     * get current total used capacity.\n+     *\n+     * @return the total used capacity\n+     */\n+    public int getTotalUsedCapacity() {\n+        int totalCapacity = 0;\n+        for (Entry<String, ParallelTask> entry : inprogressTaskMap.entrySet()) {\n+            ParallelTask task = entry.getValue();\n+            if (task != null)\n+                totalCapacity += task.capacityUsed();\n+\n+        }\n+        return totalCapacity;\n+    }\n+\n+    /**\n+     * Gets the remaining capacity.\n+     *\n+     * @return the remaining capacity\n+     */\n+    public int getRemainingCapacity() {\n+\n+        return ParallecGlobalConfig.maxCapacity - getTotalUsedCapacity();\n+    }\n+\n+    /**\n+     * when create new job, always add this to the queue.\n+     *\n+     * @param jobId\n+     *            the job id\n+     * @param task\n+     *            the task\n+     */\n+    public synchronized void addTaskToInProgressMap(String jobId,\n+            ParallelTask task) {\n+        inprogressTaskMap.put(jobId, task);\n+    }\n+\n+    /**\n+     * Removes the task from in progress map.\n+     *\n+     * @param jobId\n+     *            the job id\n+     */\n+    public synchronized void removeTaskFromInProgressMap(String jobId) {\n+        inprogressTaskMap.remove(jobId);\n+    }\n+\n+    /**\n+     * also clean the waitQ.\n+     */\n+    public synchronized void cleanInprogressJobMap() {\n+        inprogressTaskMap.clear();\n+    }\n+\n+    /**\n+     * Clean wait task queue.\n+     */\n+    public synchronized void cleanWaitTaskQueue() {\n+\n+        for (ParallelTask task : waitQ) {\n+            task.setState(ParallelTaskState.COMPLETED_WITH_ERROR);\n+            task.getTaskErrorMetas().add(\n+                    new TaskErrorMeta(TaskErrorType.USER_CANCELED, \"NA\"));\n+            logger.info(\n+                    \"task {} removed from wait q. This task has been marked as USER CANCELED.\",\n+                    task.getTaskId());\n+\n+        }\n+\n+        waitQ.clear();\n+    }\n+\n+    /**\n+     * Removes the task from wait q.\n+     *\n+     * @param taskTobeRemoved\n+     *            the task tobe removed\n+     * @return true, if successful\n+     */\n+    public synchronized boolean removeTaskFromWaitQ(ParallelTask taskTobeRemoved) {\n+        boolean removed = false;\n+        for (ParallelTask task : waitQ) {\n+            if (task.getTaskId() == taskTobeRemoved.getTaskId()) {\n+\n+                task.setState(ParallelTaskState.COMPLETED_WITH_ERROR);\n+                task.getTaskErrorMetas().add(\n+                        new TaskErrorMeta(TaskErrorType.USER_CANCELED, \"NA\"));\n+                logger.info(\n+                        \"task {} removed from wait q. This task has been marked as USER CANCELED.\",\n+                        task.getTaskId());\n+                removed = true;\n+            }\n+        }\n+\n+        return removed;\n+    }\n+\n+    /**\n+     * key function to execute a parallel task\n+     *\n+     * @param task\n+     *            the parallel task\n+     * @return the batch response from manager\n+     */\n+    public ResponseFromManager generateUpdateExecuteTask(ParallelTask task) {\n+\n+        // add to map now; as can only pass final\n+        ParallelTaskManager.getInstance().addTaskToInProgressMap(\n+                task.getTaskId(), task);\n+        logger.info(\"Added task {} to the running inprogress map...\",\n+                task.getTaskId());\n+\n+        boolean useReplacementVarMap = false;\n+        boolean useReplacementVarMapNodeSpecific = false;\n+        Map<String, StrStrMap> replacementVarMapNodeSpecific = null;\n+        Map<String, String> replacementVarMap = null;\n+\n+        ResponseFromManager batchResponseFromManager = null;\n+\n+        switch (task.getRequestReplacementType()) {\n+        case UNIFORM_VAR_REPLACEMENT:\n+            useReplacementVarMap = true;\n+            useReplacementVarMapNodeSpecific = false;\n+            replacementVarMap = task.getReplacementVarMap();\n+            break;\n+        case TARGET_HOST_SPECIFIC_VAR_REPLACEMENT:\n+            useReplacementVarMap = false;\n+            useReplacementVarMapNodeSpecific = true;\n+            replacementVarMapNodeSpecific = task\n+                    .getReplacementVarMapNodeSpecific();\n+            break;\n+        case NO_REPLACEMENT:\n+            useReplacementVarMap = false;\n+            useReplacementVarMapNodeSpecific = false;\n+            break;\n+        default:\n+            logger.error(\"error request replacement type. default as no replacement\");\n+        }// end switch\n+\n+        // generate content in nodedata\n+        InternalDataProvider dp = InternalDataProvider.getInstance();\n+        dp.genNodeDataMap(task);\n+\n+        VarReplacementProvider.getInstance()\n+                .updateRequestWithReplacement(task, useReplacementVarMap,\n+                        replacementVarMap, useReplacementVarMapNodeSpecific,\n+                        replacementVarMapNodeSpecific);\n+\n+        batchResponseFromManager = \n+                sendTaskToExecutionManager(task);\n+\n+        removeTaskFromInProgressMap(task.getTaskId());\n+        logger.info(\n+                \"Removed task {} from the running inprogress map... \"\n+                        + \". This task should be garbage collected if there are no other pointers.\",\n+                task.getTaskId());\n+        return batchResponseFromManager;\n+\n+    }// end func.\n+\n+    /**\n+     * Gets the wait q.\n+     *\n+     * @return the wait q\n+     */\n+    public Queue<ParallelTask> getWaitQ() {\n+        return waitQ;\n+    }\n+    public ConcurrentHashMap<String, ParallelTask> getInprogressTaskMap() {\n+        return inprogressTaskMap;\n+    }\n+    \n+    \n+    /**\n+     * Send parallel task to execution manager.\n+     *\n+     * @param task\n+     *            the parallel task\n+     * @return the batch response from manager\n+     */\n+    @SuppressWarnings(\"deprecation\")\n+    public ResponseFromManager sendTaskToExecutionManager(ParallelTask task) {\n+\n+        ResponseFromManager commandResponseFromManager = null;\n+        ActorRef executionManager = null;\n+        try {\n+            // Start new job\n+            logger.info(\"!!STARTED sendAgentCommandToManager : \"\n+                    + task.getTaskId() + \" at \"\n+                    + PcDateUtils.getNowDateTimeStr());\n+\n+            // Get the singleton actor system\n+            // create the master\n+            // command smart upgrade:\n+            executionManager = ActorConfig.createAndGetActorSystem().actorOf(\n+                    Props.create(ExecutionManager.class, task),\n+                    \"ExecutionManager-\" + task.getTaskId());\n+\n+            final FiniteDuration duration = Duration.create(task.getConfig()\n+                    .getTimeoutAskManagerSec(), TimeUnit.SECONDS);\n+            // Timeout timeout = new\n+            // Timeout(FiniteDuration.parse(\"300 seconds\"));\n+            Future<Object> future = Patterns.ask(executionManager,\n+                    new InitialRequestToManager(task), new Timeout(duration));\n+\n+            // set ref\n+            task.executionManager = executionManager;\n+\n+            commandResponseFromManager = (ResponseFromManager) Await.result(\n+                    future, duration);\n+\n+            logger.info(\"!!COMPLETED sendTaskToExecutionManager : \"\n+                    + task.getTaskId() + \" at \"\n+                    + PcDateUtils.getNowDateTimeStr()\n+                    + \"  \\t\\t  GenericResponseMap in future size: \"\n+                    + commandResponseFromManager.getResponseCount());\n+\n+        } catch (Exception ex) {\n+            logger.error(\"Exception in sendTaskToExecutionManager {} details {}: \",\n+                    ex, ex);\n+\n+        } finally {\n+            // stop the manager\n+            if (executionManager != null && !executionManager.isTerminated()) {\n+                ActorConfig.createAndGetActorSystem().stop(executionManager);\n+            }\n+\n+            if (task.getConfig().isAutoSaveLogToLocal()) {\n+                task.saveLogToLocal();\n+            }\n+\n+        }\n+\n+        return commandResponseFromManager;\n+\n+    }// end func.\n+}"
            },
            {
                "sha": "911079799bf8987913b36b50bedc1f2ff1fa1870",
                "filename": "src/main/java/io/parallec/core/task/ParallelTaskState.java",
                "status": "added",
                "additions": 18,
                "deletions": 0,
                "changes": 18,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Ftask%2FParallelTaskState.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Ftask%2FParallelTaskState.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Ftask%2FParallelTaskState.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,18 @@\n+package io.parallec.core.task;\n+\n+// Job Id to Job Data\n+/**\n+ * The Enum ParallelTaskState.\n+ */\n+// finishNotGathered is slave are ready but not send to Director\n+public enum ParallelTaskState {\n+\n+    /** The waiting. */\n+    WAITING,\n+    /** The in progress. */\n+    IN_PROGRESS,\n+    /** The completed without error. */\n+    COMPLETED_WITHOUT_ERROR,\n+    /** The completed with error. */\n+    COMPLETED_WITH_ERROR\n+}\n\\ No newline at end of file"
            },
            {
                "sha": "c08a529af8dcf19bc48ea982b97b812ad09b60ab",
                "filename": "src/main/java/io/parallec/core/task/RequestReplacementType.java",
                "status": "added",
                "additions": 28,
                "deletions": 0,
                "changes": 28,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Ftask%2FRequestReplacementType.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Ftask%2FRequestReplacementType.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Ftask%2FRequestReplacementType.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,28 @@\n+/*  \n+Copyright [2013-2015] eBay Software Foundation\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+    http://www.apache.org/licenses/LICENSE-2.0\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+ */\n+package io.parallec.core.task;\n+\n+// TODO: Auto-generated Javadoc\n+/**\n+ * The Enum RequestReplacementType.\n+ */\n+public enum RequestReplacementType {\n+\n+    /** The no variable replacement. */\n+    NO_REPLACEMENT,\n+    /** The uniform variable replacement. */\n+    UNIFORM_VAR_REPLACEMENT,\n+    /** The target host specific variable replacement. */\n+    TARGET_HOST_SPECIFIC_VAR_REPLACEMENT\n+\n+}\n\\ No newline at end of file"
            },
            {
                "sha": "be151a4ec83f274582a170c347c8f09b96053f03",
                "filename": "src/main/java/io/parallec/core/task/TaskErrorMeta.java",
                "status": "added",
                "additions": 162,
                "deletions": 0,
                "changes": 162,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Ftask%2FTaskErrorMeta.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Ftask%2FTaskErrorMeta.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Ftask%2FTaskErrorMeta.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,162 @@\n+/*  \n+Copyright [2013-2015] eBay Software Foundation\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+    http://www.apache.org/licenses/LICENSE-2.0\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+ */\n+package io.parallec.core.task;\n+\n+import io.parallec.core.util.PcDateUtils;\n+\n+// TODO: Auto-generated Javadoc\n+/**\n+ * The Class TaskErrorMeta.\n+ */\n+public class TaskErrorMeta {\n+\n+    /**\n+     * The Enum TaskErrorType.\n+     */\n+    public enum TaskErrorType {\n+\n+        /** The validation error. */\n+        VALIDATION_ERROR,\n+        /** The global timeout. */\n+        GLOBAL_TIMEOUT,\n+        /** The command manager error. */\n+        COMMAND_MANAGER_ERROR,\n+        /** User canceled */\n+        USER_CANCELED,\n+        /** The unknown. */\n+        UNKNOWN\n+\n+    }\n+\n+    /** The type. */\n+    private TaskErrorType type;\n+\n+    /** The error time. */\n+    private String errorTime;\n+\n+    /** The throwable. */\n+    private Throwable throwable;\n+\n+    /** The details. */\n+    private String details;\n+\n+    /**\n+     * Instantiates a new task error meta.\n+     *\n+     * @param type\n+     *            the type\n+     * @param details\n+     *            the details\n+     */\n+    public TaskErrorMeta(TaskErrorType type, String details) {\n+\n+        this.type = type;\n+        this.errorTime = PcDateUtils.getNowDateTimeStrStandard();\n+        this.details = details;\n+    }\n+\n+    /**\n+     * Instantiates a new task error meta.\n+     *\n+     * @param type\n+     *            the type\n+     * @param details\n+     *            the details\n+     * @param throwable\n+     *            the throwable\n+     */\n+    public TaskErrorMeta(TaskErrorType type, String details, Throwable throwable) {\n+\n+        this.type = type;\n+        this.errorTime = PcDateUtils.getNowDateTimeStrStandard();\n+        this.details = details;\n+        this.throwable = throwable;\n+    }\n+\n+    /**\n+     * Gets the type.\n+     *\n+     * @return the type\n+     */\n+    public TaskErrorType getType() {\n+        return type;\n+    }\n+\n+    /**\n+     * Sets the type.\n+     *\n+     * @param type\n+     *            the new type\n+     */\n+    public void setType(TaskErrorType type) {\n+        this.type = type;\n+    }\n+\n+    /**\n+     * Gets the error time.\n+     *\n+     * @return the error time\n+     */\n+    public String getErrorTime() {\n+        return errorTime;\n+    }\n+\n+    /**\n+     * Sets the error time.\n+     *\n+     * @param errorTime\n+     *            the new error time\n+     */\n+    public void setErrorTime(String errorTime) {\n+        this.errorTime = errorTime;\n+    }\n+\n+    /**\n+     * Gets the throwable.\n+     *\n+     * @return the throwable\n+     */\n+    public Throwable getThrowable() {\n+        return throwable;\n+    }\n+\n+    /**\n+     * Sets the throwable.\n+     *\n+     * @param throwable\n+     *            the new throwable\n+     */\n+    public void setThrowable(Throwable throwable) {\n+        this.throwable = throwable;\n+    }\n+\n+    /**\n+     * Gets the details.\n+     *\n+     * @return the details\n+     */\n+    public String getDetails() {\n+        return details;\n+    }\n+\n+    /**\n+     * Sets the details.\n+     *\n+     * @param details\n+     *            the new details\n+     */\n+    public void setDetails(String details) {\n+        this.details = details;\n+    }\n+\n+}"
            },
            {
                "sha": "a4a946ffa2641c5180240cab186fe31d4995f6a7",
                "filename": "src/main/java/io/parallec/core/taskbuilder/targethosts/ITargetHostsBuilder.java",
                "status": "added",
                "additions": 107,
                "deletions": 0,
                "changes": 107,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Ftaskbuilder%2Ftargethosts%2FITargetHostsBuilder.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Ftaskbuilder%2Ftargethosts%2FITargetHostsBuilder.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Ftaskbuilder%2Ftargethosts%2FITargetHostsBuilder.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,107 @@\n+/*  \n+Copyright [2013-2015] eBay Software Foundation\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+    http://www.apache.org/licenses/LICENSE-2.0\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+ */\n+package io.parallec.core.taskbuilder.targethosts;\n+\n+import io.parallec.core.HostsSourceType;\n+import io.parallec.core.exception.TargetHostsLoadException;\n+\n+import java.util.List;\n+\n+/**\n+ * The Interface to build the target hosts.\n+ * Will remove duplicates. \n+ */\n+public interface ITargetHostsBuilder {\n+\n+    /**\n+     * Sets the target hosts from list. \n+     * Will remove duplicate from it.\n+     * \n+     * Will create a new array list because the original one may be unmodifiable.\n+     *\n+     * @param targetHosts\n+     *            the target hosts\n+     * @return the list\n+     */\n+    public List<String> setTargetHostsFromList(List<String> targetHosts);\n+\n+    /**\n+     * Sets the target hosts from string.\n+     *\n+     * @param targetHostsStr\n+     *            the target hosts str\n+     * @return the list\n+     */\n+    public List<String> setTargetHostsFromString(String targetHostsStr);\n+\n+    /**\n+     * Sets the target hosts from json path.\n+     *\n+     * @param jsonPath\n+     *            the json path\n+     * @param sourcePath\n+     *            the source path\n+     * @param sourceType\n+     *            the source type\n+     * @return the list\n+     * @throws TargetHostsLoadException\n+     *             the target hosts load exception\n+     */\n+    public List<String> setTargetHostsFromJsonPath(String jsonPath,\n+            String sourcePath, HostsSourceType sourceType)\n+            throws TargetHostsLoadException;\n+\n+    /**\n+     * Sets the target hosts from line by line text.\n+     *\n+     * @param sourcePath\n+     *            the source path\n+     * @param sourceType\n+     *            the source type\n+     * @return the list\n+     * @throws TargetHostsLoadException\n+     *             the target hosts load exception\n+     */\n+    // read from a URL/File line by line\n+    public List<String> setTargetHostsFromLineByLineText(String sourcePath,\n+            HostsSourceType sourceType) throws TargetHostsLoadException;\n+\n+    /**\n+     * Sets the target hosts from cms query url.\n+     *\n+     * @param cmsQueryUrl\n+     *            the cms query url\n+     * @return the list\n+     * @throws TargetHostsLoadException\n+     *             the target hosts load exception\n+     */\n+    // from query of CMS (CMS is internal name of the project YiDB. aka YiDB\n+    // http://yidb.org/ );\n+    public List<String> setTargetHostsFromCmsQueryUrl(String cmsQueryUrl)\n+            throws TargetHostsLoadException;\n+\n+    /**\n+     * Sets the target hosts from cms query url.\n+     *\n+     * @param cmsQueryUrl\n+     *            the cms query url\n+     * @param projection\n+     *            the projection\n+     * @return the list\n+     * @throws TargetHostsLoadException\n+     *             the target hosts load exception\n+     */\n+    public List<String> setTargetHostsFromCmsQueryUrl(String cmsQueryUrl,\n+            String projection) throws TargetHostsLoadException;\n+\n+}"
            },
            {
                "sha": "d479be255bebb79f000fed8fb5473c8b955ca816",
                "filename": "src/main/java/io/parallec/core/taskbuilder/targethosts/TargetHostsBuilder.java",
                "status": "added",
                "additions": 229,
                "deletions": 0,
                "changes": 229,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Ftaskbuilder%2Ftargethosts%2FTargetHostsBuilder.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Ftaskbuilder%2Ftargethosts%2FTargetHostsBuilder.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Ftaskbuilder%2Ftargethosts%2FTargetHostsBuilder.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,229 @@\n+/*  \n+Copyright [2013-2015] eBay Software Foundation\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+    http://www.apache.org/licenses/LICENSE-2.0\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+ */\n+package io.parallec.core.taskbuilder.targethosts;\n+\n+import io.parallec.core.HostsSourceType;\n+import io.parallec.core.exception.TargetHostsLoadException;\n+import io.parallec.core.util.PcFileNetworkIoUtils;\n+import io.parallec.core.util.PcTargetHostsUtils;\n+\n+import java.io.IOException;\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import com.jayway.jsonpath.JsonPath;\n+\n+// TODO: Auto-generated Javadoc\n+/**\n+ * The Class TargetHostsBuilder.\n+ */\n+public class TargetHostsBuilder implements ITargetHostsBuilder {\n+\n+    /** The logger. */\n+    private static Logger logger = LoggerFactory\n+            .getLogger(TargetHostsBuilder.class);\n+\n+    /**\n+     * Instantiates a new target hosts builder.\n+     */\n+    public TargetHostsBuilder() {\n+    }\n+\n+    /**\n+     * note that for read from file, this will just load all to memory. not fit\n+     * if need to read a very large file. However for getting the host name.\n+     * normally it is fine.\n+     * \n+     * for reading large file, should use iostream.\n+     *\n+     * @param sourcePath\n+     *            the source path\n+     * @param sourceType\n+     *            the source type\n+     * @return the content from path\n+     * @throws IOException\n+     *             Signals that an I/O exception has occurred.\n+     */\n+    private String getContentFromPath(String sourcePath,\n+            HostsSourceType sourceType) throws IOException {\n+\n+        String res = \"\";\n+\n+        if (sourceType == HostsSourceType.LOCAL_FILE) {\n+            res = PcFileNetworkIoUtils.readFileContentToString(sourcePath);\n+        } else if (sourceType == HostsSourceType.URL) {\n+            res = PcFileNetworkIoUtils.readStringFromUrlGeneric(sourcePath);\n+        }\n+        return res;\n+\n+    }\n+\n+    /*\n+     * (non-Javadoc)\n+     * \n+     * @see io.parallec.core.taskbuilder.targethosts.ITargetHostsBuilder#\n+     * setTargetHostsFromList(java.util.List)\n+     */\n+    @Override\n+    public List<String> setTargetHostsFromList(List<String> targetHosts) {\n+\n+        List<String> targetHostsNew = new ArrayList<String>();\n+        targetHostsNew.addAll(targetHosts);\n+        int dupSize = PcTargetHostsUtils.removeDuplicateNodeList(targetHostsNew);\n+        if (dupSize > 0) {\n+            logger.info(\"get target hosts with duplicated hosts of \" + dupSize\n+                    + \" with new total size of \" + targetHosts.size());\n+        }\n+        return targetHostsNew;\n+    }\n+\n+    /*\n+     * (non-Javadoc)\n+     * \n+     * @see io.parallec.core.taskbuilder.targethosts.ITargetHostsBuilder#\n+     * setTargetHostsFromString(java.lang.String)\n+     */\n+    @Override\n+    public List<String> setTargetHostsFromString(String targetHostsStr) {\n+\n+        List<String> targetHosts = new ArrayList<String>();\n+        if (targetHostsStr != null) {\n+            boolean removeDuplicate = true;\n+            targetHosts.addAll(PcTargetHostsUtils\n+                    .getNodeListFromStringLineSeperateOrSpaceSeperate(\n+                            targetHostsStr, removeDuplicate));\n+        }\n+\n+        return targetHosts;\n+    }\n+\n+    /**\n+     * TODO https://github.com/jayway/JsonPath\n+     *\n+     * @param jsonPath\n+     *            the json path\n+     * @param sourcePath\n+     *            the source path\n+     * @param sourceType\n+     *            the source type\n+     * @return the list\n+     * @throws TargetHostsLoadException\n+     *             the target hosts load exception\n+     */\n+    @Override\n+    public List<String> setTargetHostsFromJsonPath(String jsonPath,\n+            String sourcePath, HostsSourceType sourceType)\n+            throws TargetHostsLoadException {\n+\n+        List<String> targetHosts = new ArrayList<String>();\n+        try {\n+            String content = getContentFromPath(sourcePath, sourceType);\n+            targetHosts = JsonPath.read(content, jsonPath);\n+\n+        } catch (IOException e) {\n+            throw new TargetHostsLoadException(\"IEException when reading  \"\n+                    + sourcePath, e);\n+        }\n+\n+        return targetHosts;\n+    }\n+\n+    /**\n+     * get target hosts from line by line.\n+     *\n+     * @param sourcePath\n+     *            the source path\n+     * @param sourceType\n+     *            the source type\n+     * @return the list\n+     * @throws TargetHostsLoadException\n+     *             the target hosts load exception\n+     */\n+    @Override\n+    public List<String> setTargetHostsFromLineByLineText(String sourcePath,\n+            HostsSourceType sourceType) throws TargetHostsLoadException {\n+\n+        List<String> targetHosts = new ArrayList<String>();\n+        try {\n+            String content = getContentFromPath(sourcePath, sourceType);\n+\n+            targetHosts = setTargetHostsFromString(content);\n+\n+        } catch (IOException e) {\n+            throw new TargetHostsLoadException(\"IEException when reading  \"\n+                    + sourcePath, e);\n+        }\n+\n+        return targetHosts;\n+\n+    }\n+\n+    /*\n+     * (non-Javadoc)\n+     * \n+     * @see io.parallec.core.taskbuilder.targethosts.ITargetHostsBuilder#\n+     * setTargetHostsFromCmsQueryUrl(java.lang.String)\n+     */\n+    @Override\n+    public List<String> setTargetHostsFromCmsQueryUrl(String cmsQueryUrl)\n+            throws TargetHostsLoadException {\n+        List<String> targetHosts = new ArrayList<String>();\n+        try {\n+\n+            logger.info(\"will use default project label\");\n+            targetHosts = setTargetHostsFromCmsQueryUrl(cmsQueryUrl, \"label\");\n+\n+        } catch (Exception e) {\n+            throw new TargetHostsLoadException(\"error when reading  \"\n+                    + cmsQueryUrl, e);\n+        }\n+\n+        return targetHosts;\n+\n+    }\n+\n+    /*\n+     * (non-Javadoc)\n+     * \n+     * @see io.parallec.core.taskbuilder.targethosts.ITargetHostsBuilder#\n+     * setTargetHostsFromCmsQueryUrl(java.lang.String, java.lang.String)\n+     */\n+    @Override\n+    public List<String> setTargetHostsFromCmsQueryUrl(String cmsQueryUrl,\n+            String projection) {\n+\n+        List<String> targetHosts = new ArrayList<String>();\n+\n+        try {\n+\n+            if (projection == null || projection.isEmpty()) {\n+                logger.info(\"will use default project label\");\n+                projection = \"label\";\n+            }\n+            TargetHostsBuilderHelperCms helper = new TargetHostsBuilderHelperCms();\n+            targetHosts = helper.getNodeListCompleteURLForCMS(cmsQueryUrl,\n+                    projection);\n+\n+        } catch (Exception e) {\n+            throw new TargetHostsLoadException(\"error when reading  \"\n+                    + cmsQueryUrl, e);\n+        }\n+\n+        return targetHosts;\n+\n+    }\n+\n+}"
            },
            {
                "sha": "ce7fe5f33309f2b8115f115e6b4f1c6351c653a5",
                "filename": "src/main/java/io/parallec/core/taskbuilder/targethosts/TargetHostsBuilderHelperCms.java",
                "status": "added",
                "additions": 231,
                "deletions": 0,
                "changes": 231,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Ftaskbuilder%2Ftargethosts%2FTargetHostsBuilderHelperCms.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Ftaskbuilder%2Ftargethosts%2FTargetHostsBuilderHelperCms.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Ftaskbuilder%2Ftargethosts%2FTargetHostsBuilderHelperCms.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,231 @@\n+/*  \n+Copyright [2013-2015] eBay Software Foundation\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+    http://www.apache.org/licenses/LICENSE-2.0\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+ */\n+package io.parallec.core.taskbuilder.targethosts;\n+\n+import io.parallec.core.config.ParallecGlobalConfig;\n+import io.parallec.core.exception.TargetHostsLoadException;\n+import io.parallec.core.util.PcDateUtils;\n+import io.parallec.core.util.PcFileNetworkIoUtils;\n+import io.parallec.core.util.PcStringUtils;\n+import io.parallec.core.util.PcTargetHostsUtils;\n+\n+import java.io.BufferedReader;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.io.InputStreamReader;\n+import java.net.HttpURLConnection;\n+import java.net.MalformedURLException;\n+import java.net.URL;\n+import java.nio.charset.Charset;\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import org.codehaus.jettison.json.JSONArray;\n+import org.codehaus.jettison.json.JSONException;\n+import org.codehaus.jettison.json.JSONObject;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+// TODO: Auto-generated Javadoc\n+/**\n+ * load node from CMS.\n+ *\n+ * @author Yuanteng Jeff Pei\n+ */\n+public class TargetHostsBuilderHelperCms {\n+\n+    /** The logger. */\n+    static Logger logger = LoggerFactory\n+            .getLogger(TargetHostsBuilderHelperCms.class);\n+\n+    /** The Constant ADD_QUOTE. */\n+    public static final boolean ADD_QUOTE = true;\n+\n+    /**\n+     * 20141022.\n+     *\n+     * @param jObj\n+     *            the j obj\n+     * @param projectionStr\n+     *            the projection str\n+     * @return the FQDN value list cms\n+     * @throws JSONException\n+     *             the JSON exception\n+     */\n+    static List<String> getFQDNValueListCMS(JSONObject jObj,\n+            String projectionStr) throws JSONException {\n+        final List<String> labelList = new ArrayList<String>();\n+\n+        // default\n+        if (projectionStr == null || projectionStr.equalsIgnoreCase(\"NA\")) {\n+            projectionStr = \"resourceId\";\n+        }\n+\n+        if (!jObj.has(\"result\")) {\n+            logger.error(\"!!CMS_ERROR! result key is not in jOBJ in getFQDNValueListCMS!!: \\njObj:\"\n+                    + PcStringUtils.renderJson(jObj));\n+\n+            return labelList;\n+        }\n+        JSONArray jArr = (JSONArray) jObj.get(\"result\");\n+        if (jArr == null || jArr.length() == 0) {\n+            return labelList;\n+        }\n+        for (int i = 0; i < jArr.length(); ++i) {\n+            JSONObject agentObj = jArr.getJSONObject(i);\n+            // properties can be null\n+\n+            if (!agentObj.has(projectionStr)) {\n+                continue;\n+            }\n+            String label = (String) agentObj.get(projectionStr);\n+\n+            if (label != null && !label.trim().isEmpty()) {\n+                labelList.add(label);\n+            }\n+        }\n+\n+        return labelList;\n+    }\n+\n+    /**\n+     * removed header (only used for authorization for PP) 2015.08\n+     *\n+     * @param url\n+     *            the url\n+     * @return the JSON object\n+     * @throws MalformedURLException\n+     *             the malformed url exception\n+     * @throws IOException\n+     *             Signals that an I/O exception has occurred.\n+     * @throws JSONException\n+     *             the JSON exception\n+     */\n+    static JSONObject readJsonFromUrlWithCmsHeader(String url)\n+            throws MalformedURLException, IOException, JSONException {\n+        InputStream is = null;\n+\n+        JSONObject jObj = new JSONObject();\n+        try {\n+\n+            HttpURLConnection.setFollowRedirects(false);\n+            HttpURLConnection con = (HttpURLConnection) new URL(url).openConnection();\n+            con.setRequestMethod(\"GET\");\n+            con.setConnectTimeout(ParallecGlobalConfig.urlConnectionConnectTimeoutMillis);\n+            con.setReadTimeout(ParallecGlobalConfig.urlConnectionReadTimeoutMillis);\n+            is = con.getInputStream();\n+\n+            BufferedReader rd = new BufferedReader(new InputStreamReader(is,\n+                    Charset.forName(\"UTF-8\")));\n+            String jsonText = PcFileNetworkIoUtils.readAll(rd);\n+            jObj = new JSONObject(jsonText);\n+            rd.close();\n+\n+        } catch (Exception t) {\n+            logger.error(\"readJsonFromUrl() exception: \"\n+                    + t.getLocalizedMessage()\n+                    + PcDateUtils.getNowDateTimeStrStandard());\n+\n+        } finally {\n+            if (is != null) {\n+                is.close();\n+            }\n+        }\n+        return jObj;\n+    }\n+\n+\n+    /**\n+     * TODO : will be removed .\n+     *\n+     * @param url\n+     *            the url\n+     * @param projectionStr\n+     *            the projection str\n+     * @return the node list complete url for cms\n+     */\n+    public List<String> getNodeListCompleteURLForCMS(String url,\n+            String projectionStr) {\n+        List<String> nodes = new ArrayList<String>();\n+\n+        try {\n+\n+            int indexNextUrlStartPos = url.indexOf(\"/repositories/\");\n+            String cmsQueryUrlPrefix = url.substring(0, indexNextUrlStartPos);\n+\n+            // add 1st\n+            // updated 201501 for adding auth header.\n+            JSONObject jsonObject = readJsonFromUrlWithCmsHeader(url);\n+            nodes.addAll(getFQDNValueListCMS(jsonObject, projectionStr));\n+            JSONObject jsonObjectNext = jsonObject;\n+            Boolean hasMore = false;\n+            String hasMoreNextUrl = null;\n+            String KEY_HAS_MORE = \"hasmore\";\n+            String KEY_NEXT_PARENT = \"next\";\n+            String KEY_NEXT_URL = \"url\";\n+            do {\n+                /**\n+                 * 20141103: BEGIN: for loop to check if has more.\n+                 */\n+                hasMore = false;\n+                hasMoreNextUrl = null;\n+\n+                if (jsonObjectNext.has(KEY_HAS_MORE)) {\n+                    hasMore = jsonObjectNext.getBoolean(KEY_HAS_MORE);\n+                    if (jsonObjectNext.has(KEY_NEXT_PARENT)\n+                            && jsonObjectNext.getJSONObject(KEY_NEXT_PARENT)\n+                                    .has(KEY_NEXT_URL)) {\n+                        hasMoreNextUrl = jsonObjectNext.getJSONObject(\n+                                KEY_NEXT_PARENT).getString(KEY_NEXT_URL);\n+                    }\n+\n+                    // final check\n+                    if (hasMoreNextUrl != null) {\n+                        String nextUrlComplete = cmsQueryUrlPrefix\n+                                + hasMoreNextUrl;\n+\n+                        // 201501 add here too.\n+                        jsonObjectNext = readJsonFromUrlWithCmsHeader(nextUrlComplete);\n+                        nodes.addAll(getFQDNValueListCMS(jsonObjectNext,\n+                                projectionStr));\n+\n+                        logger.info(\"CMS query: hasMore==true. Found next round in query with URL:\"\n+                                + nextUrlComplete);\n+                    }\n+                }\n+            } while (hasMore);\n+\n+            /**\n+             * 20141103: END: for loop to check if has more.\n+             */\n+\n+            // filtering duplicated nodes:\n+            int removedDuplicatedNodeCount = PcTargetHostsUtils\n+                    .removeDuplicateNodeList(nodes);\n+\n+            if (removedDuplicatedNodeCount > 0) {\n+\n+                logger.info(\" Removed duplicated node #: \"\n+                        + removedDuplicatedNodeCount);\n+            }\n+\n+            logger.info(\"List size: \" + nodes.size());\n+\n+        } catch (Exception e) {\n+\n+            throw new TargetHostsLoadException(\"error when reading  \" + url, e);\n+        }\n+\n+        return nodes;\n+    }\n+}"
            },
            {
                "sha": "865b110e1ecc6d5c89f7bf4d36ba8677804900f4",
                "filename": "src/main/java/io/parallec/core/taskbuilder/targethosts/package-info.java",
                "status": "added",
                "additions": 4,
                "deletions": 0,
                "changes": 4,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Ftaskbuilder%2Ftargethosts%2Fpackage-info.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Ftaskbuilder%2Ftargethosts%2Fpackage-info.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Ftaskbuilder%2Ftargethosts%2Fpackage-info.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,4 @@\n+/**\n+ * Target host builder.\n+ */\n+package io.parallec.core.taskbuilder.targethosts;\n\\ No newline at end of file"
            },
            {
                "sha": "273d5bba5628979cba4a1d72ffd117fd70fe1d05",
                "filename": "src/main/java/io/parallec/core/util/BeanMapper.java",
                "status": "added",
                "additions": 24,
                "deletions": 0,
                "changes": 24,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Futil%2FBeanMapper.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Futil%2FBeanMapper.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Futil%2FBeanMapper.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,24 @@\n+package io.parallec.core.util;\n+\n+import io.parallec.core.ParallelTask;\n+import io.parallec.core.task.ParallelTaskBean;\n+\n+import org.springframework.beans.BeanUtils;\n+\n+/**\n+ * TODO\n+ * \n+ * @author Yuanteng Jeff Pei\n+ *\n+ */\n+public class BeanMapper {\n+\n+    public static void copy(final ParallelTask source,\n+            final ParallelTaskBean target) {\n+        BeanUtils.copyProperties(source, target, new String[] { \"state\",\n+                \"logger\", \"responseContext\", \" handler\", \" parallelTaskResult\",\n+                \"executionManager\", \"replacementVarMapNodeSpecific\",\n+                \"replacementVarMap\", \"submitTime\", \"executeStartTime\",\n+                \"executionEndTime\" });\n+    }\n+}"
            },
            {
                "sha": "7928ccd3abf174d4670fc4049f06352c2ae1d585",
                "filename": "src/main/java/io/parallec/core/util/DaemonThreadFactory.java",
                "status": "added",
                "additions": 57,
                "deletions": 0,
                "changes": 57,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Futil%2FDaemonThreadFactory.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Futil%2FDaemonThreadFactory.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Futil%2FDaemonThreadFactory.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,57 @@\n+/*  \n+Copyright [2013-2015] eBay Software Foundation\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+    http://www.apache.org/licenses/LICENSE-2.0\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+ */\n+package io.parallec.core.util;\n+\n+import java.util.concurrent.ThreadFactory;\n+\n+// TODO: Auto-generated Javadoc\n+/**\n+ * A factory for creating DaemonThread objects.\n+ */\n+public class DaemonThreadFactory implements ThreadFactory {\n+\n+    /** The instance. */\n+    private static DaemonThreadFactory instance = new DaemonThreadFactory();\n+\n+    /**\n+     * Gets the single instance of DaemonThreadFactory.\n+     *\n+     * @return single instance of DaemonThreadFactory\n+     */\n+    public static DaemonThreadFactory getInstance() {\n+        return instance;\n+    }\n+\n+    /**\n+     * Instantiates a new daemon thread factory.\n+     */\n+    private DaemonThreadFactory() {\n+\n+    }\n+\n+    /*\n+     * (non-Javadoc)\n+     * \n+     * @see java.util.concurrent.ThreadFactory#newThread(java.lang.Runnable)\n+     */\n+    @Override\n+    public Thread newThread(Runnable arg0) {\n+        Thread t = new Thread(arg0); // NOSONAR\n+        t.setDaemon(true);\n+        if (t.getPriority() != Thread.NORM_PRIORITY) {\n+            t.setPriority(Thread.NORM_PRIORITY);\n+        }\n+        return t;\n+    }\n+\n+}"
            },
            {
                "sha": "2d1fb39c40df05c9b8e0f9ab4268ffc976306ae3",
                "filename": "src/main/java/io/parallec/core/util/PcConstants.java",
                "status": "added",
                "additions": 129,
                "deletions": 0,
                "changes": 129,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Futil%2FPcConstants.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Futil%2FPcConstants.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Futil%2FPcConstants.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,129 @@\n+/*  \n+Copyright [2013-2015] eBay Software Foundation\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+    http://www.apache.org/licenses/LICENSE-2.0\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+ */\n+package io.parallec.core.util;\n+\n+/**\n+ * Static variable names...\n+ * \n+ * @author Yuanteng Jeff Pei\n+ * \n+ */\n+public class PcConstants {\n+\n+    public static final String API_PREFIX = \"API_\";\n+\n+    /** The Constant ACTOR_SYSTEM. */\n+    public static final String ACTOR_SYSTEM = \"ParallecActorSystem\";\n+\n+    public static final String REQUEST_CANCELED = \"REQUEST_CANCELED\";\n+    public static final String OPERATION_TIMEOUT = \"OPERATION_TIMEOUT\";\n+\n+    public static final String NOT_SAVED = \"NOT_SAVED\";\n+\n+    /** The Constant NODE_REQUEST_PREFIX_REPLACE_VAR. */\n+    public static final String NODE_REQUEST_PREFIX_REPLACE_VAR = \"REPLACE-VAR_\";\n+\n+    /** The Constant NODE_REQUEST_TRUE_CONTENT1. */\n+    public static final String NODE_REQUEST_TRUE_CONTENT = \"TRUE_CONTENT\";\n+\n+    public static final String NODE_REQUEST_STATUS = \"STATUS\";\n+\n+    /** The Constant NODE_REQUEST_TRUE_URL. */\n+    public static final String NODE_REQUEST_TRUE_URL = \"TRUE_URL\";\n+\n+    /** The Constant NODE_REQUEST_TRUE_PORT. */\n+    public static final String NODE_REQUEST_TRUE_PORT = \"TRUE_PORT\";\n+\n+    /** The Constant NODE_REQUEST_HTTP_METHOD. */\n+    public static final String NODE_REQUEST_HTTP_METHOD = \"HTTP_METHOD\";\n+\n+    /** The Constant NODE_REQUEST_HTTP_HEADER_META. */\n+    public static final String NODE_REQUEST_HTTP_HEADER_META = \"HEADER_META\";\n+\n+    /** The Constant NODE_REQUEST_PREPARE_TIME. */\n+    public static final String NODE_REQUEST_PREPARE_TIME = \"PREPARE_TIME\";\n+\n+    /** The Constant NODE_REQUEST_TRUE_TARGET_NODE. */\n+    public static final String NODE_REQUEST_TRUE_TARGET_NODE = \"TRUE_TARGET_NODE\";\n+\n+    /** The Constant NODE_REQUEST_NEED_POLLER. */\n+    public static final String NODE_REQUEST_NEED_POLLER = \"NEED_POLLER\";\n+\n+    /** The Constant UNIFORM_TARGET_HOST_VAR. */\n+    public static final String UNIFORM_TARGET_HOST_VAR = \"PARALLEC_UNIFORM_TARGET_HOST\";\n+\n+    /** The Constant UNIFORM_TARGET_HOST_VAR_WHEN_CHECK. */\n+    public static final String UNIFORM_TARGET_HOST_VAR_WHEN_CHECK = \"REPLACE-VAR_\"\n+            + UNIFORM_TARGET_HOST_VAR;\n+\n+    /** The request parameter http header prefix. */\n+    public static String REQUEST_PARAMETER_HTTP_HEADER_PREFIX = \"TRUE_HEADER_\";\n+\n+    /** The var name apivarreplace httpheader auth token. */\n+    public static String VAR_NAME_APIVARREPLACE_HTTPHEADER_AUTH_TOKEN = \"APIVARREPLACE_HTTPHEADER_AUTH_TOKEN\";\n+\n+    /** The Constant SYSTEM_FAIL_MATCH_REGEX. */\n+    public static final String SYSTEM_FAIL_MATCH_REGEX = \"SYSTEM_FAIL_MATCH_REGEX\";\n+\n+    /** The Constant OPERATION_SUCCESSFUL. */\n+    public static final String OPERATION_SUCCESSFUL = \"OPERATION_SUCCESSFUL\";\n+\n+    /** The Constant NA. */\n+    public static final String NA = \"NA\";\n+\n+    /** The Constant NA_INT. */\n+    public static final int NA_INT = -1;\n+\n+    /** The Constant NULL_STR. */\n+    public static final String NULL_STR = \"NULL\";\n+\n+    /** The Constant NODE_RESPONSE_INIT. */\n+    public static final String NODE_RESPONSE_INIT = \"UNKNOWN_RESONSE_NOT_RECEIVED_YET\";\n+\n+    /** The Constant REQUEST_BODY_PLACE_HOLDER. */\n+    public static final String REQUEST_BODY_PLACE_HOLDER = \"PARALLEC_EMPTY_REQUEST_BODY\";\n+\n+    /** The Constant COMMAND_VAR_DEFAULT_REQUEST_CONTENT. */\n+    public static final String COMMAND_VAR_DEFAULT_REQUEST_CONTENT = \"$\"\n+            + REQUEST_BODY_PLACE_HOLDER;\n+\n+    /** The Constant STR_EMPTY. */\n+    public static final String STR_EMPTY = \"\";\n+\n+    /** The Constant NODE_REQUEST_WILL_EXECUTE. */\n+    // whether or not will execute this command\n+    public static final String NODE_REQUEST_WILL_EXECUTE = \"NODE_REQUEST_WILL_EXECUTE\";\n+\n+    /** The Constant NODE_REQUEST_EXECUTE_MSG. */\n+    public static final String NODE_REQUEST_EXECUTE_MSG = \"NODE_REQUEST_EXECUTE_MSG\";\n+\n+    /** The Constant NODE_REQUEST_EXECUTE_MSG_DETAIL_REPLACEMENT_VAR_VALUE_NA. */\n+    public static final String NODE_REQUEST_EXECUTE_MSG_DETAIL_REPLACEMENT_VAR_VALUE_NA = \"!!! SAFEGUARD: NOTE: REQUEST WILL NOT EXECUTE: because NODE_REQUEST_EXECUTE_MSG_DETAIL_REPLACEMENT_VAR_VALUE_NA.\";\n+\n+    /**\n+     * The Constant\n+     * NODE_REQUEST_EXECUTE_MSG_DETAIL_REPLACEMENT_VAR_KEY_OR_VALUE_NULL.\n+     */\n+    public static final String NODE_REQUEST_EXECUTE_MSG_DETAIL_REPLACEMENT_VAR_KEY_OR_VALUE_NULL = \"!!! SAFEGUARD: NOTE: REQUEST WILL NOT EXECUTE: because NODE_REQUEST_EXECUTE_MSG_DETAIL_REPLACEMENT_VAR_KEY_OR_VALUE_NULL.\";\n+\n+    /**\n+     * The Constant AGNET_RESPONSE_MAX_RESPONSE_DISPLAY_BYTE. this will record\n+     * in log\n+     */\n+    public static int AGNET_RESPONSE_MAX_RESPONSE_DISPLAY_BYTE = 32;\n+\n+    /** to get the errorSummary */\n+    public static String REGEX_ERROR_SUMMARY = \"(.*?)\\\\sDetails.*\";\n+    \n+\n+}"
            },
            {
                "sha": "a543cca79cfa178f97673e66965c94586aaae207",
                "filename": "src/main/java/io/parallec/core/util/PcDateUtils.java",
                "status": "added",
                "additions": 164,
                "deletions": 0,
                "changes": 164,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Futil%2FPcDateUtils.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Futil%2FPcDateUtils.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Futil%2FPcDateUtils.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,164 @@\n+/*  \n+Copyright [2013-2015] eBay Software Foundation\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+    http://www.apache.org/licenses/LICENSE-2.0\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+ */\n+package io.parallec.core.util;\n+\n+import java.text.SimpleDateFormat;\n+import java.util.Date;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+// TODO: Auto-generated Javadoc\n+/**\n+ * The Class PcDateUtils.\n+ */\n+public class PcDateUtils {\n+\n+    /** The logger. */\n+    private static Logger logger = LoggerFactory.getLogger(PcDateUtils.class);\n+\n+    /**\n+     * Gets the date time str.\n+     *\n+     * @param d\n+     *            the d\n+     * @return the date time str\n+     */\n+    public static String getDateTimeStr(Date d) {\n+        if (d == null)\n+            return \"\";\n+\n+        SimpleDateFormat sdf = new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss.SSSZ\");\n+        // 20140315 test will problem +0000\n+        String str = sdf.format(d);\n+        return str;\n+    }\n+\n+    /**\n+     * Gets the date time str standard.\n+     *\n+     * @param d\n+     *            the d\n+     * @return the date time str standard\n+     */\n+    public static String getDateTimeStrStandard(Date d) {\n+        if (d == null)\n+            return \"\";\n+\n+        if (d.getTime() == 0L)\n+            return \"Never\";\n+\n+        SimpleDateFormat sdf = new SimpleDateFormat(\"yyyy.MM.dd.HH.mm.ss.SSSZ\");\n+\n+        String str = sdf.format(d);\n+        return str;\n+    }\n+\n+    /**\n+     * Gets the date time str concise.\n+     *\n+     * @param d\n+     *            the d\n+     * @return the date time str concise\n+     */\n+    public static String getDateTimeStrConcise(Date d) {\n+        if (d == null)\n+            return \"\";\n+\n+        SimpleDateFormat sdf = new SimpleDateFormat(\"yyyyMMddHHmmssSSSZ\");\n+        String str = sdf.format(d);\n+        return str;\n+    }\n+\n+    /**\n+     * 20141027: same as getDateTimeStrConcise but no timezone.\n+     *\n+     * @param d\n+     *            the d\n+     * @return the date time str concise no zone\n+     */\n+    public static String getDateTimeStrConciseNoZone(Date d) {\n+        if (d == null)\n+            return \"\";\n+\n+        SimpleDateFormat sdf = new SimpleDateFormat(\"yyyyMMddHHmmssSSS\");\n+        String str = sdf.format(d);\n+        return str;\n+    }\n+\n+    /**\n+     * 20130512 Converts the sdsm string generated above to Date format.\n+     *\n+     * @param str\n+     *            the str\n+     * @return the date from concise str\n+     */\n+    public static Date getDateFromConciseStr(String str) {\n+\n+        Date d = null;\n+        if (str == null || str.isEmpty())\n+            return null;\n+\n+        try {\n+            SimpleDateFormat sdf = new SimpleDateFormat(\"yyyyMMddHHmmssSSSZ\");\n+\n+            d = sdf.parse(str);\n+        } catch (Exception ex) {\n+            logger.error(ex + \"Exception while converting string to date : \"\n+                    + str);\n+        }\n+\n+        return d;\n+    }\n+\n+    /**\n+     * Gets the now date time str.\n+     *\n+     * @return the now date time str\n+     */\n+    public static String getNowDateTimeStr() {\n+\n+        return getDateTimeStr(new Date());\n+    }\n+\n+    /**\n+     * Gets the now date time str standard.\n+     *\n+     * @return the now date time str standard\n+     */\n+    public static String getNowDateTimeStrStandard() {\n+\n+        return getDateTimeStrStandard(new Date());\n+    }\n+\n+    /**\n+     * Gets the now date time str concise.\n+     *\n+     * @return the now date time str concise\n+     */\n+    public static String getNowDateTimeStrConcise() {\n+\n+        return getDateTimeStrConcise(new Date());\n+    }\n+\n+    /**\n+     * Gets the now date time str concise no zone.\n+     *\n+     * @return the now date time str concise no zone\n+     */\n+    public static String getNowDateTimeStrConciseNoZone() {\n+\n+        return getDateTimeStrConciseNoZone(new Date());\n+    }\n+\n+}"
            },
            {
                "sha": "da8823cb57cc52a6f0b5456b68611427c514a1df",
                "filename": "src/main/java/io/parallec/core/util/PcErrorMsgUtils.java",
                "status": "added",
                "additions": 74,
                "deletions": 0,
                "changes": 74,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Futil%2FPcErrorMsgUtils.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Futil%2FPcErrorMsgUtils.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Futil%2FPcErrorMsgUtils.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,74 @@\n+/*  \n+Copyright [2013-2015] eBay Software Foundation\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+    http://www.apache.org/licenses/LICENSE-2.0\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+ */\n+package io.parallec.core.util;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+// TODO: Auto-generated Javadoc\n+/**\n+ * The Class PcErrorMsgUtils.\n+ */\n+public class PcErrorMsgUtils {\n+\n+    /**\n+     * The Enum ERROR_TYPE.\n+     */\n+    public enum ERROR_TYPE {\n+        /** The connection exception. */\n+        CONNECTION_EXCEPTION,\n+\n+    }\n+\n+    /** The Constant errorMapOrig. */\n+    public static final Map<ERROR_TYPE, String> errorMapOrig = new HashMap<ERROR_TYPE, String>();\n+\n+    /** The Constant errorMapReplace. */\n+    public static final Map<ERROR_TYPE, String> errorMapReplace = new HashMap<ERROR_TYPE, String>();\n+\n+    static {\n+        errorMapOrig.put(ERROR_TYPE.CONNECTION_EXCEPTION,\n+                \"java.net.ConnectException\");\n+        errorMapReplace.put(ERROR_TYPE.CONNECTION_EXCEPTION,\n+                \"java.net.ConnectException\");\n+    }\n+\n+    /**\n+     * Replace error msg.\n+     *\n+     * @param origMsg\n+     *            the orig msg\n+     * @return the string\n+     */\n+    public static String replaceErrorMsg(String origMsg) {\n+\n+        String replaceMsg = origMsg;\n+        for (ERROR_TYPE errorType : ERROR_TYPE.values()) {\n+\n+            if (origMsg == null) {\n+                replaceMsg = PcConstants.NA;\n+                return replaceMsg;\n+            }\n+\n+            if (origMsg.contains(errorMapOrig.get(errorType))) {\n+                replaceMsg = errorMapReplace.get(errorType);\n+                break;\n+            }\n+\n+        }\n+\n+        return replaceMsg;\n+\n+    }\n+\n+}"
            },
            {
                "sha": "6884550ec196a6189c0af97b7fee4ee392cb225d",
                "filename": "src/main/java/io/parallec/core/util/PcFileNetworkIoUtils.java",
                "status": "added",
                "additions": 178,
                "deletions": 0,
                "changes": 178,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Futil%2FPcFileNetworkIoUtils.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Futil%2FPcFileNetworkIoUtils.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Futil%2FPcFileNetworkIoUtils.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,178 @@\n+/*  \n+Copyright [2013-2015] eBay Software Foundation\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+    http://www.apache.org/licenses/LICENSE-2.0\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+ */\n+package io.parallec.core.util;\n+\n+import io.parallec.core.HostsSourceType;\n+import io.parallec.core.config.ParallecGlobalConfig;\n+import io.parallec.core.taskbuilder.targethosts.TargetHostsBuilder;\n+\n+import java.io.BufferedReader;\n+import java.io.File;\n+import java.io.FileInputStream;\n+import java.io.FileNotFoundException;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.io.InputStreamReader;\n+import java.io.Reader;\n+import java.net.URL;\n+import java.net.URLConnection;\n+import java.nio.charset.Charset;\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import com.google.common.base.Charsets;\n+import com.google.common.io.Files;\n+\n+// TODO: Auto-generated Javadoc\n+/**\n+ * The Class PcFileNetworkIoUtils.\n+ */\n+public class PcFileNetworkIoUtils {\n+\n+    /** The logger. */\n+    private static Logger logger = LoggerFactory\n+            .getLogger(PcFileNetworkIoUtils.class);\n+\n+    /**\n+     * 20140907: for key management get from file to input stream.\n+     *\n+     * @param filePath\n+     *            the file path\n+     * @return the input stream\n+     * @throws FileNotFoundException\n+     *             the file not found exception\n+     */\n+    public static InputStream readFileToInputStream(String filePath)\n+            throws FileNotFoundException {\n+\n+        InputStream is = null;\n+\n+        try {\n+\n+            is = new FileInputStream(filePath);\n+\n+            logger.info(\"Completed read file for input stream \" + \" Path: \"\n+                    + filePath + \" at \" + PcDateUtils.getNowDateTimeStr());\n+\n+        } catch (Exception e) {\n+            logger.error(\"Error read file.\" + e);\n+        }\n+        return is;\n+\n+    } // end func.\n+\n+    /**\n+     * Checks if is file exist.\n+     *\n+     * @param filePath\n+     *            the file path\n+     * @return true, if is file exist\n+     */\n+    public static boolean isFileExist(String filePath) {\n+\n+        File f = new File(filePath);\n+\n+        boolean exists = f.exists() && !f.isDirectory();\n+        return exists;\n+    }\n+\n+    /**\n+     * Read file content to string.\n+     *\n+     * @param filePath\n+     *            the file path\n+     * @return the string\n+     * @throws IOException\n+     *             Signals that an I/O exception has occurred.\n+     */\n+    public static String readFileContentToString(String filePath)\n+            throws IOException {\n+        String content = \"\";\n+        content = Files.toString(new File(filePath), Charsets.UTF_8);\n+        return content;\n+    }\n+\n+    /**\n+     * Read string from url generic.\n+     *\n+     * @param url\n+     *            the url\n+     * @return the string\n+     * @throws IOException\n+     *             Signals that an I/O exception has occurred.\n+     */\n+    public static String readStringFromUrlGeneric(String url)\n+            throws IOException {\n+        InputStream is = null;\n+        URL urlObj = null;\n+        String responseString = PcConstants.NA;\n+        try {\n+            urlObj = new URL(url);\n+            URLConnection con = urlObj.openConnection();\n+\n+            con.setConnectTimeout(ParallecGlobalConfig.urlConnectionConnectTimeoutMillis);\n+            con.setReadTimeout(ParallecGlobalConfig.urlConnectionReadTimeoutMillis);\n+            is = con.getInputStream();\n+\n+            BufferedReader rd = new BufferedReader(new InputStreamReader(is,\n+                    Charset.forName(\"UTF-8\")));\n+            responseString = PcFileNetworkIoUtils.readAll(rd);\n+\n+        } finally {\n+\n+            if (is != null) {\n+                is.close();\n+            }\n+\n+        }\n+\n+        return responseString;\n+    }\n+\n+    /**\n+     * Read all.\n+     *\n+     * @param rd\n+     *            the rd\n+     * @return the string\n+     * @throws IOException\n+     *             Signals that an I/O exception has occurred.\n+     */\n+    public static String readAll(Reader rd) throws IOException {\n+        StringBuilder sb = new StringBuilder();\n+        int cp;\n+        while ((cp = rd.read()) != -1) {\n+            sb.append((char) cp);\n+        }\n+        return sb.toString();\n+    }\n+\n+    public static List<String> getListFromLineByLineText(String sourcePath,\n+            HostsSourceType sourceType) {\n+\n+        TargetHostsBuilder thb = new TargetHostsBuilder();\n+        List<String> list = new ArrayList<String>();\n+        try {\n+            list = thb.setTargetHostsFromLineByLineText(sourcePath, sourceType);\n+        } catch (Exception e) {\n+            logger.error(\"error getListFromLineByLineText \" + e);\n+        }\n+\n+        return list;\n+\n+    }\n+\n+}"
            },
            {
                "sha": "fc5e8fae8d28ad4ae42f637188a5a842011aa57d",
                "filename": "src/main/java/io/parallec/core/util/PcHttpUtils.java",
                "status": "added",
                "additions": 114,
                "deletions": 0,
                "changes": 114,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Futil%2FPcHttpUtils.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Futil%2FPcHttpUtils.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Futil%2FPcHttpUtils.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,114 @@\n+/*  \n+Copyright [2013-2015] eBay Software Foundation\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+    http://www.apache.org/licenses/LICENSE-2.0\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+ */\n+package io.parallec.core.util;\n+\n+import io.parallec.core.actor.message.NodeReqResponse;\n+\n+import java.util.Map;\n+import java.util.Map.Entry;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import com.ning.http.client.AsyncHttpClient.BoundRequestBuilder;\n+\n+// TODO: Auto-generated Javadoc\n+/**\n+ * Adding http header logic TODO; should finally be data driven and specific for\n+ * each command. Now it is defined here and user can easily change.\n+ * \n+ * @author Yuanteng Jeff Pei\n+ * \n+ */\n+public class PcHttpUtils {\n+\n+    /** The logger. */\n+    private static Logger logger = LoggerFactory.getLogger(PcHttpUtils.class);\n+\n+    /**\n+     * currently not to use MalformedURLException or MalformedURLException as\n+     * our logic includes add HTTP :// etc Assuming not null .\n+     *\n+     * @param url\n+     *            the url\n+     * @return true, if is url valid\n+     */\n+    public static boolean isUrlValid(String url) {\n+\n+        return (!url.trim().contains(\" \"));\n+\n+    }\n+\n+    /**\n+     * !!!! ASSUMPTION: all VAR exists in HTTP Header must of type:\n+     * APIVARREPLACE_NAME_PREFIX_HTTP_HEADER\n+     * \n+     * 20140310 This may be costly (O(n^2)) of the updated related # of headers;\n+     * # of parameters in the requests.\n+     * \n+     * Better to only do it when there are some replacement in the request\n+     * Parameters. a prefix :\n+     * \n+     * TOBE tested\n+     *\n+     * @param httpHeaderMap\n+     *            the http header map\n+     * @param requestParameters\n+     *            the request parameters\n+     */\n+\n+    public static void replaceHttpHeaderMapNodeSpecific(\n+            Map<String, String> httpHeaderMap,\n+            Map<String, String> requestParameters) {\n+\n+        boolean needToReplaceVarInHttpHeader = false;\n+        for (String parameter : requestParameters.keySet()) {\n+            if (parameter.contains(PcConstants.NODE_REQUEST_PREFIX_REPLACE_VAR)) {\n+                needToReplaceVarInHttpHeader = true;\n+                break;\n+            }\n+        }\n+\n+        if (needToReplaceVarInHttpHeader == false) {\n+            logger.debug(\"No need to replace. Since there are no HTTP header variables. \");\n+            return;\n+        }\n+        // replace all the values in the (not the keys) in the header map.\n+        for (Entry<String, String> entry : httpHeaderMap.entrySet()) {\n+            String key = entry.getKey();\n+            String valueOriginal = entry.getValue();\n+            String valueUpdated = NodeReqResponse.replaceStrByMap(\n+                    requestParameters, valueOriginal);\n+            httpHeaderMap.put(key, valueUpdated);\n+        }\n+    }\n+\n+    /**\n+     * Adds the headers.\n+     *\n+     * @param builder\n+     *            the builder\n+     * @param headerMap\n+     *            the header map\n+     */\n+    public static void addHeaders(BoundRequestBuilder builder,\n+            Map<String, String> headerMap) {\n+        for (Entry<String, String> entry : headerMap.entrySet()) {\n+            String name = entry.getKey();\n+            String value = entry.getValue();\n+            builder.addHeader(name, value);\n+        }\n+\n+    }\n+\n+}"
            },
            {
                "sha": "99eec47db2e3b4b40dc3cc42af6ef781f094f374",
                "filename": "src/main/java/io/parallec/core/util/PcNumberUtils.java",
                "status": "added",
                "additions": 34,
                "deletions": 0,
                "changes": 34,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Futil%2FPcNumberUtils.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Futil%2FPcNumberUtils.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Futil%2FPcNumberUtils.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,34 @@\n+/*  \n+Copyright [2013-2015] eBay Software Foundation\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+    http://www.apache.org/licenses/LICENSE-2.0\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+*/\n+package io.parallec.core.util;\n+\n+import java.text.DecimalFormat;\n+\n+/**\n+ * The Class PcNumberUtils.\n+ * @author ypei\n+ */\n+public class PcNumberUtils {\n+\n+    /**\n+     * Gets the string from double.\n+     *\n+     * @param number the number\n+     * @return the string from double\n+     */\n+    public static String getStringFromDouble(double number) {\n+        DecimalFormat df = new DecimalFormat(\"#.####\");\n+        return df.format(number);\n+    }\n+\n+}"
            },
            {
                "sha": "85cfd5e7be79cc9ac3cf158cc58b546503a84cf6",
                "filename": "src/main/java/io/parallec/core/util/PcStringUtils.java",
                "status": "added",
                "additions": 127,
                "deletions": 0,
                "changes": 127,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Futil%2FPcStringUtils.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Futil%2FPcStringUtils.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Futil%2FPcStringUtils.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,127 @@\n+/*  \n+Copyright [2013-2015] eBay Software Foundation\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+    http://www.apache.org/licenses/LICENSE-2.0\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+ */\n+package io.parallec.core.util;\n+\n+import java.util.LinkedHashSet;\n+import java.util.Map;\n+import java.util.Map.Entry;\n+\n+import org.apache.commons.lang3.exception.ExceptionUtils;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import com.google.gson.Gson;\n+import com.google.gson.GsonBuilder;\n+\n+/**\n+ * The Class PcStringUtils.\n+ */\n+public class PcStringUtils {\n+\n+    /** The logger. */\n+    @SuppressWarnings(\"unused\")\n+    private static Logger logger = LoggerFactory.getLogger(PcStringUtils.class);\n+\n+    /**\n+     * Prints the stack trace.\n+     *\n+     * @param t\n+     *            the throwable\n+     * @return the string\n+     */\n+    public static String printStackTrace(Throwable t) {\n+        return t == null ? PcConstants.NA : ExceptionUtils.getStackTrace(t);\n+\n+    }\n+\n+    /**\n+     * Checks if is null or empty.\n+     *\n+     * @param str\n+     *            the str\n+     * @return true, if is null or empty\n+     */\n+    public static boolean isNullOrEmpty(String str) {\n+\n+        if (str == null)\n+            return true;\n+        if (str.isEmpty())\n+            return true;\n+\n+        return false;\n+    }\n+\n+    /**\n+     * Str map to str.\n+     *\n+     * @param map\n+     *            the map\n+     * @return the string\n+     */\n+    public static String strMapToStr(Map<String, String> map) {\n+\n+        StringBuilder sb = new StringBuilder();\n+\n+        if (map == null || map.isEmpty())\n+            return sb.toString();\n+\n+        for (Entry<String, String> entry : map.entrySet()) {\n+\n+            sb.append(\"< \" + entry.getKey() + \", \" + entry.getValue() + \"> \");\n+        }\n+        return sb.toString();\n+\n+    }\n+\n+    /**\n+     * Get the aggregated result human readable string for easy display.\n+     * \n+     *\n+     * @param aggregateResultMap the aggregate result map\n+     * @return the aggregated result human\n+     */\n+    public static String getAggregatedResultHuman(Map<String, LinkedHashSet<String>> aggregateResultMap){\n+\n+        StringBuilder res = new StringBuilder();\n+\n+        for (Entry<String, LinkedHashSet<String>> entry : aggregateResultMap\n+                .entrySet()) {\n+            LinkedHashSet<String> valueSet = entry.getValue(); \n+            res.append(\"[\" + entry.getKey() + \" COUNT: \" +valueSet.size() + \" ]:\\n\");\n+            for(String str: valueSet){\n+                res.append(\"\\t\" + str + \"\\n\");\n+            }\n+            res.append(\"###################################\\n\\n\");\n+        }\n+        \n+        return res.toString();\n+        \n+    }\n+\n+    /**\n+     * Render json.\n+     *\n+     * @param o\n+     *            the o\n+     * @return the string\n+     */\n+    public static String renderJson(Object o) {\n+\n+        Gson gson = new GsonBuilder().disableHtmlEscaping().setPrettyPrinting()\n+                .create();\n+        String jsonOutput = gson.toJson(o);\n+\n+        return jsonOutput;\n+    }\n+\n+}"
            },
            {
                "sha": "f04a93464e18300cc00efd8f475570138be78ce1",
                "filename": "src/main/java/io/parallec/core/util/PcTargetHostsUtils.java",
                "status": "added",
                "additions": 103,
                "deletions": 0,
                "changes": 103,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Futil%2FPcTargetHostsUtils.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Futil%2FPcTargetHostsUtils.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Futil%2FPcTargetHostsUtils.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,103 @@\n+/*  \n+Copyright [2013-2015] eBay Software Foundation\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+    http://www.apache.org/licenses/LICENSE-2.0\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+ */\n+package io.parallec.core.util;\n+\n+import java.util.ArrayList;\n+import java.util.HashSet;\n+import java.util.LinkedHashSet;\n+import java.util.List;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+// TODO: Auto-generated Javadoc\n+/**\n+ * The Class PcTargetHostsUtils.\n+ *\n+ * @author Yuanteng Jeff Pei\n+ */\n+public class PcTargetHostsUtils {\n+\n+    /** The logger. */\n+    private static Logger logger = LoggerFactory\n+            .getLogger(PcTargetHostsUtils.class);\n+\n+    /**\n+     * Must have maximum limit.\n+     *\n+     * @param args\n+     *            the arguments\n+     */\n+\n+    public static void main(String[] args) {\n+\n+        // System.out.println(getAgentVersionWisb());\n+        // models.utils.LogUtilslogger.info(getAgentVersionWisb());\n+        // getEvpsUrl();\n+        // models.utils.LogUtilslogger.info(testGetGenericVersionWisb());\n+\n+        // testChunkStrStrMap();\n+    }\n+\n+    /**\n+     * Gets the node list from string line seperate or space seperate.\n+     *\n+     * @param listStr\n+     *            the list str\n+     * @param removeDuplicate\n+     *            the remove duplicate\n+     * @return the node list from string line seperate or space seperate\n+     */\n+    public static List<String> getNodeListFromStringLineSeperateOrSpaceSeperate(\n+            String listStr, boolean removeDuplicate) {\n+\n+        List<String> nodes = new ArrayList<String>();\n+\n+        for (String token : listStr.split(\"[\\\\r?\\\\n| +]+\")) {\n+\n+            // 20131025: fix if fqdn has space in the end.\n+            if (token != null && !token.trim().isEmpty()) {\n+                nodes.add(token.trim());\n+\n+            }\n+        }\n+\n+        if (removeDuplicate) {\n+            removeDuplicateNodeList(nodes);\n+        }\n+        logger.info(\"Target hosts size : \" + nodes.size());\n+\n+        return nodes;\n+\n+    }\n+\n+    /**\n+     * Removes the duplicate node list.\n+     *\n+     * @param list\n+     *            the list\n+     * @return the int\n+     */\n+    public static int removeDuplicateNodeList(List<String> list) {\n+\n+        int originCount = list.size();\n+        // add elements to all, including duplicates\n+        HashSet<String> hs = new LinkedHashSet<String>();\n+        hs.addAll(list);\n+        list.clear();\n+        list.addAll(hs);\n+\n+        return originCount - list.size();\n+    }\n+\n+}"
            },
            {
                "sha": "555b09aa811e433e4bdd65a51b84b25310469214",
                "filename": "src/main/java/io/parallec/core/util/package-info.java",
                "status": "added",
                "additions": 4,
                "deletions": 0,
                "changes": 4,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Futil%2Fpackage-info.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Futil%2Fpackage-info.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fjava%2Fio%2Fparallec%2Fcore%2Futil%2Fpackage-info.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,4 @@\n+/**\n+ * Utility functions.\n+ */\n+package io.parallec.core.util;\n\\ No newline at end of file"
            },
            {
                "sha": "a0caba867c61f4c05df53bb3a7f24f689fee3ad9",
                "filename": "src/main/resources/actorconfig.conf",
                "status": "added",
                "additions": 4,
                "deletions": 0,
                "changes": 4,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fresources%2Factorconfig.conf",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fresources%2Factorconfig.conf",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fresources%2Factorconfig.conf?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,4 @@\n+akka {\n+\tlog-dead-letters = 0\n+\tlog-dead-letters-during-shutdown = off\n+}\n\\ No newline at end of file"
            },
            {
                "sha": "066f6705e6a1373db550b8ffd56f3dbdcdda2dab",
                "filename": "src/main/resources/logback.xml",
                "status": "added",
                "additions": 49,
                "deletions": 0,
                "changes": 49,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fresources%2Flogback.xml",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Fmain%2Fresources%2Flogback.xml",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Fmain%2Fresources%2Flogback.xml?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,49 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+\n+<configuration>\n+\n+  <appender name=\"STDOUT\" class=\"ch.qos.logback.core.ConsoleAppender\">\n+    <!-- encoders are assigned the type\n+         ch.qos.logback.classic.encoder.PatternLayoutEncoder by default\n+         <pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger{5} - %msg%n</pattern>\n+         <pattern>%msg%n</pattern>\n+          -->\n+    <encoder>\n+        <pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger{5} - %msg%n</pattern>\n+    </encoder>\n+  </appender>\n+\n+\n+    <appender name=\"FILE\" class=\"ch.qos.logback.core.rolling.RollingFileAppender\">\n+        <file>parallec_logs/parallec.log</file>\n+      \n+           <rollingPolicy class=\"ch.qos.logback.core.rolling.FixedWindowRollingPolicy\">\n+                <fileNamePattern>parallec_logs/parallec.%i.log</fileNamePattern>\n+                <minIndex>1</minIndex>\n+                <maxIndex>5</maxIndex>\n+            </rollingPolicy>\n+        \n+     <triggeringPolicy class=\"ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy\">\n+      <maxFileSize>50MB</maxFileSize>\n+    </triggeringPolicy>\n+        <encoder>\n+            <charset>UTF-8</charset>\n+            <pattern>%d %-4relative [%thread] %-5level %logger{35} - %msg%n</pattern>\n+        </encoder>\n+    </appender>\n+\n+\t<!-- http://logback.qos.ch/manual/configuration.html additivity: also to higher in hierachy\n+\t  <logger name=\"io.parallec.core.client\" level=\"INFO\" additivity=\"true\">\n+\t   <appender-ref ref=\"STDOUT\" />\n+\t  </logger>\n+\t -->\n+\n+  <!-- Strictly speaking, the level attribute is not necessary since -->\n+  <!-- the level of the root level is set to DEBUG by default.       -->\n+  <root level=\"INFO\">          \n+    <appender-ref ref=\"STDOUT\" />\n+    <appender-ref ref=\"FILE\" />\n+    \n+  </root>  \n+  \n+</configuration>\n\\ No newline at end of file"
            },
            {
                "sha": "6f501ef4746228b19f8a5d56708fd3c9cd6320a5",
                "filename": "src/test/java/io/parallec/core/TestBase.java",
                "status": "added",
                "additions": 48,
                "deletions": 0,
                "changes": 48,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2FTestBase.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2FTestBase.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2FTestBase.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,48 @@\n+package io.parallec.core;\n+\n+import io.parallec.core.config.ParallecGlobalConfig;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class TestBase {\n+    public final String FILEPATH_TMP1 = \"userdata/target_hosts_tmp1.txt\";\n+    public final String FILEPATH_TMP2 = \"userdata/target_hosts_tmp2.txt\";\n+    \n+    public final String FILEPATH_TOP_100 = \"userdata/sample_target_hosts_top100_old.txt\";\n+    \n+    public final String FILEPATH_TOP_100_NEW = \"userdata/sample_target_hosts_top100.txt\";\n+\n+    public final String FILEPATH_TOP_500 = \"userdata/sample_target_hosts_top500_old.txt\";\n+    public final String FILEPATH_TOP_500_NEW = \"userdata/sample_target_hosts_top500.txt\";\n+\n+    public final String FILEPATH_TOP_1000 = \"userdata/sample_target_hosts_top1000.txt\";\n+    public final String FILEPATH_TOP_2000 = \"userdata/sample_target_hosts_top2000.txt\";\n+    public final String FILEPATH_TOP_10000 = \"userdata/sample_target_hosts_top10k.txt\";\n+\n+    public final String FILEPATH_JSON_PATH = \"userdata/sample_target_hosts_json_path.json\";\n+\n+    public final String URL_TOP_100 = \"http://www.restcommander.com/docs/sample_target_hosts_top100.txt\";\n+    public final String URL_JSON_PATH = \"http://parallec.github.io/userdata/sample_target_hosts_json_path.json\";\n+    public final String URL_CMS_QUERY_SINGLE_PAGE = \"http://parallec.github.io/cms/repositories/cmsdb/branches/main/query/sample_cms_query_results_single_page.json\";\n+    public final String URL_CMS_QUERY_MULTI_PAGE = \"http://parallec.github.io/cms/repositories/cmsdb/branches/main/query/sample_cms_query_results_multi_page_1.json\";\n+\n+    public final HostsSourceType SOURCE_LOCAL = HostsSourceType.LOCAL_FILE;\n+    public final HostsSourceType SOURCE_URL = HostsSourceType.URL;\n+\n+    // ssh\n+\n+    public final static String userName = \"someUser\";\n+    public final static int PORT_DEFAULT = 22;\n+    public final static String passwd = \"mypassword\";\n+    public final static String hostIpSample = \"192.168.1.155\";\n+    public final static String hostIpSample2 = \"192.168.1.156\";\n+    public final static String commandSshLineValid = \"date\";\n+\n+    public final static String LOCALHOST=\"localhost\";\n+    \n+    public final static int sshConnectionTimeoutMillis = ParallecGlobalConfig.sshConnectionTimeoutMillisDefault;\n+\n+    protected static final Logger logger = LoggerFactory\n+            .getLogger(TestBase.class);\n+}"
            },
            {
                "sha": "7b849be39e4beb9cb9ce5f970519cd6f54f63e2a",
                "filename": "src/test/java/io/parallec/core/actor/ExecutionManagerTest.java",
                "status": "added",
                "additions": 185,
                "deletions": 0,
                "changes": 185,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FExecutionManagerTest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FExecutionManagerTest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FExecutionManagerTest.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,185 @@\n+package io.parallec.core.actor;\n+\n+import io.parallec.core.ParallelClient;\n+import io.parallec.core.ParallelTask;\n+import io.parallec.core.TestBase;\n+import io.parallec.core.actor.message.InitialRequestToManager;\n+import io.parallec.core.actor.message.type.ExecutionManagerMsgType;\n+import io.parallec.core.bean.HttpMeta;\n+import io.parallec.core.bean.TargetHostMeta;\n+import io.parallec.core.commander.workflow.InternalDataProvider;\n+import io.parallec.core.resources.HttpMethod;\n+import io.parallec.core.util.PcStringUtils;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.concurrent.TimeUnit;\n+\n+import org.junit.AfterClass;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+\n+import scala.concurrent.Await;\n+import scala.concurrent.Future;\n+import scala.concurrent.duration.Duration;\n+import scala.concurrent.duration.FiniteDuration;\n+import akka.actor.ActorRef;\n+import akka.actor.Props;\n+import akka.pattern.Patterns;\n+import akka.util.Timeout;\n+\n+public class ExecutionManagerTest extends TestBase {\n+\n+    private static ParallelClient pc;\n+\n+    @BeforeClass\n+    public static void setUp() throws Exception {\n+        pc = new ParallelClient();\n+    }\n+\n+    @AfterClass\n+    public static void shutdown() throws Exception {\n+        pc.releaseExternalResources();\n+    }\n+\n+    public static ParallelTask genParallelTask() {\n+        ParallelTask task = new ParallelTask();\n+\n+        List<String> list = new ArrayList<String>();\n+        list.add(\"restcommander.com\");\n+        list.add(\"www.restcommander.com\");\n+\n+        task.setTargetHostMeta(new TargetHostMeta(list));\n+        task.setHttpMeta(new HttpMeta());\n+        // task.getCommandMeta().setDefaultUnusedValue();\n+        task.getHttpMeta().setHttpMethod(HttpMethod.GET);\n+        task.getHttpMeta().setRequestUrlPostfix(\"/validateInternals.html\");\n+        task.validateWithFillDefault();\n+        task.setTaskId(task.generateTaskId());\n+        return task;\n+\n+    }\n+\n+    @Test\n+    public void testHttpWorkerNormalCheckCancel() {\n+        ActorRef executionManager = null;\n+        try {\n+            // Start new job\n+            \n+\n+            ParallelTask task = genParallelTask();\n+            InternalDataProvider adp = InternalDataProvider.getInstance();\n+            adp.genNodeDataMap(task);\n+\n+            executionManager = ActorConfig.createAndGetActorSystem().actorOf(\n+                    Props.create(ExecutionManager.class, task),\n+                    \"executionManager-\" + task.getTaskId());\n+\n+            final FiniteDuration duration = Duration.create(20,\n+                    TimeUnit.SECONDS);\n+            Future<Object> future = Patterns.ask(executionManager,\n+                    new InitialRequestToManager(task), new Timeout(duration));\n+\n+            executionManager.tell(ExecutionManagerMsgType.CANCEL, executionManager);\n+\n+            Await.result(future, duration);\n+            logger.info(\"\\nWorker response header:\"\n+                    + PcStringUtils.renderJson(task.getParallelTaskResult()));\n+            // logger.info(\"\\nWorker response:\" +\n+            // PcStringUtils.renderJson(task));\n+        } catch (Exception ex) {\n+            logger.error(\"Exception in testHttpWorkerNormalCheckCancel : \" + ex);\n+        }\n+    }// end func\n+\n+    @Test\n+    public void testHttpWorkerNormalCheckTimeout() {\n+        ActorRef executionManager = null;\n+        try {\n+            // Start new job\n+            \n+\n+            ParallelTask task = genParallelTask();\n+            InternalDataProvider adp = InternalDataProvider.getInstance();\n+            adp.genNodeDataMap(task);\n+\n+            executionManager = ActorConfig.createAndGetActorSystem().actorOf(\n+                    Props.create(ExecutionManager.class, task),\n+                    \"ExecutionManager-\" + task.getTaskId());\n+\n+            final FiniteDuration duration = Duration.create(20,\n+                    TimeUnit.SECONDS);\n+            Future<Object> future = Patterns.ask(executionManager,\n+                    new InitialRequestToManager(task), new Timeout(duration));\n+\n+            executionManager.tell(ExecutionManagerMsgType.OPERATION_TIMEOUT,\n+                    executionManager);\n+\n+            Await.result(future, duration);\n+            logger.info(\"\\nWorker response header:\"\n+                    + PcStringUtils.renderJson(task.getParallelTaskResult()));\n+            // logger.info(\"\\nWorker response:\" +\n+            // PcStringUtils.renderJson(task));\n+        } catch (Throwable ex) {\n+            logger.error(\"Exception in testHttpWorkerNormalCheckTimeout : \"\n+                    + ex);\n+        }\n+    }// end func\n+\n+    @Test\n+    public void testBadMsg() {\n+        ActorRef executionManager = null;\n+        try {\n+            // Start new job\n+            \n+\n+            ParallelTask task = genParallelTask();\n+            InternalDataProvider adp = InternalDataProvider.getInstance();\n+            adp.genNodeDataMap(task);\n+\n+            executionManager = ActorConfig.createAndGetActorSystem().actorOf(\n+                    Props.create(ExecutionManager.class, task),\n+                    \"ExecutionManager-\" + task.getTaskId());\n+\n+            executionManager.tell(\"bad request\", executionManager);\n+        } catch (Exception ex) {\n+            logger.error(\"Exception in testBadMsg : \" + ex);\n+        }\n+    }// end func\n+\n+    @Test\n+    public void testException() {\n+        ActorRef executionManager = null;\n+        try {\n+            // Start new job\n+            \n+\n+            ParallelTask task = genParallelTask();\n+            InternalDataProvider adp = InternalDataProvider.getInstance();\n+            adp.genNodeDataMap(task);\n+\n+            // fake bad attribute\n+            task.setTaskId(null);\n+\n+            executionManager = ActorConfig.createAndGetActorSystem().actorOf(\n+                    Props.create(ExecutionManager.class, task),\n+                    \"executionManager-\" + task.getTaskId());\n+\n+            final FiniteDuration duration = Duration.create(20,\n+                    TimeUnit.SECONDS);\n+\n+            // set task as null\n+\n+            Future<Object> future = Patterns.ask(executionManager,\n+                    new InitialRequestToManager(task), new Timeout(duration));\n+\n+            Await.result(future, duration);\n+            logger.info(\"\\nWorker response header:\"\n+                    + PcStringUtils.renderJson(task.getParallelTaskResult()));\n+\n+        } catch (Exception ex) {\n+            logger.error(\"Exception in testBadMsg : \" + ex);\n+        }\n+    }// end func\n+\n+}"
            },
            {
                "sha": "e1df48279abf0c8b324f51eb6784b8c72829d2d8",
                "filename": "src/test/java/io/parallec/core/actor/HttpWorkerTest.java",
                "status": "added",
                "additions": 242,
                "deletions": 0,
                "changes": 242,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FHttpWorkerTest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FHttpWorkerTest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FHttpWorkerTest.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,242 @@\n+package io.parallec.core.actor;\n+\n+import io.parallec.core.ParallelClient;\n+import io.parallec.core.TestBase;\n+import io.parallec.core.actor.message.ResponseOnSingeRequest;\n+import io.parallec.core.actor.message.type.RequestWorkerMsgType;\n+import io.parallec.core.resources.HttpClientStore;\n+import io.parallec.core.resources.HttpMethod;\n+\n+import java.util.concurrent.TimeUnit;\n+\n+import org.junit.AfterClass;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+import org.slf4j.LoggerFactory;\n+\n+import scala.concurrent.Await;\n+import scala.concurrent.Future;\n+import scala.concurrent.duration.Duration;\n+import scala.concurrent.duration.FiniteDuration;\n+import akka.actor.ActorRef;\n+import akka.actor.Props;\n+import akka.pattern.Patterns;\n+import akka.util.Timeout;\n+\n+public class HttpWorkerTest extends TestBase {\n+\n+    private static ParallelClient pc;\n+\n+    @BeforeClass\n+    public static void setUp() throws Exception {\n+        pc = new ParallelClient();\n+    }\n+\n+    @AfterClass\n+    public static void shutdown() throws Exception {\n+        pc.releaseExternalResources();\n+    }\n+\n+    /**\n+     * fake a bad request\n+     */\n+    @Test\n+    public void testSshWorkerCreateRequestException() {\n+        ActorRef asyncWorker = null;\n+        try {\n+            // Start new job\n+            \n+            int actorMaxOperationTimeoutSec = 15;\n+            String urlComplete = \"http://parallec.github.io/v**``\\\"..,++08alidateInternals.html\";\n+            asyncWorker = ActorConfig.createAndGetActorSystem().actorOf(\n+                    Props.create(HttpWorker.class, actorMaxOperationTimeoutSec,\n+                            HttpClientStore.getInstance()\n+                                    .getCurrentDefaultClient(), urlComplete,\n+                            HttpMethod.GET, \"\", null));\n+            ;\n+\n+            final FiniteDuration duration = Duration.create(20,\n+                    TimeUnit.SECONDS);\n+            Future<Object> future = Patterns\n+                    .ask(asyncWorker, RequestWorkerMsgType.PROCESS_REQUEST,\n+                            new Timeout(duration));\n+\n+            ResponseOnSingeRequest response = (ResponseOnSingeRequest) Await\n+                    .result(future, duration);\n+\n+            logger.info(\"\\nWorker response:\" + response.toString());\n+        } catch (Throwable ex) {\n+            logger.error(\"Exception in test: \" + ex);\n+        }\n+    }// end func\n+\n+    @Test\n+    public void testHttpWorkerNormalCheckComplete() {\n+        ActorRef asyncWorker = null;\n+        try {\n+            // Start new job\n+            \n+            int actorMaxOperationTimeoutSec = 15;\n+            String urlComplete = \"http://parallec.github.io/validateInternals.html\";\n+            pc.getHttpClientStore();\n+            asyncWorker = ActorConfig.createAndGetActorSystem().actorOf(\n+                    Props.create(HttpWorker.class, actorMaxOperationTimeoutSec,\n+                            HttpClientStore.getInstance()\n+                                    .getCurrentDefaultClient(), urlComplete,\n+                            HttpMethod.GET, \"\", null));\n+\n+            final FiniteDuration duration = Duration.create(20,\n+                    TimeUnit.SECONDS);\n+            Future<Object> future = Patterns\n+                    .ask(asyncWorker, RequestWorkerMsgType.PROCESS_REQUEST,\n+                            new Timeout(duration));\n+\n+            ResponseOnSingeRequest response = (ResponseOnSingeRequest) Await\n+                    .result(future, duration);\n+\n+            logger.info(\"\\nWorker response:\" + response.toString());\n+        } catch (Throwable ex) {\n+\n+            logger.error(\"Exception in test : \" + ex);\n+        }\n+    }// end func\n+\n+    @Test\n+    public void testHttpWorkerDupAndCancel() {\n+        ActorRef asyncWorker = null;\n+        try {\n+            // Start new job\n+            \n+\n+            int actorMaxOperationTimeoutSec = 15;\n+            String urlComplete = \"http://parallec.github.io/validateInternals.html\";\n+            pc.getHttpClientStore();\n+            asyncWorker = ActorConfig.createAndGetActorSystem().actorOf(\n+                    Props.create(HttpWorker.class, actorMaxOperationTimeoutSec,\n+                            HttpClientStore.getInstance()\n+                                    .getCurrentDefaultClient(), urlComplete,\n+                            HttpMethod.GET, \"\", null));\n+\n+            final FiniteDuration duration = Duration.create(20,\n+                    TimeUnit.SECONDS);\n+            Future<Object> future = Patterns\n+                    .ask(asyncWorker, RequestWorkerMsgType.PROCESS_REQUEST,\n+                            new Timeout(duration));\n+\n+            // test dup\n+            asyncWorker.tell(RequestWorkerMsgType.PROCESS_REQUEST, asyncWorker);\n+\n+            // test cancel\n+            asyncWorker.tell(RequestWorkerMsgType.CANCEL, asyncWorker);\n+\n+            ResponseOnSingeRequest response = (ResponseOnSingeRequest) Await\n+                    .result(future, duration);\n+\n+            logger.info(\"\\nWorker response:\" + response.toString());\n+        } catch (Throwable ex) {\n+\n+            logger.error(\"Exception in test : \" + ex);\n+        }\n+    }// end func\n+\n+    /**\n+     * fake a NPE of logger; do not forget to reset it or other tests will fail.\n+     */\n+    @Test\n+    public void testHttpWorkerException() {\n+        ActorRef asyncWorker = null;\n+        try {\n+            // Start new job\n+            \n+            int actorMaxOperationTimeoutSec = 15;\n+            HttpWorker.setLogger(null);\n+            String urlComplete = \"http://parallec.github.io/validateInternals.html\";\n+            asyncWorker = ActorConfig.createAndGetActorSystem().actorOf(\n+                    Props.create(HttpWorker.class, actorMaxOperationTimeoutSec,\n+                            HttpClientStore.getInstance()\n+                                    .getCurrentDefaultClient(), urlComplete,\n+                            HttpMethod.GET, \"\", null));\n+            ;\n+\n+            final FiniteDuration duration = Duration.create(20,\n+                    TimeUnit.SECONDS);\n+            Future<Object> future = Patterns\n+                    .ask(asyncWorker, RequestWorkerMsgType.PROCESS_REQUEST,\n+                            new Timeout(duration));\n+\n+            ResponseOnSingeRequest response = (ResponseOnSingeRequest) Await\n+                    .result(future, duration);\n+\n+            logger.info(\"\\nWorker response:\" + response.toString());\n+        } catch (Throwable ex) {\n+            logger.error(\"Exception in test : \" + ex);\n+        }\n+        HttpWorker.setLogger(LoggerFactory.getLogger(HttpWorker.class));\n+    }// end func\n+\n+    @Test\n+    public void testHttpWorkerTimeoutException() {\n+        ActorRef asyncWorker = null;\n+        try {\n+            // Start new job\n+            \n+            // made a timeout\n+            int actorMaxOperationTimeoutSec = 0;\n+            String urlComplete = \"http://parallec.github.io/validateInternals.html\";\n+            pc.getHttpClientStore();\n+            asyncWorker = ActorConfig.createAndGetActorSystem().actorOf(\n+                    Props.create(HttpWorker.class, actorMaxOperationTimeoutSec,\n+                            HttpClientStore.getInstance()\n+                                    .getCurrentDefaultClient(), urlComplete,\n+                            HttpMethod.GET, \"\", null));\n+\n+            final FiniteDuration duration = Duration.create(20,\n+                    TimeUnit.SECONDS);\n+            Future<Object> future = Patterns\n+                    .ask(asyncWorker, RequestWorkerMsgType.PROCESS_REQUEST,\n+                            new Timeout(duration));\n+            ResponseOnSingeRequest response = (ResponseOnSingeRequest) Await\n+                    .result(future, duration);\n+\n+            logger.info(\"\\nWorker response:\" + response.toString());\n+        } catch (Throwable ex) {\n+\n+            logger.error(\"Exception in test : \" + ex);\n+        }\n+    }// end func\n+\n+    @Test\n+    public void testHttpWorkerBadMsgType() {\n+        ActorRef asyncWorker = null;\n+        try {\n+            String urlComplete = \"http://parallec.github.io/validateInternals.html\";\n+            pc.getHttpClientStore();\n+            int actorMaxOperationTimeoutSec = 0;\n+            asyncWorker = ActorConfig.createAndGetActorSystem().actorOf(\n+                    Props.create(HttpWorker.class, actorMaxOperationTimeoutSec,\n+                            HttpClientStore.getInstance()\n+                                    .getCurrentDefaultClient(), urlComplete,\n+                            HttpMethod.GET, \"\", null));\n+\n+            final FiniteDuration duration = Duration.create(20,\n+                    TimeUnit.SECONDS);\n+            Future<Object> future = Patterns\n+                    .ask(asyncWorker, RequestWorkerMsgType.PROCESS_REQUEST,\n+                            new Timeout(duration));\n+\n+            // test invalid type\n+            asyncWorker.tell(new Integer(0), asyncWorker);\n+            asyncWorker.tell(RequestWorkerMsgType.CHECK_FUTURE_STATE,\n+                    asyncWorker);\n+            ResponseOnSingeRequest response = (ResponseOnSingeRequest) Await\n+                    .result(future, duration);\n+\n+            logger.info(\"\\nWorker response:\" + response.toString());\n+        } catch (Throwable ex) {\n+\n+            logger.error(\"Exception in test : \" + ex);\n+        }\n+        // made a timeout\n+    }// end func\n+\n+}"
            },
            {
                "sha": "4802962e5392b4e5f438be088a8b5a11eafcf590",
                "filename": "src/test/java/io/parallec/core/actor/OperationWorkerTest.java",
                "status": "added",
                "additions": 69,
                "deletions": 0,
                "changes": 69,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FOperationWorkerTest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FOperationWorkerTest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Factor%2FOperationWorkerTest.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,69 @@\n+package io.parallec.core.actor;\n+\n+import io.parallec.core.ParallelClient;\n+import io.parallec.core.RequestProtocol;\n+import io.parallec.core.TestBase;\n+import io.parallec.core.actor.message.type.RequestWorkerMsgType;\n+import io.parallec.core.bean.TaskRequest;\n+import io.parallec.core.resources.HttpClientStore;\n+import io.parallec.core.resources.HttpMethod;\n+\n+import java.util.HashMap;\n+\n+import org.junit.AfterClass;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+\n+import akka.actor.ActorRef;\n+import akka.actor.Props;\n+\n+public class OperationWorkerTest extends TestBase {\n+\n+    private static ParallelClient pc;\n+\n+    @BeforeClass\n+    public static void setUp() throws Exception {\n+        pc = new ParallelClient();\n+    }\n+\n+    @AfterClass\n+    public static void shutdown() throws Exception {\n+        pc.releaseExternalResources();\n+    }\n+\n+    /**\n+     * a request. expected to\n+     */\n+    @Test\n+    public void testOperationWorkerWrongMsgType() {\n+        ActorRef asyncWorker = null;\n+        try {\n+            // Start new job\n+            \n+\n+            int actorMaxOperationTimeoutSec = 15;\n+\n+            asyncWorker = ActorConfig.createAndGetActorSystem().actorOf(\n+                    Props.create(\n+                            OperationWorker.class,\n+                            new TaskRequest(actorMaxOperationTimeoutSec,\n+                                    RequestProtocol.valueOf(\"HTTP\"\n+                                            .toUpperCase()),\n+                                    \"parallec.github.io\", null, 80, \"\", \"\",\n+                                    HttpMethod.GET, false, null, \n+                                    null,\n+                                    new HashMap<String, Object>(),\n+                                    null,null, null), HttpClientStore\n+                                    .getInstance().getEmbedClientFast(), null\n+\n+                    ));\n+            // bad type\n+            asyncWorker.tell(RequestWorkerMsgType.CANCEL, asyncWorker);\n+\n+        } catch (Throwable ex) {\n+            logger.error(\"Exception in test : \" + ex);\n+            ex.printStackTrace();\n+        }\n+    }// end func\n+\n+}"
            },
            {
                "sha": "4b71b1531d55b12b5696854e00213d9d6d44c9b9",
                "filename": "src/test/java/io/parallec/core/bean/NodeReqResponseTest.java",
                "status": "added",
                "additions": 30,
                "deletions": 0,
                "changes": 30,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2FNodeReqResponseTest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2FNodeReqResponseTest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fbean%2FNodeReqResponseTest.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,30 @@\n+package io.parallec.core.bean;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import org.junit.Test;\n+\n+import io.parallec.core.TestBase;\n+import io.parallec.core.actor.message.NodeReqResponse;\n+\n+public class NodeReqResponseTest extends TestBase {\n+\n+    @Test\n+    public void testReplaceVar() {\n+        Map<String, String> requestParameters = new HashMap<String, String>();\n+        requestParameters.put(\"REPLACE-VAR_AGENT_VERSION\", \"0.1.911\");\n+\n+        requestParameters.put(\"REPLACE-VAR_updateWisb\", \"WWWWWWWII\");\n+\n+        // String sourceContent =\n+        // \"{\\\"manifest\\\": \\\"agent_selfupdate-$AGENT_VERSION\\\", \\\"updateWisb\\\":\\\"True\\\"}\";\n+        String sourceContent = \"{\\\"manifest\\\": \\\"agent_selfupdate-$AGENT_VERSION\\\", \\\"$updateWisb\\\":\\\"True\\\"}\";\n+\n+        String afterReplacement = NodeReqResponse.replaceStrByMap(\n+                requestParameters, sourceContent);\n+\n+        logger.info(afterReplacement);\n+    }\n+\n+}"
            },
            {
                "sha": "85cb0ceededa5194c002912a620261e277190043",
                "filename": "src/test/java/io/parallec/core/client/ParallelTaskTest.java",
                "status": "added",
                "additions": 106,
                "deletions": 0,
                "changes": 106,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fclient%2FParallelTaskTest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fclient%2FParallelTaskTest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fclient%2FParallelTaskTest.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,106 @@\n+/*  \n+Copyright [2013-2015] eBay Software Foundation\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+    http://www.apache.org/licenses/LICENSE-2.0\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+ */\n+package io.parallec.core.client;\n+\n+import io.parallec.core.ParallelClient;\n+import io.parallec.core.ParallelTask;\n+import io.parallec.core.TestBase;\n+import io.parallec.core.actor.ExecutionManagerTest;\n+import io.parallec.core.exception.ParallelTaskInvalidException;\n+import io.parallec.core.task.ParallelTaskState;\n+\n+import org.junit.AfterClass;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+\n+/**\n+ * The most basic test with hitting the same URL at 3 different websites.\n+ * require Internet access for testing.\n+ * \n+ * <p>\n+ * This example shows 1. Basic request construction 2. how to use response\n+ * context to pass value during the response handler out to a global space\n+ * </p>\n+ */\n+public class ParallelTaskTest extends TestBase {\n+\n+    /** The pc. */\n+    private static ParallelClient pc;\n+\n+    /**\n+     * Sets the up.\n+     * \n+     * @throws Exception\n+     *             the exception\n+     */\n+    @BeforeClass\n+    public static void setUp() throws Exception {\n+        pc = new ParallelClient();\n+    }\n+\n+    /**\n+     * Shutdown.\n+     *\n+     * @throws Exception\n+     *             the exception\n+     */\n+    @AfterClass\n+    public static void shutdown() throws Exception {\n+        pc.releaseExternalResources();\n+    }\n+\n+    @Test\n+    public void testCancelException() {\n+        ParallelTask task = ExecutionManagerTest.genParallelTask();\n+        task.setState(null);\n+        task.cancel(true);\n+    }\n+\n+    @Test\n+    public void testCancelNullManager() {\n+        ParallelTask task = ExecutionManagerTest.genParallelTask();\n+        task.setState(ParallelTaskState.IN_PROGRESS);\n+        task.executionManager = null;\n+        task.cancel(true);\n+    }\n+\n+    @Test\n+    public void testValidation() {\n+        ParallelTask task = ExecutionManagerTest.genParallelTask();\n+        logger.info(task.toString());\n+        task.setConfig(null);\n+        task.getHttpMeta().setHttpMethod(null);\n+        try {\n+\n+            task.validateWithFillDefault();\n+        } catch (ParallelTaskInvalidException e) {\n+\n+            logger.info(\"EXPECTED Exception {}\", e.getLocalizedMessage());\n+        }\n+    }\n+\n+    @Test\n+    public void testValidationPoller() {\n+        ParallelTask task = ExecutionManagerTest.genParallelTask();\n+        task.getHttpMeta().setRequestUrlPostfix(null);\n+        task.getHttpMeta().setPollable(true);\n+        task.getHttpMeta().setHttpPollerProcessor(null);\n+        try {\n+            task.validateWithFillDefault();\n+        } catch (ParallelTaskInvalidException e) {\n+\n+            logger.info(\"EXPECTED Exception {}\", e.getLocalizedMessage());\n+        }\n+    }\n+\n+}"
            },
            {
                "sha": "1606f98b3a3ace74491b854f733369b86f7b1d5b",
                "filename": "src/test/java/io/parallec/core/filter/FilterRegexTest.java",
                "status": "added",
                "additions": 38,
                "deletions": 0,
                "changes": 38,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Ffilter%2FFilterRegexTest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Ffilter%2FFilterRegexTest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Ffilter%2FFilterRegexTest.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,38 @@\n+package io.parallec.core.filter;\n+\n+import io.parallec.core.FilterRegex;\n+import io.parallec.core.TestBase;\n+import io.parallec.core.util.PcConstants;\n+\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n+\n+import org.junit.Test;\n+\n+public class FilterRegexTest extends TestBase {\n+\n+    @Test\n+    public void testFilterRegex() {\n+        String completeRegex = \".*\\\"progress\\\"\\\\s*:\\\\s*(100).*}\";\n+        FilterRegex.stringMatcherByPattern(null, completeRegex);\n+\n+        FilterRegex.stringMatcherByPattern(completeRegex, null);\n+    }\n+\n+    @Test\n+    public void testRegex() {\n+\n+        String completeRegex = \".*\\\"progress\\\"\\\\s*:\\\\s*(100).*}\";\n+        Pattern patternMetric = Pattern.compile(completeRegex,\n+                Pattern.MULTILINE);\n+        String response = \"{\\\"status\\\": \\\"/status/e40c0f1e-ddc2-4987-aaa7-b638a9978782\\\", \\\"progress\\\": 100,  \\\"error\\\": 300}\";\n+\n+        final Matcher matcher = patternMetric.matcher(response);\n+        String matchStr = PcConstants.NA;\n+        if (matcher.matches()) {\n+            matchStr = matcher.group(1);\n+        }\n+        logger.info(matchStr + \"\");\n+    }\n+\n+}"
            },
            {
                "sha": "0c33a26dd68dd0e7c45ff35e45971ddf36fb6a84",
                "filename": "src/test/java/io/parallec/core/httpclient/async/HttpClientStoreTest.java",
                "status": "added",
                "additions": 42,
                "deletions": 0,
                "changes": 42,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fhttpclient%2Fasync%2FHttpClientStoreTest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fhttpclient%2Fasync%2FHttpClientStoreTest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fhttpclient%2Fasync%2FHttpClientStoreTest.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,42 @@\n+package io.parallec.core.httpclient.async;\n+\n+import io.parallec.core.ParallelClient;\n+import io.parallec.core.TestBase;\n+import io.parallec.core.resources.HttpClientStore;\n+import io.parallec.core.resources.HttpClientType;\n+\n+import org.junit.AfterClass;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+\n+public class HttpClientStoreTest extends TestBase {\n+\n+    private static ParallelClient pc;\n+\n+    @BeforeClass\n+    public static void setUp() throws Exception {\n+        pc = new ParallelClient();\n+    }\n+\n+    @AfterClass\n+    public static void shutdown() throws Exception {\n+        pc.releaseExternalResources();\n+    }\n+\n+    @Test\n+    public void testDirectorForException() {\n+        try {\n+            HttpClientStore.getInstance().init();\n+\n+            HttpClientStore.getInstance().getClientByType(HttpClientType.EMBED_FAST);\n+            HttpClientStore.getInstance().getCustomClientFast();\n+            HttpClientStore.getInstance().getCustomClientSlow();\n+            HttpClientStore.getInstance().getEmbedClientFast();\n+            HttpClientStore.getInstance().getEmbedClientSlow();\n+\n+        } catch (Exception ex) {\n+            logger.error(\"Expected Exception : \" + ex);\n+        }\n+    }// end func\n+\n+}"
            },
            {
                "sha": "8d294694aadb2a831367ec5c6554406ada6bfe62",
                "filename": "src/test/java/io/parallec/core/main/http/LoadResourceTest.java",
                "status": "added",
                "additions": 47,
                "deletions": 0,
                "changes": 47,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2FLoadResourceTest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2FLoadResourceTest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2FLoadResourceTest.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,47 @@\n+package io.parallec.core.main.http;\n+\n+import io.parallec.core.ParallelClient;\n+import io.parallec.core.TestBase;\n+\n+import java.io.IOException;\n+import java.io.InputStreamReader;\n+import java.io.Reader;\n+import java.io.StringWriter;\n+\n+import org.junit.AfterClass;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+\n+public class LoadResourceTest extends TestBase {\n+\n+    private static ParallelClient pc;\n+\n+    @BeforeClass\n+    public static void setUp() throws Exception {\n+        pc = new ParallelClient();\n+    }\n+\n+    @AfterClass\n+    public static void shutdown() throws Exception {\n+        pc.releaseExternalResources();\n+    }\n+\n+    @Test\n+    public void testLoadResource() {\n+\n+        Reader r = new InputStreamReader(getClass().getClassLoader()\n+                .getResourceAsStream(\"actorconfig.conf\"));\n+        StringWriter sw = new StringWriter();\n+        char[] buffer = new char[1024];\n+        try {\n+            for (int n; (n = r.read(buffer)) != -1;)\n+                sw.write(buffer, 0, n);\n+        } catch (IOException e) {\n+            e.printStackTrace();\n+        }\n+        String str = sw.toString();\n+        System.out.println(str);\n+    }\n+\n+\n+}"
            },
            {
                "sha": "f6eb0f4f525c66c20268b91283bbc9423331fc28",
                "filename": "src/test/java/io/parallec/core/main/http/ParallelClientBeanTest.java",
                "status": "added",
                "additions": 36,
                "deletions": 0,
                "changes": 36,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2FParallelClientBeanTest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2FParallelClientBeanTest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2FParallelClientBeanTest.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,36 @@\n+package io.parallec.core.main.http;\n+\n+import io.parallec.core.ParallelClient;\n+import io.parallec.core.TestBase;\n+import io.parallec.core.resources.HttpClientType;\n+\n+import org.junit.AfterClass;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+\n+public class ParallelClientBeanTest extends TestBase {\n+\n+    private static ParallelClient pc;\n+\n+    @BeforeClass\n+    public static void setUp() throws Exception {\n+        pc = new ParallelClient();\n+    }\n+\n+    @AfterClass\n+    public static void shutdown() throws Exception {\n+        pc.releaseExternalResources();\n+    }\n+\n+    @Test\n+    public void parallecClient() {\n+        pc.reinitHttpClients();\n+        pc.cleanInprogressJobMap();\n+        pc.cleanWaitTaskQueue();\n+        pc.setCustomClientFast(null);\n+        pc.setCustomClientSlow(null);\n+        pc.setHttpClientTypeCurrentDefault(HttpClientType.EMBED_FAST);\n+\n+    }\n+\n+}"
            },
            {
                "sha": "efc9fb8914c06464c95d40e0b954cba41ca3ccb1",
                "filename": "src/test/java/io/parallec/core/main/http/ParallelClientHttpBasicMoreOptionsTest.java",
                "status": "added",
                "additions": 119,
                "deletions": 0,
                "changes": 119,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2FParallelClientHttpBasicMoreOptionsTest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2FParallelClientHttpBasicMoreOptionsTest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2FParallelClientHttpBasicMoreOptionsTest.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,119 @@\n+/*  \n+Copyright [2013-2015] eBay Software Foundation\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+    http://www.apache.org/licenses/LICENSE-2.0\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+ */\n+package io.parallec.core.main.http;\n+\n+import io.parallec.core.FilterRegex;\n+import io.parallec.core.ParallecResponseHandler;\n+import io.parallec.core.ParallelClient;\n+import io.parallec.core.ParallelTask;\n+import io.parallec.core.ResponseOnSingleTask;\n+import io.parallec.core.TestBase;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import org.apache.http.util.Asserts;\n+import org.junit.AfterClass;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+\n+/**\n+ * The most basic test with hitting the same URL at 3 different websites.\n+ * require Internet access for testing.\n+ * \n+ * <p>\n+ * This example shows 1. Basic request construction 2. how to use response\n+ * context to pass value during the response handler out to a global space\n+ * </p>\n+ */\n+public class ParallelClientHttpBasicMoreOptionsTest extends TestBase {\n+\n+    /** The pc. */\n+    private static ParallelClient pc;\n+\n+    /**\n+     * Sets the up.\n+     *\n+     * @throws Exception\n+     *             the exception\n+     */\n+    @BeforeClass\n+    public static void setUp() throws Exception {\n+        pc = new ParallelClient();\n+    }\n+\n+    /**\n+     * Shutdown.\n+     *\n+     * @throws Exception\n+     *             the exception\n+     */\n+    @AfterClass\n+    public static void shutdown() throws Exception {\n+        pc.releaseExternalResources();\n+    }\n+\n+    /**\n+     * basic but auto save response to log .setAutoSaveLogToLocal(true)\n+     * .setEnableCapacityAwareTaskScheduler(true) .setSaveResponseToTask(true)\n+     */\n+    @Test\n+    public void hitWebsitesMinSync() {\n+        Map<String, Object> responseContext = new HashMap<String, Object>();\n+        ParallelTask task = pc\n+                .prepareHttpGet(\"/validateInternals.html\")\n+                .setConcurrency(1700)\n+                .setTargetHostsFromString(\n+                        \"parallec.github.io www.jeffpei.com www.restcommander.com\")\n+\n+                .setSaveResponseToTask(true).setAutoSaveLogToLocal(true)\n+                .setEnableCapacityAwareTaskScheduler(true)\n+                // .setSaveResponseToTask(true)\n+\n+                .execute(new ParallecResponseHandler() {\n+\n+                    @Override\n+                    public void onCompleted(ResponseOnSingleTask res,\n+                            Map<String, Object> responseContext) {\n+                        String cpu = new FilterRegex(\n+                                \".*<td>CPU-Usage-Percent</td>\\\\s*<td>(.*?)</td>.*\")\n+                                .filter(res.getResponseContent());\n+                        String memory = new FilterRegex(\n+                                \".*<td>Memory-Used-KB</td>\\\\s*<td>(.*?)</td>.*\")\n+                                .filter(res.getResponseContent());\n+\n+                        Map<String, Object> metricMap = new HashMap<String, Object>();\n+                        metricMap.put(\"CpuUsage\", cpu);\n+                        metricMap.put(\"MemoryUsage\", memory);\n+\n+                        logger.info(\"cpu:\" + cpu + \" memory: \" + memory\n+                                + \" host: \" + res.getHost());\n+                        responseContext.put(res.getHost(), cpu);\n+\n+                        logger.info(res.toString());\n+\n+                    }\n+                });\n+\n+        for (Object o : responseContext.values()) {\n+\n+            Double cpuDouble = Double.parseDouble((String) o);\n+            Asserts.check(cpuDouble <= 100.0 && cpuDouble >= 0.0,\n+                    \" Fail to extract cpu values\");\n+        }\n+\n+        logger.info(\"Task Pretty Print: \\n{}\", task.prettyPrintInfo());\n+        logger.info(\"Aggregated results: \\n{}\", task.getAggregatedResultHumanStr());\n+    }\n+\n+}"
            },
            {
                "sha": "5011ee4aeb241f51865fcb7a2b374d6e1f74a9df",
                "filename": "src/test/java/io/parallec/core/main/http/ParallelClientHttpBasicTest.java",
                "status": "added",
                "additions": 111,
                "deletions": 0,
                "changes": 111,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2FParallelClientHttpBasicTest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2FParallelClientHttpBasicTest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2FParallelClientHttpBasicTest.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,111 @@\n+/*  \n+Copyright [2013-2015] eBay Software Foundation\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+    http://www.apache.org/licenses/LICENSE-2.0\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+ */\n+package io.parallec.core.main.http;\n+\n+import io.parallec.core.FilterRegex;\n+import io.parallec.core.ParallecResponseHandler;\n+import io.parallec.core.ParallelClient;\n+import io.parallec.core.ParallelTask;\n+import io.parallec.core.ResponseOnSingleTask;\n+import io.parallec.core.TestBase;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import org.apache.http.util.Asserts;\n+import org.junit.AfterClass;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+\n+/**\n+ * The most basic test with hitting the same URL at 3 different websites.\n+ * require Internet access for testing.\n+ * \n+ * <p>\n+ * This example shows 1. Basic request construction 2. how to use response\n+ * context to pass value during the response handler out to a global space\n+ * </p>\n+ */\n+public class ParallelClientHttpBasicTest extends TestBase {\n+\n+    /** The pc. */\n+    private static ParallelClient pc;\n+\n+    /**\n+     * Sets the up.\n+     *\n+     * @throws Exception\n+     *             the exception\n+     */\n+    @BeforeClass\n+    public static void setUp() throws Exception {\n+        pc = new ParallelClient();\n+    }\n+\n+    /**\n+     * Shutdown.\n+     *\n+     * @throws Exception\n+     *             the exception\n+     */\n+    @AfterClass\n+    public static void shutdown() throws Exception {\n+        pc.releaseExternalResources();\n+    }\n+\n+    /**\n+     * Hit websites min sync.\n+     */\n+    @Test\n+    public void hitWebsitesMinSync() {\n+\n+        Map<String, Object> responseContext = new HashMap<String, Object>();\n+        ParallelTask task = pc\n+                .prepareHttpGet(\"/validateInternals.html\")\n+                .setConcurrency(1700)\n+                .handleInWorker()\n+                .setTargetHostsFromString(\n+                        \"parallec.github.io www.jeffpei.com www.restcommander.com\")\n+                .execute(new ParallecResponseHandler() {\n+\n+                    @Override\n+                    public void onCompleted(ResponseOnSingleTask res,\n+                            Map<String, Object> responseContext) {\n+                        String cpu = new FilterRegex(\n+                                \".*<td>CPU-Usage-Percent</td>\\\\s*<td>(.*?)</td>.*\")\n+                                .filter(res.getResponseContent());\n+                        String memory = new FilterRegex(\n+                                \".*<td>Memory-Used-KB</td>\\\\s*<td>(.*?)</td>.*\")\n+                                .filter(res.getResponseContent());\n+\n+                        Map<String, Object> metricMap = new HashMap<String, Object>();\n+                        metricMap.put(\"CpuUsage\", cpu);\n+                        metricMap.put(\"MemoryUsage\", memory);\n+\n+                        logger.info(\"cpu:\" + cpu + \" memory: \" + memory\n+                                + \" host: \" + res.getHost());\n+                        responseContext.put(res.getHost(), cpu);\n+                        logger.debug(res.toString());\n+\n+                    }\n+                });\n+\n+        for (Object o : responseContext.values()) {\n+            Double cpuDouble = Double.parseDouble((String) o);\n+            Asserts.check(cpuDouble <= 100.0 && cpuDouble >= 0.0,\n+                    \" Fail to extract cpu values\");\n+        }\n+        logger.info(\"Task Pretty Print: \\n{}\", task.prettyPrintInfo());\n+    }\n+\n+}"
            },
            {
                "sha": "995f5a3641bd6e05fd9e53b75edcc5ab78f31e2a",
                "filename": "src/test/java/io/parallec/core/main/http/ParallelClientHttpBasicTestInvalidInput.java",
                "status": "added",
                "additions": 114,
                "deletions": 0,
                "changes": 114,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2FParallelClientHttpBasicTestInvalidInput.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2FParallelClientHttpBasicTestInvalidInput.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2FParallelClientHttpBasicTestInvalidInput.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,114 @@\n+package io.parallec.core.main.http;\n+\n+import io.parallec.core.ParallecResponseHandler;\n+import io.parallec.core.ParallelClient;\n+import io.parallec.core.ResponseOnSingleTask;\n+import io.parallec.core.TestBase;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+\n+import org.junit.AfterClass;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+\n+public class ParallelClientHttpBasicTestInvalidInput extends TestBase {\n+\n+    private static ParallelClient pc;\n+\n+    @BeforeClass\n+    public static void setUp() throws Exception {\n+        pc = new ParallelClient();\n+    }\n+\n+    @AfterClass\n+    public static void shutdown() throws Exception {\n+        pc.releaseExternalResources();\n+    }\n+\n+    @Test\n+    public void hitWebsitesUrlWithValidation() {\n+\n+        // miss target hosts\n+\n+        boolean validate = pc.prepareHttpGet(\" /validateInternals.html \")\n+                .setConcurrency(1700)\n+                // .setTargetHostsFromString(\"parallec.github.io www.jeffpei.com www.restcommander.com\")\n+                .validation();\n+        System.out.println(\"validation: \" + validate);\n+\n+        boolean validate2 = pc\n+                .prepareHttpGet(\" /validateInternals.html \")\n+                .setConcurrency(1700)\n+                .async()\n+                .sync()\n+                .setTargetHostsFromString(\n+                        \"parallec.github.io www.jeffpei.com www.restcommander.com\")\n+                .validation();\n+        System.out.println(\"validation2: \" + validate2);\n+    }\n+\n+    @Test\n+    public void hitWebsitesUrlEndingWSInput() {\n+\n+        // miss target hosts\n+        pc.prepareHttpGet(\" /validateInternals.html \")\n+                .setConcurrency(1700)\n+                .setTargetHostsFromString(\n+                        \"parallec.github.io www.jeffpei.com www.restcommander.com\")\n+                .execute(new ParallecResponseHandler() {\n+\n+                    @Override\n+                    public void onCompleted(ResponseOnSingleTask res,\n+                            Map<String, Object> responseContext) {\n+                        logger.info(res.toString());\n+                    }\n+                });\n+\n+    }\n+\n+    @Test\n+    public void hitWebsitesInvalidInput() {\n+\n+        // miss target hosts\n+        pc.prepareHttpGet(\"/validateInternals.html\").setConcurrency(1700)\n+\n+        .execute(new ParallecResponseHandler() {\n+\n+            @Override\n+            public void onCompleted(ResponseOnSingleTask res,\n+                    Map<String, Object> responseContext) {\n+            }\n+        });\n+\n+        // space in between URL\n+        pc.prepareHttpGet(\"/validate Internals.html\")\n+                .setConcurrency(1700)\n+                .setTargetHostsFromString(\n+                        \"www.restcommander.com www.jeffpei.com\")\n+                .execute(new ParallecResponseHandler() {\n+\n+                    @Override\n+                    public void onCompleted(ResponseOnSingleTask res,\n+                            Map<String, Object> responseContext) {\n+                    }\n+                });\n+\n+        // space in between singel target host\n+\n+        List<String> badHostList = new ArrayList<String>();\n+        badHostList.add(\"www.restco mmander.com\");\n+        pc.prepareHttpGet(\"/validateInternals.html\").setConcurrency(1700)\n+                .setTargetHostsFromList(badHostList)\n+                .execute(new ParallecResponseHandler() {\n+\n+                    @Override\n+                    public void onCompleted(ResponseOnSingleTask res,\n+                            Map<String, Object> responseContext) {\n+                    }\n+                });\n+\n+    }\n+\n+}"
            },
            {
                "sha": "5a14e7ca5ceffa49deeae5175030f3ff78723559",
                "filename": "src/test/java/io/parallec/core/main/http/ParallelClientHttpFromCmsAsyncTest.java",
                "status": "added",
                "additions": 131,
                "deletions": 0,
                "changes": 131,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2FParallelClientHttpFromCmsAsyncTest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2FParallelClientHttpFromCmsAsyncTest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2FParallelClientHttpFromCmsAsyncTest.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,131 @@\n+package io.parallec.core.main.http;\n+\n+import io.parallec.core.FilterRegex;\n+import io.parallec.core.ParallecResponseHandler;\n+import io.parallec.core.ParallelClient;\n+import io.parallec.core.ParallelTask;\n+import io.parallec.core.ResponseOnSingleTask;\n+import io.parallec.core.TestBase;\n+import io.parallec.core.util.PcDateUtils;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import org.apache.http.util.Asserts;\n+import org.junit.AfterClass;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+\n+public class ParallelClientHttpFromCmsAsyncTest extends TestBase {\n+\n+    private static ParallelClient pc;\n+\n+    @BeforeClass\n+    public static void setUp() throws Exception {\n+        pc = new ParallelClient();\n+    }\n+\n+    @AfterClass\n+    public static void shutdown() throws Exception {\n+        pc.releaseExternalResources();\n+    }\n+\n+    /**\n+     * With CMS query; async timeout 15 seconds\n+     */\n+    @Test(timeout = 15000)\n+    public void hitCmsQuerySinglePageAsync() {\n+\n+        // http://ccoetech.ebay.com/cms-configuration-management-service-based-mongodb\n+        String cmsQueryUrl = URL_CMS_QUERY_SINGLE_PAGE;\n+        ParallelTask pt = pc.prepareHttpGet(\"/validateInternals.html\")\n+                .setTargetHostsFromCmsQueryUrl(cmsQueryUrl, \"label\")\n+                .setConcurrency(1700).async()\n+                .execute(new ParallecResponseHandler() {\n+\n+                    @Override\n+                    public void onCompleted(ResponseOnSingleTask res,\n+                            Map<String, Object> responseContext) {\n+                        String cpu = new FilterRegex(\n+                                \".*<td>CPU-Usage-Percent</td>\\\\s*<td>(.*?)</td>[\\\\s\\\\S]*\")\n+                                .filter(res.getResponseContent());\n+                        String memory = new FilterRegex(\n+                                \".*<td>Memory-Used-KB</td>\\\\s*<td>(.*?)</td>[\\\\s\\\\S]*\")\n+                                .filter(res.getResponseContent());\n+\n+                        Map<String, Object> metricMap = new HashMap<String, Object>();\n+                        metricMap.put(\"CpuUsage\", cpu);\n+                        metricMap.put(\"MemoryUsage\", memory);\n+                        metricMap.put(\"LastUpdated\",\n+                                PcDateUtils.getNowDateTimeStrStandard());\n+                        metricMap.put(\"NodeGroupType\", \"OpenSource\");\n+\n+                        logger.info(\"cpu:\" + cpu + \" host: \" + res.getHost());\n+                    }\n+                });\n+        logger.info(pt.toString());\n+        Asserts.check(pt.getRequestNum() == 3, \"fail to load all target hosts\");\n+        while (!pt.isCompleted()) {\n+            try {\n+                Thread.sleep(100L);\n+                System.err.println(String.format(\"POLL_JOB_PROGRESS (%.5g%%)\",\n+                        pt.getProgress()));\n+            } catch (InterruptedException e) {\n+                e.printStackTrace();\n+            }\n+        }\n+\n+    }\n+\n+    /**\n+     * With CMS(YiDB) query; async timeout 15 seconds CMS Example:\n+     * http://ccoetech\n+     * .ebay.com/cms-configuration-management-service-based-mongodb\n+     */\n+    @Test(timeout = 15000)\n+    public void hitCmsQueryMultiPageAsync() {\n+\n+        String cmsQueryUrl = URL_CMS_QUERY_MULTI_PAGE;\n+        ParallelTask pt = pc.prepareHttpGet(\"/validateInternals.html\")\n+                .setTargetHostsFromCmsQueryUrl(cmsQueryUrl)\n+                .setConcurrency(1700).async()\n+                .execute(new ParallecResponseHandler() {\n+\n+                    @Override\n+                    public void onCompleted(ResponseOnSingleTask res,\n+                            Map<String, Object> responseContext) {\n+                        String cpu = new FilterRegex(\n+                                \".*<td>CPU-Usage-Percent</td>\\\\s*<td>(.*?)</td>[\\\\s\\\\S]*\")\n+                                .filter(res.getResponseContent());\n+                        String memory = new FilterRegex(\n+                                \".*<td>Memory-Used-KB</td>\\\\s*<td>(.*?)</td>[\\\\s\\\\S]*\")\n+                                .filter(res.getResponseContent());\n+\n+                        Map<String, Object> metricMap = new HashMap<String, Object>();\n+                        metricMap.put(\"CpuUsage\", cpu);\n+                        metricMap.put(\"MemoryUsage\", memory);\n+\n+                        logger.info(\"cpu:\" + cpu + \" memory: \" + memory\n+                                + \" host: \" + res.getHost());\n+                        Double cpuDouble = Double.parseDouble(cpu);\n+                        Asserts.check(cpuDouble <= 100.0 && cpuDouble >= 0.0,\n+                                \" Fail to extract cpu values\");\n+                    }\n+                });\n+\n+        logger.info(pt.toString());\n+        Asserts.check(pt.getRequestNum() == 3, \"fail to load all target hosts\");\n+\n+        while (!pt.isCompleted()) {\n+            try {\n+                Thread.sleep(100L);\n+                System.err.println(String.format(\"POLL_JOB_PROGRESS (%.5g%%)\",\n+                        pt.getProgress()));\n+            } catch (InterruptedException e) {\n+                e.printStackTrace();\n+            }\n+        }\n+\n+    }\n+\n+}"
            },
            {
                "sha": "056bbf23d1c0e529eb547306e5cd44b1ca5fb6f7",
                "filename": "src/test/java/io/parallec/core/main/http/ParallelClientHttpLogTest.java",
                "status": "added",
                "additions": 113,
                "deletions": 0,
                "changes": 113,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2FParallelClientHttpLogTest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2FParallelClientHttpLogTest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2FParallelClientHttpLogTest.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,113 @@\n+/*  \n+Copyright [2013-2015] eBay Software Foundation\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+    http://www.apache.org/licenses/LICENSE-2.0\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+ */\n+package io.parallec.core.main.http;\n+\n+import io.parallec.core.FilterRegex;\n+import io.parallec.core.ParallecResponseHandler;\n+import io.parallec.core.ParallelClient;\n+import io.parallec.core.ParallelTask;\n+import io.parallec.core.ResponseOnSingleTask;\n+import io.parallec.core.TestBase;\n+import io.parallec.core.util.PcStringUtils;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import org.apache.http.util.Asserts;\n+import org.junit.AfterClass;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+\n+/**\n+ * The most basic test with hitting the same URL at 3 different websites.\n+ * require Internet access for testing.\n+ * \n+ * <p>\n+ * This example shows 1. Basic request construction 2. how to use response\n+ * context to pass value during the response handler out to a global space\n+ * </p>\n+ */\n+public class ParallelClientHttpLogTest extends TestBase {\n+\n+    /** The pc. */\n+    private static ParallelClient pc;\n+\n+    /**\n+     * Sets the up.\n+     *\n+     * @throws Exception\n+     *             the exception\n+     */\n+    @BeforeClass\n+    public static void setUp() throws Exception {\n+        pc = new ParallelClient();\n+    }\n+\n+    /**\n+     * Shutdown.\n+     *\n+     * @throws Exception\n+     *             the exception\n+     */\n+    @AfterClass\n+    public static void shutdown() throws Exception {\n+        pc.releaseExternalResources();\n+    }\n+\n+    /**\n+     * Hit websites min sync.\n+     */\n+    @Test\n+    public void hitWebsitesMinSync() {\n+        Map<String, Object> responseContext = new HashMap<String, Object>();\n+        ParallelTask pt = pc\n+                .prepareHttpGet(\"/validateInternals.html\")\n+                .setConcurrency(1700)\n+                .setTargetHostsFromString(\n+                        \"parallec.github.io www.jeffpei.com www.restcommander.com\")\n+                .execute(new ParallecResponseHandler() {\n+\n+                    @Override\n+                    public void onCompleted(ResponseOnSingleTask res,\n+                            Map<String, Object> responseContext) {\n+                        String cpu = new FilterRegex(\n+                                \".*<td>CPU-Usage-Percent</td>\\\\s*<td>(.*?)</td>.*\")\n+                                .filter(res.getResponseContent());\n+                        String memory = new FilterRegex(\n+                                \".*<td>Memory-Used-KB</td>\\\\s*<td>(.*?)</td>.*\")\n+                                .filter(res.getResponseContent());\n+\n+                        Map<String, Object> metricMap = new HashMap<String, Object>();\n+                        metricMap.put(\"CpuUsage\", cpu);\n+                        metricMap.put(\"MemoryUsage\", memory);\n+\n+                        logger.info(\"cpu:\" + cpu + \" memory: \" + memory\n+                                + \" host: \" + res.getHost());\n+                        responseContext.put(res.getHost(), cpu);\n+\n+                        // logger.info(res.toString());\n+\n+                    }\n+                });\n+        logger.info(\"Response details: \"\n+                + PcStringUtils.renderJson(pt.getParallelTaskResult()));\n+        for (Object o : responseContext.values()) {\n+\n+            Double cpuDouble = Double.parseDouble((String) o);\n+            Asserts.check(cpuDouble <= 100.0 && cpuDouble >= 0.0,\n+                    \" Fail to extract cpu values\");\n+        }\n+\n+    }\n+\n+}"
            },
            {
                "sha": "41ed22a24c6684358f28cf8ea89b830b9edf4fae",
                "filename": "src/test/java/io/parallec/core/main/http/ParallelClientHttpOtherMethodsTest.java",
                "status": "added",
                "additions": 85,
                "deletions": 0,
                "changes": 85,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2FParallelClientHttpOtherMethodsTest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2FParallelClientHttpOtherMethodsTest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2FParallelClientHttpOtherMethodsTest.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,85 @@\n+package io.parallec.core.main.http;\n+\n+import io.parallec.core.ParallecResponseHandler;\n+import io.parallec.core.ParallelClient;\n+import io.parallec.core.ResponseOnSingleTask;\n+import io.parallec.core.TestBase;\n+\n+import java.util.Map;\n+\n+import org.junit.AfterClass;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+\n+public class ParallelClientHttpOtherMethodsTest extends TestBase {\n+\n+    private static ParallelClient pc;\n+\n+    @BeforeClass\n+    public static void setUp() throws Exception {\n+        pc = new ParallelClient();\n+    }\n+\n+    @AfterClass\n+    public static void shutdown() throws Exception {\n+        pc.releaseExternalResources();\n+    }\n+\n+    @Test\n+    public void hitWebsitesInvalidHttpMethods() {\n+\n+        pc.prepareHttpPut(\"/validateInternals.html\")\n+                .setConcurrency(1700)\n+                .setTargetHostsFromString(\n+                        \"parallec.github.io www.jeffpei.com www.restcommander.com\")\n+                .execute(new ParallecResponseHandler() {\n+                    @Override\n+                    public void onCompleted(ResponseOnSingleTask res,\n+                            Map<String, Object> responseContext) {\n+                        logger.info(\"expected wrong HTTP methods {}\",\n+                                res.toString());\n+                    }\n+                });\n+\n+        pc.prepareHttpDelete(\"/validateInternals.html\")\n+                .setConcurrency(1700)\n+                .setTargetHostsFromString(\n+                        \"parallec.github.io www.jeffpei.com www.restcommander.com\")\n+                .execute(new ParallecResponseHandler() {\n+                    @Override\n+                    public void onCompleted(ResponseOnSingleTask res,\n+                            Map<String, Object> responseContext) {\n+                        logger.info(\"expected wrong HTTP methods {}\",\n+                                res.toString());\n+                    }\n+                });\n+\n+        pc.prepareHttpHead(\"/validateInternals.html\")\n+                .setConcurrency(1700)\n+                .setTargetHostsFromString(\n+                        \"parallec.github.io www.jeffpei.com www.restcommander.com\")\n+                .execute(new ParallecResponseHandler() {\n+                    @Override\n+                    public void onCompleted(ResponseOnSingleTask res,\n+                            Map<String, Object> responseContext) {\n+                        logger.info(\"expected wrong HTTP methods {}\",\n+                                res.toString());\n+                    }\n+                });\n+\n+        pc.prepareHttpOptions(\"/validateInternals.html\")\n+                .setConcurrency(1700)\n+                .setTargetHostsFromString(\n+                        \"parallec.github.io www.jeffpei.com www.restcommander.com\")\n+                .execute(new ParallecResponseHandler() {\n+                    @Override\n+                    public void onCompleted(ResponseOnSingleTask res,\n+                            Map<String, Object> responseContext) {\n+                        logger.info(\"expected wrong HTTP methods {}\",\n+                                res.toString());\n+                    }\n+                });\n+\n+    }// end func\n+\n+}"
            },
            {
                "sha": "88aac15062734bb1d496f231789be8d8de6dbda6",
                "filename": "src/test/java/io/parallec/core/main/http/ParallelClientHttpSmallConcurrencyTest.java",
                "status": "added",
                "additions": 82,
                "deletions": 0,
                "changes": 82,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2FParallelClientHttpSmallConcurrencyTest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2FParallelClientHttpSmallConcurrencyTest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2FParallelClientHttpSmallConcurrencyTest.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,82 @@\n+/*  \n+Copyright [2013-2015] eBay Software Foundation\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+    http://www.apache.org/licenses/LICENSE-2.0\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+ */\n+package io.parallec.core.main.http;\n+\n+import io.parallec.core.ParallecResponseHandler;\n+import io.parallec.core.ParallelClient;\n+import io.parallec.core.ResponseOnSingleTask;\n+import io.parallec.core.TestBase;\n+\n+import java.util.Map;\n+\n+import org.junit.AfterClass;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+\n+/**\n+ * The most basic test with hitting the same URL at 3 different websites.\n+ * require Internet access for testing.\n+ * \n+ * <p>\n+ * This example shows 1. Basic request construction 2. how to use response\n+ * context to pass value during the response handler out to a global space\n+ * </p>\n+ */\n+public class ParallelClientHttpSmallConcurrencyTest extends TestBase {\n+\n+    /** The pc. */\n+    private static ParallelClient pc;\n+\n+    /**\n+     * Sets the up.\n+     *\n+     * @throws Exception\n+     *             the exception\n+     */\n+    @BeforeClass\n+    public static void setUp() throws Exception {\n+        pc = new ParallelClient();\n+    }\n+\n+    /**\n+     * Shutdown.\n+     *\n+     * @throws Exception\n+     *             the exception\n+     */\n+    @AfterClass\n+    public static void shutdown() throws Exception {\n+        pc.releaseExternalResources();\n+    }\n+\n+    /**\n+     * Hit websites min sync.\n+     */\n+    @Test\n+    public void hitWebsitesMinSync() {\n+        pc.prepareHttpGet(\"\")\n+                .setConcurrency(10)\n+                .setTargetHostsFromLineByLineText(FILEPATH_TOP_100,\n+                        SOURCE_LOCAL).execute(new ParallecResponseHandler() {\n+\n+                    @Override\n+                    public void onCompleted(ResponseOnSingleTask res,\n+                            Map<String, Object> responseContext) {\n+                        logger.info(res.getStatusCode());\n+\n+                    }\n+                });\n+\n+    }\n+\n+}"
            },
            {
                "sha": "f911b112d8165ed4f4673fef5961817cb7be622a",
                "filename": "src/test/java/io/parallec/core/main/http/ParallelClientHttpTop100WebsiteTest.java",
                "status": "added",
                "additions": 98,
                "deletions": 0,
                "changes": 98,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2FParallelClientHttpTop100WebsiteTest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2FParallelClientHttpTop100WebsiteTest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2FParallelClientHttpTop100WebsiteTest.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,98 @@\n+package io.parallec.core.main.http;\n+\n+import io.parallec.core.ParallecResponseHandler;\n+import io.parallec.core.ParallelClient;\n+import io.parallec.core.ParallelTask;\n+import io.parallec.core.ResponseOnSingleTask;\n+import io.parallec.core.TestBase;\n+import io.parallec.core.util.PcFileNetworkIoUtils;\n+import io.parallec.core.util.PcStringUtils;\n+\n+import java.net.InetAddress;\n+import java.net.UnknownHostException;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+\n+import org.junit.AfterClass;\n+import org.junit.BeforeClass;\n+import org.junit.Ignore;\n+import org.junit.Test;\n+\n+public class ParallelClientHttpTop100WebsiteTest extends TestBase {\n+\n+    private static ParallelClient pc;\n+\n+    @BeforeClass\n+    public static void setUp() throws Exception {\n+        pc = new ParallelClient();\n+    }\n+\n+    @AfterClass\n+    public static void shutdown() throws Exception {\n+        pc.releaseExternalResources();\n+    }\n+\n+\n+    @Test\n+    public void hitTop100WebsitesMin() {\n+\n+        ParallelTask pt = pc\n+                .prepareHttpGet(\"\")\n+                .setConcurrency(1000)\n+                .setSaveResponseToTask(true)\n+                .setTargetHostsFromLineByLineText(FILEPATH_TOP_100,\n+                        SOURCE_LOCAL).execute(new ParallecResponseHandler() {\n+\n+                    @Override\n+                    public void onCompleted(ResponseOnSingleTask res,\n+                            Map<String, Object> responseContext) {\n+                            logger.info(\"Responose Code:\" + res.getStatusCode()\n+                                    + \" host: \" + res.getHost());\n+                    }\n+                });\n+        logger.info(\"Result Summary\\n{}\",\n+                PcStringUtils.renderJson(pt.getAggregateResultFullSummary()));\n+\n+        pt.saveLogToLocal();\n+    }\n+\n+    @Ignore\n+    // @Test\n+    public void hitTop100WebsitesViaIps() {\n+\n+        List<String> hostNames = PcFileNetworkIoUtils\n+                .getListFromLineByLineText(FILEPATH_TOP_100, SOURCE_LOCAL);\n+\n+        List<String> hostIps = new ArrayList<String>();\n+        int count = 0;\n+        for (String hostName : hostNames) {\n+            logger.info(\"get ip for host # {}\", ++count);\n+            InetAddress address;\n+            try {\n+                address = InetAddress.getByName(hostName);\n+                hostIps.add(address.getHostAddress());\n+            } catch (UnknownHostException e) {\n+                e.printStackTrace();\n+            }\n+        }\n+\n+        ParallelTask pt = pc.prepareHttpGet(\"\").setConcurrency(1000)\n+                .setTargetHostsFromList(hostIps)\n+                // .setTargetHostsFromLineByLineText(FILEPATH_TOP_100,\n+                // SOURCE_LOCAL)\n+                .execute(new ParallecResponseHandler() {\n+\n+                    @Override\n+                    public void onCompleted(ResponseOnSingleTask res,\n+                            Map<String, Object> responseContext) {\n+                        logger.info(\"Responose Code:\" + res.getStatusCode()\n+                                + \" host: \" + res.getHost());\n+                    }\n+                });\n+        logger.info(\"Result Summary\\n{}\",\n+                PcStringUtils.renderJson(pt.getAggregateResultCountSummary()));\n+\n+    }\n+\n+}"
            },
            {
                "sha": "ed1339d325a6dd1a948f288b880a236be05d7f94",
                "filename": "src/test/java/io/parallec/core/main/http/ParallelClientHttpTop500WebsiteTest.java",
                "status": "added",
                "additions": 113,
                "deletions": 0,
                "changes": 113,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2FParallelClientHttpTop500WebsiteTest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2FParallelClientHttpTop500WebsiteTest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2FParallelClientHttpTop500WebsiteTest.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,113 @@\n+package io.parallec.core.main.http;\n+\n+import io.parallec.core.ParallecResponseHandler;\n+import io.parallec.core.ParallelClient;\n+import io.parallec.core.ParallelTask;\n+import io.parallec.core.ResponseOnSingleTask;\n+import io.parallec.core.TestBase;\n+import io.parallec.core.util.PcStringUtils;\n+\n+import java.util.Map;\n+\n+import org.junit.AfterClass;\n+import org.junit.BeforeClass;\n+import org.junit.Ignore;\n+import org.junit.Test;\n+\n+public class ParallelClientHttpTop500WebsiteTest extends TestBase {\n+\n+    private static ParallelClient pc;\n+\n+    @BeforeClass\n+    public static void setUp() throws Exception {\n+        pc = new ParallelClient();\n+    }\n+\n+    @AfterClass\n+    public static void shutdown() throws Exception {\n+        pc.releaseExternalResources();\n+    }\n+\n+\n+    /**\n+     * Add throttling of 50 when need to hit around 500 web sites testing wait\n+     * and retry part\n+     */\n+    @Test\n+    public void hitTop500WebsitesThrottling() {\n+\n+        ParallelTask pt = pc\n+                .prepareHttpGet(\"\")\n+                .async()\n+                .setConcurrency(500)\n+                .setTargetHostsFromLineByLineText(FILEPATH_TOP_500,\n+                        SOURCE_LOCAL).execute(new ParallecResponseHandler() {\n+                    @Override\n+                    public void onCompleted(ResponseOnSingleTask res,\n+                            Map<String, Object> responseContext) {\n+                        logger.info(\"Responose Code:\" + res.getStatusCode()\n+                                + \" host: \" + res.getHost());\n+                    }\n+                });\n+\n+        while (!pt.isCompleted()) {\n+            try {\n+                Thread.sleep(100L);\n+                System.err.println(String.format(\n+                        \"POLL_JOB_PROGRESS (%.5g%%)  PT jobid: %s\",\n+                        pt.getProgress(), pt.getTaskId()));\n+                pc.logHealth();\n+            } catch (InterruptedException e) {\n+                e.printStackTrace();\n+            }\n+        }\n+        logger.info(\"Result Summary\\n{}\",\n+                PcStringUtils.renderJson(pt.getAggregateResultCountSummary()));\n+\n+    }// end func\n+\n+    /**\n+     * Local ISP seems cannot be more than 500 concurrency or will fail\n+     */\n+    // @Test\n+    @Ignore\n+    public void hitTop1000WebsitesThrottling() {\n+\n+        long startTime = System.currentTimeMillis();\n+        ParallelTask pt = pc\n+                .prepareHttpGet(\"\")\n+                .async()\n+                .setConcurrency(500)\n+                .setTargetHostsFromLineByLineText(FILEPATH_TOP_1000,\n+                        SOURCE_LOCAL).execute(new ParallecResponseHandler() {\n+                    @Override\n+                    public void onCompleted(ResponseOnSingleTask res,\n+                            Map<String, Object> responseContext) {\n+                        logger.info(\"Responose Code:\" + res.getStatusCode()\n+                                + \" host: \" + res.getHost());\n+                    }\n+                });\n+\n+        while (!pt.isCompleted()) {\n+            try {\n+                Thread.sleep(1000L);\n+                pc.logHealth();\n+                // System.err.println(String.format(\"POLL_JOB_PROGRESS (%.5g%%)  PT jobid: %s\",\n+                // pt.getProgress(), pt.getTaskId() ));\n+            } catch (InterruptedException e) {\n+                e.printStackTrace();\n+            }\n+        }\n+\n+        long endTime = System.currentTimeMillis();\n+\n+        String secondElapsedStr = new Double((endTime - startTime) / 1000.0)\n+                .toString();\n+\n+        logger.info(\"Result Summary\\n{}\",\n+                PcStringUtils.renderJson(pt.getAggregateResultCountSummary()));\n+        logger.info(\"Hit 10K website use {} seconds.\", secondElapsedStr);\n+\n+    }\n+\n+}"
            },
            {
                "sha": "6a8e61934d3cf76c510832ea05809f515e7cb6f1",
                "filename": "src/test/java/io/parallec/core/main/http/ParallelTaskCancelOnTargetHostsTest.java",
                "status": "added",
                "additions": 123,
                "deletions": 0,
                "changes": 123,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2FParallelTaskCancelOnTargetHostsTest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2FParallelTaskCancelOnTargetHostsTest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2FParallelTaskCancelOnTargetHostsTest.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,123 @@\n+package io.parallec.core.main.http;\n+\n+import io.parallec.core.ParallecResponseHandler;\n+import io.parallec.core.ParallelClient;\n+import io.parallec.core.ParallelTask;\n+import io.parallec.core.ResponseOnSingleTask;\n+import io.parallec.core.TestBase;\n+import io.parallec.core.actor.ExecutionManagerTest;\n+import io.parallec.core.task.ParallelTaskState;\n+\n+import java.util.Arrays;\n+import java.util.Map;\n+\n+import org.apache.http.util.Asserts;\n+import org.junit.AfterClass;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+\n+/**\n+ * TODO Testing the enabled capacity control\n+ * \n+ * @author Yuanteng Jeff Pei\n+ *\n+ */\n+public class ParallelTaskCancelOnTargetHostsTest extends TestBase {\n+\n+    private static ParallelClient pc;\n+\n+    @BeforeClass\n+    public static void setUp() throws Exception {\n+        pc = new ParallelClient();\n+    }\n+\n+    @AfterClass\n+    public static void shutdown() throws Exception {\n+        pc.releaseExternalResources();\n+    }\n+\n+    @Test\n+    public void cancelSingleHostAfter200MillisGoodAndBadHostName() {\n+        ParallelTask pt = pc\n+                .prepareHttpGet(\"\")\n+                .async()\n+                .setConcurrency(100)\n+                .setTargetHostsFromLineByLineText(FILEPATH_TOP_100,\n+                        SOURCE_LOCAL).execute(new ParallecResponseHandler() {\n+\n+                    @Override\n+                    public void onCompleted(ResponseOnSingleTask res,\n+                            Map<String, Object> responseContext) {\n+                        logger.info(\"Responose Code:\" + res.getStatusCode()\n+                                + \" host: \" + res.getHost());\n+                    }\n+                });\n+        boolean hasCanceled = false;\n+        boolean cancelSuccess = false;\n+        while (!pt.isCompleted()) {\n+            try {\n+                Thread.sleep(200L);\n+                if (!hasCanceled) {\n+                    logger.info(\"try to cancel on target\");\n+                    cancelSuccess = pt.cancelOnTargetHosts(Arrays.asList(\n+                            \"badhostName\", \"www.walmart.com\"));\n+                    hasCanceled = true;\n+                }\n+                System.err.println(String.format(\n+                        \"POLL_JOB_PROGRESS (%.5g%%)  PT jobid: %s\",\n+                        pt.getProgress(), pt.getTaskId()));\n+            } catch (InterruptedException e) {\n+                e.printStackTrace();\n+            }\n+        }\n+\n+        Asserts.check(cancelSuccess == true,\n+                \"fail cancelSingleHostAfter200Millis\");\n+        pt.saveLogToLocal();\n+    }\n+\n+    @Test\n+    public void cancelSingleHostAfterDone() {\n+        ParallelTask pt = pc\n+                .prepareHttpGet(\"\")\n+                .async()\n+                .setConcurrency(100)\n+                .setTargetHostsFromLineByLineText(FILEPATH_TOP_100,\n+                        SOURCE_LOCAL).execute(new ParallecResponseHandler() {\n+\n+                    @Override\n+                    public void onCompleted(ResponseOnSingleTask res,\n+                            Map<String, Object> responseContext) {\n+                        logger.info(\"Responose Code:\" + res.getStatusCode()\n+                                + \" host: \" + res.getHost());\n+                    }\n+                });\n+        while (!pt.isCompleted()) {\n+            try {\n+                Thread.sleep(1000L);\n+                System.err.println(String.format(\n+                        \"POLL_JOB_PROGRESS (%.5g%%)  PT jobid: %s\",\n+                        pt.getProgress(), pt.getTaskId()));\n+            } catch (InterruptedException e) {\n+                e.printStackTrace();\n+            }\n+        }\n+        pt.cancelOnTargetHosts(Arrays.asList(\"www.walmart.com\"));\n+    }\n+\n+    @Test\n+    public void testCancelOnHostException() {\n+        ParallelTask task = ExecutionManagerTest.genParallelTask();\n+        task.setState(null);\n+        task.cancelOnTargetHosts(Arrays.asList(\"target\"));\n+    }\n+\n+    @Test\n+    public void testCancelOnHostNullManager() {\n+        ParallelTask task = ExecutionManagerTest.genParallelTask();\n+        task.setState(ParallelTaskState.IN_PROGRESS);\n+        task.executionManager = null;\n+        task.cancelOnTargetHosts(Arrays.asList(\"target\"));\n+    }\n+\n+}"
            },
            {
                "sha": "14c2dcbce2a28faf95334a4e7927e7c7189b0689",
                "filename": "src/test/java/io/parallec/core/main/http/ParallelTaskCancelWholeTaskTest.java",
                "status": "added",
                "additions": 128,
                "deletions": 0,
                "changes": 128,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2FParallelTaskCancelWholeTaskTest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2FParallelTaskCancelWholeTaskTest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2FParallelTaskCancelWholeTaskTest.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,128 @@\n+package io.parallec.core.main.http;\n+\n+import io.parallec.core.ParallecResponseHandler;\n+import io.parallec.core.ParallelClient;\n+import io.parallec.core.ParallelTask;\n+import io.parallec.core.ResponseOnSingleTask;\n+import io.parallec.core.TestBase;\n+\n+import java.util.Map;\n+\n+import org.junit.AfterClass;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+\n+/**\n+ * TODO Testing the enabled capacity control\n+ * \n+ * @author Yuanteng Jeff Pei\n+ *\n+ */\n+public class ParallelTaskCancelWholeTaskTest extends TestBase {\n+\n+    private static ParallelClient pc;\n+\n+    @BeforeClass\n+    public static void setUp() throws Exception {\n+        pc = new ParallelClient();\n+    }\n+\n+    @AfterClass\n+    public static void shutdown() throws Exception {\n+        pc.releaseExternalResources();\n+    }\n+\n+    @Test\n+    public void cancelAfter100ms() {\n+        // $NULL_UR\n+        ParallelTask pt = pc\n+                .prepareHttpGet(\"\")\n+                .async()\n+                .setConcurrency(300)\n+                .setTargetHostsFromLineByLineText(FILEPATH_TOP_100,\n+                        SOURCE_LOCAL).execute(new ParallecResponseHandler() {\n+\n+                    @Override\n+                    public void onCompleted(ResponseOnSingleTask res,\n+                            Map<String, Object> responseContext) {\n+                        logger.info(\"Responose Code:\" + res.getStatusCode()\n+                                + \" host: \" + res.getHost());\n+                    }\n+                });\n+        boolean hasCanceled = false;\n+        while (!pt.isCompleted()) {\n+            try {\n+                Thread.sleep(100L);\n+                if (!hasCanceled)\n+                    pt.cancel(false);\n+                System.err.println(String.format(\n+                        \"POLL_JOB_PROGRESS (%.5g%%)  PT jobid: %s\",\n+                        pt.getProgress(), pt.getTaskId()));\n+            } catch (InterruptedException e) {\n+                e.printStackTrace();\n+            }\n+        }\n+\n+    }\n+\n+    @Test\n+    public void cancelAfterDone() {\n+        // $NULL_UR\n+        ParallelTask pt = pc\n+                .prepareHttpGet(\"\")\n+                .async()\n+                .setConcurrency(300)\n+                .setTargetHostsFromLineByLineText(FILEPATH_TOP_100,\n+                        SOURCE_LOCAL).execute(new ParallecResponseHandler() {\n+\n+                    @Override\n+                    public void onCompleted(ResponseOnSingleTask res,\n+                            Map<String, Object> responseContext) {\n+                        logger.info(\"Responose Code:\" + res.getStatusCode()\n+                                + \" host: \" + res.getHost());\n+                    }\n+                });\n+        while (!pt.isCompleted()) {\n+            try {\n+                Thread.sleep(2000L);\n+                System.err.println(String.format(\n+                        \"POLL_JOB_PROGRESS (%.5g%%)  PT jobid: %s\",\n+                        pt.getProgress(), pt.getTaskId()));\n+            } catch (InterruptedException e) {\n+                e.printStackTrace();\n+            }\n+        }\n+        pt.cancel(true);\n+    }\n+\n+    @Test\n+    public void cancelAfter2Sec() {\n+        ParallelTask pt = pc\n+                .prepareHttpGet(\"\")\n+                .async()\n+                .setConcurrency(300)\n+                .setTargetHostsFromLineByLineText(FILEPATH_TOP_100,\n+                        SOURCE_LOCAL).execute(new ParallecResponseHandler() {\n+\n+                    @Override\n+                    public void onCompleted(ResponseOnSingleTask res,\n+                            Map<String, Object> responseContext) {\n+                        logger.info(\"Responose Code:\" + res.getStatusCode()\n+                                + \" host: \" + res.getHost());\n+                    }\n+                });\n+        while (!pt.isCompleted()) {\n+            try {\n+                Thread.sleep(2000L);\n+                pt.cancel(true);\n+                System.err.println(String.format(\n+                        \"POLL_JOB_PROGRESS (%.5g%%)  PT jobid: %s\",\n+                        pt.getProgress(), pt.getTaskId()));\n+            } catch (InterruptedException e) {\n+                e.printStackTrace();\n+            }\n+        }\n+        pt.saveLogToLocal();\n+    }\n+\n+}"
            },
            {
                "sha": "b01d9e97bf2a491acc88491b2bf30425e58311aa",
                "filename": "src/test/java/io/parallec/core/main/http/pollable/ParallelClientHttpPollerJobTest.java",
                "status": "added",
                "additions": 123,
                "deletions": 0,
                "changes": 123,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2Fpollable%2FParallelClientHttpPollerJobTest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2Fpollable%2FParallelClientHttpPollerJobTest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2Fpollable%2FParallelClientHttpPollerJobTest.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,123 @@\n+package io.parallec.core.main.http.pollable;\n+\n+import io.parallec.core.ParallecHeader;\n+import io.parallec.core.ParallecResponseHandler;\n+import io.parallec.core.ParallelClient;\n+import io.parallec.core.ParallelTask;\n+import io.parallec.core.ResponseOnSingleTask;\n+import io.parallec.core.TestBase;\n+import io.parallec.core.actor.poll.HttpPollerProcessor;\n+import io.parallec.core.main.http.pollable.sampleserver.HttpServerThread;\n+import io.parallec.core.main.http.pollable.sampleserver.ServerWithPollableJobs;\n+\n+import java.util.Map;\n+\n+import org.junit.AfterClass;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+\n+public class ParallelClientHttpPollerJobTest extends TestBase {\n+\n+    private static ParallelClient pc;\n+    private static HttpServerThread serverThread;\n+\n+    @BeforeClass\n+    public static void setUp() throws Exception {\n+        pc = new ParallelClient();\n+\n+        serverThread = new HttpServerThread();\n+        serverThread.start();\n+\n+        try {\n+            Thread.sleep(500L);\n+        } catch (Exception e) {\n+            ;\n+        }\n+    }\n+\n+    @AfterClass\n+    public static void shutdown() throws Exception {\n+        pc.releaseExternalResources();\n+        serverThread.setShutdown(true);\n+\n+        try {\n+            Thread.sleep(500L);\n+        } catch (Exception e) {\n+            ;\n+        }\n+    }\n+\n+    public HttpPollerProcessor generateSampleHttpPoller() {\n+\n+        // Init the poller\n+        String pollerType = \"CronusAgentPoller\";\n+        String successRegex = \".*\\\"progress\\\"\\\\s*:\\\\s*(100).*}\";\n+        String failureRegex = \".*\\\"error\\\"\\\\s*:\\\\s*(.*).*}\";\n+        String jobIdRegex = \".*\\\"/status/(.*?)\\\".*\";\n+        String progressRegex = \".*\\\"progress\\\"\\\\s*:\\\\s*([0-9]*).*}\";\n+        int progressStuckTimeoutSeconds = 600;\n+        int maxPollError = 5;\n+        long pollIntervalMillis = 2000L;\n+        String jobIdPlaceHolder = \"$JOB_ID\";\n+        String pollerRequestTemplate = \"/status/\" + jobIdPlaceHolder;\n+\n+        HttpPollerProcessor httpPollerProcessor = new HttpPollerProcessor(\n+                pollerType, successRegex, failureRegex, jobIdRegex,\n+                progressRegex, progressStuckTimeoutSeconds, pollIntervalMillis,\n+                pollerRequestTemplate, jobIdPlaceHolder, maxPollError);\n+\n+        return httpPollerProcessor;\n+    }\n+\n+    /**\n+     * different requests to different target URLs\n+     * http://www.jeffpei.com/job_b.html http://www.restsuperman.com/job_c.html\n+     */\n+    @Test(timeout = 50000)\n+    public void asyncPollerTest() {\n+\n+        HttpPollerProcessor httpPollerProcessor = generateSampleHttpPoller();\n+\n+        ParallelTask task = pc\n+                .prepareHttpPost(\"/submitJob\")\n+                .setHttpHeaders(\n+                        new ParallecHeader().addPair(\"authorization\",\n+                                ServerWithPollableJobs.AUTH_KEY))\n+                .setHttpPort(10080).setConcurrency(1500)\n+                .setTargetHostsFromString(\"localhost\").setHttpPollable(true)\n+                .setHttpPollerProcessor(httpPollerProcessor)\n+                .execute(new ParallecResponseHandler() {\n+                    @Override\n+                    public void onCompleted(ResponseOnSingleTask res,\n+                            Map<String, Object> responseContext) {\n+                        logger.info(\"getPollingHistory:\"\n+                                + res.getPollingHistory() + \" host: \"\n+                                + res.getHost());\n+                        logger.info(res.toString());\n+                    }\n+                });\n+        logger.info(\"Task Pretty Print: \\n{}\", task.prettyPrintInfo());\n+    }\n+\n+    @Test(timeout = 20000)\n+    public void asyncPollerWrongJobIdRegexTest() {\n+\n+        HttpPollerProcessor httpPollerProcessor = generateSampleHttpPoller();\n+        httpPollerProcessor.setJobIdRegex(\".*\\\"/statusWrong/(.*?)\\\".*\");\n+        pc.prepareHttpPost(\"/submitJob\").setHttpPort(10080).setConcurrency(1500)\n+                .setTargetHostsFromString(\"localhost\").setHttpPollable(true)\n+                .setHttpPollerProcessor(httpPollerProcessor)\n+                .execute(new ParallecResponseHandler() {\n+                    @Override\n+                    public void onCompleted(ResponseOnSingleTask res,\n+                            Map<String, Object> responseContext) {\n+                        logger.info(\"getPollingHistory:\"\n+                                + res.getPollingHistory() + \" host: \"\n+                                + res.getHost());\n+                        logger.debug(res.toString());\n+                    }\n+                });\n+\n+    }\n+\n+}"
            },
            {
                "sha": "893bef21f71d544b417d38871f70126b631b04a1",
                "filename": "src/test/java/io/parallec/core/main/http/pollable/sampleserver/HttpServerThread.java",
                "status": "added",
                "additions": 35,
                "deletions": 0,
                "changes": 35,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2Fpollable%2Fsampleserver%2FHttpServerThread.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2Fpollable%2Fsampleserver%2FHttpServerThread.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2Fpollable%2Fsampleserver%2FHttpServerThread.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,35 @@\n+package io.parallec.core.main.http.pollable.sampleserver;\n+\n+import java.io.IOException;\n+import java.util.logging.Logger;\n+\n+public class HttpServerThread extends Thread {\n+    private static Logger logger = Logger.getLogger(HttpServerThread.class\n+            .getName());\n+    private volatile boolean shutdown = false;\n+\n+    @Override\n+    public void run() {\n+\n+        try {\n+            ServerWithPollableJobs server = new ServerWithPollableJobs();\n+            while (!this.isShutdown()) {\n+                ;\n+            }\n+            server.stop();\n+            logger.info(\"Server Stopped..\");\n+        } catch (IOException ioe) {\n+            System.err.println(\"Couldn't start server:\\n\" + ioe);\n+        }\n+\n+    }\n+\n+    public boolean isShutdown() {\n+        return shutdown;\n+    }\n+\n+    public void setShutdown(boolean shutdown) {\n+        this.shutdown = shutdown;\n+    }\n+\n+}"
            },
            {
                "sha": "75f6ccad39682b448ec6a05ec8b8b720aaaf73f0",
                "filename": "src/test/java/io/parallec/core/main/http/pollable/sampleserver/ServerWithPollableJobs.java",
                "status": "added",
                "additions": 200,
                "deletions": 0,
                "changes": 200,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2Fpollable%2Fsampleserver%2FServerWithPollableJobs.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2Fpollable%2Fsampleserver%2FServerWithPollableJobs.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2Fpollable%2Fsampleserver%2FServerWithPollableJobs.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,200 @@\n+package io.parallec.core.main.http.pollable.sampleserver;\n+\n+import java.io.IOException;\n+import java.util.Date;\n+import java.util.Map;\n+import java.util.UUID;\n+import java.util.concurrent.ConcurrentHashMap;\n+import java.util.logging.Logger;\n+\n+import fi.iki.elonen.NanoHTTPD;\n+import fi.iki.elonen.NanoHTTPD.Response.Status;\n+\n+/**\n+ * runs at port 10080 will run forever until being killed\n+ * \n+ * Accept 1. POST: /submitJob; 2. GET: /status/$JOB_ID ; 3. GET /testHeaders to\n+ * log \"sample\" keyvalue in header\n+ * \n+ * note that the job map will never be clean up until it reaches 8192\n+ * \n+ * @author Yuanteng Jeff Pei\n+ *\n+ */\n+public class ServerWithPollableJobs extends NanoHTTPD {\n+\n+    public static String AUTH_KEY = \"SAMPLE_AUTH_KEY\";\n+    private static Logger logger = Logger\n+            .getLogger(ServerWithPollableJobs.class.getName());\n+    public static final int PORT = 10080;\n+\n+    public ServerWithPollableJobs() throws IOException {\n+        super(PORT);\n+        logger.info(\"Try to start nano server. make sure port \" + PORT\n+                + \" is not used!\");\n+        start();\n+\n+        logger.info(\"\\nWeb Server with Pollable Jobs Running! \\n\"\n+                + \"Accept 1. POST: /submitJob; 2. GET: /status/$JOB_ID s\\n\"\n+                + \"Point your browers to http://localhost:10080/ \\n\");\n+    }\n+\n+    public static void main(String[] args) {\n+        try {\n+            new ServerWithPollableJobs();\n+            while (true) {\n+                ;\n+            }\n+        } catch (IOException ioe) {\n+            System.err.println(\"Couldn't start server:\\n\" + ioe);\n+        }\n+    }\n+\n+    public static Map<String, NanoJob> jobMap = new ConcurrentHashMap<String, NanoJob>();\n+\n+    public final int MAX_JOB_SIZE = 8192;\n+\n+    public synchronized NanoJob addJob() {\n+\n+        if (jobMap.size() >= MAX_JOB_SIZE) {\n+            logger.info(\"jobMap too large. clean up\");\n+            jobMap.clear();\n+        }\n+\n+        NanoJob job = new NanoJob();\n+        jobMap.put(job.getJobId(), job);\n+\n+        return job;\n+    }\n+\n+    @Override\n+    public Response serve(IHTTPSession session) {\n+        String msg = \"<html><body><h1>Hello server</h1>\\n\";\n+        String msgUnauthorized = \"<html><body><h1>Unauthorized</h1>\\n\";\n+        Method method = session.getMethod();\n+        String uri = session.getUri();\n+\n+        /**\n+         * if request is submit a job: 1. submit job POST: /submitJob return:\n+         * {\"status\": \"/status/01218499-a5fe-47cf-a0a8-8e9b106c5219\",\n+         * \"progress\": 0}\n+         * \n+         * 2. poll progress GET: /status/{JobID}\n+         * \n+         * \n+         */\n+\n+        logger.info(\"GET REQ: Method \" + method + \"  URL: \" + uri);\n+\n+        if (method == Method.POST && uri.contains(\"submitJob\")) {\n+\n+            // careful authorization may change to lower case\n+            if ((session.getHeaders().containsKey(\"authorization\") && session\n+                    .getHeaders().get(\"authorization\")\n+                    .equalsIgnoreCase(AUTH_KEY))) {\n+\n+                NanoJob job = addJob();\n+\n+                msg = \"{\\\"status\\\": \\\"/status/\" + job.getJobId()\n+                        + \"\\\", \\\"progress\\\": 0}\";\n+                logger.info(\"SERVER_RESPONSE_200: \" + msg);\n+                return new fi.iki.elonen.NanoHTTPD.Response(Status.OK,\n+                        \"application/json\", msg);\n+            } else {\n+                logger.info(\"SERVER_RESPONSE_401: \" + msg);\n+                return new fi.iki.elonen.NanoHTTPD.Response(\n+                        Status.UNAUTHORIZED, \"application/json\",\n+                        msgUnauthorized);\n+            }\n+\n+        } else if (method == Method.GET && uri.contains(\"/status/\")) {\n+\n+            // poll progress\n+            String jobId = uri.replace(\"/status/\", \"\");\n+            NanoJob pollJob = jobMap.get(jobId);\n+            if (pollJob == null) {\n+                msg = \"{\\\"status\\\": \\\"/status/\" + jobId\n+                        + \"\\\", \\\"errorMsg\\\": \\\"job not found\\\"}\";\n+                logger.info(\"SERVER_RESPONSE_404: \" + msg);\n+                return new fi.iki.elonen.NanoHTTPD.Response(Status.NOT_FOUND,\n+                        \"application/json\", msg);\n+            } else {\n+                pollJob.makeProgress();\n+                msg = \"{\\\"status\\\": \\\"/status/\" + jobId + \"\\\", \\\"progress\\\": \"\n+                        + pollJob.getProgress() + \"}\";\n+                logger.info(\"SERVER_RESPONSE_200: \" + msg);\n+                return new fi.iki.elonen.NanoHTTPD.Response(Status.OK,\n+                        \"application/json\", msg);\n+            }\n+\n+        } else if (method == Method.GET && uri.contains(\"/testHeaders\")) {\n+\n+            if (session.getHeaders().containsKey(\"sample\")) {\n+                logger.info(\"Sample Header value {}: \"\n+                        + session.getHeaders().get(\"sample\"));\n+\n+                msg = session.getHeaders().get(\"sample\");\n+                logger.info(\"SERVER_RESPONSE_200: \" + msg);\n+                return new fi.iki.elonen.NanoHTTPD.Response(Status.OK,\n+                        \"application/json\", msg);\n+\n+            }\n+\n+        }// end else\n+        msg = \"{ \\\"errorMsg\\\": \\\"bad request. Accept 1. POST: /submitJob; 2. GET: /status/$JOB_ID \\\"}\";\n+        return new fi.iki.elonen.NanoHTTPD.Response(Status.BAD_REQUEST,\n+                \"application/json\", msg);\n+\n+    }\n+\n+    public static class NanoJob {\n+\n+        private String jobId;\n+        private int progress;\n+\n+        private Date startTime;\n+\n+        public void makeProgress() {\n+\n+            Date currentTime = new Date();\n+            int seconds = (int) ((currentTime.getTime() - startTime.getTime()) / 1000L);\n+\n+            if (seconds >= 10)\n+                progress = 100;\n+            else\n+                progress = (int) seconds * 10;\n+\n+        }\n+\n+        public String getJobId() {\n+            return jobId;\n+        }\n+\n+        public void setJobId(String jobId) {\n+            this.jobId = jobId;\n+        }\n+\n+        public int getProgress() {\n+            return progress;\n+        }\n+\n+        public void setProgress(int progress) {\n+            this.progress = progress;\n+        }\n+\n+        public NanoJob(String jobId, int progress) {\n+            super();\n+            this.jobId = jobId;\n+            this.progress = progress;\n+            this.startTime = new Date();\n+        }\n+\n+        public NanoJob() {\n+            super();\n+            this.jobId = UUID.randomUUID().toString();\n+            this.progress = 0;\n+            this.startTime = new Date();\n+        }\n+    }\n+\n+}"
            },
            {
                "sha": "a5a34d690fb86d5c6ee1ebf6a068013766e409f3",
                "filename": "src/test/java/io/parallec/core/main/http/request/template/ParallelClientVarReplacementHostSpecificHeaderTest.java",
                "status": "added",
                "additions": 78,
                "deletions": 0,
                "changes": 78,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2Frequest%2Ftemplate%2FParallelClientVarReplacementHostSpecificHeaderTest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2Frequest%2Ftemplate%2FParallelClientVarReplacementHostSpecificHeaderTest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2Frequest%2Ftemplate%2FParallelClientVarReplacementHostSpecificHeaderTest.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,78 @@\n+package io.parallec.core.main.http.request.template;\n+\n+import io.parallec.core.ParallecHeader;\n+import io.parallec.core.ParallecResponseHandler;\n+import io.parallec.core.ParallelClient;\n+import io.parallec.core.ResponseOnSingleTask;\n+import io.parallec.core.TestBase;\n+import io.parallec.core.main.http.pollable.sampleserver.HttpServerThread;\n+\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+\n+import org.apache.http.util.Asserts;\n+import org.junit.AfterClass;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+\n+public class ParallelClientVarReplacementHostSpecificHeaderTest extends\n+        TestBase {\n+\n+    private static ParallelClient pc;\n+    private static HttpServerThread serverThread;\n+\n+    @BeforeClass\n+    public static void setUp() throws Exception {\n+        pc = new ParallelClient();\n+        serverThread = new HttpServerThread();\n+        serverThread.start();\n+    }\n+\n+    @AfterClass\n+    public static void shutdown() throws Exception {\n+        pc.releaseExternalResources();\n+        serverThread.setShutdown(true);\n+    }\n+\n+    /**\n+     * Testing the replacement in the header values. the sample server would\n+     * response with the header values\n+     */\n+    @Test\n+    public void differentRequestsToSameTargetHostWithHeaderReplacement() {\n+        List<String> replaceList = new ArrayList<String>();\n+        replaceList.add(\"111\");\n+        replaceList.add(\"222\");\n+\n+        Map<String, Object> responseContext = new HashMap<String, Object>();\n+        responseContext.put(\"temp\", null);\n+\n+        pc.prepareHttpGet(\"/testHeaders\")\n+                .setHttpHeaders(new ParallecHeader().addPair(\"sample\", \"$SAMPLE\"))\n+                .setConcurrency(1700)\n+                .setHttpPort(10080)\n+                .setReplaceVarMapToSingleTargetSingleVar(\"SAMPLE\", replaceList,\n+                        \"localhost\").setResponseContext(responseContext)\n+                .execute(new ParallecResponseHandler() {\n+\n+                    @Override\n+                    public void onCompleted(ResponseOnSingleTask res,\n+                            Map<String, Object> responseContext) {\n+                        logger.info(res.toString());\n+\n+                        responseContext.put(\"sampleValue\",\n+                                res.getResponseContent());\n+                    }\n+                });\n+\n+        int tempGlobal = Integer.parseInt((String) responseContext\n+                .get(\"sampleValue\"));\n+        Asserts.check(\n+                tempGlobal <= 222 && tempGlobal >= 111,\n+                \" Fail to extract o Fail different request to same server with header replacement test\");\n+\n+    }\n+\n+}"
            },
            {
                "sha": "318353b723bb5af528272047a2c523d1c8e6795d",
                "filename": "src/test/java/io/parallec/core/main/http/request/template/ParallelClientVarReplacementHostSpecificTest.java",
                "status": "added",
                "additions": 367,
                "deletions": 0,
                "changes": 367,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2Frequest%2Ftemplate%2FParallelClientVarReplacementHostSpecificTest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2Frequest%2Ftemplate%2FParallelClientVarReplacementHostSpecificTest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2Frequest%2Ftemplate%2FParallelClientVarReplacementHostSpecificTest.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,367 @@\n+package io.parallec.core.main.http.request.template;\n+\n+import io.parallec.core.FilterRegex;\n+import io.parallec.core.ParallecHeader;\n+import io.parallec.core.ParallecResponseHandler;\n+import io.parallec.core.ParallelClient;\n+import io.parallec.core.ParallelTask;\n+import io.parallec.core.ResponseOnSingleTask;\n+import io.parallec.core.TestBase;\n+import io.parallec.core.bean.StrStrMap;\n+\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+\n+import org.apache.http.util.Asserts;\n+import org.junit.AfterClass;\n+import org.junit.BeforeClass;\n+import org.junit.Ignore;\n+import org.junit.Test;\n+\n+public class ParallelClientVarReplacementHostSpecificTest extends TestBase {\n+\n+    private static ParallelClient pc;\n+\n+    @BeforeClass\n+    public static void setUp() throws Exception {\n+        pc = new ParallelClient();\n+    }\n+\n+    @AfterClass\n+    public static void shutdown() throws Exception {\n+        pc.releaseExternalResources();\n+    }\n+\n+    /**\n+     * different requests to different target URLs\n+     * http://www.jeffpei.com/job_b.html http://www.restsuperman.com/job_c.html\n+     */\n+    @Test\n+    public void hitWebsitesMinTargetHostSpecificReplacement() {\n+\n+        Map<String, StrStrMap> replacementVarMapNodeSpecific = new HashMap<String, StrStrMap>();\n+        replacementVarMapNodeSpecific.put(\"parallec.github.io\",\n+                new StrStrMap().addPair(\"JOB_ID\", \"job_a\"));\n+        replacementVarMapNodeSpecific.put(\"www.jeffpei.com\",\n+                new StrStrMap().addPair(\"JOB_ID\", \"job_b\"));\n+        replacementVarMapNodeSpecific.put(\"www.restcommander.com\",\n+                new StrStrMap().addPair(\"JOB_ID\", \"job_c\"));\n+\n+        pc.prepareHttpGet(\"/$JOB_ID.html\")\n+                .setConcurrency(1700)\n+                .setTargetHostsFromString(\n+                        \"parallec.github.io www.jeffpei.com www.restcommander.com\")\n+                .setReplacementVarMapNodeSpecific(replacementVarMapNodeSpecific)\n+                .execute(new ParallecResponseHandler() {\n+                    @Override\n+                    public void onCompleted(ResponseOnSingleTask res,\n+                            Map<String, Object> responseContext) {\n+                        String extractedString = new FilterRegex(\n+                                \".*<td>JobProgress</td>\\\\s*<td>(.*?)</td>[\\\\s\\\\S]*\")\n+                                .filter(res.getResponseContent());\n+                        logger.info(\"ExtracedString: progress:\"\n+                                + extractedString + \" host: \" + res.getHost());\n+                        logger.debug(res.toString());\n+                    }\n+                });\n+\n+    }\n+\n+    /**\n+     * note that the target host must match the key this is the new way new\n+     * http://parallec.github.io/userdata/sample_weather_48824.txt\n+     * http://parallec.github.io/userdata/sample_weather_95037.txt\n+     */\n+    @Test\n+    public void differentRequestsToSameTargetHost() {\n+        List<String> replaceList = new ArrayList<String>();\n+        replaceList.add(\"95037\");\n+        replaceList.add(\"48824\");\n+\n+        Map<String, Object> responseContext = new HashMap<String, Object>();\n+        responseContext.put(\"temp\", null);\n+\n+        pc.prepareHttpGet(\"/userdata/sample_weather_$ZIP.txt\")\n+                .setHttpHeaders(\n+                        new ParallecHeader().addPair(\"content-type\",\n+                                \"text/xml;charset=UTF-8\"))\n+                .setConcurrency(1700)\n+                .setReplaceVarMapToSingleTargetSingleVar(\"ZIP\", replaceList,\n+                        \"parallec.github.io\")\n+                .setResponseContext(responseContext)\n+                .execute(new ParallecResponseHandler() {\n+\n+                    @Override\n+                    public void onCompleted(ResponseOnSingleTask res,\n+                            Map<String, Object> responseContext) {\n+                        String temp = new FilterRegex(\"(.*)\").filter(res\n+                                .getResponseContent());\n+                        logger.info(\"\\n!!Temperature: \" + temp\n+                                + \" TargetHost: \" + res.getHost());\n+                        logger.debug(res.toString());\n+\n+                        responseContext.put(\"temp\", temp);\n+                    }\n+                });\n+\n+        int tempGlobal = Integer.parseInt((String) responseContext.get(\"temp\"));\n+        Asserts.check(\n+                tempGlobal <= 100 && tempGlobal >= 0,\n+                \" Fail to extract output from sample weather API. Fail different request to same server test\");\n+\n+    }\n+\n+    @Test\n+    public void differentRequestsToSameTargetHostMultiVarInvalidReplaceEmptyTarget() {\n+\n+        pc.prepareHttpGet(\"/userdata/$STATE/sample_weather_$ZIP.txt\")\n+                .setReplaceVarMapToSingleTarget(null, null);\n+\n+        List<StrStrMap> replacementVarMapList = new ArrayList<StrStrMap>();\n+        replacementVarMapList.add(new StrStrMap());\n+        replacementVarMapList.add(null);\n+\n+        pc.prepareHttpGet(\"/userdata/$STATE/sample_weather_$ZIP.txt\")\n+                .setReplaceVarMapToSingleTarget(replacementVarMapList, \"test\");\n+\n+    }\n+\n+    /**\n+     * Use this api if need to match multiple variables new\n+     * http://parallec.github.io/userdata/MI/sample_weather_48824.txt\n+     * http://parallec.github.io/userdata/CA/sample_weather_95037.txt\n+     */\n+    @Test\n+    public void differentRequestsToSameTargetHostMultiVar() {\n+\n+        List<StrStrMap> replacementVarMapList = new ArrayList<StrStrMap>();\n+        replacementVarMapList.add(new StrStrMap().addPair(\"ZIP\", \"95037\")\n+                .addPair(\"STATE\", \"CA\"));\n+        replacementVarMapList.add(new StrStrMap().addPair(\"ZIP\", \"48824\")\n+                .addPair(\"STATE\", \"MI\"));\n+\n+        Map<String, Object> responseContext = new HashMap<String, Object>();\n+        responseContext.put(\"temp\", null);\n+\n+        pc.prepareHttpGet(\"/userdata/$STATE/sample_weather_$ZIP.txt\")\n+                .setHttpHeaders(\n+                        new ParallecHeader().addPair(\"content-type\",\n+                                \"text/xml;charset=UTF-8\"))\n+                .setConcurrency(1700)\n+                .setReplaceVarMapToSingleTarget(replacementVarMapList,\n+                        \"parallec.github.io\")\n+\n+                .setResponseContext(responseContext)\n+                .execute(new ParallecResponseHandler() {\n+\n+                    @Override\n+                    public void onCompleted(ResponseOnSingleTask res,\n+                            Map<String, Object> responseContext) {\n+                        String temp = new FilterRegex(\"(.*)\").filter(res\n+                                .getResponseContent());\n+                        logger.info(\"\\n!!Temperature: \" + temp\n+                                + \" TargetHost: \" + res.getHost());\n+                        logger.debug(res.toString());\n+\n+                        responseContext.put(\"temp\", temp);\n+                    }\n+                });\n+\n+        int tempGlobal = Integer.parseInt((String) responseContext.get(\"temp\"));\n+        Asserts.check(\n+                tempGlobal <= 100 && tempGlobal >= 0,\n+                \" Fail to extract output from sample weather API. Fail different request to same server test\");\n+\n+    }\n+\n+    /**\n+     * note that the target host must match the key\n+     * \n+     * new http://parallec.github.io/userdata/sample_weather_48824.txt\n+     * http://parallec.github.io/userdata/sample_weather_95037.txt\n+     */\n+    @Test\n+    public void differentRequestsToSameTargetHostWithMap() {\n+\n+        Map<String, StrStrMap> replacementVarMapNodeSpecific = new HashMap<String, StrStrMap>();\n+\n+        replacementVarMapNodeSpecific.put(\"api1\",\n+                new StrStrMap().addPair(\"ZIP\", \"95037\"));\n+        replacementVarMapNodeSpecific.put(\"api2\",\n+                new StrStrMap().addPair(\"ZIP\", \"48824\"));\n+\n+        Map<String, Object> responseContext = new HashMap<String, Object>();\n+        responseContext.put(\"temp\", null);\n+\n+        pc.prepareHttpGet(\"/userdata/sample_weather_$ZIP.txt\")\n+                .setHttpHeaders(\n+                        new ParallecHeader().addPair(\"content-type\",\n+                                \"text/xml;charset=UTF-8\"))\n+                .setConcurrency(1700)\n+                .setTargetHostsFromString(\"api1 api2\")\n+                .setReplaceVarMapToSingleTargetFromMap(\n+                        replacementVarMapNodeSpecific, \"parallec.github.io\")\n+                .setResponseContext(responseContext)\n+                .execute(new ParallecResponseHandler() {\n+\n+                    @Override\n+                    public void onCompleted(ResponseOnSingleTask res,\n+                            Map<String, Object> responseContext) {\n+                        String temp = new FilterRegex(\"(.*)\").filter(res\n+                                .getResponseContent());\n+                        logger.info(\"\\n!!Temperature: \" + temp\n+                                + \" TargetHost: \" + res.getHost());\n+                        logger.debug(res.toString());\n+\n+                        responseContext.put(\"temp\", temp);\n+                    }\n+                });\n+\n+        int tempGlobal = Integer.parseInt((String) responseContext.get(\"temp\"));\n+        Asserts.check(\n+                tempGlobal <= 100 && tempGlobal >= 0,\n+                \" Fail to extract output from sample weather API. Fail different request to same server test\");\n+\n+    }\n+\n+    /**\n+     * \n+     * this wsf.cdyne.com has been instable\n+     * \n+     * http://www.restcommander.com/usecase.html#usecase-different-servers\n+     * \n+     * note that this has dependency of the web service of wsf.cdyne.com is up.\n+     * \n+     * \n+     * Note that this require internet access\n+     * \n+     * DNS slow in QA CI: wsf.cdyne.com 4.59.146.111\n+     */\n+    @Ignore\n+    public void differentRequestsToSameTargetHostOriginal() {\n+\n+        Map<String, StrStrMap> replacementVarMapNodeSpecific = new HashMap<String, StrStrMap>();\n+\n+        replacementVarMapNodeSpecific.put(\"95037\",\n+                new StrStrMap().addPair(\"ZIP\", \"95037\"));\n+        replacementVarMapNodeSpecific.put(\"48824\",\n+                new StrStrMap().addPair(\"ZIP\", \"48824\"));\n+\n+        Map<String, Object> responseContext = new HashMap<String, Object>();\n+        responseContext.put(\"city\", null);\n+\n+        pc.prepareHttpPost(\"/WeatherWS/Weather.asmx\")\n+                .setHttpHeaders(\n+                        new ParallecHeader().addPair(\"content-type\",\n+                                \"text/xml;charset=UTF-8\"))\n+                .setConcurrency(1700)\n+                .setTargetHostsFromString(\"95037 48824\")\n+                .setReplaceVarMapToSingleTargetFromMap(\n+                        replacementVarMapNodeSpecific, \"wsf.cdyne.com\")\n+                .setHttpEntityBody(\n+                        \"<soapenv:Envelope xmlns:soapenv=\\\"http://schemas.xmlsoap.org/soap/envelope/\\\" xmlns:weat=\\\"http://ws.cdyne.com/WeatherWS/\\\">\"\n+                                + \"<soapenv:Header/><soapenv:Body><weat:GetCityWeatherByZIP><weat:ZIP>$ZIP</weat:ZIP>\"\n+                                + \"</weat:GetCityWeatherByZIP></soapenv:Body></soapenv:Envelope>\")\n+                .setResponseContext(responseContext)\n+                .execute(new ParallecResponseHandler() {\n+\n+                    @Override\n+                    public void onCompleted(ResponseOnSingleTask res,\n+                            Map<String, Object> responseContext) {\n+                        String city = new FilterRegex(\".*<City>(.*?)</City>.*\")\n+                                .filter(res.getResponseContent());\n+                        String temperature = new FilterRegex(\n+                                \".*<Temperature>(.*?)</Temperature>.*\")\n+                                .filter(res.getResponseContent());\n+                        logger.info(\"\\n!!ExtracedString: City:\" + city\n+                                + \" Temperature: \" + temperature\n+                                + \" TargetHost: \" + res.getHost());\n+                        logger.debug(res.toString());\n+\n+                        responseContext.put(\"city\", city);\n+                    }\n+                });\n+\n+        String cityGlobal = (String) responseContext.get(\"city\");\n+        Asserts.check(\n+                cityGlobal.equalsIgnoreCase(\"Morgan Hill\")\n+                        || cityGlobal.equalsIgnoreCase(\"East Lansing\"),\n+                \" Fail to extract output from weather API. Fail different request to same server test\");\n+\n+    }\n+\n+    /**\n+     * Test with diable request when need to disable the request.\n+     */\n+    @Test\n+    public void hitWebsitesMinTargetHostSpecificReplacementWithNA() {\n+\n+        Map<String, StrStrMap> replacementVarMapNodeSpecific = new HashMap<String, StrStrMap>();\n+        replacementVarMapNodeSpecific.put(\"parallec.github.io\",\n+                new StrStrMap().addPair(\"JOB_ID\", \"job_a\"));\n+        replacementVarMapNodeSpecific.put(\"www.jeffpei.com\", new StrStrMap()\n+                .addPair(\"JOB_ID\", \"job_b\").addPair(\"NA\", \"NA\"));\n+        replacementVarMapNodeSpecific.put(\"www.restcommander.com\",\n+                new StrStrMap().addPair(\"JOB_ID\", \"job_c\"));\n+\n+        ParallelTask task = pc\n+                .prepareHttpGet(\"/$JOB_ID.html\")\n+                .setConcurrency(1700)\n+                .setTargetHostsFromString(\n+                        \"parallec.github.io www.jeffpei.com www.restcommander.com\")\n+                .setReplacementVarMapNodeSpecific(replacementVarMapNodeSpecific)\n+                .execute(new ParallecResponseHandler() {\n+                    @Override\n+                    public void onCompleted(ResponseOnSingleTask res,\n+                            Map<String, Object> responseContext) {\n+\n+                    }\n+                });\n+\n+        logger.info(task.toString());\n+\n+        Asserts.check(task.getRequestNum() == 3\n+                && task.getRequestNumActual() == 2,\n+                \"NA is not able to disable the request\");\n+\n+    }\n+\n+    /**\n+     * test all requests are disabled\n+     */\n+    @Test\n+    public void hitWebsitesMinTargetHostSpecificReplacementWithAllNA() {\n+\n+        Map<String, StrStrMap> replacementVarMapNodeSpecific = new HashMap<String, StrStrMap>();\n+        replacementVarMapNodeSpecific.put(\"parallec.github.io\", new StrStrMap()\n+                .addPair(\"JOB_ID\", \"job_a\").addPair(\"NA\", \"NA\"));\n+        replacementVarMapNodeSpecific.put(\"www.jeffpei.com\", new StrStrMap()\n+                .addPair(\"JOB_ID\", \"job_b\").addPair(\"NA\", \"NA\"));\n+        replacementVarMapNodeSpecific.put(\"www.restcommander.com\",\n+                new StrStrMap().addPair(\"JOB_ID\", \"job_c\").addPair(\"NA\", \"NA\"));\n+\n+        ParallelTask task = pc\n+                .prepareHttpGet(\"/$JOB_ID.html\")\n+                .setConcurrency(1700)\n+                .setTargetHostsFromString(\n+                        \"parallec.github.io www.jeffpei.com www.restcommander.com\")\n+                .setReplacementVarMapNodeSpecific(replacementVarMapNodeSpecific)\n+                .execute(new ParallecResponseHandler() {\n+                    @Override\n+                    public void onCompleted(ResponseOnSingleTask res,\n+                            Map<String, Object> responseContext) {\n+\n+                    }\n+                });\n+\n+        logger.info(task.toString());\n+\n+        Asserts.check(task.getRequestNum() == 3\n+                && task.getRequestNumActual() == 0,\n+                \"NA is not able to disable the request\");\n+\n+    }\n+\n+}"
            },
            {
                "sha": "4a494af9fc188fe9b27a12a2baff38cb6cc9c9fe",
                "filename": "src/test/java/io/parallec/core/main/http/request/template/ParallelClientVarReplacementUniformTest.java",
                "status": "added",
                "additions": 81,
                "deletions": 0,
                "changes": 81,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2Frequest%2Ftemplate%2FParallelClientVarReplacementUniformTest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2Frequest%2Ftemplate%2FParallelClientVarReplacementUniformTest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2Frequest%2Ftemplate%2FParallelClientVarReplacementUniformTest.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,81 @@\n+package io.parallec.core.main.http.request.template;\n+\n+import io.parallec.core.FilterRegex;\n+import io.parallec.core.ParallecResponseHandler;\n+import io.parallec.core.ParallelClient;\n+import io.parallec.core.ResponseOnSingleTask;\n+import io.parallec.core.TestBase;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import org.apache.http.util.Asserts;\n+import org.junit.AfterClass;\n+import org.junit.BeforeClass;\n+import org.junit.Ignore;\n+import org.junit.Test;\n+\n+public class ParallelClientVarReplacementUniformTest extends TestBase {\n+\n+    private static ParallelClient pc;\n+\n+    @BeforeClass\n+    public static void setUp() throws Exception {\n+        pc = new ParallelClient();\n+    }\n+\n+    @AfterClass\n+    public static void shutdown() throws Exception {\n+        pc.releaseExternalResources();\n+    }\n+\n+    // TODO\n+    @Ignore\n+    public void testVarReplacementTargetHostSpecificHttpHeaderReplacement() {\n+\n+    }\n+\n+    /**\n+     * same requests to different target URLs\n+     * \n+     * demonstrate the uniform variable replacement\n+     * \n+     * here: the \"$URL_VARIABLE\" is replaced by validateInternals\n+     */\n+    @Test\n+    public void hitWebsitesMinTargeUniformReplacement() {\n+\n+        Map<String, String> replacementVarMap = new HashMap<String, String>();\n+        replacementVarMap.put(\"URL_VARIABLE\", \"validateInternals\");\n+\n+        pc.prepareHttpGet(\"/$URL_VARIABLE.html\")\n+                .setConcurrency(1700)\n+                .setTargetHostsFromString(\n+                        \"parallec.github.io www.jeffpei.com www.restcommander.com\")\n+                .setReplacementVarMap(replacementVarMap)\n+                .execute(new ParallecResponseHandler() {\n+                    @Override\n+                    public void onCompleted(ResponseOnSingleTask res,\n+                            Map<String, Object> responseContext) {\n+                        String cpu = new FilterRegex(\n+                                \".*<td>CPU-Usage-Percent</td>\\\\s*<td>(.*?)</td>.*\")\n+                                .filter(res.getResponseContent());\n+                        String memory = new FilterRegex(\n+                                \".*<td>Memory-Used-KB</td>\\\\s*<td>(.*?)</td>.*\")\n+                                .filter(res.getResponseContent());\n+\n+                        Map<String, Object> metricMap = new HashMap<String, Object>();\n+                        metricMap.put(\"CpuUsage\", cpu);\n+                        metricMap.put(\"MemoryUsage\", memory);\n+\n+                        logger.info(\"cpu:\" + cpu + \" memory: \" + memory\n+                                + \" host: \" + res.getHost());\n+                        Double cpuDouble = Double.parseDouble(cpu);\n+                        Asserts.check(cpuDouble <= 100.0 && cpuDouble >= 0.0,\n+                                \" Fail to extract cpu values\");\n+                    }\n+                });\n+\n+    }\n+\n+}"
            },
            {
                "sha": "7919c97227e4073595cc00681399b1e5dfc4114d",
                "filename": "src/test/java/io/parallec/core/main/http/scheduler/ParallelClientSchedulerAndCancelTest.java",
                "status": "added",
                "additions": 226,
                "deletions": 0,
                "changes": 226,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2Fscheduler%2FParallelClientSchedulerAndCancelTest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2Fscheduler%2FParallelClientSchedulerAndCancelTest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fhttp%2Fscheduler%2FParallelClientSchedulerAndCancelTest.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,226 @@\n+package io.parallec.core.main.http.scheduler;\n+\n+import io.parallec.core.ParallecResponseHandler;\n+import io.parallec.core.ParallelClient;\n+import io.parallec.core.ParallelTask;\n+import io.parallec.core.ResponseOnSingleTask;\n+import io.parallec.core.TestBase;\n+import io.parallec.core.config.ParallecGlobalConfig;\n+import io.parallec.core.task.ParallelTaskManager;\n+\n+import java.util.Map;\n+\n+import org.junit.AfterClass;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+\n+public class ParallelClientSchedulerAndCancelTest extends TestBase {\n+\n+    private static ParallelClient pc;\n+\n+    @BeforeClass\n+    public static void setUp() throws Exception {\n+        pc = new ParallelClient();\n+    }\n+\n+    @AfterClass\n+    public static void shutdown() throws Exception {\n+        pc.releaseExternalResources();\n+    }\n+\n+    /**\n+     * test Insufficient capacity:\n+     * \n+     * submit 2 jobs each using 100, total is 120. so only 1 can run.\n+     */\n+    @Test(timeout = 120000)\n+    public void hitTop100WebsitesCapacityProtection() {\n+\n+        ParallecGlobalConfig.maxCapacity = 120;\n+        ParallelTask pt = pc\n+                .prepareHttpGet(\"\")\n+                .async()\n+                .setConcurrency(100)\n+                .setEnableCapacityAwareTaskScheduler(true)\n+                .setTargetHostsFromLineByLineText(FILEPATH_TOP_100,\n+                        SOURCE_LOCAL).execute(new ParallecResponseHandler() {\n+\n+                    @Override\n+                    public void onCompleted(ResponseOnSingleTask res,\n+                            Map<String, Object> responseContext) {\n+                        logger.info(\"TASK1: Responose Code:\"\n+                                + res.getStatusCode() + \" host: \"\n+                                + res.getHost());\n+                    }\n+                });\n+\n+        ParallelTask pt2 = pc\n+                .prepareHttpGet(\"\")\n+                .async()\n+                .setConcurrency(100)\n+                .setEnableCapacityAwareTaskScheduler(true)\n+                .setTargetHostsFromLineByLineText(FILEPATH_TOP_100,\n+                        SOURCE_LOCAL).execute(new ParallecResponseHandler() {\n+\n+                    @Override\n+                    public void onCompleted(ResponseOnSingleTask res,\n+                            Map<String, Object> responseContext) {\n+                        logger.info(\"TASK2: Responose Code:\"\n+                                + res.getStatusCode() + \" host: \"\n+                                + res.getHost());\n+                    }\n+                });\n+\n+        while (!pt.isCompleted()) {\n+            try {\n+                Thread.sleep(100L);\n+                System.err.println(String.format(\n+                        \"POLL_JOB_PROGRESS (%.5g%%)  PT jobid: %s\",\n+                        pt.getProgress(), pt.getTaskId()));\n+            } catch (InterruptedException e) {\n+                e.printStackTrace();\n+            }\n+        }\n+\n+        while (!pt2.isCompleted()) {\n+            try {\n+                Thread.sleep(100L);\n+                System.err.println(String.format(\n+                        \"POLL_JOB_PROGRESS (%.5g%%)  PT2 jobid: %s\",\n+                        pt2.getProgress(), pt2.getTaskId()));\n+            } catch (InterruptedException e) {\n+                e.printStackTrace();\n+            }\n+        }\n+\n+        ParallecGlobalConfig.maxCapacity = 2500;\n+    }// end func\n+\n+    /**\n+     * test Insufficient capacity with cancellation of the 2nd task while it is\n+     * in waiting state.\n+     * \n+     * submit 2 jobs each using 100, total is 120. so only 1 can run.\n+     */\n+    @Test(timeout = 60000)\n+    public void hitTop100WebsitesCapacityProtectionCancel2ndTask() {\n+\n+        ParallecGlobalConfig.maxCapacity = 120;\n+        ParallelTask pt = pc\n+                .prepareHttpGet(\"\")\n+                .async()\n+                .setConcurrency(100)\n+                .setEnableCapacityAwareTaskScheduler(true)\n+                .setTargetHostsFromLineByLineText(FILEPATH_TOP_100,\n+                        SOURCE_LOCAL).execute(new ParallecResponseHandler() {\n+\n+                    @Override\n+                    public void onCompleted(ResponseOnSingleTask res,\n+                            Map<String, Object> responseContext) {\n+                        logger.info(\"TASK1: Responose Code:\"\n+                                + res.getStatusCode() + \" host: \"\n+                                + res.getHost());\n+                    }\n+                });\n+\n+        ParallelTask pt2 = pc\n+                .prepareHttpGet(\"\")\n+                .async()\n+                .setConcurrency(100)\n+                .setEnableCapacityAwareTaskScheduler(true)\n+                .setTargetHostsFromLineByLineText(FILEPATH_TOP_100,\n+                        SOURCE_LOCAL).execute(new ParallecResponseHandler() {\n+\n+                    @Override\n+                    public void onCompleted(ResponseOnSingleTask res,\n+                            Map<String, Object> responseContext) {\n+                        logger.info(\"TASK2: Responose Code:\"\n+                                + res.getStatusCode() + \" host: \"\n+                                + res.getHost());\n+                    }\n+                });\n+\n+        while (!pt.isCompleted()) {\n+            try {\n+                Thread.sleep(100L);\n+                System.err.println(String.format(\n+                        \"POLL_JOB_PROGRESS (%.5g%%)  PT jobid: %s\",\n+                        pt.getProgress(), pt.getTaskId()));\n+\n+                if (pt.getProgress() > 30.0) {\n+                    pt2.cancel(true);\n+                    logger.info(\"cancel 2nd task\");\n+\n+                }\n+\n+            } catch (InterruptedException e) {\n+                e.printStackTrace();\n+            }\n+        }\n+\n+        while (!pt2.isCompleted()) {\n+            try {\n+                Thread.sleep(100L);\n+                System.err.println(String.format(\n+                        \"POLL_JOB_PROGRESS (%.5g%%)  PT2 jobid: %s\",\n+                        pt2.getProgress(), pt2.getTaskId()));\n+            } catch (InterruptedException e) {\n+                e.printStackTrace();\n+            }\n+        }\n+\n+        logger.info(pt2.prettyPrintInfo());\n+\n+        ParallecGlobalConfig.maxCapacity = 2500;\n+    }\n+\n+    /**\n+     * test Insufficient capacity with cancellation of the 2nd task while it is\n+     * in waiting state.\n+     * \n+     * submit 2 jobs each using 100, total is 120. so only 1 can run.\n+     */\n+    @Test(timeout = 60000)\n+    public void hitTop100WebsitesCapacityProtectionCancelBothTask() {\n+\n+        ParallecGlobalConfig.maxCapacity = 120;\n+        pc.prepareHttpGet(\"\")\n+                .async()\n+                .setConcurrency(100)\n+                .setEnableCapacityAwareTaskScheduler(true)\n+                .setTargetHostsFromLineByLineText(FILEPATH_TOP_100,\n+                        SOURCE_LOCAL).execute(new ParallecResponseHandler() {\n+\n+                    @Override\n+                    public void onCompleted(ResponseOnSingleTask res,\n+                            Map<String, Object> responseContext) {\n+                        logger.info(\"TASK1: Responose Code:\"\n+                                + res.getStatusCode() + \" host: \"\n+                                + res.getHost());\n+                    }\n+                });\n+\n+        ParallelTask pt2 = pc\n+                .prepareHttpGet(\"\")\n+                .async()\n+                .setConcurrency(100)\n+                .setEnableCapacityAwareTaskScheduler(true)\n+                .setTargetHostsFromLineByLineText(FILEPATH_TOP_100,\n+                        SOURCE_LOCAL).execute(new ParallecResponseHandler() {\n+\n+                    @Override\n+                    public void onCompleted(ResponseOnSingleTask res,\n+                            Map<String, Object> responseContext) {\n+                        logger.info(\"TASK2: Responose Code:\"\n+                                + res.getStatusCode() + \" host: \"\n+                                + res.getHost());\n+                    }\n+                });\n+        ParallelTaskManager.getInstance().cleanWaitTaskQueue();\n+\n+        logger.info(pt2.prettyPrintInfo());\n+\n+        ParallecGlobalConfig.maxCapacity = 2500;\n+    }\n+\n+}"
            },
            {
                "sha": "2e5d348014c5b362b3d40e9d579e99160cc8c07c",
                "filename": "src/test/java/io/parallec/core/main/ping/PingOnTmpTest.java",
                "status": "added",
                "additions": 125,
                "deletions": 0,
                "changes": 125,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fping%2FPingOnTmpTest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fping%2FPingOnTmpTest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fping%2FPingOnTmpTest.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,125 @@\n+/*  \n+Copyright [2013-2015] eBay Software Foundation\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+    http://www.apache.org/licenses/LICENSE-2.0\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+ */\n+package io.parallec.core.main.ping;\n+\n+import io.parallec.core.ParallecResponseHandler;\n+import io.parallec.core.ParallelClient;\n+import io.parallec.core.ParallelTask;\n+import io.parallec.core.ResponseOnSingleTask;\n+import io.parallec.core.TestBase;\n+import io.parallec.core.monitor.MonitorProvider;\n+import io.parallec.core.util.PcStringUtils;\n+\n+import java.util.Map;\n+\n+import org.junit.AfterClass;\n+import org.junit.BeforeClass;\n+import org.junit.Ignore;\n+\n+/**\n+ * The most basic test with hitting the same URL at 3 different websites.\n+ * require Internet access for testing.\n+ * \n+ * <p>\n+ * This example shows 1. Basic request construction 2. how to use response\n+ * context to pass value during the response handler out to a global space\n+ * </p>\n+ */\n+public class PingOnTmpTest extends TestBase {\n+\n+    /** The pc. */\n+    private static ParallelClient pc;\n+\n+    /**\n+     * Sets the up.\n+     *\n+     * @throws Exception\n+     *             the exception\n+     */\n+    @BeforeClass\n+    public static void setUp() throws Exception {\n+        pc = new ParallelClient();\n+    }\n+\n+    /**\n+     * Shutdown.\n+     *\n+     * @throws Exception\n+     *             the exception\n+     */\n+    @AfterClass\n+    public static void shutdown() throws Exception {\n+        pc.releaseExternalResources();\n+    }\n+    \n+    /**\n+     * Ping websites min async.\n+     */\n+    @Ignore\n+    // @Test\n+    public void pingWebsitesMinBasicSyncOn1500() {\n+\n+        ParallelTask task = pc.preparePing().setConcurrency(1500)\n+                .setPingNumRetries(0)\n+                .setTargetHostsFromLineByLineText(FILEPATH_TMP1, SOURCE_LOCAL)\n+                // .setTargetHostsFromString(\n+                // \"parallec.github.io www.jeffpei.com www.restcommander.com bad.c21tom\")\n+                .execute(new ParallecResponseHandler() {\n+                    @Override\n+                    public void onCompleted(ResponseOnSingleTask res,\n+                            Map<String, Object> responseContext) {\n+                        logger.info(res.toString());\n+                    }\n+                });\n+\n+        logger.info(\"Task Pretty Print: \\n{}\",\n+                PcStringUtils.renderJson(task.getAggregateResultCountSummary()));\n+        logger.info(\"Total Duration: \" + task.getDurationSec());\n+    }// end func\n+\n+    \n+    /**\n+     * Ping websites min async.\n+     */\n+    @Ignore\n+    // @Test\n+    public void pingWebsitesMinAsync() {\n+\n+        ParallelTask task = pc.preparePing().async().setConcurrency(1500)\n+                .setTargetHostsFromLineByLineText(FILEPATH_TMP1, SOURCE_LOCAL)\n+                // .setTargetHostsFromString(\n+                // \"parallec.github.io www.jeffpei.com www.restcommander.com bad.c21tom\")\n+                .execute(new ParallecResponseHandler() {\n+                    @Override\n+                    public void onCompleted(ResponseOnSingleTask res,\n+                            Map<String, Object> responseContext) {\n+                        logger.info(res.toString());\n+                    }\n+                });\n+\n+        while (!task.isCompleted()) {\n+            try {\n+                Thread.sleep(100L);\n+                System.err.println(\"LIVE_THREAD_COUNT: \"\n+                        + MonitorProvider.getInstance().getLiveThreadCount());\n+                // System.err.println(String.format(\"POLL_JOB_PROGRESS (%.5g%%)\",\n+                // task.getProgress()));\n+            } catch (InterruptedException e) {\n+                e.printStackTrace();\n+            }\n+        }\n+        logger.info(\"Task Pretty Print: \\n{}\",\n+                PcStringUtils.renderJson(task.getAggregateResultCountSummary()));\n+\n+    }// end func\n+}"
            },
            {
                "sha": "413217124116ae4dc165e761d2a5ce856389cbe8",
                "filename": "src/test/java/io/parallec/core/main/ping/PingTest.java",
                "status": "added",
                "additions": 133,
                "deletions": 0,
                "changes": 133,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fping%2FPingTest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fping%2FPingTest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fping%2FPingTest.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,133 @@\n+/*  \n+Copyright [2013-2015] eBay Software Foundation\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+    http://www.apache.org/licenses/LICENSE-2.0\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+ */\n+package io.parallec.core.main.ping;\n+\n+import io.parallec.core.ParallecResponseHandler;\n+import io.parallec.core.ParallelClient;\n+import io.parallec.core.ParallelTask;\n+import io.parallec.core.ResponseOnSingleTask;\n+import io.parallec.core.TestBase;\n+import io.parallec.core.bean.ping.PingMode;\n+import io.parallec.core.exception.ParallelTaskInvalidException;\n+import io.parallec.core.util.PcStringUtils;\n+\n+import java.util.Map;\n+\n+import org.junit.AfterClass;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+\n+/**\n+ * The most basic test with hitting the same URL at 3 different websites.\n+ * require Internet access for testing.\n+ * \n+ * <p>\n+ * This example shows 1. Basic request construction 2. how to use response\n+ * context to pass value during the response handler out to a global space\n+ * </p>\n+ */\n+public class PingTest extends TestBase {\n+\n+    /** The pc. */\n+    private static ParallelClient pc;\n+\n+    /**\n+     * Sets the up.\n+     *\n+     * @throws Exception\n+     *             the exception\n+     */\n+    @BeforeClass\n+    public static void setUp() throws Exception {\n+        pc = new ParallelClient();\n+    }\n+\n+    /**\n+     * Shutdown.\n+     *\n+     * @throws Exception\n+     *             the exception\n+     */\n+    @AfterClass\n+    public static void shutdown() throws Exception {\n+        pc.releaseExternalResources();\n+    }\n+\n+    /**\n+     * Ping websites min async. default mode need ROOT/Admin \n+     */\n+    @Test\n+    public void pingWebsitesMinBasicSync() {\n+\n+        ParallelTask task = pc.preparePing().setConcurrency(1500)\n+                 .setTargetHostsFromString(\n+                 \"parallec.github.io www.jeffpei.com www.restcommander.com bad.c21tom\")\n+                .execute(new ParallecResponseHandler() {\n+                    @Override\n+                    public void onCompleted(ResponseOnSingleTask res,\n+                            Map<String, Object> responseContext) {\n+                        logger.info(res.toString());\n+                    }\n+                });\n+\n+        logger.info(\"Task Pretty Print: \\n{}\",\n+                PcStringUtils.renderJson(task.getAggregateResultFullSummary()));\n+        logger.info(\"Total Duration: \" + task.getDurationSec());\n+    }// end func\n+    \n+    @Test\n+    public void pingWebsitesMoreOptions() {\n+\n+        ParallelTask task = pc.preparePing().setConcurrency(1500)\n+                 .setTargetHostsFromString(\n+                 \"parallec.github.io www.jeffpei.com www.restcommander.com\")\n+                 .setPingMode(PingMode.PROCESS)\n+                 .setPingNumRetries(3)\n+                 .setPingTimeoutMillis(500)\n+                 \n+                .execute(new ParallecResponseHandler() {\n+                    @Override\n+                    public void onCompleted(ResponseOnSingleTask res,\n+                            Map<String, Object> responseContext) {\n+                        logger.info(res.toString());\n+                    }\n+                });\n+\n+        logger.info(\"Task Pretty Print: \\n{}\",\n+                PcStringUtils.renderJson(task.getAggregateResultFullSummary()));\n+        logger.info(\"Total Duration: \" + task.getDurationSec());\n+    }// end func\n+    \n+    \n+    @Test\n+    public void testInvalidPoller() {\n+        try {\n+            pc.preparePing().setConcurrency(1500)\n+            .setHttpPollable(true)\n+            .setTargetHostsFromString(\n+            \"parallec.github.io www.jeffpei.com www.restcommander.com bad.c21tom\")\n+           .execute(new ParallecResponseHandler() {\n+               @Override\n+               public void onCompleted(ResponseOnSingleTask res,\n+                       Map<String, Object> responseContext) {\n+                   \n+               }\n+           });\n+        } catch (ParallelTaskInvalidException e) {\n+\n+            logger.info(\"EXPECTED Exception {}\", e.getLocalizedMessage());\n+        }\n+    }\n+    \n+  \n+}"
            },
            {
                "sha": "0aa2878dba874e245a2564738d61baddcb474d6f",
                "filename": "src/test/java/io/parallec/core/main/ping/PingWorkerTest.java",
                "status": "added",
                "additions": 201,
                "deletions": 0,
                "changes": 201,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fping%2FPingWorkerTest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fping%2FPingWorkerTest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fping%2FPingWorkerTest.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,201 @@\n+package io.parallec.core.main.ping;\n+\n+import io.parallec.core.ParallelClient;\n+import io.parallec.core.TestBase;\n+import io.parallec.core.actor.ActorConfig;\n+import io.parallec.core.actor.PingWorker;\n+import io.parallec.core.actor.message.ResponseOnSingeRequest;\n+import io.parallec.core.actor.message.type.RequestWorkerMsgType;\n+import io.parallec.core.bean.ping.PingMeta;\n+\n+import java.util.concurrent.TimeUnit;\n+\n+import org.junit.AfterClass;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+import org.slf4j.LoggerFactory;\n+\n+import scala.concurrent.Await;\n+import scala.concurrent.Future;\n+import scala.concurrent.duration.Duration;\n+import scala.concurrent.duration.FiniteDuration;\n+import akka.actor.ActorRef;\n+import akka.actor.Props;\n+import akka.pattern.Patterns;\n+import akka.util.Timeout;\n+\n+public class PingWorkerTest extends TestBase {\n+\n+    private static ParallelClient pc;\n+    \n+    @BeforeClass\n+    public static void setUp() throws Exception {\n+        pc = new ParallelClient();\n+\n+        try {\n+            Thread.sleep(500L);\n+        } catch (Exception e) {\n+            ;\n+        }\n+    }\n+\n+    @AfterClass\n+    public static void shutdown() throws Exception {\n+        pc.releaseExternalResources();\n+        try {\n+            Thread.sleep(500L);\n+        } catch (Exception e) {\n+            ;\n+        }\n+    }\n+\n+    public PingMeta getPingMetaSample(){\n+        PingMeta pingMeta = new PingMeta();\n+        pingMeta.validation();\n+        return pingMeta;\n+    }\n+    \n+    @Test\n+    public void testSlowAndPollProgress() {\n+        ActorRef asyncWorker = null;\n+        try {\n+            int actorMaxOperationTimeoutSec = 15;\n+            asyncWorker = ActorConfig.createAndGetActorSystem().actorOf(\n+                    Props.create(PingWorker.class, actorMaxOperationTimeoutSec,\n+                            getPingMetaSample(), \"www.google.com\"));\n+\n+            final FiniteDuration duration = Duration.create(20,\n+                    TimeUnit.SECONDS);\n+            Future<Object> future = Patterns\n+                    .ask(asyncWorker, RequestWorkerMsgType.PROCESS_REQUEST,\n+                            new Timeout(duration));\n+\n+            ResponseOnSingeRequest response = (ResponseOnSingeRequest) Await\n+                    .result(future, duration);\n+\n+            logger.info(\"\\nWorker response:\" + response.toString());\n+        } catch (Throwable ex) {\n+\n+            logger.error(\"Exception in test : \" + ex);\n+        }\n+    }// end func\n+\n+    @Test\n+    public void testDupAndCancel() {\n+        ActorRef asyncWorker = null;\n+        logger.info(\"IN testTcpWorkerDupAndCancel\");\n+        try {\n+            int actorMaxOperationTimeoutSec = 15;\n+            asyncWorker = ActorConfig.createAndGetActorSystem().actorOf(\n+                    Props.create(PingWorker.class, actorMaxOperationTimeoutSec,\n+                            getPingMetaSample(), \"www.google.com\"));\n+\n+            final FiniteDuration duration = Duration.create(20,\n+                    TimeUnit.SECONDS);\n+            Future<Object> future = Patterns\n+                    .ask(asyncWorker, RequestWorkerMsgType.PROCESS_REQUEST,\n+                            new Timeout(duration));\n+            // test dup\n+            asyncWorker.tell(RequestWorkerMsgType.PROCESS_REQUEST, asyncWorker);\n+\n+            // test cancel\n+            asyncWorker.tell(RequestWorkerMsgType.CANCEL, asyncWorker);\n+            ResponseOnSingeRequest response = (ResponseOnSingeRequest) Await\n+                    .result(future, duration);\n+\n+            logger.info(\"\\nWorker response:\" + response.toString());\n+            // Start new job\n+            \n+            \n+        } catch (Throwable ex) {\n+\n+            logger.error(\"Exception in test : \" + ex);\n+        }\n+    }// end func\n+\n+    /**\n+     * fake a NPE of logger; do not forget to reset it or other tests will fail.\n+     */\n+    @Test\n+    public void testException() {\n+        ActorRef asyncWorker = null;\n+        try {\n+            PingWorker.setLogger(null);\n+            \n+            int actorMaxOperationTimeoutSec = 15;\n+            asyncWorker = ActorConfig.createAndGetActorSystem().actorOf(\n+                    Props.create(PingWorker.class, actorMaxOperationTimeoutSec,\n+                            getPingMetaSample(), \"www.google.com\"));\n+\n+            final FiniteDuration duration = Duration.create(20,\n+                    TimeUnit.SECONDS);\n+            Future<Object> future = Patterns\n+                    .ask(asyncWorker, RequestWorkerMsgType.CANCEL,\n+                            new Timeout(duration));\n+            ResponseOnSingeRequest response = (ResponseOnSingeRequest) Await\n+                    .result(future, duration);\n+\n+\n+            logger.info(\"\\nWorker response:\" + response.toString());\n+        } catch (Throwable ex) {\n+            logger.error(\"Exception in test : \" + ex);\n+        }\n+        PingWorker.setLogger(LoggerFactory.getLogger(PingWorker.class));\n+    }// end func\n+\n+    @Test\n+    public void testTimeoutException() {\n+        ActorRef asyncWorker = null;\n+        try {\n+            // Start new job\n+            \n+            // made a timeout\n+            int actorMaxOperationTimeoutSec = 0;\n+            asyncWorker = ActorConfig.createAndGetActorSystem().actorOf(\n+                    Props.create(PingWorker.class, actorMaxOperationTimeoutSec,\n+                            getPingMetaSample(), \"www.google.com\"));\n+\n+            final FiniteDuration duration = Duration.create(20,\n+                    TimeUnit.SECONDS);\n+            Future<Object> future = Patterns\n+                    .ask(asyncWorker, RequestWorkerMsgType.PROCESS_REQUEST,\n+                            new Timeout(duration));\n+            ResponseOnSingeRequest response = (ResponseOnSingeRequest) Await\n+                    .result(future, duration);\n+\n+\n+            logger.info(\"\\nWorker response:\" + response.toString());\n+        } catch (Throwable ex) {\n+\n+            logger.error(\"Exception in test : \" + ex);\n+        }\n+    }// end func\n+\n+\n+    @Test\n+    public void testTcpWorkerBadMsgType() {\n+        \n+        logger.info(\"IN testTcpWorkerBadMsgType\");\n+        ActorRef asyncWorker = null;\n+        try {\n+            int actorMaxOperationTimeoutSec = 15;\n+            asyncWorker = ActorConfig.createAndGetActorSystem().actorOf(\n+                    Props.create(PingWorker.class, actorMaxOperationTimeoutSec,\n+                            getPingMetaSample(), \"www.google.com\"));\n+\n+            final FiniteDuration duration = Duration.create(20,\n+                    TimeUnit.SECONDS);\n+            Future<Object> future = Patterns\n+                    .ask(asyncWorker, new Integer(0),\n+                            new Timeout(duration));\n+            ResponseOnSingeRequest response = (ResponseOnSingeRequest) Await\n+                    .result(future, duration);\n+\n+            logger.info(\"\\nWorker response:\" + response.toString());\n+        } catch (Throwable ex) {\n+\n+            logger.error(\"Exception in test : \" + ex);\n+        }\n+    }// end func\n+\n+}"
            },
            {
                "sha": "75b63ae62b586d6ba84ae863fc6cc598d0a37695",
                "filename": "src/test/java/io/parallec/core/main/ping/package-info.java",
                "status": "added",
                "additions": 8,
                "deletions": 0,
                "changes": 8,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fping%2Fpackage-info.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fping%2Fpackage-info.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fping%2Fpackage-info.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,8 @@\n+/**\n+ * \n+ */\n+/**\n+ * @author Yuanteng Jeff Pei\n+ *\n+ */\n+package io.parallec.core.main.ping;\n\\ No newline at end of file"
            },
            {
                "sha": "27a7e425ea65f68402e4e726aeefacb46f6a3615",
                "filename": "src/test/java/io/parallec/core/main/ssh/ParallelClientSshTest.java",
                "status": "added",
                "additions": 105,
                "deletions": 0,
                "changes": 105,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fssh%2FParallelClientSshTest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fssh%2FParallelClientSshTest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fssh%2FParallelClientSshTest.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,105 @@\n+package io.parallec.core.main.ssh;\n+\n+import io.parallec.core.ParallecResponseHandler;\n+import io.parallec.core.ParallelClient;\n+import io.parallec.core.ResponseOnSingleTask;\n+import io.parallec.core.TestBase;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import org.apache.http.util.Asserts;\n+import org.junit.AfterClass;\n+import org.junit.BeforeClass;\n+import org.junit.Ignore;\n+import org.junit.Test;\n+\n+public class ParallelClientSshTest extends TestBase {\n+\n+    private static ParallelClient pc;\n+\n+    @BeforeClass\n+    public static void setUp() throws Exception {\n+        pc = new ParallelClient();\n+    }\n+\n+    @AfterClass\n+    public static void shutdown() throws Exception {\n+        pc.releaseExternalResources();\n+    }\n+\n+    @Test\n+    public void sshWorkerFakeVmPasswordTest() {\n+\n+        Map<String, Object> responseContext = new HashMap<String, Object>();\n+        pc.prepareSsh().setConcurrency(300)\n+                .setTargetHostsFromString(hostIpSample)\n+                .setSshCommandLine(\"df -h; ds; \").setSshUserName(userName)\n+                .setSshPassword(passwd).setSshConnectionTimeoutMillis(5000)\n+                .setResponseContext(responseContext)\n+                .execute(new ParallecResponseHandler() {\n+\n+                    @Override\n+                    public void onCompleted(ResponseOnSingleTask res,\n+                            Map<String, Object> responseContext) {\n+                        logger.info(\"Responose:\" + res.toString() + \" host: \"\n+                                + res.getHost() + \" errmsg: \"\n+                                + res.getErrorMessage());\n+                        responseContext.put(\"errorMessage\",\n+                                res.getErrorMessage());\n+\n+                    }\n+\n+                });\n+\n+        String errMessage = (String) responseContext.get(\"errorMessage\");\n+        Asserts.check(errMessage.contains(\"socket is not established\"),\n+                \"fail. error is not expected. not sure if ssh flow was executed\");\n+\n+    }// end func\n+\n+    @Test\n+    public void sshWorkerFakeVmPasswordInvalidPollerTest() {\n+\n+        Map<String, Object> responseContext = new HashMap<String, Object>();\n+        pc.prepareSsh().setConcurrency(300)\n+                .setTargetHostsFromString(hostIpSample)\n+                .setSshCommandLine(\"df -h; ds; \").setSshUserName(userName)\n+                .setHttpPollable(true).setSshPassword(passwd)\n+                .setResponseContext(responseContext)\n+                .execute(new ParallecResponseHandler() {\n+\n+                    @Override\n+                    public void onCompleted(ResponseOnSingleTask res,\n+                            Map<String, Object> responseContext) {\n+                        logger.info(\"Responose:\" + res.toString() + \" host: \"\n+                                + res.getHost() + \" errmsg: \"\n+                                + res.getErrorMessage());\n+\n+                    }\n+\n+                });\n+\n+    }// end func\n+\n+    // @Test\n+    @Ignore\n+    public void sshWorkerRealVmPasswordTest() {\n+        pc.prepareSsh().setConcurrency(300)\n+                .setTargetHostsFromString(SshProviderRealTest.vmIp)\n+                .setSshCommandLine(\"df -h; ds; \").setSshUserName(\"parallec\")\n+                .setSshPassword(\"parallec\")\n+\n+                .execute(new ParallecResponseHandler() {\n+\n+                    @Override\n+                    public void onCompleted(ResponseOnSingleTask res,\n+                            Map<String, Object> responseContext) {\n+                        logger.info(\"Responose:\" + res.toString() + \" host: \"\n+                                + res.getHost() + \" errmsg: \"\n+                                + res.getErrorMessage());\n+                    }\n+                });\n+    }\n+\n+}"
            },
            {
                "sha": "8762fc8523fec7965bbcd43c15b9c6eaf9b0c718",
                "filename": "src/test/java/io/parallec/core/main/ssh/SshMetaTest.java",
                "status": "added",
                "additions": 79,
                "deletions": 0,
                "changes": 79,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fssh%2FSshMetaTest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fssh%2FSshMetaTest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fssh%2FSshMetaTest.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,79 @@\n+package io.parallec.core.main.ssh;\n+\n+import io.parallec.core.TestBase;\n+import io.parallec.core.bean.ssh.SshLoginType;\n+import io.parallec.core.bean.ssh.SshMeta;\n+import io.parallec.core.commander.workflow.ssh.SshProvider;\n+import io.parallec.core.exception.ParallelTaskInvalidException;\n+\n+import org.junit.Test;\n+\n+public class SshMetaTest extends TestBase {\n+    public static SshProvider sshProvider;\n+\n+    public static SshMeta sshMetaPassword = new SshMeta(commandSshLineValid,\n+            userName, PORT_DEFAULT, SshLoginType.PASSWORD, null, passwd, false,\n+            null, sshConnectionTimeoutMillis);\n+    public static SshMeta sshMetaKey = new SshMeta(commandSshLineValid,\n+            userName, PORT_DEFAULT, SshLoginType.KEY,\n+            \"userdata/fake-privkey.txt\", null, false, null,\n+            sshConnectionTimeoutMillis);\n+    public static SshMeta sshMetaKeyNotExist = new SshMeta(commandSshLineValid,\n+            userName, PORT_DEFAULT, SshLoginType.KEY,\n+            \"userdata/noneexisting.txt\", null, false, null,\n+            sshConnectionTimeoutMillis);\n+\n+    private static void resetPass() {\n+        sshMetaPassword = new SshMeta(commandSshLineValid, userName,\n+                PORT_DEFAULT, SshLoginType.PASSWORD, null, passwd, false, null,\n+                sshConnectionTimeoutMillis);\n+    }\n+\n+    private static void resetKey() {\n+\n+        sshMetaKey = new SshMeta(commandSshLineValid, userName, PORT_DEFAULT,\n+                SshLoginType.KEY, \"userdata/fake-privkey.txt\", null, false,\n+                null, sshConnectionTimeoutMillis);\n+    }\n+\n+    private static void expectException(SshMeta meta) {\n+\n+        try {\n+            meta.validation();\n+        } catch (ParallelTaskInvalidException t) {\n+            logger.info(\"expected \" + t);\n+        }\n+\n+    }\n+\n+    @Test\n+    public void Validationtest() throws Exception {\n+        sshMetaPassword.setCommandLine(null);\n+\n+        expectException(sshMetaPassword);\n+        resetPass();\n+\n+        sshMetaPassword.setUserName(null);\n+        expectException(sshMetaPassword);\n+        resetPass();\n+\n+        sshMetaPassword.setSshLoginType(null);\n+        expectException(sshMetaPassword);\n+        resetPass();\n+\n+        sshMetaPassword.setPassword(null);\n+        expectException(sshMetaPassword);\n+        resetPass();\n+\n+        sshMetaKey.setPrivKeyRelativePath(null);\n+        expectException(sshMetaKey);\n+        resetKey();\n+\n+        sshMetaKey.setPrivKeyUsePassphrase(true);\n+        sshMetaKey.setPassphrase(null);\n+        expectException(sshMetaKey);\n+        resetKey();\n+\n+        sshMetaKey.getPrivKeyAbsPath();\n+    }\n+}"
            },
            {
                "sha": "ca15fd3bd846eb95b919b60e6fb486964926e5bd",
                "filename": "src/test/java/io/parallec/core/main/ssh/SshProviderMockTest.java",
                "status": "added",
                "additions": 175,
                "deletions": 0,
                "changes": 175,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fssh%2FSshProviderMockTest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fssh%2FSshProviderMockTest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fssh%2FSshProviderMockTest.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,175 @@\n+package io.parallec.core.main.ssh;\n+\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n+import io.parallec.core.TestBase;\n+import io.parallec.core.actor.message.ResponseOnSingeRequest;\n+import io.parallec.core.bean.ssh.SshLoginType;\n+import io.parallec.core.bean.ssh.SshMeta;\n+import io.parallec.core.commander.workflow.ssh.SshProvider;\n+\n+import java.io.ByteArrayInputStream;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.nio.charset.StandardCharsets;\n+\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+\n+import com.jcraft.jsch.ChannelExec;\n+import com.jcraft.jsch.JSchException;\n+import com.jcraft.jsch.Session;\n+\n+public class SshProviderMockTest extends TestBase {\n+\n+    public static SshProvider sshProvider;\n+\n+    public static SshMeta sshMetaPassword = new SshMeta(commandSshLineValid,\n+            userName, PORT_DEFAULT, SshLoginType.PASSWORD, null, passwd, false,\n+            null, sshConnectionTimeoutMillis);\n+    public static SshMeta sshMetaKey = new SshMeta(commandSshLineValid,\n+            userName, PORT_DEFAULT, SshLoginType.KEY,\n+            \"userdata/fake-privkey.txt\", null, false, null,\n+            sshConnectionTimeoutMillis);\n+    \n+    public static SshMeta sshMetaKeyWithPassphrase = new SshMeta(commandSshLineValid,\n+            userName, PORT_DEFAULT, SshLoginType.KEY,\n+            \"userdata/fake-privkey.txt\", null, true, \"changeit\",\n+            sshConnectionTimeoutMillis);\n+    \n+    public static SshMeta sshMetaKeyNotExist = new SshMeta(commandSshLineValid,\n+            userName, PORT_DEFAULT, SshLoginType.KEY,\n+            \"userdata/noneexisting.txt\", null, false, null,\n+            sshConnectionTimeoutMillis);\n+\n+    // @Ignore\n+    @BeforeClass\n+    public static void setUp() throws Exception {\n+\n+    }\n+\n+    @Test\n+    public void testExecuteSshCommandNoneMock() {\n+\n+        try {\n+            sshProvider = new SshProvider(sshMetaPassword, hostIpSample);\n+            sshProvider.executeSshCommand();\n+        } catch (Throwable t) {\n+            logger.info(\"expected\");\n+        }\n+    }\n+\n+    @Test\n+    public void testExecuteSshCommandSubStepsMock() {\n+\n+        try {\n+            sshProvider = new SshProvider(sshMetaPassword, hostIpSample);\n+            sshProvider.startSshSessionAndObtainSession();\n+        } catch (Throwable t) {\n+            logger.info(\"expected\");\n+        }\n+\n+        try {\n+            sshProvider = new SshProvider(sshMetaKey, hostIpSample);\n+            sshProvider.startSshSessionAndObtainSession();\n+        } catch (Throwable t) {\n+            logger.info(\"expected\");\n+        }\n+\n+        try {\n+            sshProvider = new SshProvider(sshMetaKeyNotExist, hostIpSample);\n+            sshProvider.startSshSessionAndObtainSession();\n+            \n+        } catch (Throwable t) {\n+            logger.info(\"expected\");\n+        }\n+   \n+        try {\n+            sshProvider = new SshProvider(sshMetaKeyWithPassphrase, hostIpSample);\n+            sshProvider.startSshSessionAndObtainSession();\n+        } catch (Throwable t) {\n+            logger.info(\"expected\");\n+        }\n+        \n+        try {\n+            sshProvider = new SshProvider(sshMetaKeyWithPassphrase, hostIpSample);\n+            sshMetaKeyWithPassphrase.setPassphrase(null);\n+            sshProvider.startSshSessionAndObtainSession();\n+        } catch (Throwable t) {\n+            logger.info(\"expected\");\n+        }\n+        \n+        \n+\n+    }\n+\n+    @Test\n+    public void sessionConnectGenerateChannelTest() {\n+\n+        Session session = mock(Session.class);\n+        ChannelExec channel = mock(ChannelExec.class);\n+        sshProvider = new SshProvider(sshMetaKey, hostIpSample);\n+        try {\n+\n+            when(session.openChannel(\"exec\")).thenReturn(channel);\n+            sshProvider.sessionConnectGenerateChannel(session);\n+\n+        } catch (JSchException e) {\n+            e.printStackTrace();\n+        }\n+\n+    }\n+\n+    @Test\n+    public void testExecuteAndGenResponse() {\n+\n+        // ResponseOnSingeReq (Channel channel) {\n+        ResponseOnSingeRequest sshResponse = new ResponseOnSingeRequest();\n+        ChannelExec channel = mock(ChannelExec.class);\n+\n+        sshProvider = new SshProvider(sshMetaKey, hostIpSample);\n+\n+        String stdoutStr = \"Mon Sep 14 21:52:27 UTC 2015\";\n+        InputStream in = new ByteArrayInputStream(\n+                stdoutStr.getBytes(StandardCharsets.UTF_8));\n+\n+        try {\n+            when(channel.getInputStream()).thenReturn(in);\n+            when(channel.isClosed()).thenReturn(false).thenReturn(true);\n+            sshResponse = sshProvider.executeAndGenResponse(channel);\n+        } catch (IOException e) {\n+            e.printStackTrace();\n+        }\n+        logger.info(sshResponse.toString());\n+    }\n+\n+    @Test\n+    public void genErrorResponseTest() {\n+        sshProvider = new SshProvider(sshMetaKey, hostIpSample);\n+        sshProvider.genErrorResponse(new RuntimeException(\"fake exception\"));\n+    }\n+\n+    @Test\n+    public void executeAndGenResponseThrowsExceptionTest() {\n+\n+        // ResponseOnSingeReq (Channel channel) {\n+        ResponseOnSingeRequest sshResponse = new ResponseOnSingeRequest();\n+        ChannelExec channel = mock(ChannelExec.class);\n+        sshProvider = new SshProvider(sshMetaKey, hostIpSample);\n+        String stdoutStr = \"Mon Sep 14 21:52:27 UTC 2015\";\n+        InputStream in = new ByteArrayInputStream(\n+                stdoutStr.getBytes(StandardCharsets.UTF_8));\n+\n+        try {\n+            when(channel.getInputStream()).thenReturn(in);\n+            when(channel.isClosed()).thenReturn(false).thenThrow(\n+                    new RuntimeException(\"fake exception\"));\n+            sshResponse = sshProvider.executeAndGenResponse(channel);\n+        } catch (Throwable e) {\n+            logger.info(\"expected exception {}\", \"String\", e);\n+        }\n+\n+        logger.info(sshResponse.toString());\n+    }\n+\n+}"
            },
            {
                "sha": "9a3a96db3d2a3652412e2bd01bc2eaced324c95c",
                "filename": "src/test/java/io/parallec/core/main/ssh/SshProviderRealTest.java",
                "status": "added",
                "additions": 43,
                "deletions": 0,
                "changes": 43,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fssh%2FSshProviderRealTest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fssh%2FSshProviderRealTest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fssh%2FSshProviderRealTest.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,43 @@\n+package io.parallec.core.main.ssh;\n+\n+import io.parallec.core.TestBase;\n+import io.parallec.core.actor.message.ResponseOnSingeRequest;\n+import io.parallec.core.bean.ssh.SshLoginType;\n+import io.parallec.core.bean.ssh.SshMeta;\n+import io.parallec.core.commander.workflow.ssh.SshProvider;\n+\n+import org.junit.Ignore;\n+\n+public class SshProviderRealTest extends TestBase {\n+\n+    private static int PORT_DEFAULT = 22;\n+\n+    public static String vmIp = \"52.25.191.169\";\n+\n+    @Ignore\n+    // @Test\n+    public void testExecuteSshCommandRealHostPassword() {\n+\n+        SshMeta sshMeta = new SshMeta(\"date; ifconfig; ds\", \"parallec\",\n+                PORT_DEFAULT, SshLoginType.PASSWORD, null, \"parallec\", false,\n+                null, sshConnectionTimeoutMillis);\n+\n+        SshProvider instance = new SshProvider(sshMeta, vmIp);\n+        ResponseOnSingeRequest response = instance.executeSshCommand();\n+        logger.info(response.toString());\n+    }\n+\n+    // @Test\n+    @Ignore\n+    public void testExecuteSshCommandRealHostKey() {\n+\n+        SshMeta sshMeta = new SshMeta(\" ps -ef; ds; ifconfig\", \"ubuntu\",\n+                PORT_DEFAULT, SshLoginType.KEY, \"userdata/vm-keys.pem\",\n+                null, false, null, sshConnectionTimeoutMillis);\n+        SshProvider instance = new SshProvider(sshMeta, vmIp);\n+        ResponseOnSingeRequest response = instance.executeSshCommand();\n+        logger.info(\"PrivKey absolute path: \" + sshMeta.getPrivKeyAbsPath());\n+        logger.info(response.toString());\n+    }\n+\n+}"
            },
            {
                "sha": "49b605b0e07c4570f599fd894c2c016b4e0a46a4",
                "filename": "src/test/java/io/parallec/core/main/ssh/SshWorkerTest.java",
                "status": "added",
                "additions": 194,
                "deletions": 0,
                "changes": 194,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fssh%2FSshWorkerTest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fssh%2FSshWorkerTest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Fssh%2FSshWorkerTest.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,194 @@\n+package io.parallec.core.main.ssh;\n+\n+import io.parallec.core.ParallelClient;\n+import io.parallec.core.TestBase;\n+import io.parallec.core.actor.ActorConfig;\n+import io.parallec.core.actor.SshWorker;\n+import io.parallec.core.actor.message.ResponseOnSingeRequest;\n+import io.parallec.core.actor.message.type.RequestWorkerMsgType;\n+\n+import java.util.concurrent.TimeUnit;\n+\n+import org.junit.AfterClass;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+import org.slf4j.LoggerFactory;\n+\n+import scala.concurrent.Await;\n+import scala.concurrent.Future;\n+import scala.concurrent.duration.Duration;\n+import scala.concurrent.duration.FiniteDuration;\n+import akka.actor.ActorRef;\n+import akka.actor.Props;\n+import akka.pattern.Patterns;\n+import akka.util.Timeout;\n+\n+public class SshWorkerTest extends TestBase {\n+\n+    private static ParallelClient pc;\n+\n+    @BeforeClass\n+    public static void setUp() throws Exception {\n+        pc = new ParallelClient();\n+    }\n+\n+    @AfterClass\n+    public static void shutdown() throws Exception {\n+        pc.releaseExternalResources();\n+    }\n+\n+    @Test\n+    public void testSshWorkerNormalCheckComplete() {\n+        ActorRef asyncWorker = null;\n+        try {\n+            // Start new job\n+            \n+\n+            int actorMaxOperationTimeoutSec = 15;\n+            asyncWorker = ActorConfig.createAndGetActorSystem().actorOf(\n+                    Props.create(SshWorker.class, actorMaxOperationTimeoutSec,\n+                            SshProviderMockTest.sshMetaPassword, hostIpSample));\n+\n+            final FiniteDuration duration = Duration.create(20,\n+                    TimeUnit.SECONDS);\n+            Future<Object> future = Patterns\n+                    .ask(asyncWorker, RequestWorkerMsgType.PROCESS_REQUEST,\n+                            new Timeout(duration));\n+\n+            ResponseOnSingeRequest response = (ResponseOnSingeRequest) Await\n+                    .result(future, duration);\n+\n+            logger.info(\"\\nWorker response:\" + response.toString());\n+        } catch (Throwable ex) {\n+\n+            logger.error(\"Exception in test : \" + ex);\n+        }\n+    }// end func\n+\n+    @Test\n+    public void testSshWorkerDupAndCancel() {\n+        ActorRef asyncWorker = null;\n+        try {\n+            // Start new job\n+            \n+\n+            int actorMaxOperationTimeoutSec = 15;\n+            asyncWorker = ActorConfig.createAndGetActorSystem().actorOf(\n+                    Props.create(SshWorker.class, actorMaxOperationTimeoutSec,\n+                            SshProviderMockTest.sshMetaPassword, hostIpSample));\n+\n+            final FiniteDuration duration = Duration.create(20,\n+                    TimeUnit.SECONDS);\n+            Future<Object> future = Patterns\n+                    .ask(asyncWorker, RequestWorkerMsgType.PROCESS_REQUEST,\n+                            new Timeout(duration));\n+\n+            // test dup\n+            asyncWorker.tell(RequestWorkerMsgType.PROCESS_REQUEST, asyncWorker);\n+\n+            // test cancel\n+            asyncWorker.tell(RequestWorkerMsgType.CANCEL, asyncWorker);\n+\n+            ResponseOnSingeRequest response = (ResponseOnSingeRequest) Await\n+                    .result(future, duration);\n+\n+            logger.info(\"\\nWorker response:\" + response.toString());\n+        } catch (Throwable ex) {\n+\n+            logger.error(\"Exception in test : \" + ex);\n+        }\n+    }// end func\n+\n+    /**\n+     * fake a NPE of logger; do not forget to reset it or other tests will fail.\n+     */\n+    @Test\n+    public void testSshWorkerException() {\n+        ActorRef asyncWorker = null;\n+        try {\n+            // Start new job\n+            \n+            int actorMaxOperationTimeoutSec = 15;\n+            SshWorker.setLogger(null);\n+            asyncWorker = ActorConfig.createAndGetActorSystem().actorOf(\n+                    Props.create(SshWorker.class, actorMaxOperationTimeoutSec,\n+                            SshProviderMockTest.sshMetaPassword, hostIpSample));\n+\n+            final FiniteDuration duration = Duration.create(20,\n+                    TimeUnit.SECONDS);\n+            Future<Object> future = Patterns\n+                    .ask(asyncWorker, RequestWorkerMsgType.PROCESS_REQUEST,\n+                            new Timeout(duration));\n+\n+            ResponseOnSingeRequest response = (ResponseOnSingeRequest) Await\n+                    .result(future, duration);\n+\n+            logger.info(\"\\nWorker response:\" + response.toString());\n+        } catch (Throwable ex) {\n+            logger.error(\"Exception in test : \" + ex);\n+        }\n+        SshWorker.setLogger(LoggerFactory.getLogger(SshWorker.class));\n+    }// end func\n+\n+    @Test\n+    public void testSshWorkerTimeoutException() {\n+        ActorRef asyncWorker = null;\n+        try {\n+            // Start new job\n+            \n+            // made a timeout\n+            int actorMaxOperationTimeoutSec = 0;\n+            asyncWorker = ActorConfig.createAndGetActorSystem()\n+                    .actorOf(\n+                            Props.create(SshWorker.class,\n+                                    actorMaxOperationTimeoutSec,\n+                                    SshProviderMockTest.sshMetaPassword,\n+                                    hostIpSample2));\n+\n+            final FiniteDuration duration = Duration.create(20,\n+                    TimeUnit.SECONDS);\n+            Future<Object> future = Patterns\n+                    .ask(asyncWorker, RequestWorkerMsgType.PROCESS_REQUEST,\n+                            new Timeout(duration));\n+            ResponseOnSingeRequest response = (ResponseOnSingeRequest) Await\n+                    .result(future, duration);\n+\n+            logger.info(\"\\nWorker response:\" + response.toString());\n+        } catch (Throwable ex) {\n+\n+            logger.error(\"Exception in test : \" + ex);\n+        }\n+    }// end func\n+\n+    @Test\n+    public void testSshWorkerBadMsgType() {\n+        ActorRef asyncWorker = null;\n+        try {\n+            // made a timeout\n+            int actorMaxOperationTimeoutSec = 15;\n+            asyncWorker = ActorConfig.createAndGetActorSystem()\n+                    .actorOf(\n+                            Props.create(SshWorker.class,\n+                                    actorMaxOperationTimeoutSec,\n+                                    SshProviderMockTest.sshMetaPassword,\n+                                    hostIpSample2));\n+\n+            final FiniteDuration duration = Duration.create(20,\n+                    TimeUnit.SECONDS);\n+            Future<Object> future = Patterns\n+                    .ask(asyncWorker, RequestWorkerMsgType.PROCESS_REQUEST,\n+                            new Timeout(duration));\n+\n+            // test invalid type\n+            asyncWorker.tell(new Integer(0), asyncWorker);\n+            ResponseOnSingeRequest response = (ResponseOnSingeRequest) Await\n+                    .result(future, duration);\n+\n+            logger.info(\"\\nWorker response:\" + response.toString());\n+        } catch (Throwable ex) {\n+\n+            logger.error(\"Exception in test : \" + ex);\n+        }\n+    }// end func\n+\n+}"
            },
            {
                "sha": "6e9b2b4b696f28ff834826af7d83ef810cf9bbfe",
                "filename": "src/test/java/io/parallec/core/main/tcp/ParallelClientTcpBasicTest.java",
                "status": "added",
                "additions": 129,
                "deletions": 0,
                "changes": 129,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Ftcp%2FParallelClientTcpBasicTest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Ftcp%2FParallelClientTcpBasicTest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Ftcp%2FParallelClientTcpBasicTest.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,129 @@\n+package io.parallec.core.main.tcp;\n+\n+import io.parallec.core.ParallecResponseHandler;\n+import io.parallec.core.ParallelClient;\n+import io.parallec.core.ResponseOnSingleTask;\n+import io.parallec.core.TestBase;\n+import io.parallec.core.exception.ParallelTaskInvalidException;\n+import io.parallec.core.main.tcp.sampleserver.TcpServerThread;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import org.apache.http.util.Asserts;\n+import org.junit.AfterClass;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+\n+public class ParallelClientTcpBasicTest extends TestBase {\n+\n+    private static ParallelClient pc;\n+    private static TcpServerThread serverThread;\n+\n+    @BeforeClass\n+    public static void setUp() throws Exception {\n+        pc = new ParallelClient();\n+\n+        serverThread = new TcpServerThread(false);\n+        serverThread.start();\n+\n+        try {\n+            Thread.sleep(500L);\n+        } catch (Exception e) {\n+            ;\n+        }\n+    }\n+\n+    @AfterClass\n+    public static void shutdown() throws Exception {\n+        pc.releaseExternalResources();\n+        serverThread.setShutdown(true);\n+\n+        try {\n+            Thread.sleep(500L);\n+        } catch (Exception e) {\n+            ;\n+        }\n+    }\n+\n+\n+    /**\n+     * different requests to different target URLs\n+     * http://www.jeffpei.com/job_b.html http://www.restsuperman.com/job_c.html\n+     */\n+    @Test(timeout = 50000)\n+    public void TcpTest() {\n+        Map<String, Object> responseContext = new HashMap<String, Object>();\n+        pc.prepareTcp(\"hadoopmon\").setConcurrency(300)\n+                .setTargetHostsFromString(\"localhost\")\n+                .setTcpPort(10081)\n+                .setResponseContext(responseContext)\n+                .execute(new ParallecResponseHandler() {\n+\n+                    @Override\n+                    public void onCompleted(ResponseOnSingleTask res,\n+                            Map<String, Object> responseContext) {\n+                        logger.info(\"Responose:\" + res.getResponseContent() + \" host: \"\n+                                + res.getHost() + \" errmsg: \"\n+                                + res.getErrorMessage());\n+                        responseContext.put(\"resp\",\n+                                res.getResponseContent());\n+\n+                    }\n+\n+                });\n+\n+        String resp = (String) responseContext.get(\"resp\");\n+        Asserts.check(resp.contains(\"AT_TCP_SERVER\"),\n+                \"fail.TcpTest with whole PC flow\");\n+\n+       \n+    }\n+    \n+    @Test(timeout = 50000)\n+    public void TcpExpectedRefusedConnectionTest() {\n+        Map<String, Object> responseContext = new HashMap<String, Object>();\n+        pc.prepareTcp(\"hadoopmon\").setConcurrency(300)\n+                .setTargetHostsFromString(\"localhost\")\n+                .setTcpPort(10099)\n+                .setResponseContext(responseContext)\n+                .execute(new ParallecResponseHandler() {\n+\n+                    @Override\n+                    public void onCompleted(ResponseOnSingleTask res,\n+                            Map<String, Object> responseContext) {\n+                        logger.info(\"Responose:\" + res.getResponseContent() + \" host: \"\n+                                + res.getHost() + \" errmsg: \"\n+                                + res.getErrorMessage());\n+                        responseContext.put(\"resp\",\n+                                res.getStatusCode());\n+\n+                    }\n+\n+                });\n+\n+        String resp = (String) responseContext.get(\"resp\");\n+        Asserts.check(resp.contains(\"FAILURE\"),\n+                \"fail.TcpTest with expected wrong port\");\n+\n+       \n+    }\n+    \n+    @Test\n+    public void TcpTestFunctionsExceptions() {\n+        \n+        try{\n+            \n+            pc.prepareTcp(\"hadoopmon\").setConcurrency(300)\n+            .setTargetHostsFromString(\"localhost\")\n+            .setHttpPollable(true)\n+            .validation()\n+            ;\n+        }catch(ParallelTaskInvalidException e){\n+            logger.info(\"EXPECTED error\" + e.getLocalizedMessage());\n+        }\n+\n+       \n+    }\n+\n+}"
            },
            {
                "sha": "a0b47e66541f51304ee229cd6164602f786b99db",
                "filename": "src/test/java/io/parallec/core/main/tcp/TcpClientTest.java",
                "status": "added",
                "additions": 65,
                "deletions": 0,
                "changes": 65,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Ftcp%2FTcpClientTest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Ftcp%2FTcpClientTest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Ftcp%2FTcpClientTest.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6",
                "patch": "@@ -0,0 +1,65 @@\n+package io.parallec.core.main.tcp;\n+\n+import io.parallec.core.ParallelClient;\n+import io.parallec.core.TestBase;\n+import io.parallec.core.main.tcp.sampleserver.TcpServerThread;\n+\n+import org.junit.AfterClass;\n+import org.junit.BeforeClass;\n+import org.junit.Ignore;\n+\n+public class TcpClientTest extends TestBase {\n+\n+    private static ParallelClient pc;\n+    private static TcpServerThread serverThread;\n+\n+    @BeforeClass\n+    public static void setUp() throws Exception {\n+        pc = new ParallelClient();\n+\n+        serverThread = new TcpServerThread(false);\n+        serverThread.start();\n+\n+        try {\n+            Thread.sleep(500L);\n+        } catch (Exception e) {\n+            ;\n+        }\n+    }\n+\n+    @AfterClass\n+    public static void shutdown() throws Exception {\n+        pc.releaseExternalResources();\n+        serverThread.setShutdown(true);\n+\n+        try {\n+            Thread.sleep(500L);\n+        } catch (Exception e) {\n+            ;\n+        }\n+    }\n+\n+\n+    /**\n+     * different requests to different target URLs\n+     * http://www.jeffpei.com/job_b.html http://www.restsuperman.com/job_c.html\n+     */\n+    //@Test(timeout = 50000)\n+    @Ignore\n+    public void telClientTest() {\n+        try {\n+            TcpProviderPoc.getInstance().request();\n+        } catch (Exception e) {\n+            // TODO Auto-generated catch block\n+            e.printStackTrace();\n+        }\n+       \n+    }\n+\n+    //@Test(timeout = 20000)\n+    public void asyncPollerWrongJobIdRegexTest() {\n+\n+\n+    }\n+\n+}"
            },
            {
                "sha": "7a324be9534e3b32b6e2583083768d2fddc71e81",
                "filename": "src/test/java/io/parallec/core/main/tcp/TcpProviderPoc.java",
                "status": "added",
                "additions": 0,
                "deletions": 0,
                "changes": 0,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Ftcp%2FTcpProviderPoc.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Ftcp%2FTcpProviderPoc.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Ftcp%2FTcpProviderPoc.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6"
            },
            {
                "sha": "d52560146351a46a7170243a8814511844176bb5",
                "filename": "src/test/java/io/parallec/core/main/tcp/TcpWorkerIdleTest.java",
                "status": "added",
                "additions": 126,
                "deletions": 0,
                "changes": 126,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Ftcp%2FTcpWorkerIdleTest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Ftcp%2FTcpWorkerIdleTest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Ftcp%2FTcpWorkerIdleTest.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6"
            },
            {
                "sha": "23d93c056087b4eb87cff75176f68f5d2faafd18",
                "filename": "src/test/java/io/parallec/core/main/tcp/TcpWorkerTest.java",
                "status": "added",
                "additions": 194,
                "deletions": 0,
                "changes": 194,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Ftcp%2FTcpWorkerTest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Ftcp%2FTcpWorkerTest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Ftcp%2FTcpWorkerTest.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6"
            },
            {
                "sha": "3b7751d47ef9355aefcb8ac8fa263de76da316e5",
                "filename": "src/test/java/io/parallec/core/main/tcp/package-info.java",
                "status": "added",
                "additions": 8,
                "deletions": 0,
                "changes": 8,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Ftcp%2Fpackage-info.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Ftcp%2Fpackage-info.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Ftcp%2Fpackage-info.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6"
            },
            {
                "sha": "31e654cc360106024e642f7f57d0ac798537b3ce",
                "filename": "src/test/java/io/parallec/core/main/tcp/sampleserver/TcpEchoServer.java",
                "status": "added",
                "additions": 168,
                "deletions": 0,
                "changes": 168,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Ftcp%2Fsampleserver%2FTcpEchoServer.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Ftcp%2Fsampleserver%2FTcpEchoServer.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Ftcp%2Fsampleserver%2FTcpEchoServer.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6"
            },
            {
                "sha": "a69dab300a38f4fa9fe9492b948951a81b6eb500",
                "filename": "src/test/java/io/parallec/core/main/tcp/sampleserver/TcpServerThread.java",
                "status": "added",
                "additions": 41,
                "deletions": 0,
                "changes": 41,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Ftcp%2Fsampleserver%2FTcpServerThread.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Ftcp%2Fsampleserver%2FTcpServerThread.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Ftcp%2Fsampleserver%2FTcpServerThread.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6"
            },
            {
                "sha": "bbe17dfa9b2e6982dd78e8de22364ab65e35d538",
                "filename": "src/test/java/io/parallec/core/main/tcp/sampleserver/package-info.java",
                "status": "added",
                "additions": 8,
                "deletions": 0,
                "changes": 8,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Ftcp%2Fsampleserver%2Fpackage-info.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Ftcp%2Fsampleserver%2Fpackage-info.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmain%2Ftcp%2Fsampleserver%2Fpackage-info.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6"
            },
            {
                "sha": "6e5dbc59c0eba0105d81191dfbd10599be07b91c",
                "filename": "src/test/java/io/parallec/core/monitor/MonitorProviderTest.java",
                "status": "added",
                "additions": 35,
                "deletions": 0,
                "changes": 35,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmonitor%2FMonitorProviderTest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmonitor%2FMonitorProviderTest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fmonitor%2FMonitorProviderTest.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6"
            },
            {
                "sha": "3a993b5d4ef1b6d8e2a4e6e1edc3878d4a080e8f",
                "filename": "src/test/java/io/parallec/core/pojo/ParallecPojoClassTest.java",
                "status": "added",
                "additions": 186,
                "deletions": 0,
                "changes": 186,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fpojo%2FParallecPojoClassTest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fpojo%2FParallecPojoClassTest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fpojo%2FParallecPojoClassTest.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6"
            },
            {
                "sha": "b41a499b57990f1a0aecac6759f75096f9c561ec",
                "filename": "src/test/java/io/parallec/core/pojo/ParallecPojoStrTest.java",
                "status": "added",
                "additions": 64,
                "deletions": 0,
                "changes": 64,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fpojo%2FParallecPojoStrTest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fpojo%2FParallecPojoStrTest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Fpojo%2FParallecPojoStrTest.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6"
            },
            {
                "sha": "b910dcd43e7e97188bd7ecb4780401f590de33de",
                "filename": "src/test/java/io/parallec/core/task/ParallelTaskManagerTest.java",
                "status": "added",
                "additions": 36,
                "deletions": 0,
                "changes": 36,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Ftask%2FParallelTaskManagerTest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Ftask%2FParallelTaskManagerTest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Ftask%2FParallelTaskManagerTest.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6"
            },
            {
                "sha": "aedbc6590f32dab554e9826b80f03496070a8d7a",
                "filename": "src/test/java/io/parallec/core/task/package-info.java",
                "status": "added",
                "additions": 6,
                "deletions": 0,
                "changes": 6,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Ftask%2Fpackage-info.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Ftask%2Fpackage-info.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Ftask%2Fpackage-info.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6"
            },
            {
                "sha": "e23f4d707c8bea27e225e9d32dae8cd0ca6bdbd8",
                "filename": "src/test/java/io/parallec/core/taskbuilder/ParallelTaskBuilderTest.java",
                "status": "added",
                "additions": 87,
                "deletions": 0,
                "changes": 87,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Ftaskbuilder%2FParallelTaskBuilderTest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Ftaskbuilder%2FParallelTaskBuilderTest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Ftaskbuilder%2FParallelTaskBuilderTest.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6"
            },
            {
                "sha": "616f57afbd00619b55c2a533875b58cf3ca6aca4",
                "filename": "src/test/java/io/parallec/core/taskbuilder/targethosts/TargetHostsBuilderTest.java",
                "status": "added",
                "additions": 167,
                "deletions": 0,
                "changes": 167,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Ftaskbuilder%2Ftargethosts%2FTargetHostsBuilderTest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Ftaskbuilder%2Ftargethosts%2FTargetHostsBuilderTest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Ftaskbuilder%2Ftargethosts%2FTargetHostsBuilderTest.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6"
            },
            {
                "sha": "6df3edb43e0a2135e9a30fb5ec960a98bdee891e",
                "filename": "src/test/java/io/parallec/core/util/FileNetworkIoUtilsTest.java",
                "status": "added",
                "additions": 27,
                "deletions": 0,
                "changes": 27,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Futil%2FFileNetworkIoUtilsTest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Futil%2FFileNetworkIoUtilsTest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Futil%2FFileNetworkIoUtilsTest.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6"
            },
            {
                "sha": "0957efc0cf2f79b449199b880b52f9f178ac917d",
                "filename": "src/test/java/io/parallec/core/util/PcDateUtilsTest.java",
                "status": "added",
                "additions": 45,
                "deletions": 0,
                "changes": 45,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Futil%2FPcDateUtilsTest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Futil%2FPcDateUtilsTest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Futil%2FPcDateUtilsTest.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6"
            },
            {
                "sha": "2856d4b2a052459213c06f38993559d7bbf5fcc1",
                "filename": "src/test/java/io/parallec/core/util/PcErrorMsgUtilsTest.java",
                "status": "added",
                "additions": 24,
                "deletions": 0,
                "changes": 24,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Futil%2FPcErrorMsgUtilsTest.java",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Futil%2FPcErrorMsgUtilsTest.java",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/src%2Ftest%2Fjava%2Fio%2Fparallec%2Fcore%2Futil%2FPcErrorMsgUtilsTest.java?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6"
            },
            {
                "sha": "a3904b7dff2217a4c2dc0feb2a4a4883e6301361",
                "filename": "userdata/keepthisfile",
                "status": "added",
                "additions": 1,
                "deletions": 0,
                "changes": 1,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/userdata%2Fkeepthisfile",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/userdata%2Fkeepthisfile",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/userdata%2Fkeepthisfile?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6"
            },
            {
                "sha": "326caeb6c2dcf598a5a7e3e12b7bb34ae3e99a7f",
                "filename": "userdata/sample_target_hosts_json_path.json",
                "status": "added",
                "additions": 23,
                "deletions": 0,
                "changes": 23,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/userdata%2Fsample_target_hosts_json_path.json",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/userdata%2Fsample_target_hosts_json_path.json",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/userdata%2Fsample_target_hosts_json_path.json?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6"
            },
            {
                "sha": "7dbf6ee6d1664e3e8f2b7855b575fcf45860c5da",
                "filename": "userdata/sample_target_hosts_top100.txt",
                "status": "added",
                "additions": 100,
                "deletions": 0,
                "changes": 100,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/userdata%2Fsample_target_hosts_top100.txt",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/userdata%2Fsample_target_hosts_top100.txt",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/userdata%2Fsample_target_hosts_top100.txt?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6"
            },
            {
                "sha": "9e214b386a855afab5e4b2e52585c8569a5e2898",
                "filename": "userdata/sample_target_hosts_top1000.txt",
                "status": "added",
                "additions": 1000,
                "deletions": 0,
                "changes": 1000,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/userdata%2Fsample_target_hosts_top1000.txt",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/userdata%2Fsample_target_hosts_top1000.txt",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/userdata%2Fsample_target_hosts_top1000.txt?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6"
            },
            {
                "sha": "45862b1cfe97f4f0ae99ebfc341ee08aa8391a42",
                "filename": "userdata/sample_target_hosts_top100_old.txt",
                "status": "added",
                "additions": 97,
                "deletions": 0,
                "changes": 97,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/userdata%2Fsample_target_hosts_top100_old.txt",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/userdata%2Fsample_target_hosts_top100_old.txt",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/userdata%2Fsample_target_hosts_top100_old.txt?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6"
            },
            {
                "sha": "5f87ad3e226ac553eb60efb491a6950c6e6dd7c1",
                "filename": "userdata/sample_target_hosts_top2000.txt",
                "status": "added",
                "additions": 2000,
                "deletions": 0,
                "changes": 2000,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/userdata%2Fsample_target_hosts_top2000.txt",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/userdata%2Fsample_target_hosts_top2000.txt",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/userdata%2Fsample_target_hosts_top2000.txt?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6"
            },
            {
                "sha": "7e54f01856381eac793d082969575a4ebe59514e",
                "filename": "userdata/sample_target_hosts_top500.txt",
                "status": "added",
                "additions": 500,
                "deletions": 0,
                "changes": 500,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/userdata%2Fsample_target_hosts_top500.txt",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/userdata%2Fsample_target_hosts_top500.txt",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/userdata%2Fsample_target_hosts_top500.txt?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6"
            },
            {
                "sha": "738160d08546d124cfbc14ee813847f625ee971e",
                "filename": "userdata/sample_target_hosts_top500_old.txt",
                "status": "added",
                "additions": 490,
                "deletions": 0,
                "changes": 490,
                "blob_url": "https://github.com/eBay/parallec/blob/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/userdata%2Fsample_target_hosts_top500_old.txt",
                "raw_url": "https://github.com/eBay/parallec/raw/aeefa3df713f4d43b8eac78dcf7a93600a80ffd6/userdata%2Fsample_target_hosts_top500_old.txt",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/userdata%2Fsample_target_hosts_top500_old.txt?ref=aeefa3df713f4d43b8eac78dcf7a93600a80ffd6"
            }
        ]
    },
    {
        "sha": "9dd7894ca0297aba1dacd5cfe41a00ce877acbdf",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6OWRkNzg5NGNhMDI5N2FiYTFkYWNkNWNmZTQxYTAwY2U4NzdhY2JkZg==",
        "commit": {
            "author": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2015-10-27T23:31:05Z"
            },
            "committer": {
                "name": "Jeff Pei",
                "email": "ypei@ebay.com",
                "date": "2015-10-27T23:31:05Z"
            },
            "message": "init test",
            "tree": {
                "sha": "400e37f7d7ba8328247e7ac627e2c420ebbcdeaa",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/400e37f7d7ba8328247e7ac627e2c420ebbcdeaa"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/9dd7894ca0297aba1dacd5cfe41a00ce877acbdf",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/9dd7894ca0297aba1dacd5cfe41a00ce877acbdf",
        "html_url": "https://github.com/eBay/parallec/commit/9dd7894ca0297aba1dacd5cfe41a00ce877acbdf",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/9dd7894ca0297aba1dacd5cfe41a00ce877acbdf/comments",
        "author": null,
        "committer": null,
        "parents": [
            {
                "sha": "b202fb895aabe5daa59045d5a6a75d8db936a87e",
                "url": "https://api.github.com/repos/eBay/parallec/commits/b202fb895aabe5daa59045d5a6a75d8db936a87e",
                "html_url": "https://github.com/eBay/parallec/commit/b202fb895aabe5daa59045d5a6a75d8db936a87e"
            }
        ],
        "stats": {
            "total": 1,
            "additions": 1,
            "deletions": 0
        },
        "files": [
            {
                "sha": "9e5e018156ef695f00bf5ed952e2a3155600ad05",
                "filename": "README.md",
                "status": "added",
                "additions": 1,
                "deletions": 0,
                "changes": 1,
                "blob_url": "https://github.com/eBay/parallec/blob/9dd7894ca0297aba1dacd5cfe41a00ce877acbdf/README.md",
                "raw_url": "https://github.com/eBay/parallec/raw/9dd7894ca0297aba1dacd5cfe41a00ce877acbdf/README.md",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/README.md?ref=9dd7894ca0297aba1dacd5cfe41a00ce877acbdf",
                "patch": "@@ -0,0 +1 @@\n+Parallec"
            }
        ]
    },
    {
        "sha": "b202fb895aabe5daa59045d5a6a75d8db936a87e",
        "node_id": "MDY6Q29tbWl0NDUwNzY0NjE6YjIwMmZiODk1YWFiZTVkYWE1OTA0NWQ1YTZhNzVkOGRiOTM2YTg3ZQ==",
        "commit": {
            "author": {
                "name": "Victor Huang",
                "email": "vnhuang@ebay.com",
                "date": "2015-10-27T23:27:45Z"
            },
            "committer": {
                "name": "Victor Huang",
                "email": "vnhuang@ebay.com",
                "date": "2015-10-27T23:27:45Z"
            },
            "message": "Initial commit",
            "tree": {
                "sha": "1f717a813414516904791a345e55f2789980e862",
                "url": "https://api.github.com/repos/eBay/parallec/git/trees/1f717a813414516904791a345e55f2789980e862"
            },
            "url": "https://api.github.com/repos/eBay/parallec/git/commits/b202fb895aabe5daa59045d5a6a75d8db936a87e",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/eBay/parallec/commits/b202fb895aabe5daa59045d5a6a75d8db936a87e",
        "html_url": "https://github.com/eBay/parallec/commit/b202fb895aabe5daa59045d5a6a75d8db936a87e",
        "comments_url": "https://api.github.com/repos/eBay/parallec/commits/b202fb895aabe5daa59045d5a6a75d8db936a87e/comments",
        "author": {
            "login": "vhuang01",
            "id": 13386338,
            "node_id": "MDQ6VXNlcjEzMzg2MzM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/13386338?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vhuang01",
            "html_url": "https://github.com/vhuang01",
            "followers_url": "https://api.github.com/users/vhuang01/followers",
            "following_url": "https://api.github.com/users/vhuang01/following{/other_user}",
            "gists_url": "https://api.github.com/users/vhuang01/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vhuang01/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vhuang01/subscriptions",
            "organizations_url": "https://api.github.com/users/vhuang01/orgs",
            "repos_url": "https://api.github.com/users/vhuang01/repos",
            "events_url": "https://api.github.com/users/vhuang01/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vhuang01/received_events",
            "type": "User",
            "site_admin": false
        },
        "committer": {
            "login": "vhuang01",
            "id": 13386338,
            "node_id": "MDQ6VXNlcjEzMzg2MzM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/13386338?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vhuang01",
            "html_url": "https://github.com/vhuang01",
            "followers_url": "https://api.github.com/users/vhuang01/followers",
            "following_url": "https://api.github.com/users/vhuang01/following{/other_user}",
            "gists_url": "https://api.github.com/users/vhuang01/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vhuang01/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vhuang01/subscriptions",
            "organizations_url": "https://api.github.com/users/vhuang01/orgs",
            "repos_url": "https://api.github.com/users/vhuang01/repos",
            "events_url": "https://api.github.com/users/vhuang01/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vhuang01/received_events",
            "type": "User",
            "site_admin": false
        },
        "parents": [],
        "stats": {
            "total": 202,
            "additions": 202,
            "deletions": 0
        },
        "files": [
            {
                "sha": "8f71f43fee3f78649d238238cbde51e6d7055c82",
                "filename": "LICENSE",
                "status": "added",
                "additions": 202,
                "deletions": 0,
                "changes": 202,
                "blob_url": "https://github.com/eBay/parallec/blob/b202fb895aabe5daa59045d5a6a75d8db936a87e/LICENSE",
                "raw_url": "https://github.com/eBay/parallec/raw/b202fb895aabe5daa59045d5a6a75d8db936a87e/LICENSE",
                "contents_url": "https://api.github.com/repos/eBay/parallec/contents/LICENSE?ref=b202fb895aabe5daa59045d5a6a75d8db936a87e",
                "patch": "@@ -0,0 +1,202 @@\n+                                 Apache License\n+                           Version 2.0, January 2004\n+                        http://www.apache.org/licenses/\n+\n+   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n+\n+   1. Definitions.\n+\n+      \"License\" shall mean the terms and conditions for use, reproduction,\n+      and distribution as defined by Sections 1 through 9 of this document.\n+\n+      \"Licensor\" shall mean the copyright owner or entity authorized by\n+      the copyright owner that is granting the License.\n+\n+      \"Legal Entity\" shall mean the union of the acting entity and all\n+      other entities that control, are controlled by, or are under common\n+      control with that entity. For the purposes of this definition,\n+      \"control\" means (i) the power, direct or indirect, to cause the\n+      direction or management of such entity, whether by contract or\n+      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n+      outstanding shares, or (iii) beneficial ownership of such entity.\n+\n+      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n+      exercising permissions granted by this License.\n+\n+      \"Source\" form shall mean the preferred form for making modifications,\n+      including but not limited to software source code, documentation\n+      source, and configuration files.\n+\n+      \"Object\" form shall mean any form resulting from mechanical\n+      transformation or translation of a Source form, including but\n+      not limited to compiled object code, generated documentation,\n+      and conversions to other media types.\n+\n+      \"Work\" shall mean the work of authorship, whether in Source or\n+      Object form, made available under the License, as indicated by a\n+      copyright notice that is included in or attached to the work\n+      (an example is provided in the Appendix below).\n+\n+      \"Derivative Works\" shall mean any work, whether in Source or Object\n+      form, that is based on (or derived from) the Work and for which the\n+      editorial revisions, annotations, elaborations, or other modifications\n+      represent, as a whole, an original work of authorship. For the purposes\n+      of this License, Derivative Works shall not include works that remain\n+      separable from, or merely link (or bind by name) to the interfaces of,\n+      the Work and Derivative Works thereof.\n+\n+      \"Contribution\" shall mean any work of authorship, including\n+      the original version of the Work and any modifications or additions\n+      to that Work or Derivative Works thereof, that is intentionally\n+      submitted to Licensor for inclusion in the Work by the copyright owner\n+      or by an individual or Legal Entity authorized to submit on behalf of\n+      the copyright owner. For the purposes of this definition, \"submitted\"\n+      means any form of electronic, verbal, or written communication sent\n+      to the Licensor or its representatives, including but not limited to\n+      communication on electronic mailing lists, source code control systems,\n+      and issue tracking systems that are managed by, or on behalf of, the\n+      Licensor for the purpose of discussing and improving the Work, but\n+      excluding communication that is conspicuously marked or otherwise\n+      designated in writing by the copyright owner as \"Not a Contribution.\"\n+\n+      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n+      on behalf of whom a Contribution has been received by Licensor and\n+      subsequently incorporated within the Work.\n+\n+   2. Grant of Copyright License. Subject to the terms and conditions of\n+      this License, each Contributor hereby grants to You a perpetual,\n+      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n+      copyright license to reproduce, prepare Derivative Works of,\n+      publicly display, publicly perform, sublicense, and distribute the\n+      Work and such Derivative Works in Source or Object form.\n+\n+   3. Grant of Patent License. Subject to the terms and conditions of\n+      this License, each Contributor hereby grants to You a perpetual,\n+      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n+      (except as stated in this section) patent license to make, have made,\n+      use, offer to sell, sell, import, and otherwise transfer the Work,\n+      where such license applies only to those patent claims licensable\n+      by such Contributor that are necessarily infringed by their\n+      Contribution(s) alone or by combination of their Contribution(s)\n+      with the Work to which such Contribution(s) was submitted. If You\n+      institute patent litigation against any entity (including a\n+      cross-claim or counterclaim in a lawsuit) alleging that the Work\n+      or a Contribution incorporated within the Work constitutes direct\n+      or contributory patent infringement, then any patent licenses\n+      granted to You under this License for that Work shall terminate\n+      as of the date such litigation is filed.\n+\n+   4. Redistribution. You may reproduce and distribute copies of the\n+      Work or Derivative Works thereof in any medium, with or without\n+      modifications, and in Source or Object form, provided that You\n+      meet the following conditions:\n+\n+      (a) You must give any other recipients of the Work or\n+          Derivative Works a copy of this License; and\n+\n+      (b) You must cause any modified files to carry prominent notices\n+          stating that You changed the files; and\n+\n+      (c) You must retain, in the Source form of any Derivative Works\n+          that You distribute, all copyright, patent, trademark, and\n+          attribution notices from the Source form of the Work,\n+          excluding those notices that do not pertain to any part of\n+          the Derivative Works; and\n+\n+      (d) If the Work includes a \"NOTICE\" text file as part of its\n+          distribution, then any Derivative Works that You distribute must\n+          include a readable copy of the attribution notices contained\n+          within such NOTICE file, excluding those notices that do not\n+          pertain to any part of the Derivative Works, in at least one\n+          of the following places: within a NOTICE text file distributed\n+          as part of the Derivative Works; within the Source form or\n+          documentation, if provided along with the Derivative Works; or,\n+          within a display generated by the Derivative Works, if and\n+          wherever such third-party notices normally appear. The contents\n+          of the NOTICE file are for informational purposes only and\n+          do not modify the License. You may add Your own attribution\n+          notices within Derivative Works that You distribute, alongside\n+          or as an addendum to the NOTICE text from the Work, provided\n+          that such additional attribution notices cannot be construed\n+          as modifying the License.\n+\n+      You may add Your own copyright statement to Your modifications and\n+      may provide additional or different license terms and conditions\n+      for use, reproduction, or distribution of Your modifications, or\n+      for any such Derivative Works as a whole, provided Your use,\n+      reproduction, and distribution of the Work otherwise complies with\n+      the conditions stated in this License.\n+\n+   5. Submission of Contributions. Unless You explicitly state otherwise,\n+      any Contribution intentionally submitted for inclusion in the Work\n+      by You to the Licensor shall be under the terms and conditions of\n+      this License, without any additional terms or conditions.\n+      Notwithstanding the above, nothing herein shall supersede or modify\n+      the terms of any separate license agreement you may have executed\n+      with Licensor regarding such Contributions.\n+\n+   6. Trademarks. This License does not grant permission to use the trade\n+      names, trademarks, service marks, or product names of the Licensor,\n+      except as required for reasonable and customary use in describing the\n+      origin of the Work and reproducing the content of the NOTICE file.\n+\n+   7. Disclaimer of Warranty. Unless required by applicable law or\n+      agreed to in writing, Licensor provides the Work (and each\n+      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n+      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n+      implied, including, without limitation, any warranties or conditions\n+      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n+      PARTICULAR PURPOSE. You are solely responsible for determining the\n+      appropriateness of using or redistributing the Work and assume any\n+      risks associated with Your exercise of permissions under this License.\n+\n+   8. Limitation of Liability. In no event and under no legal theory,\n+      whether in tort (including negligence), contract, or otherwise,\n+      unless required by applicable law (such as deliberate and grossly\n+      negligent acts) or agreed to in writing, shall any Contributor be\n+      liable to You for damages, including any direct, indirect, special,\n+      incidental, or consequential damages of any character arising as a\n+      result of this License or out of the use or inability to use the\n+      Work (including but not limited to damages for loss of goodwill,\n+      work stoppage, computer failure or malfunction, or any and all\n+      other commercial damages or losses), even if such Contributor\n+      has been advised of the possibility of such damages.\n+\n+   9. Accepting Warranty or Additional Liability. While redistributing\n+      the Work or Derivative Works thereof, You may choose to offer,\n+      and charge a fee for, acceptance of support, warranty, indemnity,\n+      or other liability obligations and/or rights consistent with this\n+      License. However, in accepting such obligations, You may act only\n+      on Your own behalf and on Your sole responsibility, not on behalf\n+      of any other Contributor, and only if You agree to indemnify,\n+      defend, and hold each Contributor harmless for any liability\n+      incurred by, or claims asserted against, such Contributor by reason\n+      of your accepting any such warranty or additional liability.\n+\n+   END OF TERMS AND CONDITIONS\n+\n+   APPENDIX: How to apply the Apache License to your work.\n+\n+      To apply the Apache License to your work, attach the following\n+      boilerplate notice, with the fields enclosed by brackets \"{}\"\n+      replaced with your own identifying information. (Don't include\n+      the brackets!)  The text should be enclosed in the appropriate\n+      comment syntax for the file format. We also recommend that a\n+      file or class name and description of purpose be included on the\n+      same \"printed page\" as the copyright notice for easier\n+      identification within third-party archives.\n+\n+   Copyright {yyyy} {name of copyright owner}\n+\n+   Licensed under the Apache License, Version 2.0 (the \"License\");\n+   you may not use this file except in compliance with the License.\n+   You may obtain a copy of the License at\n+\n+       http://www.apache.org/licenses/LICENSE-2.0\n+\n+   Unless required by applicable law or agreed to in writing, software\n+   distributed under the License is distributed on an \"AS IS\" BASIS,\n+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+   See the License for the specific language governing permissions and\n+   limitations under the License.\n+"
            }
        ]
    }
]